[
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ActivateTimecycleEditor",
    "hash": "0xEEB9B76A",
    "code": "-- ACTIVATE_TIMECYCLE_EDITOR\nActivateTimecycleEditor()",
    "parameters": [],
    "returns": [],
    "description": "Activates built-in timecycle editing tool."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddAudioSubmixOutput",
    "hash": "0xAC6E290D",
    "code": "-- ADD_AUDIO_SUBMIX_OUTPUT\nAddAudioSubmixOutput(\n\tsubmixId --[[ integer ]], \n\toutputSubmixId --[[ integer ]]\n)",
    "parameters": [
      "submixId: \n\nThe input submix.",
      "outputSubmixId: \n\nThe output submix. Use 0 for the master game submix."
    ],
    "returns": [],
    "description": "Parameters:\n\nsubmixId: \n\nThe input submix.\n\noutputSubmixId: \n\nThe output submix. Use 0 for the master game submix.\n\nAdds an output for the specified audio submix."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddAuthorizedParachuteModel",
    "hash": "0x8AC7AE9",
    "code": "-- ADD_AUTHORIZED_PARACHUTE_MODEL\nAddAuthorizedParachuteModel(\n\tmodelNameHash --[[ integer ]]\n)",
    "parameters": [
      "modelNameHash: \n\nName hash of the model to allow to be used for the player ped's parachute"
    ],
    "returns": [
      "None."
    ],
    "description": "Parameters:\n\nmodelNameHash: \n\nName hash of the model to allow to be used for the player ped's parachute\n\nReturns:\n\nNone.\n\nAdds the given model name hash to the list of valid models for the player ped's parachute."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddAuthorizedParachutePackModel",
    "hash": "0x2E86DEA5",
    "code": "-- ADD_AUTHORIZED_PARACHUTE_PACK_MODEL\nAddAuthorizedParachutePackModel(\n\tmodelNameHash --[[ integer ]]\n)",
    "parameters": [
      "modelNameHash: \n\nName hash of the model to allow to be used for the player ped's parachute pack"
    ],
    "returns": [
      "None."
    ],
    "description": "Parameters:\n\nmodelNameHash: \n\nName hash of the model to allow to be used for the player ped's parachute pack\n\nReturns:\n\nNone.\n\nAdds the given model name hash to the list of valid models for the player ped's parachute pack."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "AddBlipForArea",
    "hash": "0x6228F159",
    "code": "-- _ADD_BLIP_FOR_AREA\nlocal retval --[[ Blip ]] =\n\tAddBlipForArea(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\twidth --[[ number ]], \n\t\theight --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate of the center of the blip.",
      "y: \n\nThe Y coordinate of the center of the blip.",
      "z: \n\nThe Z coordinate of the center of the blip.",
      "width: \n\nThe width of the blip.",
      "height: \n\nThe height of the blip."
    ],
    "returns": [
      "A handle to the blip."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate of the center of the blip.\n\ny: \n\nThe Y coordinate of the center of the blip.\n\nz: \n\nThe Z coordinate of the center of the blip.\n\nwidth: \n\nThe width of the blip.\n\nheight: \n\nThe height of the blip.\n\nReturns:\n\nA handle to the blip.\n\nAdds a rectangular blip for the specified coordinates/area. It is recommended to use SET_BLIP_ROTATION and SET_BLIP_COLOUR to make the blip not rotate along with the camera. By default, the blip will show as a regular blip with the specified color/sprite if it is outside of the minimap view. Example image:   (Native name is likely to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)\n\nThis is the server-side RPC native equivalent of the client native _ADD_BLIP_FOR_AREA."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "AddBlipForCoord",
    "hash": "0xC6F43D0E",
    "code": "-- ADD_BLIP_FOR_COORD\nlocal retval --[[ Blip ]] =\n\tAddBlipForCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate to create the blip on.",
      "y: \n\nThe Y coordinate.",
      "z: \n\nThe Z coordinate."
    ],
    "returns": [
      "A blip handle."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate to create the blip on.\n\ny: \n\nThe Y coordinate.\n\nz: \n\nThe Z coordinate.\n\nReturns:\n\nA blip handle.\n\nCreates a blip for the specified coordinates. You can use SET_BLIP_ natives to change the blip.\n\nThis is the server-side RPC native equivalent of the client native ADD_BLIP_FOR_COORD."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "AddBlipForEntity",
    "hash": "0x30822554",
    "code": "-- ADD_BLIP_FOR_ENTITY\nlocal retval --[[ Blip ]] =\n\tAddBlipForEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity handle to create the blip."
    ],
    "returns": [
      "A blip handle."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity handle to create the blip.\n\nReturns:\n\nA blip handle.\n\nCreate a blip that by default is red (enemy), you can use SET_BLIP_AS_FRIENDLY to make it blue (friend).\\ Can be used for objects, vehicles and peds. Example of enemy:  Example of friend: \n\nThis is the server-side RPC native equivalent of the client native ADD_BLIP_FOR_ENTITY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "AddBlipForRadius",
    "hash": "0x4626756C",
    "code": "-- ADD_BLIP_FOR_RADIUS\nlocal retval --[[ Blip ]] =\n\tAddBlipForRadius(\n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [
      "posX: \n\nThe x position of the blip (you can also send a vector3 instead of the bulk coordinates)",
      "posY: \n\nThe y position of the blip (you can also send a vector3 instead of the bulk coordinates)",
      "posZ: \n\nThe z position of the blip (you can also send a vector3 instead of the bulk coordinates)",
      "radius: \n\nThe number that defines the radius of the blip circle"
    ],
    "returns": [
      "The blip handle that can be manipulated with every SetBlip natives"
    ],
    "description": "Parameters:\n\nposX: \n\nThe x position of the blip (you can also send a vector3 instead of the bulk coordinates)\n\nposY: \n\nThe y position of the blip (you can also send a vector3 instead of the bulk coordinates)\n\nposZ: \n\nThe z position of the blip (you can also send a vector3 instead of the bulk coordinates)\n\nradius: \n\nThe number that defines the radius of the blip circle\n\nReturns:\n\nThe blip handle that can be manipulated with every SetBlip natives\n\nCreate a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use AddBlipCoords) Example image: \n\nThis is the server-side RPC native equivalent of the client native ADD_BLIP_FOR_RADIUS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "AddConvarChangeListener",
    "hash": "0xAB7F7241",
    "code": "-- ADD_CONVAR_CHANGE_LISTENER\nlocal retval --[[ integer ]] =\n\tAddConvarChangeListener(\n\t\tconVarFilter --[[ string ]], \n\t\thandler --[[ func ]]\n\t)",
    "parameters": [
      "conVarFilter: \n\nThe Console Variable to listen for, this can be a pattern like \"test:*\", or null for any",
      "handler: \n\nThe handler function."
    ],
    "returns": [
      "A cookie to remove the change handler."
    ],
    "description": "Parameters:\n\nconVarFilter: \n\nThe Console Variable to listen for, this can be a pattern like \"test:*\", or null for any\n\nhandler: \n\nThe handler function.\n\nReturns:\n\nA cookie to remove the change handler.\n\nAdds a listener for Console Variable changes.\n\nThe function called expects to match the following signature:\n\nfunction ConVarChangeListener(conVarName: string, reserved: any);\nconVarName: The ConVar that changed.\nreserved: Currently unused."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddHealthConfig",
    "hash": "0x9CBFD5C1",
    "code": "-- ADD_HEALTH_CONFIG\nAddHealthConfig(\n\tconfigName --[[ string ]], \n\tdefaultHealth --[[ number ]], \n\tdefaultArmor --[[ number ]], \n\tdefaultEndurance --[[ number ]], \n\tfatiguedHealthThreshold --[[ number ]], \n\tinjuredHealthThreshold --[[ number ]], \n\tdyingHealthThreshold --[[ number ]], \n\thurtHealthThreshold --[[ number ]], \n\tdogTakedownThreshold --[[ number ]], \n\twritheFromBulletThreshold --[[ number ]], \n\tmeleeCardinalFatalAttack --[[ boolean ]], \n\tinvincible --[[ boolean ]]\n)",
    "parameters": [
      "configName: \n\nName of health config. Cannot be default game health config name.",
      "defaultHealth: \n\nDefault health value.",
      "defaultArmor: \n\nDefault armor value.",
      "defaultEndurance:",
      "fatiguedHealthThreshold: \n\nFatigued health threshold value.",
      "injuredHealthThreshold: \n\nInjured health threshold value.",
      "dyingHealthThreshold: \n\nDying health threshold value.",
      "hurtHealthThreshold: \n\nHurt health threshold value.",
      "dogTakedownThreshold: \n\nDog takedown threshold value.",
      "writheFromBulletThreshold: \n\nWrithe from bulled threshold value.",
      "meleeCardinalFatalAttack: \n\nMelee cardinal fatal attack check value.",
      "invincible: \n\nInvincible value."
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config. Cannot be default game health config name.\n\ndefaultHealth: \n\nDefault health value.\n\ndefaultArmor: \n\nDefault armor value.\n\ndefaultEndurance:\nfatiguedHealthThreshold: \n\nFatigued health threshold value.\n\ninjuredHealthThreshold: \n\nInjured health threshold value.\n\ndyingHealthThreshold: \n\nDying health threshold value.\n\nhurtHealthThreshold: \n\nHurt health threshold value.\n\ndogTakedownThreshold: \n\nDog takedown threshold value.\n\nwritheFromBulletThreshold: \n\nWrithe from bulled threshold value.\n\nmeleeCardinalFatalAttack: \n\nMelee cardinal fatal attack check value.\n\ninvincible: \n\nInvincible value.\n\nAdds new health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddMinimapOverlay",
    "hash": "0x4AFD2499",
    "code": "-- ADD_MINIMAP_OVERLAY\nlocal retval --[[ integer ]] =\n\tAddMinimapOverlay(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [
      "name: \n\nThe path to a .gfx file in the current resource. It has to be specified as a file."
    ],
    "returns": [
      "A minimap overlay ID."
    ],
    "description": "Parameters:\n\nname: \n\nThe path to a .gfx file in the current resource. It has to be specified as a file.\n\nReturns:\n\nA minimap overlay ID.\n\nLoads a minimap overlay from a GFx file in the current resource.\n\nIf you need to control the depth of overlay use ADD_MINIMAP_OVERLAY_WITH_DEPTH."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddMinimapOverlayWithDepth",
    "hash": "0xED0935B5",
    "code": "-- ADD_MINIMAP_OVERLAY_WITH_DEPTH\nlocal retval --[[ integer ]] =\n\tAddMinimapOverlayWithDepth(\n\t\tname --[[ string ]], \n\t\tdepth --[[ integer ]]\n\t)",
    "parameters": [
      "name: \n\nThe path to a .gfx file in the current resource. It has to be specified as a file.",
      "depth: \n\nThe depth of new overlay on the minimap. Pass -1 for game to figure out the highest depth itself. Should not be greater than 0x7EFFFFFD."
    ],
    "returns": [
      "A minimap overlay ID."
    ],
    "description": "Parameters:\n\nname: \n\nThe path to a .gfx file in the current resource. It has to be specified as a file.\n\ndepth: \n\nThe depth of new overlay on the minimap. Pass -1 for game to figure out the highest depth itself. Should not be greater than 0x7EFFFFFD.\n\nReturns:\n\nA minimap overlay ID.\n\nLoads a minimap overlay from a GFx file in the current resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "AddPedDecorationFromHashes",
    "hash": "0x70559AC7",
    "code": "-- ADD_PED_DECORATION_FROM_HASHES\nAddPedDecorationFromHashes(\n\tped --[[ Ped ]], \n\tcollection --[[ Hash ]], \n\toverlay --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.\ncollection - PedDecorationCollection filename hash\noverlay - Item name hash\nExample:\nEntry inside \"mpbeach_overlays.xml\" -\n<Item>\n<uvPos x=\"0.500000\" y=\"0.500000\" />\n<scale x=\"0.600000\" y=\"0.500000\" />\n<rotation value=\"0.000000\" />\n<nameHash>FM_Hair_Fuzz</nameHash>\n<txdHash>mp_hair_fuzz</txdHash>\n<txtHash>mp_hair_fuzz</txtHash>\n<zone>ZONE_HEAD</zone>\n<type>TYPE_TATTOO</type>\n<faction>FM</faction>\n<garment>All</garment>\n<gender>GENDER_DONTCARE</gender>\n<award />\n<awardLevel />\n</Item>\nCode:\nPED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"mpbeach_overlays\"), MISC::GET_HASH_KEY(\"fm_hair_fuzz\"))\n\n\nThis is the server-side RPC native equivalent of the client native ADD_PED_DECORATION_FROM_HASHES."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddReplaceTexture",
    "hash": "0xA66F8F75",
    "code": "-- ADD_REPLACE_TEXTURE\nAddReplaceTexture(\n\torigTxd --[[ string ]], \n\torigTxn --[[ string ]], \n\tnewTxd --[[ string ]], \n\tnewTxn --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Experimental natives, please do not use in a live environment."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "AddStateBagChangeHandler",
    "hash": "0x5BA35AAF",
    "code": "-- ADD_STATE_BAG_CHANGE_HANDLER\nlocal retval --[[ integer ]] =\n\tAddStateBagChangeHandler(\n\t\tkeyFilter --[[ string ]], \n\t\tbagFilter --[[ string ]], \n\t\thandler --[[ func ]]\n\t)",
    "parameters": [
      "keyFilter: \n\nThe key to check for, or null for no filter.",
      "bagFilter: \n\nThe bag ID to check for such as entity:65535, or null for no filter.",
      "handler: \n\nThe handler function."
    ],
    "returns": [
      "A cookie to remove the change handler."
    ],
    "description": "Parameters:\n\nkeyFilter: \n\nThe key to check for, or null for no filter.\n\nbagFilter: \n\nThe bag ID to check for such as entity:65535, or null for no filter.\n\nhandler: \n\nThe handler function.\n\nReturns:\n\nA cookie to remove the change handler.\n\nAdds a handler for changes to a state bag.\n\nThe function called expects to match the following signature:\n\nfunction StateBagChangeHandler(bagName: string, key: string, value: any, reserved: number, replicated: boolean);\nbagName: The internal bag ID for the state bag which changed. This is usually player:Source, entity:NetID or localEntity:Handle.\nkey: The changed key.\nvalue: The new value stored at key. The old value is still stored in the state bag at the time this callback executes.\nreserved: Currently unused.\nreplicated: Whether the set is meant to be replicated.\n\nAt this time, the change handler can't opt to reject changes.\n\nIf bagName refers to an entity, use GET_ENTITY_FROM_STATE_BAG_NAME to get the entity handle If bagName refers to a player, use GET_PLAYER_FROM_STATE_BAG_NAME to get the player handle"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddTextEntry",
    "hash": "0x32CA01C3",
    "code": "-- ADD_TEXT_ENTRY\nAddTextEntry(\n\tentryKey --[[ string ]], \n\tentryText --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "AddTextEntryByHash",
    "hash": "0x289DA860",
    "code": "-- ADD_TEXT_ENTRY_BY_HASH\nAddTextEntryByHash(\n\tentryKey --[[ Hash ]], \n\tentryText --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ApplyForceToEntity",
    "hash": "0xC1C0855A",
    "code": "-- APPLY_FORCE_TO_ENTITY\nApplyForceToEntity(\n\tentity --[[ Entity ]], \n\tforceType --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\toffX --[[ number ]], \n\toffY --[[ number ]], \n\toffZ --[[ number ]], \n\tnComponent --[[ integer ]], \n\tbLocalForce --[[ boolean ]], \n\tbLocalOffset --[[ boolean ]], \n\tbScaleByMass --[[ boolean ]], \n\tbPlayAudio --[[ boolean ]], \n\tbScaleByTimeWarp --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity handle",
      "forceType: \n\nThe force type",
      "x: \n\nThe x component of the force to apply",
      "y: \n\nThe y component of the force to apply",
      "z: \n\nThe z component of the force to apply",
      "offX: \n\nOffset from center of entity (X)",
      "offY: \n\nOffset from center of entity (Y)",
      "offZ: \n\nOffset from center of entity (Z)",
      "nComponent: \n\nComponent of the entity to apply the force too. Only matters for breakable or articulated (ragdoll) physics. 0 means the root or parent component",
      "bLocalForce: \n\nSpecifies whether the force vector passed in is in local or world coordinates. true means the force will get automatically transformed into world space before being applied",
      "bLocalOffset: \n\nSpecifies whether the offset passed in is in local or world coordinates",
      "bScaleByMass: \n\nSpecifies whether to scale the force by mass",
      "bPlayAudio: \n\nSpecifies whether to play audio events related to the force being applied. The audio will depend on the entity type. Currently vehicles are the only entity types supported, and will play a suspension squeal depending on the magnitude of the force",
      "bScaleByTimeWarp: \n\nSpecifies whether to scale the force by time warp. Default is true"
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle\n\nforceType: \n\nThe force type\n\nx: \n\nThe x component of the force to apply\n\ny: \n\nThe y component of the force to apply\n\nz: \n\nThe z component of the force to apply\n\noffX: \n\nOffset from center of entity (X)\n\noffY: \n\nOffset from center of entity (Y)\n\noffZ: \n\nOffset from center of entity (Z)\n\nnComponent: \n\nComponent of the entity to apply the force too. Only matters for breakable or articulated (ragdoll) physics. 0 means the root or parent component\n\nbLocalForce: \n\nSpecifies whether the force vector passed in is in local or world coordinates. true means the force will get automatically transformed into world space before being applied\n\nbLocalOffset: \n\nSpecifies whether the offset passed in is in local or world coordinates\n\nbScaleByMass: \n\nSpecifies whether to scale the force by mass\n\nbPlayAudio: \n\nSpecifies whether to play audio events related to the force being applied. The audio will depend on the entity type. Currently vehicles are the only entity types supported, and will play a suspension squeal depending on the magnitude of the force\n\nbScaleByTimeWarp: \n\nSpecifies whether to scale the force by time warp. Default is true\n\nenum eApplyForceTypes {\nAPPLY_TYPE_FORCE = 0,\nAPPLY_TYPE_IMPULSE = 1,\nAPPLY_TYPE_EXTERNAL_FORCE = 2,\nAPPLY_TYPE_EXTERNAL_IMPULSE = 3,\nAPPLY_TYPE_TORQUE = 4,\nAPPLY_TYPE_ANGULAR_IMPULSE = 5\n}\n\n\nThis is the server-side RPC native equivalent of the client native APPLY_FORCE_TO_ENTITY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ApplyWeatherCycles",
    "hash": "0x3422291C",
    "code": "-- APPLY_WEATHER_CYCLES\nlocal retval --[[ boolean ]] =\n\tApplyWeatherCycles(\n\t\tnumEntries --[[ integer ]], \n\t\tmsPerCycle --[[ integer ]]\n\t)",
    "parameters": [
      "numEntries: \n\nThe number of cycle entries. Must be between 1 and 256",
      "msPerCycle: \n\nThe duration in milliseconds of each cycle. Must be between 1000 and 86400000 (24 hours)"
    ],
    "returns": [
      "Returns true if all parameters were valid, otherwise false."
    ],
    "description": "Parameters:\n\nnumEntries: \n\nThe number of cycle entries. Must be between 1 and 256\n\nmsPerCycle: \n\nThe duration in milliseconds of each cycle. Must be between 1000 and 86400000 (24 hours)\n\nReturns:\n\nReturns true if all parameters were valid, otherwise false."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "BreakOffVehicleWheel",
    "hash": "0xA274CADB",
    "code": "-- BREAK_OFF_VEHICLE_WHEEL\nBreakOffVehicleWheel(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tleaveDebrisTrail --[[ boolean ]], \n\tdeleteWheel --[[ boolean ]], \n\tunknownFlag --[[ boolean ]], \n\tputOnFire --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "wheelIndex: \n\nThe wheel index.",
      "leaveDebrisTrail: \n\nStart \"veh_debris_trail\" ptfx.",
      "deleteWheel: \n\nTrue to delete wheel, otherwise detach.",
      "unknownFlag: \n\nUnknown flag.",
      "putOnFire: \n\nSet wheel on fire once detached."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nwheelIndex: \n\nThe wheel index.\n\nleaveDebrisTrail: \n\nStart \"veh_debris_trail\" ptfx.\n\ndeleteWheel: \n\nTrue to delete wheel, otherwise detach.\n\nunknownFlag: \n\nUnknown flag.\n\nputOnFire: \n\nSet wheel on fire once detached.\n\nBreak off vehicle wheel by index. The leaveDebrisTrail flag requires putOnFire to be true."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CallMinimapScaleformFunction",
    "hash": "0x4C89C0ED",
    "code": "-- CALL_MINIMAP_SCALEFORM_FUNCTION\nlocal retval --[[ boolean ]] =\n\tCallMinimapScaleformFunction(\n\t\tminiMap --[[ integer ]], \n\t\tfnName --[[ string ]]\n\t)",
    "parameters": [
      "miniMap: \n\nThe minimap overlay ID.",
      "fnName: \n\nA function in the overlay's TIMELINE."
    ],
    "returns": [],
    "description": "Parameters:\n\nminiMap: \n\nThe minimap overlay ID.\n\nfnName: \n\nA function in the overlay's TIMELINE.\n\nThis is similar to the PushScaleformMovieFunction natives, except it calls in the TIMELINE of a minimap overlay."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "CanPlayerStartCommerceSession",
    "hash": "0x429461C3",
    "code": "-- CAN_PLAYER_START_COMMERCE_SESSION\nlocal retval --[[ boolean ]] =\n\tCanPlayerStartCommerceSession(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [
      "True or false."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nReturns:\n\nTrue or false.\n\nReturns whether or not the specified player has enough information to start a commerce session for."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "CancelEvent",
    "hash": "0xFA29D35D",
    "code": "-- CANCEL_EVENT\nCancelEvent()",
    "parameters": [],
    "returns": [],
    "description": "Cancels the currently executing event."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ClearPedProp",
    "hash": "0x2D23D743",
    "code": "-- CLEAR_PED_PROP\nClearPedProp(\n\tped --[[ Ped ]], \n\tpropId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "propId: \n\nThe prop id you want to clear from the ped. Refer to SET_PED_PROP_INDEX."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\npropId: \n\nThe prop id you want to clear from the ped. Refer to SET_PED_PROP_INDEX.\n\nCLEAR_PED_PROP\n\nThis is the server-side RPC native equivalent of the client native CLEAR_PED_PROP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ClearPedSecondaryTask",
    "hash": "0xA635F451",
    "code": "-- CLEAR_PED_SECONDARY_TASK\nClearPedSecondaryTask(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "CLEAR_PED_SECONDARY_TASK\n\nThis is the server-side RPC native equivalent of the client native CLEAR_PED_SECONDARY_TASK."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ClearPedTasks",
    "hash": "0xDE3316AB",
    "code": "-- CLEAR_PED_TASKS\nClearPedTasks(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nPed id. Use PlayerPedId() for your own character."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id. Use PlayerPedId() for your own character.\n\nClear a ped's tasks. Stop animations and other tasks created by scripts.\n\nThis is the server-side RPC native equivalent of the client native CLEAR_PED_TASKS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ClearPedTasksImmediately",
    "hash": "0xBC045625",
    "code": "-- CLEAR_PED_TASKS_IMMEDIATELY\nClearPedTasksImmediately(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nPed id."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id.\n\nImmediately stops the pedestrian from whatever it's doing. The difference between this and CLEAR_PED_TASKS is that this one teleports the ped but does not change the position of the ped.\n\nThis is the server-side RPC native equivalent of the client native CLEAR_PED_TASKS_IMMEDIATELY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ClearPlayerWantedLevel",
    "hash": "0x54EA5BCC",
    "code": "-- CLEAR_PLAYER_WANTED_LEVEL\nClearPlayerWantedLevel(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);\nPLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.\n\n\nThis is the server-side RPC native equivalent of the client native CLEAR_PLAYER_WANTED_LEVEL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ClearVehicleXenonLightsCustomColor",
    "hash": "0x2867ED8C",
    "code": "-- CLEAR_VEHICLE_XENON_LIGHTS_CUSTOM_COLOR\nClearVehicleXenonLightsCustomColor(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nRemoves vehicle xenon lights custom RGB color."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CloneTimecycleModifier",
    "hash": "0x54D636B3",
    "code": "-- CLONE_TIMECYCLE_MODIFIER\nlocal retval --[[ integer ]] =\n\tCloneTimecycleModifier(\n\t\tsourceModifierName --[[ string ]], \n\t\tclonedModifierName --[[ string ]]\n\t)",
    "parameters": [
      "sourceModifierName: \n\nThe source timecycle name.",
      "clonedModifierName: \n\nThe clone timecycle name, must be unique."
    ],
    "returns": [
      "The cloned timecycle modifier index, or -1 if failed."
    ],
    "description": "Parameters:\n\nsourceModifierName: \n\nThe source timecycle name.\n\nclonedModifierName: \n\nThe clone timecycle name, must be unique.\n\nReturns:\n\nThe cloned timecycle modifier index, or -1 if failed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CommitRuntimeTexture",
    "hash": "0x19D81F4E",
    "code": "-- COMMIT_RUNTIME_TEXTURE\nCommitRuntimeTexture(\n\ttex --[[ long ]]\n)",
    "parameters": [
      "tex: \n\nThe runtime texture handle."
    ],
    "returns": [],
    "description": "Parameters:\n\ntex: \n\nThe runtime texture handle.\n\nCommits the backing pixels to the specified runtime texture."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateAudioSubmix",
    "hash": "0x658D2BC8",
    "code": "-- CREATE_AUDIO_SUBMIX\nlocal retval --[[ integer ]] =\n\tCreateAudioSubmix(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [
      "name: \n\nThe audio submix name."
    ],
    "returns": [
      "A submix ID, or -1 if the submix could not be created."
    ],
    "description": "Parameters:\n\nname: \n\nThe audio submix name.\n\nReturns:\n\nA submix ID, or -1 if the submix could not be created.\n\nCreates an audio submix with the specified name, or gets the existing audio submix by that name."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateDryVolume",
    "hash": "0xEB1C6DD",
    "code": "-- CREATE_DRY_VOLUME\nlocal retval --[[ integer ]] =\n\tCreateDryVolume(\n\t\txMin --[[ number ]], \n\t\tyMin --[[ number ]], \n\t\tzMin --[[ number ]], \n\t\txMax --[[ number ]], \n\t\tyMax --[[ number ]], \n\t\tzMax --[[ number ]]\n\t)",
    "parameters": [
      "xMin: \n\nThe min X component of the AABB volume where water does not affect the player.",
      "yMin: \n\nThe min Y component for the AABB volume.",
      "zMin: \n\nThe min Z component for the AABB volume.",
      "xMax: \n\nThe max X component for the AABB volume.",
      "yMax: \n\nThe max Y component for the AABB volume.",
      "zMax: \n\nThe max Z component for the AABB volume."
    ],
    "returns": [],
    "description": "Parameters:\n\nxMin: \n\nThe min X component of the AABB volume where water does not affect the player.\n\nyMin: \n\nThe min Y component for the AABB volume.\n\nzMin: \n\nThe min Z component for the AABB volume.\n\nxMax: \n\nThe max X component for the AABB volume.\n\nyMax: \n\nThe max Y component for the AABB volume.\n\nzMax: \n\nThe max Z component for the AABB volume.\n\nCreates a volume where water effects do not apply. Useful for preventing water collisions from flooding areas underneath them. This has no effect on waterquads, only water created from drawables and collisions. Don't create volumes when your local ped is swimming (e.g. use IS_PED_SWIMMING in your scripts before you call this)"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateDui",
    "hash": "0x23EAF899",
    "code": "-- CREATE_DUI\nlocal retval --[[ long ]] =\n\tCreateDui(\n\t\turl --[[ string ]], \n\t\twidth --[[ integer ]], \n\t\theight --[[ integer ]]\n\t)",
    "parameters": [
      "url: \n\nThe initial URL to load in the browser.",
      "width: \n\nThe width of the backing surface.",
      "height: \n\nThe height of the backing surface."
    ],
    "returns": [
      "A DUI object."
    ],
    "description": "Parameters:\n\nurl: \n\nThe initial URL to load in the browser.\n\nwidth: \n\nThe width of the backing surface.\n\nheight: \n\nThe height of the backing surface.\n\nReturns:\n\nA DUI object.\n\nCreates a DUI browser. This can be used to draw on a runtime texture using CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "CreateObject",
    "hash": "0x2F7AA05C",
    "code": "-- CREATE_OBJECT\nlocal retval --[[ Entity ]] =\n\tCreateObject(\n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tnetMissionEntity --[[ boolean ]], \n\t\tdoorFlag --[[ boolean ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component, 'ground level'.",
      "isNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.",
      "netMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.",
      "doorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component, 'ground level'.\n\nisNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.\n\nnetMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.\n\ndoorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created.\n\nCreates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model. This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).\n\nThis is the server-side RPC native equivalent of the client native CREATE_OBJECT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "CreateObjectNoOffset",
    "hash": "0x58040420",
    "code": "-- CREATE_OBJECT_NO_OFFSET\nlocal retval --[[ Entity ]] =\n\tCreateObjectNoOffset(\n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tnetMissionEntity --[[ boolean ]], \n\t\tdoorFlag --[[ boolean ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "isNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.",
      "netMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.",
      "doorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nisNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.\n\nnetMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.\n\ndoorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created.\n\nCreates an object (prop) with the specified model centered at the specified position. This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).\n\nThis is the server-side RPC native equivalent of the client native CREATE_OBJECT_NO_OFFSET."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "CreatePed",
    "hash": "0x389EF71",
    "code": "-- CREATE_PED\nlocal retval --[[ Entity ]] =\n\tCreatePed(\n\t\tpedType --[[ integer ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\theading --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tbScriptHostPed --[[ boolean ]]\n\t)",
    "parameters": [
      "pedType: \n\nUnused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.",
      "modelHash: \n\nThe model of ped to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "heading: \n\nHeading to face towards, in degrees.",
      "isNetwork: \n\nWhether to create a network object for the ped. If false, the ped exists only locally.",
      "bScriptHostPed: \n\nWhether to register the ped as pinned to the script host in the R* network model."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the ped, or 0 if the ped failed to be created."
    ],
    "description": "Parameters:\n\npedType: \n\nUnused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.\n\nmodelHash: \n\nThe model of ped to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nheading: \n\nHeading to face towards, in degrees.\n\nisNetwork: \n\nWhether to create a network object for the ped. If false, the ped exists only locally.\n\nbScriptHostPed: \n\nWhether to register the ped as pinned to the script host in the R* network model.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the ped, or 0 if the ped failed to be created.\n\nCreates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading. This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).\n\nThis is the server-side RPC native equivalent of the client native CREATE_PED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "CreatePedInsideVehicle",
    "hash": "0x3000F092",
    "code": "-- CREATE_PED_INSIDE_VEHICLE\nlocal retval --[[ Entity ]] =\n\tCreatePedInsideVehicle(\n\t\tvehicle --[[ Vehicle ]], \n\t\tpedType --[[ integer ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tseat --[[ integer ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tbScriptHostPed --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "CREATE_PED_INSIDE_VEHICLE\n\nThis is the server-side RPC native equivalent of the client native CREATE_PED_INSIDE_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateRuntimeTexture",
    "hash": "0xFEC3766D",
    "code": "-- CREATE_RUNTIME_TEXTURE\nlocal retval --[[ long ]] =\n\tCreateRuntimeTexture(\n\t\ttxd --[[ long ]], \n\t\ttxn --[[ string ]], \n\t\twidth --[[ integer ]], \n\t\theight --[[ integer ]]\n\t)",
    "parameters": [
      "txd: \n\nA handle to the runtime TXD to create the runtime texture in.",
      "txn: \n\nThe name for the texture in the runtime texture dictionary.",
      "width: \n\nThe width of the new texture.",
      "height: \n\nThe height of the new texture."
    ],
    "returns": [
      "A runtime texture handle."
    ],
    "description": "Parameters:\n\ntxd: \n\nA handle to the runtime TXD to create the runtime texture in.\n\ntxn: \n\nThe name for the texture in the runtime texture dictionary.\n\nwidth: \n\nThe width of the new texture.\n\nheight: \n\nThe height of the new texture.\n\nReturns:\n\nA runtime texture handle.\n\nCreates a blank runtime texture."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateRuntimeTextureFromDuiHandle",
    "hash": "0xB135472B",
    "code": "-- CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE\nlocal retval --[[ long ]] =\n\tCreateRuntimeTextureFromDuiHandle(\n\t\ttxd --[[ long ]], \n\t\ttxn --[[ string ]], \n\t\tduiHandle --[[ string ]]\n\t)",
    "parameters": [
      "txd: \n\nA handle to the runtime TXD to create the runtime texture in.",
      "txn: \n\nThe name for the texture in the runtime texture dictionary.",
      "duiHandle: \n\nThe DUI handle returned from GET_DUI_HANDLE."
    ],
    "returns": [
      "The runtime texture handle."
    ],
    "description": "Parameters:\n\ntxd: \n\nA handle to the runtime TXD to create the runtime texture in.\n\ntxn: \n\nThe name for the texture in the runtime texture dictionary.\n\nduiHandle: \n\nThe DUI handle returned from GET_DUI_HANDLE.\n\nReturns:\n\nThe runtime texture handle.\n\nCreates a runtime texture from a DUI handle."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateRuntimeTextureFromImage",
    "hash": "0x786D8BC3",
    "code": "-- CREATE_RUNTIME_TEXTURE_FROM_IMAGE\nlocal retval --[[ long ]] =\n\tCreateRuntimeTextureFromImage(\n\t\ttxd --[[ long ]], \n\t\ttxn --[[ string ]], \n\t\tfileName --[[ string ]]\n\t)",
    "parameters": [
      "txd: \n\nA handle to the runtime TXD to create the runtime texture in.",
      "txn: \n\nThe name for the texture in the runtime texture dictionary.",
      "fileName: \n\nThe file name of an image to load or a base64 data URL. This should preferably be a PNG, and has to be specified as a file in the resource manifest."
    ],
    "returns": [
      "A runtime texture handle."
    ],
    "description": "Parameters:\n\ntxd: \n\nA handle to the runtime TXD to create the runtime texture in.\n\ntxn: \n\nThe name for the texture in the runtime texture dictionary.\n\nfileName: \n\nThe file name of an image to load or a base64 data URL. This should preferably be a PNG, and has to be specified as a file in the resource manifest.\n\nReturns:\n\nA runtime texture handle.\n\nCreates a runtime texture from the specified file in the current resource or a base64 data URL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateRuntimeTxd",
    "hash": "0x1F3AC778",
    "code": "-- CREATE_RUNTIME_TXD\nlocal retval --[[ long ]] =\n\tCreateRuntimeTxd(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [
      "name: \n\nThe name for the runtime TXD."
    ],
    "returns": [
      "A handle to the runtime TXD."
    ],
    "description": "Parameters:\n\nname: \n\nThe name for the runtime TXD.\n\nReturns:\n\nA handle to the runtime TXD.\n\nCreates a runtime texture dictionary with the specified name. Example:\n\nlocal txd = CreateRuntimeTxd('meow')"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "CreateTimecycleModifier",
    "hash": "0x70FA2AFA",
    "code": "-- CREATE_TIMECYCLE_MODIFIER\nlocal retval --[[ integer ]] =\n\tCreateTimecycleModifier(\n\t\tmodifierName --[[ string ]]\n\t)",
    "parameters": [
      "modifierName: \n\nThe new timecycle name, must be unique."
    ],
    "returns": [
      "The created timecycle modifier index, or -1 if failed."
    ],
    "description": "Parameters:\n\nmodifierName: \n\nThe new timecycle name, must be unique.\n\nReturns:\n\nThe created timecycle modifier index, or -1 if failed.\n\nCreate a clean timecycle modifier. See SET_TIMECYCLE_MODIFIER_VAR to add variables."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "CreateVehicle",
    "hash": "0xDD75460A",
    "code": "-- CREATE_VEHICLE\nlocal retval --[[ Entity ]] =\n\tCreateVehicle(\n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\theading --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tnetMissionEntity --[[ boolean ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model of vehicle to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "heading: \n\nHeading to face towards, in degrees.",
      "isNetwork: \n\nWhether to create a network object for the vehicle. If false, the vehicle exists only locally.",
      "netMissionEntity: \n\nWhether to register the vehicle as pinned to the script host in the R* network model."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model of vehicle to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nheading: \n\nHeading to face towards, in degrees.\n\nisNetwork: \n\nWhether to create a network object for the vehicle. If false, the vehicle exists only locally.\n\nnetMissionEntity: \n\nWhether to register the vehicle as pinned to the script host in the R* network model.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created.\n\nCreates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).\n\nNativeDB Added Parameter 8: BOOL p7\n\nThis is the server-side RPC native equivalent of the client native CREATE_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "CreateVehicleServerSetter",
    "hash": "0x6AE51D4B",
    "code": "-- CREATE_VEHICLE_SERVER_SETTER\nlocal retval --[[ Vehicle ]] =\n\tCreateVehicleServerSetter(\n\t\tmodelHash --[[ Hash ]], \n\t\ttype --[[ string ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\theading --[[ number ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model of vehicle to spawn.",
      "type: \n\nThe appropriate vehicle type for the model info. Can be one of automobile, bike, boat, heli, plane, submarine, trailer, and (potentially), train. This should be the same type as the type field in vehicles.meta.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "heading: \n\nHeading to face towards, in degrees."
    ],
    "returns": [
      "A script handle for the vehicle, or 0 if the vehicle failed to be created."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model of vehicle to spawn.\n\ntype: \n\nThe appropriate vehicle type for the model info. Can be one of automobile, bike, boat, heli, plane, submarine, trailer, and (potentially), train. This should be the same type as the type field in vehicles.meta.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nheading: \n\nHeading to face towards, in degrees.\n\nReturns:\n\nA script handle for the vehicle, or 0 if the vehicle failed to be created.\n\nEquivalent to CREATE_VEHICLE, but it uses 'server setter' logic (like the former CREATE_AUTOMOBILE) as a workaround for reliability concerns regarding entity creation RPC.\n\nUnlike CREATE_AUTOMOBILE, this supports other vehicle types as well."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DeleteEntity",
    "hash": "0xFAA3D236",
    "code": "-- DELETE_ENTITY\nDeleteEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to delete."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to delete.\n\nDeletes the specified entity.\n\nNOTE: For trains this will only work if called on the train engine, it will not work on its carriages."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "DeleteFunctionReference",
    "hash": "0x1E86F206",
    "code": "-- DELETE_FUNCTION_REFERENCE\nDeleteFunctionReference(\n\treferenceIdentity --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "DeleteResourceKvp",
    "hash": "0x7389B5DF",
    "code": "-- DELETE_RESOURCE_KVP\nDeleteResourceKvp(\n\tkey --[[ string ]]\n)",
    "parameters": [
      "key: \n\nThe key to delete"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to delete"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "DeleteResourceKvpNoSync",
    "hash": "0x4152C90",
    "code": "-- DELETE_RESOURCE_KVP_NO_SYNC\nDeleteResourceKvpNoSync(\n\tkey --[[ string ]]\n)",
    "parameters": [
      "key: \n\nThe key to delete"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to delete\n\nNonsynchronous DELETE_RESOURCE_KVP operation; see FLUSH_RESOURCE_KVP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DeleteTrain",
    "hash": "0x523BA3DA",
    "code": "-- DELETE_TRAIN\nDeleteTrain(\n\tentity --[[ Entity ]]\n)",
    "parameters": [
      "entity: \n\nThe carriage to delete."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe carriage to delete.\n\nDeletes the specified entity and any carriage its attached to, or that is attached to it."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DestroyDui",
    "hash": "0xA085CB10",
    "code": "-- DESTROY_DUI\nDestroyDui(\n\tduiObject --[[ long ]]\n)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle."
    ],
    "returns": [],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\nDestroys a DUI browser."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DisableEditorRuntime",
    "hash": "0xB1622B17",
    "code": "-- DISABLE_EDITOR_RUNTIME\nDisableEditorRuntime()",
    "parameters": [],
    "returns": [],
    "description": "Disables the editor runtime mode, changing game behavior to not track entity metadata. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DisableIdleCamera",
    "hash": "0x3D5AB7F0",
    "code": "-- DISABLE_IDLE_CAMERA\nDisableIdleCamera(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nOn/Off"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nOn/Off\n\nDisables the game's afk camera that starts panning around after 30 seconds of inactivity."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DisableRawKeyThisFrame",
    "hash": "0x8BCF0014",
    "code": "-- DISABLE_RAW_KEY_THIS_FRAME\nlocal retval --[[ boolean ]] =\n\tDisableRawKeyThisFrame(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of down state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of down state.\n\nDisables the specified rawKeyIndex, making it not trigger the regular IS_RAW_KEY_* natives.\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DisableVehiclePassengerIdleCamera",
    "hash": "0x5C140555",
    "code": "-- DISABLE_VEHICLE_PASSENGER_IDLE_CAMERA\nDisableVehiclePassengerIdleCamera(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nOn/Off"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nOn/Off\n\nDisables the game's afk camera that starts panning around after 30 seconds of inactivity(While riding in a car as a passenger)"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DisableWorldhorizonRendering",
    "hash": "0xA9C92CDC",
    "code": "-- DISABLE_WORLDHORIZON_RENDERING\nDisableWorldhorizonRendering(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nOn/Off"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nOn/Off\n\nDisables the game's world horizon lods rendering (see farlods.#dd). Using the island hopper natives might also affect this state."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DoesBoatSinkWhenWrecked",
    "hash": "0x43F15989",
    "code": "-- DOES_BOAT_SINK_WHEN_WRECKED\nlocal retval --[[ bool ]] =\n\tDoesBoatSinkWhenWrecked(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Returns whether or not the boat sinks when wrecked."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturns whether or not the boat sinks when wrecked."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DoesEntityExist",
    "hash": "0x3AC90869",
    "code": "-- DOES_ENTITY_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesEntityExist(\n\t\tentity --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DoesPlayerExist",
    "hash": "0x12038599",
    "code": "-- DOES_PLAYER_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesPlayerExist(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "True if the player exists, false otherwise"
    ],
    "description": "Returns:\n\nTrue if the player exists, false otherwise\n\nReturns whether or not the player exists"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DoesPlayerOwnSku",
    "hash": "0x167ABA27",
    "code": "-- DOES_PLAYER_OWN_SKU\nlocal retval --[[ boolean ]] =\n\tDoesPlayerOwnSku(\n\t\tplayerSrc --[[ string ]], \n\t\tskuId --[[ integer ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle",
      "skuId: \n\nThe ID of the SKU."
    ],
    "returns": [
      "A boolean."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nskuId: \n\nThe ID of the SKU.\n\nReturns:\n\nA boolean.\n\nRequests whether or not the player owns the specified SKU."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DoesPlayerOwnSkuExt",
    "hash": "0xDEF0480B",
    "code": "-- DOES_PLAYER_OWN_SKU_EXT\nlocal retval --[[ boolean ]] =\n\tDoesPlayerOwnSkuExt(\n\t\tplayerSrc --[[ string ]], \n\t\tskuId --[[ integer ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle",
      "skuId: \n\nThe package ID on Tebex."
    ],
    "returns": [
      "A boolean."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nskuId: \n\nThe package ID on Tebex.\n\nReturns:\n\nA boolean.\n\nRequests whether or not the player owns the specified package."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DoesTimecycleModifierHasVar",
    "hash": "0xC53BB6D3",
    "code": "-- DOES_TIMECYCLE_MODIFIER_HAS_VAR\nlocal retval --[[ boolean ]] =\n\tDoesTimecycleModifierHasVar(\n\t\tmodifierName --[[ string ]], \n\t\tvarName --[[ string ]]\n\t)",
    "parameters": [
      "modifierName: \n\nThe name of timecycle modifier.",
      "varName: \n\nThe name of timecycle variable."
    ],
    "returns": [
      "Whether or not variable by name was found on the specified timecycle modifier."
    ],
    "description": "Parameters:\n\nmodifierName: \n\nThe name of timecycle modifier.\n\nvarName: \n\nThe name of timecycle variable.\n\nReturns:\n\nWhether or not variable by name was found on the specified timecycle modifier."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "DoesTrainStopAtStations",
    "hash": "0x77CC80DC",
    "code": "-- DOES_TRAIN_STOP_AT_STATIONS\nlocal retval --[[ boolean ]] =\n\tDoesTrainStopAtStations(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "True if the train stops at stations. False otherwise"
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nTrue if the train stops at stations. False otherwise"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DoesVehicleUseFuel",
    "hash": "0xEF30A696",
    "code": "-- DOES_VEHICLE_USE_FUEL\nlocal retval --[[ boolean ]] =\n\tDoesVehicleUseFuel(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle."
    ],
    "returns": [
      "True if the vehicle uses fuel to move. False otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nReturns:\n\nTrue if the vehicle uses fuel to move. False otherwise.\n\nChecks whether the vehicle consumes fuel. The check is done based on petrol tank volume and vehicle type. Bicycles and vehicles with petrol tank volume equal to zero (only bicycles by default) do not use fuel. All other vehicles do.\n\nYou can customize petrol tank volume using SET_HANDLING_FLOAT/SET_VEHICLE_HANDLING_FLOAT natives with fieldName equal to fPetrolTankVolume."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DoorSystemGetActive",
    "hash": "0xF65BBA4B",
    "code": "-- DOOR_SYSTEM_GET_ACTIVE\nlocal retval --[[ object ]] =\n\tDoorSystemGetActive()",
    "parameters": [],
    "returns": [
      "An object containing a list of door system entries."
    ],
    "description": "Returns:\n\nAn object containing a list of door system entries.\n\nReturns a list of door system entries: a door system hash (see ADD_DOOR_TO_SYSTEM) and its object handle.\n\nThe data returned adheres to the following layout:\n\n[{doorHash1, doorHandle1}, ..., {doorHashN, doorHandleN}]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DoorSystemGetSize",
    "hash": "0x237613B3",
    "code": "-- DOOR_SYSTEM_GET_SIZE\nlocal retval --[[ integer ]] =\n\tDoorSystemGetSize()",
    "parameters": [],
    "returns": [
      "The number of doors registered in the system"
    ],
    "description": "Returns:\n\nThe number of doors registered in the system"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DrawCorona",
    "hash": "0xFF44780E",
    "code": "-- DRAW_CORONA\nDrawCorona(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tsize --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]], \n\tintensity --[[ number ]], \n\tzBias --[[ number ]], \n\tdirX --[[ number ]], \n\tdirY --[[ number ]], \n\tdirZ --[[ number ]], \n\tviewThreshold --[[ number ]], \n\tinnerAngle --[[ number ]], \n\touterAngle --[[ number ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [
      "posX: \n\nThe X position of the corona origin.",
      "posY: \n\nThe Y position of the corona origin.",
      "posZ: \n\nThe Z position of the corona origin.",
      "size: \n\nThe size of the corona.",
      "red: \n\nThe red component of the marker color, on a scale from 0-255.",
      "green: \n\nThe green component of the marker color, on a scale from 0-255.",
      "blue: \n\nThe blue component of the marker color, on a scale from 0-255.",
      "alpha: \n\nThe alpha component of the marker color, on a scale from 0-255.",
      "intensity: \n\nThe intensity of the corona.",
      "zBias: \n\nzBias slightly shifts the depth of surfaces to make sure they don’t overlap or cause visual glitches when they are very close together. The zBias value are usually in the range of 0.0 to 1.0.",
      "dirX: \n\nThe X direction of the corona.",
      "dirY: \n\nThe Y direction of the corona.",
      "dirZ: \n\nThe Z direction of the corona.",
      "viewThreshold: \n\nThe view threshold is to determine the fading of the corona based on the distance.",
      "innerAngle: \n\nThe inner angle of the corona.",
      "outerAngle: \n\nThe outer angle of the corona.",
      "flags: \n\nThe corona flags."
    ],
    "returns": [],
    "description": "Parameters:\n\nposX: \n\nThe X position of the corona origin.\n\nposY: \n\nThe Y position of the corona origin.\n\nposZ: \n\nThe Z position of the corona origin.\n\nsize: \n\nThe size of the corona.\n\nred: \n\nThe red component of the marker color, on a scale from 0-255.\n\ngreen: \n\nThe green component of the marker color, on a scale from 0-255.\n\nblue: \n\nThe blue component of the marker color, on a scale from 0-255.\n\nalpha: \n\nThe alpha component of the marker color, on a scale from 0-255.\n\nintensity: \n\nThe intensity of the corona.\n\nzBias: \n\nzBias slightly shifts the depth of surfaces to make sure they don’t overlap or cause visual glitches when they are very close together. The zBias value are usually in the range of 0.0 to 1.0.\n\ndirX: \n\nThe X direction of the corona.\n\ndirY: \n\nThe Y direction of the corona.\n\ndirZ: \n\nThe Z direction of the corona.\n\nviewThreshold: \n\nThe view threshold is to determine the fading of the corona based on the distance.\n\ninnerAngle: \n\nThe inner angle of the corona.\n\nouterAngle: \n\nThe outer angle of the corona.\n\nflags: \n\nThe corona flags.\n\nAllows drawing advanced light effects, known as coronas, which support flares, volumetric lighting, and customizable glow properties."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DrawGizmo",
    "hash": "0xEB2EDCA2",
    "code": "-- DRAW_GIZMO\nlocal retval --[[ boolean ]] =\n\tDrawGizmo(\n\t\tmatrixPtr --[[ long ]], \n\t\tid --[[ string ]]\n\t)",
    "parameters": [
      "matrixPtr: \n\nA mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.",
      "id: \n\nA unique identifier of what the gizmo is affecting."
    ],
    "returns": [
      "Whether or not the matrix was modified."
    ],
    "description": "Parameters:\n\nmatrixPtr: \n\nA mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.\n\nid: \n\nA unique identifier of what the gizmo is affecting.\n\nReturns:\n\nWhether or not the matrix was modified.\n\nDraws a gizmo. This function supports SDK infrastructure and is not intended to be used directly from your code.\n\nThis should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.\n\nMatrix layout is as follows:\n\nElement [0], [1] and [2] should represent the right vector.\nElement [4], [5] and [6] should represent the forward vector.\nElement [8], [9] and [10] should represent the up vector.\nElement [12], [13] and [14] should represent X, Y and Z translation coordinates.\nAll other elements should be [0, 0, 0, 1]."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DrawGlowSphere",
    "hash": "0xBD25EC89",
    "code": "-- DRAW_GLOW_SPHERE\nDrawGlowSphere(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tradius --[[ number ]], \n\tcolorR --[[ integer ]], \n\tcolorG --[[ integer ]], \n\tcolorB --[[ integer ]], \n\tintensity --[[ number ]], \n\tinvert --[[ boolean ]], \n\tmarker --[[ boolean ]]\n)",
    "parameters": [
      "posX: \n\nPosition X.",
      "posY: \n\nPosition Y.",
      "posZ: \n\nPosition Z.",
      "radius: \n\nSphere radius.",
      "colorR: \n\nRed.",
      "colorG: \n\nGreen.",
      "colorB: \n\nBlue.",
      "intensity: \n\nIntensity.",
      "invert: \n\nInvert rendering.",
      "marker: \n\nDraw as a marker, otherwise as an overlay."
    ],
    "returns": [],
    "description": "Parameters:\n\nposX: \n\nPosition X.\n\nposY: \n\nPosition Y.\n\nposZ: \n\nPosition Z.\n\nradius: \n\nSphere radius.\n\ncolorR: \n\nRed.\n\ncolorG: \n\nGreen.\n\ncolorB: \n\nBlue.\n\nintensity: \n\nIntensity.\n\ninvert: \n\nInvert rendering.\n\nmarker: \n\nDraw as a marker, otherwise as an overlay.\n\nDraw a glow sphere this frame. Up to 256 per single frame."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DrawLine_2d",
    "hash": "0xB856A90",
    "code": "-- DRAW_LINE_2D\nDrawLine_2d(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\twidth --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [
      "x1: \n\nFirst x.",
      "y1: \n\nFirst y.",
      "x2: \n\nSecond x.",
      "y2: \n\nSecond y.",
      "width: \n\nWidth of line.",
      "r: \n\nRed.",
      "g: \n\nGreen.",
      "b: \n\nBlue.",
      "a: \n\nAlpha."
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nFirst x.\n\ny1: \n\nFirst y.\n\nx2: \n\nSecond x.\n\ny2: \n\nSecond y.\n\nwidth: \n\nWidth of line.\n\nr: \n\nRed.\n\ng: \n\nGreen.\n\nb: \n\nBlue.\n\na: \n\nAlpha.\n\nLike DRAW_RECT, but it's a line."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "DrawRectRotated",
    "hash": "0xEC37C168",
    "code": "-- DRAW_RECT_ROTATED\nDrawRectRotated(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\trotation --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "DRAW_RECT, but with a rotation. Seems to be broken."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "DropPlayer",
    "hash": "0xBA0613E1",
    "code": "-- DROP_PLAYER\nDropPlayer(\n\tplayerSrc --[[ string ]], \n\treason --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "DuplicateFunctionReference",
    "hash": "0xF4E2079D",
    "code": "-- DUPLICATE_FUNCTION_REFERENCE\nlocal retval --[[ string ]] =\n\tDuplicateFunctionReference(\n\t\treferenceIdentity --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "EnableEditorRuntime",
    "hash": "0xC383871D",
    "code": "-- ENABLE_EDITOR_RUNTIME\nEnableEditorRuntime()",
    "parameters": [],
    "returns": [],
    "description": "Enables the editor runtime mode, changing game behavior to track entity metadata. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "EnableEnhancedHostSupport",
    "hash": "0xF97B1C93",
    "code": "-- ENABLE_ENHANCED_HOST_SUPPORT\nEnableEnhancedHostSupport(\n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "EndFindKvp",
    "hash": "0xB3210203",
    "code": "-- END_FIND_KVP\nEndFindKvp(\n\thandle --[[ integer ]]\n)",
    "parameters": [
      "handle: \n\nThe KVP find handle returned from START_FIND_KVP"
    ],
    "returns": [
      "None."
    ],
    "description": "Parameters:\n\nhandle: \n\nThe KVP find handle returned from START_FIND_KVP\n\nReturns:\n\nNone."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "EndFindObject",
    "hash": "0xDEDA4E50",
    "code": "-- END_FIND_OBJECT\nEndFindObject(\n\tfindHandle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "EndFindPed",
    "hash": "0x9615C2AD",
    "code": "-- END_FIND_PED\nEndFindPed(\n\tfindHandle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "EndFindPickup",
    "hash": "0x3C407D53",
    "code": "-- END_FIND_PICKUP\nEndFindPickup(\n\tfindHandle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "EndFindVehicle",
    "hash": "0x9227415A",
    "code": "-- END_FIND_VEHICLE\nEndFindVehicle(\n\tfindHandle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "EnsureEntityStateBag",
    "hash": "0x3BB78F05",
    "code": "-- ENSURE_ENTITY_STATE_BAG\nEnsureEntityStateBag(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Internal function for ensuring an entity has a state bag."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "EnterCursorMode",
    "hash": "0x780DA86",
    "code": "-- ENTER_CURSOR_MODE\nEnterCursorMode()",
    "parameters": [],
    "returns": [],
    "description": "Enters cursor mode, suppressing mouse movement to the game and displaying a mouse cursor instead. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "ExecuteCommand",
    "hash": "0x561C060B",
    "code": "-- EXECUTE_COMMAND\nExecuteCommand(\n\tcommandString --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Depending on your use case you may need to use add_acl resource.<your_resource_name> command.<command_name> allow to use this native in your resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ExperimentalLoadCloneCreate",
    "hash": "0xD2CB95A3",
    "code": "-- EXPERIMENTAL_LOAD_CLONE_CREATE\nlocal retval --[[ Entity ]] =\n\tExperimentalLoadCloneCreate(\n\t\tdata --[[ string ]], \n\t\tobjectId --[[ integer ]], \n\t\ttree --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native is not implemented."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ExperimentalLoadCloneSync",
    "hash": "0x6BC189AC",
    "code": "-- EXPERIMENTAL_LOAD_CLONE_SYNC\nExperimentalLoadCloneSync(\n\tentity --[[ Entity ]], \n\tdata --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native is not implemented."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ExperimentalSaveCloneCreate",
    "hash": "0x9D65CAD2",
    "code": "-- EXPERIMENTAL_SAVE_CLONE_CREATE\nlocal retval --[[ string ]] =\n\tExperimentalSaveCloneCreate(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native is not implemented."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ExperimentalSaveCloneSync",
    "hash": "0x38D19210",
    "code": "-- EXPERIMENTAL_SAVE_CLONE_SYNC\nlocal retval --[[ string ]] =\n\tExperimentalSaveCloneSync(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native is not implemented."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindFirstObject",
    "hash": "0xFAA6CB5D",
    "code": "-- FIND_FIRST_OBJECT\nlocal retval --[[ integer ]], outEntity --[[ Entity ]] =\n\tFindFirstObject()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindFirstPed",
    "hash": "0xFB012961",
    "code": "-- FIND_FIRST_PED\nlocal retval --[[ integer ]], outEntity --[[ Entity ]] =\n\tFindFirstPed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindFirstPickup",
    "hash": "0x3FF9D340",
    "code": "-- FIND_FIRST_PICKUP\nlocal retval --[[ integer ]], outEntity --[[ Entity ]] =\n\tFindFirstPickup()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindFirstVehicle",
    "hash": "0x15E55694",
    "code": "-- FIND_FIRST_VEHICLE\nlocal retval --[[ integer ]], outEntity --[[ Entity ]] =\n\tFindFirstVehicle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "FindKvp",
    "hash": "0xBD7BEBC5",
    "code": "-- FIND_KVP\nlocal retval --[[ string ]] =\n\tFindKvp(\n\t\thandle --[[ integer ]]\n\t)",
    "parameters": [
      "handle: \n\nThe KVP find handle returned from START_FIND_KVP"
    ],
    "returns": [
      "None."
    ],
    "description": "Parameters:\n\nhandle: \n\nThe KVP find handle returned from START_FIND_KVP\n\nReturns:\n\nNone."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindNextObject",
    "hash": "0x4E129DBF",
    "code": "-- FIND_NEXT_OBJECT\nlocal retval --[[ boolean ]], outEntity --[[ Entity ]] =\n\tFindNextObject(\n\t\tfindHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindNextPed",
    "hash": "0xAB09B548",
    "code": "-- FIND_NEXT_PED\nlocal retval --[[ boolean ]], outEntity --[[ Entity ]] =\n\tFindNextPed(\n\t\tfindHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindNextPickup",
    "hash": "0x4107EF0F",
    "code": "-- FIND_NEXT_PICKUP\nlocal retval --[[ boolean ]], outEntity --[[ Entity ]] =\n\tFindNextPickup(\n\t\tfindHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "FindNextVehicle",
    "hash": "0x8839120D",
    "code": "-- FIND_NEXT_VEHICLE\nlocal retval --[[ boolean ]], outEntity --[[ Entity ]] =\n\tFindNextVehicle(\n\t\tfindHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "FlagServerAsPrivate",
    "hash": "0x13B6855D",
    "code": "-- FLAG_SERVER_AS_PRIVATE\nFlagServerAsPrivate(\n\tprivate_ --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "FlushResourceKvp",
    "hash": "0xE27C97A0",
    "code": "-- FLUSH_RESOURCE_KVP\nFlushResourceKvp()",
    "parameters": [],
    "returns": [],
    "description": "Nonsynchronous operations will not wait for a disk/filesystem flush before returning from a write or delete call. They will be much faster than their synchronous counterparts (e.g., bulk operations), however, a system crash may lose the data to some recent operations.\n\nThis native ensures all _NO_SYNC operations are synchronized with the disk/filesystem."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ForceSnowPass",
    "hash": "0xE6E16170",
    "code": "-- FORCE_SNOW_PASS\nForceSnowPass(\n\tenabled --[[ boolean ]]\n)",
    "parameters": [
      "enabled: \n\nWhether or not to force rendering to use a snow pass."
    ],
    "returns": [],
    "description": "Parameters:\n\nenabled: \n\nWhether or not to force rendering to use a snow pass.\n\nForces the game snow pass to render."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "FormatStackTrace",
    "hash": "0xD70C3BCA",
    "code": "-- FORMAT_STACK_TRACE\nlocal retval --[[ string ]] =\n\tFormatStackTrace(\n\t\ttraceData --[[ object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "An internal function for converting a stack trace object to a string."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "FreezeEntityPosition",
    "hash": "0x65C16D57",
    "code": "-- FREEZE_ENTITY_POSITION\nFreezeEntityPosition(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to freeze/unfreeze.",
      "toggle: \n\nFreeze or unfreeze entity."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to freeze/unfreeze.\n\ntoggle: \n\nFreeze or unfreeze entity.\n\nFreezes or unfreezes an entity preventing its coordinates to change by the player if set to true. You can still change the entity position using SET_ENTITY_COORDS.\n\nThis is the server-side RPC native equivalent of the client native FREEZE_ENTITY_POSITION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetActivePlayers",
    "hash": "0xCF143FB9",
    "code": "-- GET_ACTIVE_PLAYERS\nlocal retval --[[ object ]] =\n\tGetActivePlayers()",
    "parameters": [],
    "returns": [
      "An object containing a list of player indices."
    ],
    "description": "Returns:\n\nAn object containing a list of player indices.\n\nReturns all player indices for 'active' physical players known to the client. The data returned adheres to the following layout:\n\n[127, 42, 13, 37]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetAirDragMultiplierForPlayersVehicle",
    "hash": "0x62FC38D0",
    "code": "-- GET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE\nlocal retval --[[ number ]] =\n\tGetAirDragMultiplierForPlayersVehicle(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetAllObjects",
    "hash": "0x6886C3FE",
    "code": "-- GET_ALL_OBJECTS\nlocal retval --[[ object ]] =\n\tGetAllObjects()",
    "parameters": [],
    "returns": [
      "An object containing a list of object handles."
    ],
    "description": "Returns:\n\nAn object containing a list of object handles.\n\nReturns all object handles known to the server. The data returned adheres to the following layout:\n\n[127, 42, 13, 37]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetAllPeds",
    "hash": "0xB8584FEF",
    "code": "-- GET_ALL_PEDS\nlocal retval --[[ object ]] =\n\tGetAllPeds()",
    "parameters": [],
    "returns": [
      "An object containing a list of peds handles."
    ],
    "description": "Returns:\n\nAn object containing a list of peds handles.\n\nReturns all peds handles known to the server. The data returned adheres to the following layout:\n\n[127, 42, 13, 37]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetAllRopes",
    "hash": "0x760A2D67",
    "code": "-- GET_ALL_ROPES\nlocal retval --[[ object ]] =\n\tGetAllRopes()",
    "parameters": [],
    "returns": [
      "An object containing a list of all rope handles."
    ],
    "description": "Returns:\n\nAn object containing a list of all rope handles.\n\nReturns all rope handles. The data returned adheres to the following layout:\n\n[ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetAllTrackJunctions",
    "hash": "0x81A08523",
    "code": "-- GET_ALL_TRACK_JUNCTIONS\nlocal retval --[[ object ]] =\n\tGetAllTrackJunctions()",
    "parameters": [],
    "returns": [
      "An object containing a list of track junctions ids.`"
    ],
    "description": "Returns:\n\nAn object containing a list of track junctions ids.`\n\nReturns all track junctions on the client The data returned adheres to the following structure:\n\n[1, 2, 4, 6, 69, 420]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetAllVehicleModels",
    "hash": "0xD7531645",
    "code": "-- GET_ALL_VEHICLE_MODELS\nlocal retval --[[ object ]] =\n\tGetAllVehicleModels()",
    "parameters": [],
    "returns": [],
    "description": "Returns all registered vehicle model names, including non-dlc vehicles and custom vehicles in no particular order.\n\nExample output\n\n\t[\"dubsta\", \"dubsta2\", \"dubsta3\", \"myverycoolcar\", \"sultan\", \"sultanrs\", ...]\n\nThis native will not return vehicles that are unregistered (i.e from a resource being stopped) during runtime."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetAllVehicles",
    "hash": "0x332169F5",
    "code": "-- GET_ALL_VEHICLES\nlocal retval --[[ object ]] =\n\tGetAllVehicles()",
    "parameters": [],
    "returns": [
      "An object containing a list of vehicle handles."
    ],
    "description": "Returns:\n\nAn object containing a list of vehicle handles.\n\nReturns all vehicle handles known to the server. The data returned adheres to the following layout:\n\n[127, 42, 13, 37]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetAmbientPedRangeMultiplier",
    "hash": "0xB550232D",
    "code": "-- GET_AMBIENT_PED_RANGE_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetAmbientPedRangeMultiplier()",
    "parameters": [],
    "returns": [
      "Returns ambient ped range multiplier value."
    ],
    "description": "Returns:\n\nReturns ambient ped range multiplier value.\n\nA getter for SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetAmbientVehicleRangeMultiplier",
    "hash": "0x667EC929",
    "code": "-- GET_AMBIENT_VEHICLE_RANGE_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetAmbientVehicleRangeMultiplier()",
    "parameters": [],
    "returns": [
      "Returns ambient vehicle range multiplier value."
    ],
    "description": "Returns:\n\nReturns ambient vehicle range multiplier value.\n\nA getter for SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetCalmingQuadAtCoords",
    "hash": "0x870E8B40",
    "code": "-- GET_CALMING_QUAD_AT_COORDS\nlocal retval --[[ integer ]] =\n\tGetCalmingQuadAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate",
      "y: \n\nThe Y coordinate"
    ],
    "returns": [
      "The calming quad index at the given position. Returns -1 if there isn't any there."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate\n\ny: \n\nThe Y coordinate\n\nReturns:\n\nThe calming quad index at the given position. Returns -1 if there isn't any there.\n\nThis native returns the index of a calming quad if the given point is inside its bounds."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetCalmingQuadBounds",
    "hash": "0xFF60E63",
    "code": "-- GET_CALMING_QUAD_BOUNDS\nlocal retval --[[ boolean ]], minX --[[ integer ]], minY --[[ integer ]], maxX --[[ integer ]], maxY --[[ integer ]] =\n\tGetCalmingQuadBounds(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe calming quad index",
      "minX: \n\nThe minX coordinate",
      "minY: \n\nThe minY coordinate",
      "maxX: \n\nThe maxX coordinate",
      "maxY: \n\nThe maxY coordinate"
    ],
    "returns": [
      "Returns true on success. Bounds are undefined on failure"
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe calming quad index\n\nminX: \n\nThe minX coordinate\n\nminY: \n\nThe minY coordinate\n\nmaxX: \n\nThe maxX coordinate\n\nmaxY: \n\nThe maxY coordinate\n\nReturns:\n\nReturns true on success. Bounds are undefined on failure"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetCalmingQuadCount",
    "hash": "0xCEBFC42",
    "code": "-- GET_CALMING_QUAD_COUNT\nlocal retval --[[ integer ]] =\n\tGetCalmingQuadCount()",
    "parameters": [],
    "returns": [
      "Returns the amount of calming quads loaded."
    ],
    "description": "Returns:\n\nReturns the amount of calming quads loaded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetCalmingQuadDampening",
    "hash": "0xB0E3A058",
    "code": "-- GET_CALMING_QUAD_DAMPENING\nlocal retval --[[ boolean ]], calmingQuadDampening --[[ number ]] =\n\tGetCalmingQuadDampening(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe calming quad index",
      "calmingQuadDampening:"
    ],
    "returns": [
      "Returns true on success. Dampening value is undefined on failure"
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe calming quad index\n\ncalmingQuadDampening:\nReturns:\n\nReturns true on success. Dampening value is undefined on failure"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetCamMatrix",
    "hash": "0x8F57A89D",
    "code": "-- GET_CAM_MATRIX\nlocal rightVector --[[ vector3 ]], forwardVector --[[ vector3 ]], upVector --[[ vector3 ]], position --[[ vector3 ]] =\n\tGetCamMatrix(\n\t\tcamera --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the world matrix of the specified camera. To turn this into a view matrix, calculate the inverse."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetClosestTrackNodes",
    "hash": "0x59FC24A7",
    "code": "-- GET_CLOSEST_TRACK_NODES\nlocal retval --[[ object ]] =\n\tGetClosestTrackNodes(\n\t\tposition --[[ vector3 ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [
      "position: \n\nGet track nodes at position",
      "radius: \n\nGet track nodes within radius"
    ],
    "returns": [
      "Returns a list of tracks and node entries: a trackNode and a trackIdThe data returned adheres to the following layout: {trackNode1, trackId1}, ..., {trackNodeN, trackIdN}"
    ],
    "description": "Parameters:\n\nposition: \n\nGet track nodes at position\n\nradius: \n\nGet track nodes within radius\n\nReturns:\n\nReturns a list of tracks and node entries: a trackNode and a trackIdThe data returned adheres to the following layout: {trackNode1, trackId1}, ..., {trackNodeN, trackIdN}\n\nGet all track nodes and their track ids within the radius of the specified coordinates."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetConsoleBuffer",
    "hash": "0xE57429FA",
    "code": "-- GET_CONSOLE_BUFFER\nlocal retval --[[ string ]] =\n\tGetConsoleBuffer()",
    "parameters": [],
    "returns": [
      "The most recent game console output, as a string."
    ],
    "description": "Returns:\n\nThe most recent game console output, as a string.\n\nReturns the current console output buffer."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetConvar",
    "hash": "0x6CCD2564",
    "code": "-- GET_CONVAR\nlocal retval --[[ string ]] =\n\tGetConvar(\n\t\tvarName --[[ string ]], \n\t\tdefault_ --[[ string ]]\n\t)",
    "parameters": [
      "varName: \n\nThe console variable to look up.",
      "default_: \n\nThe default value to set if none is found."
    ],
    "returns": [
      "Returns the convar value if it can be found, otherwise it returns the assigned default."
    ],
    "description": "Parameters:\n\nvarName: \n\nThe console variable to look up.\n\ndefault_: \n\nThe default value to set if none is found.\n\nReturns:\n\nReturns the convar value if it can be found, otherwise it returns the assigned default.\n\nCan be used to get a console variable of type char*, for example a string."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetConvarBool",
    "hash": "0x7E8EBFE5",
    "code": "-- GET_CONVAR_BOOL\nlocal retval --[[ boolean ]] =\n\tGetConvarBool(\n\t\tvarName --[[ string ]], \n\t\tdefaultValue --[[ boolean ]]\n\t)",
    "parameters": [
      "varName: \n\nThe console variable to look up.",
      "defaultValue: \n\nThe default value to set if none is found."
    ],
    "returns": [
      "Returns the convar value if it can be found, otherwise it returns the assigned default."
    ],
    "description": "Parameters:\n\nvarName: \n\nThe console variable to look up.\n\ndefaultValue: \n\nThe default value to set if none is found.\n\nReturns:\n\nReturns the convar value if it can be found, otherwise it returns the assigned default.\n\nCan be used to get a console variable casted back to bool."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetConvarFloat",
    "hash": "0x9E666D",
    "code": "-- GET_CONVAR_FLOAT\nlocal retval --[[ number ]] =\n\tGetConvarFloat(\n\t\tvarName --[[ string ]], \n\t\tdefaultValue --[[ number ]]\n\t)",
    "parameters": [
      "varName: \n\nThe console variable to get",
      "defaultValue: \n\nThe default value to set, if none are found."
    ],
    "returns": [
      "Returns the value set in varName, or default if none are specified"
    ],
    "description": "Parameters:\n\nvarName: \n\nThe console variable to get\n\ndefaultValue: \n\nThe default value to set, if none are found.\n\nReturns:\n\nReturns the value set in varName, or default if none are specified\n\nThis will have floating point inaccuracy."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetConvarInt",
    "hash": "0x935C0AB2",
    "code": "-- GET_CONVAR_INT\nlocal retval --[[ integer ]] =\n\tGetConvarInt(\n\t\tvarName --[[ string ]], \n\t\tdefault_ --[[ integer ]]\n\t)",
    "parameters": [
      "varName: \n\nThe console variable to look up.",
      "default_: \n\nThe default value to set if none is found (variable not set using SET_CONVAR, or not accessible)."
    ],
    "returns": [
      "Returns the convar value if it can be found, otherwise it returns the assigned default."
    ],
    "description": "Parameters:\n\nvarName: \n\nThe console variable to look up.\n\ndefault_: \n\nThe default value to set if none is found (variable not set using SET_CONVAR, or not accessible).\n\nReturns:\n\nReturns the convar value if it can be found, otherwise it returns the assigned default.\n\nCan be used to get a console variable casted back to int (an integer value)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetCurrentGameName",
    "hash": "0xACA18ECD",
    "code": "-- GET_CURRENT_GAME_NAME\nlocal retval --[[ string ]] =\n\tGetCurrentGameName()",
    "parameters": [],
    "returns": [
      "The game name as a string, one of the following values: gta4, gta5, rdr3"
    ],
    "description": "Returns:\n\nThe game name as a string, one of the following values: gta4, gta5, rdr3\n\nThis native returns the currently used game's name."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetCurrentPedWeapon",
    "hash": "0xB0237302",
    "code": "-- GET_CURRENT_PED_WEAPON\nlocal retval --[[ Hash ]] =\n\tGetCurrentPedWeapon(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "The weapon hash."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nThe weapon hash.\n\nReturns the hash of weapon the Ped is currently using."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetCurrentResourceName",
    "hash": "0xE5E9EBBB",
    "code": "-- GET_CURRENT_RESOURCE_NAME\nlocal retval --[[ string ]] =\n\tGetCurrentResourceName()",
    "parameters": [],
    "returns": [
      "The name of the resource."
    ],
    "description": "Returns:\n\nThe name of the resource.\n\nReturns the name of the currently executing resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetCurrentServerEndpoint",
    "hash": "0xEA11BFBA",
    "code": "-- GET_CURRENT_SERVER_ENDPOINT\nlocal retval --[[ string ]] =\n\tGetCurrentServerEndpoint()",
    "parameters": [],
    "returns": [
      "The peer address of the game server (e.g. 127.0.0.1:30120), or NULL if not available."
    ],
    "description": "Returns:\n\nThe peer address of the game server (e.g. 127.0.0.1:30120), or NULL if not available.\n\nReturns the peer address of the remote game server that the user is currently connected to."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetDuiHandle",
    "hash": "0x1655D41D",
    "code": "-- GET_DUI_HANDLE\nlocal retval --[[ string ]] =\n\tGetDuiHandle(\n\t\tduiObject --[[ long ]]\n\t)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle."
    ],
    "returns": [
      "The NUI window handle, for use in e.g. CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE."
    ],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\nReturns:\n\nThe NUI window handle, for use in e.g. CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.\n\nReturns the NUI window handle for a specified DUI browser object."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetEntitiesInRadius",
    "hash": "0xDFFBA12F",
    "code": "-- GET_ENTITIES_IN_RADIUS\nlocal retval --[[ object ]] =\n\tGetEntitiesInRadius(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tentityType --[[ integer ]], \n\t\tsortByDistance --[[ boolean ]], \n\t\tmodels --[[ object ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate.",
      "y: \n\nThe Y coordinate.",
      "z: \n\nThe Z coordinate.",
      "radius: \n\nMax distance from coordinate to entity",
      "entityType: \n\nEntity types see list below",
      "sortByDistance: \n\nSort output entites by distance from nearest to farthest",
      "models: \n\nList of allowed models its also optional"
    ],
    "returns": [
      "An array containing entity handles for each entity."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate.\n\ny: \n\nThe Y coordinate.\n\nz: \n\nThe Z coordinate.\n\nradius: \n\nMax distance from coordinate to entity\n\nentityType: \n\nEntity types see list below\n\nsortByDistance: \n\nSort output entites by distance from nearest to farthest\n\nmodels: \n\nList of allowed models its also optional\n\nReturns:\n\nAn array containing entity handles for each entity.\n\nSupported types\n[1] : Peds (including animals) and players.\n[2] : Vehicles.\n[3] : Objects (props), doors, and projectiles.\nCoordinates need to be send unpacked (x,y,z)\n-- Define the allowed model hashes\nlocal allowedModelHashes = { GetHashKey(\"p_crate03x\"), GetHashKey(\"p_crate22x\") }\n\n-- Get the player's current coordinates\nlocal playerCoords = GetEntityCoords(PlayerPedId())\n\n-- Retrieve all entities of type Object (type 3) within a radius of 10.0 units\n-- that match the allowed model hashes\n-- and sort output entities by distance\nlocal entities = GetEntitiesInRadius(playerCoords.x, playerCoords.y, playerCoords.z, 10.0, 3, true, allowedModelHashes)\n\n-- Iterate through the list of entities and print their ids\nfor i = 1, #entities do\n    local entity = entities[i]\n    print(entity)\nend"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetEntityAddress",
    "hash": "0x9A3144BC",
    "code": "-- GET_ENTITY_ADDRESS\nlocal retval --[[ Any* ]] =\n\tGetEntityAddress(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe handle of the entity to get the address of."
    ],
    "returns": [
      "A pointer containing the memory address of the entity."
    ],
    "description": "Parameters:\n\nentity: \n\nThe handle of the entity to get the address of.\n\nReturns:\n\nA pointer containing the memory address of the entity.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nReturns the memory address of an entity.\n\nThis native is intended for singleplayer debugging, and may not be available during multiplayer."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetEntityArchetypeName",
    "hash": "0x47B870F5",
    "code": "-- GET_ENTITY_ARCHETYPE_NAME\nlocal retval --[[ string ]] =\n\tGetEntityArchetypeName(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nAn entity handle."
    ],
    "returns": [
      "Entity's archetype name"
    ],
    "description": "Parameters:\n\nentity: \n\nAn entity handle.\n\nReturns:\n\nEntity's archetype name\n\nReturns entity's archetype name, if available."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityAttachedTo",
    "hash": "0xFE1589F9",
    "code": "-- GET_ENTITY_ATTACHED_TO\nlocal retval --[[ Entity ]] =\n\tGetEntityAttachedTo(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check."
    ],
    "returns": [
      "The attached entity handle. 0 returned if the entity is not attached."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check.\n\nReturns:\n\nThe attached entity handle. 0 returned if the entity is not attached.\n\nGets the entity that this entity is attached to."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityCollisionDisabled",
    "hash": "0xE8C0C629",
    "code": "-- GET_ENTITY_COLLISION_DISABLED\nlocal retval --[[ bool ]] =\n\tGetEntityCollisionDisabled(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe target entity."
    ],
    "returns": [
      "Returns whether or not entity collisions are disabled."
    ],
    "description": "Parameters:\n\nentity: \n\nThe target entity.\n\nReturns:\n\nReturns whether or not entity collisions are disabled."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityCoords",
    "hash": "0x1647F1CB",
    "code": "-- GET_ENTITY_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetEntityCoords(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the coordinates from."
    ],
    "returns": [
      "The current entity coordinates."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the coordinates from.\n\nReturns:\n\nThe current entity coordinates.\n\nGets the current coordinates for a specified entity. This native is used server side when using OneSync.\n\nSee GET_ENTITY_COORDS for client side."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetEntityFromStateBagName",
    "hash": "0x4BDF1867",
    "code": "-- GET_ENTITY_FROM_STATE_BAG_NAME\nlocal retval --[[ Entity ]] =\n\tGetEntityFromStateBagName(\n\t\tbagName --[[ string ]]\n\t)",
    "parameters": [
      "bagName: \n\nAn internal state bag ID from the argument to a state bag change handler."
    ],
    "returns": [
      "The entity handle or 0 if the state bag name did not refer to an entity, or the entity does not exist."
    ],
    "description": "Parameters:\n\nbagName: \n\nAn internal state bag ID from the argument to a state bag change handler.\n\nReturns:\n\nThe entity handle or 0 if the state bag name did not refer to an entity, or the entity does not exist.\n\nReturns the entity handle for the specified state bag name. For use with ADD_STATE_BAG_CHANGE_HANDLER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityHeading",
    "hash": "0x972CC383",
    "code": "-- GET_ENTITY_HEADING\nlocal retval --[[ number ]] =\n\tGetEntityHeading(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityHealth",
    "hash": "0x8E3222B7",
    "code": "-- GET_ENTITY_HEALTH\nlocal retval --[[ integer ]] =\n\tGetEntityHealth(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check the health of"
    ],
    "returns": [
      "If the entity is a vehicle it will return 0-1000 If the entity is a ped it will return 0-200 If the entity is an object it will return 0"
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check the health of\n\nReturns:\n\nIf the entity is a vehicle it will return 0-1000 If the entity is a ped it will return 0-200 If the entity is an object it will return 0\n\nOnly works for vehicle and peds"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetEntityIndexFromMapdata",
    "hash": "0xEE43540D",
    "code": "-- GET_ENTITY_INDEX_FROM_MAPDATA\nlocal retval --[[ integer ]] =\n\tGetEntityIndexFromMapdata(\n\t\tmapdata --[[ integer ]], \n\t\tentity --[[ integer ]]\n\t)",
    "parameters": [
      "mapdata: \n\nThe input map data index from GET_MAPDATA_FROM_HASH_KEY.",
      "entity: \n\nThe input entity handle from GET_ENTITY_MAPDATA_OWNER."
    ],
    "returns": [
      "A transient (non-persistable) index to the requested entity, or -1."
    ],
    "description": "Parameters:\n\nmapdata: \n\nThe input map data index from GET_MAPDATA_FROM_HASH_KEY.\n\nentity: \n\nThe input entity handle from GET_ENTITY_MAPDATA_OWNER.\n\nReturns:\n\nA transient (non-persistable) index to the requested entity, or -1.\n\nReturns the transient entity index for a specified mapdata/entity pair. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetEntityMapdataOwner",
    "hash": "0xF6B815C5",
    "code": "-- GET_ENTITY_MAPDATA_OWNER\nlocal retval --[[ boolean ]], mapdataHandle --[[ integer ]], entityHandle --[[ integer ]] =\n\tGetEntityMapdataOwner(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nAn entity owned by map data.",
      "mapdataHandle: \n\nThe output map data handle.",
      "entityHandle: \n\nThe output entity handle."
    ],
    "returns": [
      "True if successful, false if not."
    ],
    "description": "Parameters:\n\nentity: \n\nAn entity owned by map data.\n\nmapdataHandle: \n\nThe output map data handle.\n\nentityHandle: \n\nThe output entity handle.\n\nReturns:\n\nTrue if successful, false if not.\n\nRetrieves the map data and entity handles from a specific entity. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityMaxHealth",
    "hash": "0xC7AE6AA1",
    "code": "-- GET_ENTITY_MAX_HEALTH\nlocal retval --[[ integer ]] =\n\tGetEntityMaxHealth(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Currently it only works with peds."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityModel",
    "hash": "0xDAFCB3EC",
    "code": "-- GET_ENTITY_MODEL\nlocal retval --[[ Hash ]] =\n\tGetEntityModel(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityOrphanMode",
    "hash": "0xD16EA02F",
    "code": "-- GET_ENTITY_ORPHAN_MODE\nlocal retval --[[ integer ]] =\n\tGetEntityOrphanMode(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the orphan mode of"
    ],
    "returns": [
      "Returns the entities current orphan mode, refer to enum in SET_ENTITY_ORPHAN_MODE"
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the orphan mode of\n\nReturns:\n\nReturns the entities current orphan mode, refer to enum in SET_ENTITY_ORPHAN_MODE"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityPopulationType",
    "hash": "0xFC30DDFF",
    "code": "-- GET_ENTITY_POPULATION_TYPE\nlocal retval --[[ integer ]] =\n\tGetEntityPopulationType(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nthe entity to obtain the population type from"
    ],
    "returns": [
      "Returns the population type ID, defined by the below enumeration:`cpp enum ePopulationType { POPTYPE_UNKNOWN = 0, POPTYPE_RANDOM_PERMANENT, POPTYPE_RANDOM_PARKED, POPTYPE_RANDOM_PATROL, POPTYPE_RANDOM_SCENARIO, POPTYPE_RANDOM_AMBIENT, POPTYPE_PERMANENT, POPTYPE_MISSION, POPTYPE_REPLAY, POPTYPE_CACHE, POPTYPE_TOOL };"
    ],
    "description": "Parameters:\n\nentity: \n\nthe entity to obtain the population type from\n\nReturns:\n\nReturns the population type ID, defined by the below enumeration:`cpp enum ePopulationType { POPTYPE_UNKNOWN = 0, POPTYPE_RANDOM_PERMANENT, POPTYPE_RANDOM_PARKED, POPTYPE_RANDOM_PATROL, POPTYPE_RANDOM_SCENARIO, POPTYPE_RANDOM_AMBIENT, POPTYPE_PERMANENT, POPTYPE_MISSION, POPTYPE_REPLAY, POPTYPE_CACHE, POPTYPE_TOOL };\n\nThis native gets an entity's population type."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityRemoteSyncedScenesAllowed",
    "hash": "0x91B38FB6",
    "code": "-- GET_ENTITY_REMOTE_SYNCED_SCENES_ALLOWED\nlocal retval --[[ boolean ]] =\n\tGetEntityRemoteSyncedScenesAllowed(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the flag for."
    ],
    "returns": [
      "Returns if the entity is allowed to participate in network-synchronized scenes initiated by clients that do not own the entity."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the flag for.\n\nReturns:\n\nReturns if the entity is allowed to participate in network-synchronized scenes initiated by clients that do not own the entity."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityRotation",
    "hash": "0x8FF45B04",
    "code": "-- GET_ENTITY_ROTATION\nlocal retval --[[ vector3 ]] =\n\tGetEntityRotation(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityRotationVelocity",
    "hash": "0x9BF8A73F",
    "code": "-- GET_ENTITY_ROTATION_VELOCITY\nlocal retval --[[ vector3 ]] =\n\tGetEntityRotationVelocity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityRoutingBucket",
    "hash": "0xED4B0486",
    "code": "-- GET_ENTITY_ROUTING_BUCKET\nlocal retval --[[ integer ]] =\n\tGetEntityRoutingBucket(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the routing bucket for."
    ],
    "returns": [
      "The routing bucket ID."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the routing bucket for.\n\nReturns:\n\nThe routing bucket ID.\n\nGets the routing bucket for the specified entity.\n\nRouting buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityScript",
    "hash": "0xB7F70784",
    "code": "-- GET_ENTITY_SCRIPT\nlocal retval --[[ string ]] =\n\tGetEntityScript(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntitySpeed",
    "hash": "0x9E1E4798",
    "code": "-- GET_ENTITY_SPEED\nlocal retval --[[ number ]] =\n\tGetEntitySpeed(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the speed of"
    ],
    "returns": [
      "The speed of the entity in meters per second"
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the speed of\n\nReturns:\n\nThe speed of the entity in meters per second\n\nGets the current speed of the entity in meters per second.\n\nTo convert to MPH: speed * 2.236936\nTo convert to KPH: speed * 3.6"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityType",
    "hash": "0xB1BD08D",
    "code": "-- GET_ENTITY_TYPE\nlocal retval --[[ integer ]] =\n\tGetEntityType(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the type of."
    ],
    "returns": [
      "The entity type returned as an integer value."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the type of.\n\nReturns:\n\nThe entity type returned as an integer value.\n\nGets the entity type (as an integer), which can be one of the following defined down below:\n\nThe following entities will return type 1:\n\nPed\nPlayer\nAnimal (Red Dead Redemption 2)\nHorse (Red Dead Redemption 2)\n\nThe following entities will return type 2:\n\nAutomobile\nBike\nBoat\nHeli\nPlane\nSubmarine\nTrailer\nTrain\nDraftVeh (Red Dead Redemption 2)\n\nThe following entities will return type 3:\n\nObject\nDoor\nPickup\n\nOtherwise, a value of 0 will be returned."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetEntityVelocity",
    "hash": "0xC14C9B6B",
    "code": "-- GET_ENTITY_VELOCITY\nlocal retval --[[ vector3 ]] =\n\tGetEntityVelocity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetExternalKvpFloat",
    "hash": "0x3CC98B25",
    "code": "-- GET_EXTERNAL_KVP_FLOAT\nlocal retval --[[ number ]] =\n\tGetExternalKvpFloat(\n\t\tresource --[[ string ]], \n\t\tkey --[[ string ]]\n\t)",
    "parameters": [
      "resource: \n\nThe resource to fetch from.",
      "key: \n\nThe key to fetch"
    ],
    "returns": [
      "A float that contains the value stored in the Kvp or nil/null if none."
    ],
    "description": "Parameters:\n\nresource: \n\nThe resource to fetch from.\n\nkey: \n\nThe key to fetch\n\nReturns:\n\nA float that contains the value stored in the Kvp or nil/null if none.\n\nA getter for SET_RESOURCE_KVP_FLOAT, but for a specified resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetExternalKvpInt",
    "hash": "0x12B8D689",
    "code": "-- GET_EXTERNAL_KVP_INT\nlocal retval --[[ integer ]] =\n\tGetExternalKvpInt(\n\t\tresource --[[ string ]], \n\t\tkey --[[ string ]]\n\t)",
    "parameters": [
      "resource: \n\nThe resource to fetch from.",
      "key: \n\nThe key to fetch"
    ],
    "returns": [
      "A int that contains the value stored in the Kvp or nil/null if none."
    ],
    "description": "Parameters:\n\nresource: \n\nThe resource to fetch from.\n\nkey: \n\nThe key to fetch\n\nReturns:\n\nA int that contains the value stored in the Kvp or nil/null if none.\n\nA getter for SET_RESOURCE_KVP_INT, but for a specified resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetExternalKvpString",
    "hash": "0x9080363A",
    "code": "-- GET_EXTERNAL_KVP_STRING\nlocal retval --[[ string ]] =\n\tGetExternalKvpString(\n\t\tresource --[[ string ]], \n\t\tkey --[[ string ]]\n\t)",
    "parameters": [
      "resource: \n\nThe resource to fetch from.",
      "key: \n\nThe key to fetch"
    ],
    "returns": [
      "A string that contains the value stored in the Kvp or nil/null if none."
    ],
    "description": "Parameters:\n\nresource: \n\nThe resource to fetch from.\n\nkey: \n\nThe key to fetch\n\nReturns:\n\nA string that contains the value stored in the Kvp or nil/null if none.\n\nA getter for SET_RESOURCE_KVP, but for a specified resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetFuelConsumptionRateMultiplier",
    "hash": "0x5550BF9F",
    "code": "-- GET_FUEL_CONSUMPTION_RATE_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetFuelConsumptionRateMultiplier()",
    "parameters": [],
    "returns": [
      "Current fuel consumption rate multiplier. 0 means that fuel is not consumed."
    ],
    "description": "Returns:\n\nCurrent fuel consumption rate multiplier. 0 means that fuel is not consumed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetFuelConsumptionState",
    "hash": "0xC66CD90C",
    "code": "-- GET_FUEL_CONSUMPTION_STATE\nlocal retval --[[ boolean ]] =\n\tGetFuelConsumptionState()",
    "parameters": [],
    "returns": [
      "True if fuel consumption is turned on. False otherwise."
    ],
    "description": "Returns:\n\nTrue if fuel consumption is turned on. False otherwise."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetGameBuildNumber",
    "hash": "0x804B9F7B",
    "code": "-- GET_GAME_BUILD_NUMBER\nlocal retval --[[ integer ]] =\n\tGetGameBuildNumber()",
    "parameters": [],
    "returns": [
      "The build number, or 0 if no build number is known."
    ],
    "description": "Returns:\n\nThe build number, or 0 if no build number is known.\n\nReturns the internal build number of the current game being executed.\n\nPossible values:\n\nFiveM\n1604\n2060\n2189\n2372\n2545\n2612\n2699\n2802\n2944\n3095\n3258\n3323\n3407\n3570\nRedM\n1311\n1355\n1436\n1491\nLibertyM\n43\nFXServer\n0"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetGameName",
    "hash": "0xE8EAA18B",
    "code": "-- GET_GAME_NAME\nlocal retval --[[ string ]] =\n\tGetGameName()",
    "parameters": [],
    "returns": [
      "The game the script environment is running in."
    ],
    "description": "Returns:\n\nThe game the script environment is running in.\n\nReturns the current game being executed.\n\nPossible values:\n\nReturn value\tMeaning\nfxserver\tServer-side code ('Duplicity')\nfivem\tFiveM for GTA V\nlibertym\tLibertyM for GTA IV\nredm\tRedM for Red Dead Redemption 2"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetGamePool",
    "hash": "0x2B9D4F50",
    "code": "-- GET_GAME_POOL\nlocal retval --[[ object ]] =\n\tGetGamePool(\n\t\tpoolName --[[ string ]]\n\t)",
    "parameters": [
      "poolName: \n\nThe pool name to get a list of entities from."
    ],
    "returns": [
      "An array containing entity handles for each entity in the named pool."
    ],
    "description": "Parameters:\n\npoolName: \n\nThe pool name to get a list of entities from.\n\nReturns:\n\nAn array containing entity handles for each entity in the named pool.\n\nReturns a list of entity handles (script GUID) for all entities in the specified pool - the data returned is an array as follows:\n\n[ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]\nSupported pools\nCPed: Peds (including animals) and players.\nCObject: Objects (props), doors, and projectiles.\nCNetObject: Networked objects\nCVehicle: Vehicles.\nCPickup: Pickups."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetGameTimer",
    "hash": "0xA4EA0691",
    "code": "-- GET_GAME_TIMER\nlocal retval --[[ long ]] =\n\tGetGameTimer()",
    "parameters": [],
    "returns": [
      "The game time."
    ],
    "description": "Returns:\n\nThe game time.\n\nGets the current game timer in milliseconds."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetGlobalPassengerMassMultiplier",
    "hash": "0x78951816",
    "code": "-- GET_GLOBAL_PASSENGER_MASS_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetGlobalPassengerMassMultiplier()",
    "parameters": [],
    "returns": [
      "Returns the mass of each passenger (not counting the driver) as a percentage of vehicle mass. Default value is 0.05"
    ],
    "description": "Returns:\n\nReturns the mass of each passenger (not counting the driver) as a percentage of vehicle mass. Default value is 0.05\n\nA getter for SET_GLOBAL_PASSENGER_MASS_MULTIPLIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHashKey",
    "hash": "0x98EFF6F1",
    "code": "-- GET_HASH_KEY\nlocal retval --[[ Hash ]] =\n\tGetHashKey(\n\t\tmodel --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native converts the passed string to a hash."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliBodyHealth",
    "hash": "0xA886495D",
    "code": "-- GET_HELI_BODY_HEALTH\nlocal retval --[[ integer ]] =\n\tGetHeliBodyHealth(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns the current health of the helicopter's body."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns the current health of the helicopter's body.\n\nNote This native will always return 1000.0 unless SET_VEHICLE_BODY_HEALTH, SET_VEHICLE_ENGINE_HEALTH, or SET_VEHICLE_PETROL_TANK_HEALTH have been called with a value greater than 1000.0."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliDisableExplodeFromBodyDamage",
    "hash": "0x82AFC0A3",
    "code": "-- GET_HELI_DISABLE_EXPLODE_FROM_BODY_DAMAGE\nlocal retval --[[ boolean ]] =\n\tGetHeliDisableExplodeFromBodyDamage(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns true if the helicopter is set to be protected from exploding due to minor body damage, false otherwise."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns true if the helicopter is set to be protected from exploding due to minor body damage, false otherwise.\n\nThis is a getter for SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliEngineHealth",
    "hash": "0xA0FA0354",
    "code": "-- GET_HELI_ENGINE_HEALTH\nlocal retval --[[ integer ]] =\n\tGetHeliEngineHealth(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns the current health of the helicopter's engine."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns the current health of the helicopter's engine.\n\nNote This native will always return 1000.0 unless SET_VEHICLE_BODY_HEALTH, SET_VEHICLE_ENGINE_HEALTH, or SET_VEHICLE_PETROL_TANK_HEALTH have been called with a value greater than 1000.0."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliGasTankHealth",
    "hash": "0xD4EC7858",
    "code": "-- GET_HELI_GAS_TANK_HEALTH\nlocal retval --[[ integer ]] =\n\tGetHeliGasTankHealth(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns the current health of the helicopter's gas tank."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns the current health of the helicopter's gas tank.\n\nNote This native will always return 1000.0 unless SET_VEHICLE_BODY_HEALTH, SET_VEHICLE_ENGINE_HEALTH, or SET_VEHICLE_PETROL_TANK_HEALTH have been called with a value greater than 1000.0."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliMainRotorDamageScale",
    "hash": "0xC37D668",
    "code": "-- GET_HELI_MAIN_ROTOR_DAMAGE_SCALE\nlocal retval --[[ number ]] =\n\tGetHeliMainRotorDamageScale(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns a value representing the damage scaling factor applied to the helicopter's main rotor. The value ranges from 0.0 (no damage scaling) to1.0 (full damage scaling)."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns a value representing the damage scaling factor applied to the helicopter's main rotor. The value ranges from 0.0 (no damage scaling) to1.0 (full damage scaling)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliMainRotorHealth",
    "hash": "0xF01E2AAB",
    "code": "-- GET_HELI_MAIN_ROTOR_HEALTH\nlocal retval --[[ number ]] =\n\tGetHeliMainRotorHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "See the client-side GET_HELI_MAIN_ROTOR_HEALTH for the return value."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nSee the client-side GET_HELI_MAIN_ROTOR_HEALTH for the return value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliPitchControl",
    "hash": "0x1944AC95",
    "code": "-- GET_HELI_PITCH_CONTROL\nlocal retval --[[ number ]] =\n\tGetHeliPitchControl(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check."
    ],
    "returns": [
      "Returns a value representing the pitch control of the helicopter. The values range from -1.0 (nose down) to 1.0 (nose up), with 0.0 indicating no pitch input."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check.\n\nReturns:\n\nReturns a value representing the pitch control of the helicopter. The values range from -1.0 (nose down) to 1.0 (nose up), with 0.0 indicating no pitch input."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliRearRotorDamageScale",
    "hash": "0xC40161E2",
    "code": "-- GET_HELI_REAR_ROTOR_DAMAGE_SCALE\nlocal retval --[[ number ]] =\n\tGetHeliRearRotorDamageScale(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns a value representing the damage scaling factor applied to the helicopter's rear rotor. The value ranges from 0.0 (no damage scaling) to1.0 (full damage scaling)."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns a value representing the damage scaling factor applied to the helicopter's rear rotor. The value ranges from 0.0 (no damage scaling) to1.0 (full damage scaling)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliRearRotorHealth",
    "hash": "0x33EE6E2B",
    "code": "-- GET_HELI_REAR_ROTOR_HEALTH\nlocal retval --[[ number ]] =\n\tGetHeliRearRotorHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Returns the health of the helicopter's rear rotor. The maximum health value is 1000."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturns the health of the helicopter's rear rotor. The maximum health value is 1000.\n\nThis native is a getter for SET_HELI_TAIL_ROTOR_HEALTH"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliRollControl",
    "hash": "0x12948DE9",
    "code": "-- GET_HELI_ROLL_CONTROL\nlocal retval --[[ number ]] =\n\tGetHeliRollControl(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check."
    ],
    "returns": [
      "Returns a value representing the roll control of the helicopter. The values range from -1.0 (roll left) to 1.0 (roll right), with 0.0 indicating no roll input."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check.\n\nReturns:\n\nReturns a value representing the roll control of the helicopter. The values range from -1.0 (roll left) to 1.0 (roll right), with 0.0 indicating no roll input."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliTailRotorDamageScale",
    "hash": "0x22239130",
    "code": "-- GET_HELI_TAIL_ROTOR_DAMAGE_SCALE\nlocal retval --[[ number ]] =\n\tGetHeliTailRotorDamageScale(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns a value representing the damage scaling factor applied to the helicopter's tail rotor. The value ranges from 0.0 (no damage scaling) to1.0 (full damage scaling)."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns a value representing the damage scaling factor applied to the helicopter's tail rotor. The value ranges from 0.0 (no damage scaling) to1.0 (full damage scaling)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliTailRotorHealth",
    "hash": "0xA41BC13D",
    "code": "-- GET_HELI_TAIL_ROTOR_HEALTH\nlocal retval --[[ number ]] =\n\tGetHeliTailRotorHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Return the health of the rear rotor of the helicopter, not the tail rotor."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturn the health of the rear rotor of the helicopter, not the tail rotor.\n\nNote: This native is deprecated, please use GET_HELI_REAR_ROTOR_HEALTH instead."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliThrottleControl",
    "hash": "0x8E86238D",
    "code": "-- GET_HELI_THROTTLE_CONTROL\nlocal retval --[[ number ]] =\n\tGetHeliThrottleControl(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check."
    ],
    "returns": [
      "Returns a value representing the throttle control of the helicopter. The value ranges from 0.0 (no throttle) to 2.0 (full throttle)."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check.\n\nReturns:\n\nReturns a value representing the throttle control of the helicopter. The value ranges from 0.0 (no throttle) to 2.0 (full throttle)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHeliYawControl",
    "hash": "0x8FDC0768",
    "code": "-- GET_HELI_YAW_CONTROL\nlocal retval --[[ number ]] =\n\tGetHeliYawControl(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check."
    ],
    "returns": [
      "Returns a value the yaw control of the helicopter. The value ranges from -1.0 (yaw left) to 1.0 (yaw right), with 0.0 meaning no yaw input."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check.\n\nReturns:\n\nReturns a value the yaw control of the helicopter. The value ranges from -1.0 (yaw left) to 1.0 (yaw right), with 0.0 meaning no yaw input."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetHostId",
    "hash": "0x5F70F5A3",
    "code": "-- GET_HOST_ID\nlocal retval --[[ string ]] =\n\tGetHostId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetHudComponentAlign",
    "hash": "0xCD949E20",
    "code": "-- GET_HUD_COMPONENT_ALIGN\nlocal horizontalAlign --[[ integer ]], verticalAlign --[[ integer ]] =\n\tGetHudComponentAlign(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [
      "id: \n\nThe hud component id.",
      "horizontalAlign:",
      "verticalAlign:"
    ],
    "returns": [],
    "description": "Parameters:\n\nid: \n\nThe hud component id.\n\nhorizontalAlign:\nverticalAlign:\n\nSee SET_SCRIPT_GFX_ALIGN for details about how gfx align works."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetHudComponentName",
    "hash": "0xA91866BC",
    "code": "-- GET_HUD_COMPONENT_NAME\nlocal retval --[[ string ]] =\n\tGetHudComponentName(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [
      "id: \n\nThe hud component id."
    ],
    "returns": [
      "The hud component name."
    ],
    "description": "Parameters:\n\nid: \n\nThe hud component id.\n\nReturns:\n\nThe hud component name."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetHudComponentSize",
    "hash": "0x12217D33",
    "code": "-- GET_HUD_COMPONENT_SIZE\nlocal retval --[[ vector3 ]] =\n\tGetHudComponentSize(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [
      "id: \n\nThe hud component id."
    ],
    "returns": [
      "A Vector3 with the hud component size X and size Y values."
    ],
    "description": "Parameters:\n\nid: \n\nThe hud component id.\n\nReturns:\n\nA Vector3 with the hud component size X and size Y values."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetInstanceId",
    "hash": "0x9F1C4383",
    "code": "-- GET_INSTANCE_ID\nlocal retval --[[ integer ]] =\n\tGetInstanceId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorEntitiesExtents",
    "hash": "0x322B1192",
    "code": "-- GET_INTERIOR_ENTITIES_EXTENTS\nlocal bbMinX --[[ number ]], bbMinY --[[ number ]], bbMinZ --[[ number ]], bbMaxX --[[ number ]], bbMaxY --[[ number ]], bbMaxZ --[[ number ]] =\n\tGetInteriorEntitiesExtents(\n\t\tinteriorId --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "bbMinX:",
      "bbMinY:",
      "bbMinZ:",
      "bbMaxX:",
      "bbMaxY:",
      "bbMaxZ:"
    ],
    "returns": [
      "Interior entities extents."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nbbMinX:\nbbMinY:\nbbMinZ:\nbbMaxX:\nbbMaxY:\nbbMaxZ:\nReturns:\n\nInterior entities extents."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalCornerPosition",
    "hash": "0xF772BB2C",
    "code": "-- GET_INTERIOR_PORTAL_CORNER_POSITION\nlocal posX --[[ number ]], posY --[[ number ]], posZ --[[ number ]] =\n\tGetInteriorPortalCornerPosition(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]], \n\t\tcornerIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "cornerIndex: \n\nPortal's corner index.",
      "posX:",
      "posY:",
      "posZ:"
    ],
    "returns": [
      "Portal corner position."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\ncornerIndex: \n\nPortal's corner index.\n\nposX:\nposY:\nposZ:\nReturns:\n\nPortal corner position."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalCount",
    "hash": "0xD05BB8B1",
    "code": "-- GET_INTERIOR_PORTAL_COUNT\nlocal retval --[[ integer ]] =\n\tGetInteriorPortalCount(\n\t\tinteriorId --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior."
    ],
    "returns": [
      "The amount of portals in interior."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nReturns:\n\nThe amount of portals in interior."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalEntityArchetype",
    "hash": "0x9A0E1700",
    "code": "-- GET_INTERIOR_PORTAL_ENTITY_ARCHETYPE\nlocal retval --[[ integer ]] =\n\tGetInteriorPortalEntityArchetype(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]], \n\t\tentityIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "entityIndex: \n\nPortal entity index."
    ],
    "returns": [
      "Portal entity archetype."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nentityIndex: \n\nPortal entity index.\n\nReturns:\n\nPortal entity archetype."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalEntityCount",
    "hash": "0xC68021B",
    "code": "-- GET_INTERIOR_PORTAL_ENTITY_COUNT\nlocal retval --[[ integer ]] =\n\tGetInteriorPortalEntityCount(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index."
    ],
    "returns": [
      "Portal entity count."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nReturns:\n\nPortal entity count."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalEntityFlag",
    "hash": "0x9DA2E811",
    "code": "-- GET_INTERIOR_PORTAL_ENTITY_FLAG\nlocal retval --[[ integer ]] =\n\tGetInteriorPortalEntityFlag(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]], \n\t\tentityIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "entityIndex: \n\nPortal entity index."
    ],
    "returns": [
      "Portal entity flag."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nentityIndex: \n\nPortal entity index.\n\nReturns:\n\nPortal entity flag."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalEntityPosition",
    "hash": "0x9B7AB83C",
    "code": "-- GET_INTERIOR_PORTAL_ENTITY_POSITION\nlocal posX --[[ number ]], posY --[[ number ]], posZ --[[ number ]] =\n\tGetInteriorPortalEntityPosition(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]], \n\t\tentityIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "entityIndex: \n\nPortal entity index.",
      "posX:",
      "posY:",
      "posZ:"
    ],
    "returns": [
      "Portal entity position."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nentityIndex: \n\nPortal entity index.\n\nposX:\nposY:\nposZ:\nReturns:\n\nPortal entity position."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalEntityRotation",
    "hash": "0x9F9CEB63",
    "code": "-- GET_INTERIOR_PORTAL_ENTITY_ROTATION\nlocal rotX --[[ number ]], rotY --[[ number ]], rotZ --[[ number ]], rotW --[[ number ]] =\n\tGetInteriorPortalEntityRotation(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]], \n\t\tentityIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "entityIndex: \n\nPortal entity index.",
      "rotX:",
      "rotY:",
      "rotZ:",
      "rotW:"
    ],
    "returns": [
      "Portal entity rotation."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nentityIndex: \n\nPortal entity index.\n\nrotX:\nrotY:\nrotZ:\nrotW:\nReturns:\n\nPortal entity rotation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalFlag",
    "hash": "0xC74DA47C",
    "code": "-- GET_INTERIOR_PORTAL_FLAG\nlocal retval --[[ integer ]] =\n\tGetInteriorPortalFlag(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index."
    ],
    "returns": [
      "Portal's flag."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nReturns:\n\nPortal's flag."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalRoomFrom",
    "hash": "0xAA9C141D",
    "code": "-- GET_INTERIOR_PORTAL_ROOM_FROM\nlocal retval --[[ integer ]] =\n\tGetInteriorPortalRoomFrom(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index."
    ],
    "returns": [
      "Portal's room FROM index."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nReturns:\n\nPortal's room FROM index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPortalRoomTo",
    "hash": "0x3F47F0E8",
    "code": "-- GET_INTERIOR_PORTAL_ROOM_TO\nlocal retval --[[ integer ]] =\n\tGetInteriorPortalRoomTo(\n\t\tinteriorId --[[ integer ]], \n\t\tportalIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index."
    ],
    "returns": [
      "Portal's room TO index."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nReturns:\n\nPortal's room TO index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorPosition",
    "hash": "0x77A435B0",
    "code": "-- GET_INTERIOR_POSITION\nlocal posX --[[ number ]], posY --[[ number ]], posZ --[[ number ]] =\n\tGetInteriorPosition(\n\t\tinteriorId --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "posX:",
      "posY:",
      "posZ:"
    ],
    "returns": [
      "Interior position."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nposX:\nposY:\nposZ:\nReturns:\n\nInterior position."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorRoomCount",
    "hash": "0xA2737C2C",
    "code": "-- GET_INTERIOR_ROOM_COUNT\nlocal retval --[[ integer ]] =\n\tGetInteriorRoomCount(\n\t\tinteriorId --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior."
    ],
    "returns": [
      "The amount of rooms in interior."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nReturns:\n\nThe amount of rooms in interior."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorRoomExtents",
    "hash": "0xF9E795DD",
    "code": "-- GET_INTERIOR_ROOM_EXTENTS\nlocal bbMinX --[[ number ]], bbMinY --[[ number ]], bbMinZ --[[ number ]], bbMaxX --[[ number ]], bbMaxY --[[ number ]], bbMaxZ --[[ number ]] =\n\tGetInteriorRoomExtents(\n\t\tinteriorId --[[ integer ]], \n\t\troomIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomIndex: \n\nInterior room index.",
      "bbMinX:",
      "bbMinY:",
      "bbMinZ:",
      "bbMaxX:",
      "bbMaxY:",
      "bbMaxZ:"
    ],
    "returns": [
      "Room extents."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomIndex: \n\nInterior room index.\n\nbbMinX:\nbbMinY:\nbbMinZ:\nbbMaxX:\nbbMaxY:\nbbMaxZ:\nReturns:\n\nRoom extents."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorRoomFlag",
    "hash": "0x6B7AF743",
    "code": "-- GET_INTERIOR_ROOM_FLAG\nlocal retval --[[ integer ]] =\n\tGetInteriorRoomFlag(\n\t\tinteriorId --[[ integer ]], \n\t\troomIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomIndex: \n\nInterior room index."
    ],
    "returns": [
      "Room's flag."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomIndex: \n\nInterior room index.\n\nReturns:\n\nRoom's flag."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorRoomIndexByHash",
    "hash": "0xE0EE05F8",
    "code": "-- GET_INTERIOR_ROOM_INDEX_BY_HASH\nlocal retval --[[ integer ]] =\n\tGetInteriorRoomIndexByHash(\n\t\tinteriorId --[[ integer ]], \n\t\troomHash --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomHash: \n\nInterior room hash."
    ],
    "returns": [
      "Room index, -1 if failed."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomHash: \n\nInterior room hash.\n\nReturns:\n\nRoom index, -1 if failed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorRoomName",
    "hash": "0x11755DF2",
    "code": "-- GET_INTERIOR_ROOM_NAME\nlocal retval --[[ string ]] =\n\tGetInteriorRoomName(\n\t\tinteriorId --[[ integer ]], \n\t\troomIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomIndex: \n\nInterior room index."
    ],
    "returns": [
      "Room's name."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomIndex: \n\nInterior room index.\n\nReturns:\n\nRoom's name."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorRoomTimecycle",
    "hash": "0x82BA3F88",
    "code": "-- GET_INTERIOR_ROOM_TIMECYCLE\nlocal retval --[[ integer ]] =\n\tGetInteriorRoomTimecycle(\n\t\tinteriorId --[[ integer ]], \n\t\troomIndex --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomIndex: \n\nInterior room index."
    ],
    "returns": [
      "Room's timecycle hash."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomIndex: \n\nInterior room index.\n\nReturns:\n\nRoom's timecycle hash."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetInteriorRotation",
    "hash": "0x5A039998",
    "code": "-- GET_INTERIOR_ROTATION\nlocal rotx --[[ number ]], rotY --[[ number ]], rotZ --[[ number ]], rotW --[[ number ]] =\n\tGetInteriorRotation(\n\t\tinteriorId --[[ integer ]]\n\t)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "rotx:",
      "rotY:",
      "rotZ:",
      "rotW:"
    ],
    "returns": [
      "Interior rotation in quaternion."
    ],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nrotx:\nrotY:\nrotZ:\nrotW:\nReturns:\n\nInterior rotation in quaternion."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetInvokingResource",
    "hash": "0x4D52FE5B",
    "code": "-- GET_INVOKING_RESOURCE\nlocal retval --[[ string ]] =\n\tGetInvokingResource()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetIsHeliEngineRunning",
    "hash": "0x3EFE38D1",
    "code": "-- GET_IS_HELI_ENGINE_RUNNING\nlocal retval --[[ boolean ]] =\n\tGetIsHeliEngineRunning(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns true if the helicopter's engine is running, false if it is not."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns true if the helicopter's engine is running, false if it is not."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetIsVehicleEngineRunning",
    "hash": "0x7DC6D022",
    "code": "-- GET_IS_VEHICLE_ENGINE_RUNNING\nlocal retval --[[ boolean ]] =\n\tGetIsVehicleEngineRunning(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetIsVehiclePrimaryColourCustom",
    "hash": "0xD7EC8760",
    "code": "-- GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM\nlocal retval --[[ boolean ]] =\n\tGetIsVehiclePrimaryColourCustom(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetIsVehicleSecondaryColourCustom",
    "hash": "0x288AD228",
    "code": "-- GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM\nlocal retval --[[ boolean ]] =\n\tGetIsVehicleSecondaryColourCustom(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetLandingGearState",
    "hash": "0xA6F02670",
    "code": "-- GET_LANDING_GEAR_STATE\nlocal retval --[[ integer ]] =\n\tGetLandingGearState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "The current state of the vehicles landing gear."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nThe current state of the vehicles landing gear.\n\nSee the client-side GET_LANDING_GEAR_STATE native for a description of landing gear states."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetLastPedInVehicleSeat",
    "hash": "0xF7C6792D",
    "code": "-- GET_LAST_PED_IN_VEHICLE_SEAT\nlocal retval --[[ Entity ]] =\n\tGetLastPedInVehicleSeat(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [
      "The last ped in the specified seat of the passed vehicle. Returns 0 if the specified seat was never occupied or the last ped does not exist anymore."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE.\n\nReturns:\n\nThe last ped in the specified seat of the passed vehicle. Returns 0 if the specified seat was never occupied or the last ped does not exist anymore."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetMapZoomDataLevel",
    "hash": "0x1363A998",
    "code": "-- GET_MAP_ZOOM_DATA_LEVEL\nlocal retval --[[ boolean ]], zoomScale --[[ number ]], zoomSpeed --[[ number ]], scrollSpeed --[[ number ]], tilesX --[[ number ]], tilesY --[[ number ]] =\n\tGetMapZoomDataLevel(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [
      "index: \n\nZoom level index.",
      "zoomScale: \n\nfZoomScale value.",
      "zoomSpeed: \n\nfZoomSpeed value.",
      "scrollSpeed: \n\nfScrollSpeed value.",
      "tilesX: \n\nvTiles X.",
      "tilesY: \n\nvTiles Y."
    ],
    "returns": [
      "A boolean indicating TRUE if the data was received successfully."
    ],
    "description": "Parameters:\n\nindex: \n\nZoom level index.\n\nzoomScale: \n\nfZoomScale value.\n\nzoomSpeed: \n\nfZoomSpeed value.\n\nscrollSpeed: \n\nfScrollSpeed value.\n\ntilesX: \n\nvTiles X.\n\ntilesY: \n\nvTiles Y.\n\nReturns:\n\nA boolean indicating TRUE if the data was received successfully.\n\nReturns the zoom level data by index from mapzoomdata.meta file."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetMapdataEntityHandle",
    "hash": "0x30AA6911",
    "code": "-- GET_MAPDATA_ENTITY_HANDLE\nlocal retval --[[ boolean ]], entityHandle --[[ integer ]] =\n\tGetMapdataEntityHandle(\n\t\tmapDataHash --[[ integer ]], \n\t\tentityInternalIdx --[[ integer ]]\n\t)",
    "parameters": [
      "mapDataHash: \n\nA mapdata hash from mapDataLoaded event.",
      "entityInternalIdx: \n\nAn internal entity's index.",
      "entityHandle: \n\nThe output entity handle."
    ],
    "returns": [
      "True if successful, false if not."
    ],
    "description": "Parameters:\n\nmapDataHash: \n\nA mapdata hash from mapDataLoaded event.\n\nentityInternalIdx: \n\nAn internal entity's index.\n\nentityHandle: \n\nThe output entity handle.\n\nReturns:\n\nTrue if successful, false if not.\n\nRetrieves the map data entity handle. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetMapdataEntityMatrix",
    "hash": "0x2C3CDA93",
    "code": "-- GET_MAPDATA_ENTITY_MATRIX\nlocal retval --[[ boolean ]] =\n\tGetMapdataEntityMatrix(\n\t\tmapDataHash --[[ integer ]], \n\t\tentityInternalIdx --[[ integer ]], \n\t\tmatrixPtr --[[ long ]]\n\t)",
    "parameters": [
      "mapDataHash: \n\nA mapdata hash from mapDataLoaded event.",
      "entityInternalIdx: \n\nAn internal entity's index.",
      "matrixPtr: \n\nA mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout."
    ],
    "returns": [
      "Whether or not the matrix was retrieved."
    ],
    "description": "Parameters:\n\nmapDataHash: \n\nA mapdata hash from mapDataLoaded event.\n\nentityInternalIdx: \n\nAn internal entity's index.\n\nmatrixPtr: \n\nA mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.\n\nReturns:\n\nWhether or not the matrix was retrieved.\n\nReturns mapdata's entity matrix. This function supports SDK infrastructure and is not intended to be used directly from your code.\n\nThis should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.\n\nMatrix layout is as follows:\n\nElement [0], [1] and [2] should represent the right vector.\nElement [4], [5] and [6] should represent the forward vector.\nElement [8], [9] and [10] should represent the up vector.\nElement [12], [13] and [14] should represent X, Y and Z translation coordinates.\nAll other elements should be [0, 0, 0, 1]."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetMapdataFromHashKey",
    "hash": "0xD29D8EDD",
    "code": "-- GET_MAPDATA_FROM_HASH_KEY\nlocal retval --[[ integer ]] =\n\tGetMapdataFromHashKey(\n\t\tmapdataHandle --[[ Hash ]]\n\t)",
    "parameters": [
      "mapdataHandle: \n\nThe input map data handle."
    ],
    "returns": [
      "A transient (non-persistable) index to the requested mapdata, or -1."
    ],
    "description": "Parameters:\n\nmapdataHandle: \n\nThe input map data handle.\n\nReturns:\n\nA transient (non-persistable) index to the requested mapdata, or -1.\n\nReturns the transient map data index for a specified hash. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetNetTypeFromEntity",
    "hash": "0x23B2A641",
    "code": "-- GET_NET_TYPE_FROM_ENTITY\nlocal retval --[[ integer ]] =\n\tGetNetTypeFromEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the specific type of."
    ],
    "returns": [
      "The specific entity type returned as an integer value or -1 if the entity is invalid."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the specific type of.\n\nReturns:\n\nThe specific entity type returned as an integer value or -1 if the entity is invalid.\n\nGets the specific entity type (as an integer), which can be one of the following defined down below:\n\nFiveM:\nenum eNetObjEntityType\n{\n    Automobile = 0,\n    Bike = 1,\n    Boat = 2,\n    Door = 3,\n    Heli = 4,\n    Object = 5,\n    Ped = 6,\n    Pickup = 7,\n    PickupPlacement = 8,\n    Plane = 9,\n    Submarine = 10,\n    Player = 11,\n    Trailer = 12,\n    Train = 13\n};\n\nRedM:\nenum eNetObjEntityType\n{\n    Animal = 0,\n    Automobile = 1,\n    Bike = 2,\n    Boat = 3,\n    Door = 4,\n    Heli = 5,\n    Object = 6,\n    Ped = 7,\n    Pickup = 8,\n    PickupPlacement = 9,\n    Plane = 10,\n    Submarine = 11,\n    Player = 12,\n    Trailer = 13,\n    Train = 14,\n    DraftVeh = 15,\n    StatsTracker = 16,\n    PropSet = 17,\n    AnimScene = 18,\n    GroupScenario = 19,\n    Herd = 20,\n    Horse = 21,\n    WorldState = 22,\n    WorldProjectile = 23,\n    Incident = 24,\n    Guardzone = 25,\n    PedGroup = 26,\n    CombatDirector = 27,\n    PedSharedTargeting = 28,\n    Persistent = 29\n};"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetNetworkWalkMode",
    "hash": "0x2CAFD5E9",
    "code": "-- GET_NETWORK_WALK_MODE\nlocal retval --[[ bool ]] =\n\tGetNetworkWalkMode()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetNuiCursorPosition",
    "hash": "0xBDBA226F",
    "code": "-- GET_NUI_CURSOR_POSITION\nlocal x --[[ integer ]], y --[[ integer ]] =\n\tGetNuiCursorPosition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetNumPlayerIdentifiers",
    "hash": "0xFF7F66AB",
    "code": "-- GET_NUM_PLAYER_IDENTIFIERS\nlocal retval --[[ integer ]] =\n\tGetNumPlayerIdentifiers(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetNumPlayerIndices",
    "hash": "0x63D13184",
    "code": "-- GET_NUM_PLAYER_INDICES\nlocal retval --[[ integer ]] =\n\tGetNumPlayerIndices()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetNumPlayerTokens",
    "hash": "0x619E4A3D",
    "code": "-- GET_NUM_PLAYER_TOKENS\nlocal retval --[[ integer ]] =\n\tGetNumPlayerTokens(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetNumResourceMetadata",
    "hash": "0x776E864",
    "code": "-- GET_NUM_RESOURCE_METADATA\nlocal retval --[[ integer ]] =\n\tGetNumResourceMetadata(\n\t\tresourceName --[[ string ]], \n\t\tmetadataKey --[[ string ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe resource name.",
      "metadataKey: \n\nThe key to look up in the resource manifest."
    ],
    "returns": [],
    "description": "Parameters:\n\nresourceName: \n\nThe resource name.\n\nmetadataKey: \n\nThe key to look up in the resource manifest.\n\nGets the amount of metadata values with the specified key existing in the specified resource's manifest. See also: Resource manifest"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetNumResources",
    "hash": "0x863F27B",
    "code": "-- GET_NUM_RESOURCES\nlocal retval --[[ integer ]] =\n\tGetNumResources()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetNumberOfPedCollectionDrawableVariations",
    "hash": "0x310D0271",
    "code": "-- GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedCollectionDrawableVariations(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tcollection --[[ string ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections."
    ],
    "returns": [
      "Number of drawables available in the given collection. Returns 0 if ped or collection does not exist."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\nReturns:\n\nNumber of drawables available in the given collection. Returns 0 if ped or collection does not exist.\n\nAn analogue of GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS that returns number of drawable variations inside a single collection instead of the total number across all collections."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetNumberOfPedCollectionPropDrawableVariations",
    "hash": "0x3B6A13E1",
    "code": "-- GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedCollectionPropDrawableVariations(\n\t\tped --[[ Ped ]], \n\t\tanchorPoint --[[ integer ]], \n\t\tcollection --[[ string ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections."
    ],
    "returns": [
      "Number of props available in the given collection. Returns 0 if ped or collection does not exist."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\nReturns:\n\nNumber of props available in the given collection. Returns 0 if ped or collection does not exist.\n\nAn analogue of GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS that returns number of prop variations inside a single collection instead of the total number across all collections."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetNumberOfPedCollectionPropTextureVariations",
    "hash": "0x75CAF9CC",
    "code": "-- GET_NUMBER_OF_PED_COLLECTION_PROP_TEXTURE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedCollectionPropTextureVariations(\n\t\tped --[[ Ped ]], \n\t\tanchorPoint --[[ integer ]], \n\t\tcollection --[[ string ]], \n\t\tpropIndex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "propIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS."
    ],
    "returns": [
      "Number of texture variations available for the given prop. Returns 0 if ped or collection does not exist or index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\npropIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS.\n\nReturns:\n\nNumber of texture variations available for the given prop. Returns 0 if ped or collection does not exist or index is out of bounds.\n\nAn alternative to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS that uses local collection indexing instead of the global one."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetNumberOfPedCollectionTextureVariations",
    "hash": "0xD2C15D7",
    "code": "-- GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedCollectionTextureVariations(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tcollection --[[ string ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "drawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS."
    ],
    "returns": [
      "Number of texture variations available for the given drawable component. Returns 0 if ped or collection does not exist or index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\ndrawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.\n\nReturns:\n\nNumber of texture variations available for the given drawable component. Returns 0 if ped or collection does not exist or index is out of bounds.\n\nAn alternative to GET_NUMBER_OF_PED_TEXTURE_VARIATIONS that uses local collection indexing instead of the global one."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetParkedVehicleDensityMultiplier",
    "hash": "0xFF72DF84",
    "code": "-- GET_PARKED_VEHICLE_DENSITY_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetParkedVehicleDensityMultiplier()",
    "parameters": [],
    "returns": [
      "Returns parked vehicle density multiplier value."
    ],
    "description": "Returns:\n\nReturns parked vehicle density multiplier value.\n\nA getter for SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPasswordHash",
    "hash": "0x23473EA4",
    "code": "-- GET_PASSWORD_HASH\nlocal retval --[[ string ]] =\n\tGetPasswordHash(\n\t\tpassword --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPauseMapPointerWorldPosition",
    "hash": "0xE5AF7A82",
    "code": "-- GET_PAUSE_MAP_POINTER_WORLD_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetPauseMapPointerWorldPosition()",
    "parameters": [],
    "returns": [
      "A Vector3 with the pause map pointer world position X and Y values."
    ],
    "description": "Returns:\n\nA Vector3 with the pause map pointer world position X and Y values.\n\nReturns the world position the pointer is hovering on the pause map."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedArmour",
    "hash": "0x2CE311A7",
    "code": "-- GET_PED_ARMOUR\nlocal retval --[[ integer ]] =\n\tGetPedArmour(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedCauseOfDeath",
    "hash": "0x63458C27",
    "code": "-- GET_PED_CAUSE_OF_DEATH\nlocal retval --[[ Hash ]] =\n\tGetPedCauseOfDeath(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedCollectionLocalIndexFromDrawable",
    "hash": "0x94EB1FE4",
    "code": "-- GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE\nlocal retval --[[ integer ]] =\n\tGetPedCollectionLocalIndexFromDrawable(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "drawableId: \n\nGlobal drawable ID. Same as set in SET_PED_COMPONENT_VARIATION. Global drawable ID points to drawables as if drawables from all collections for the given component are placed into one continuous array."
    ],
    "returns": [
      "Local index inside a collection that the given global drawable ID corresponds to. Returns -1 if Ped is not found or the global index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ndrawableId: \n\nGlobal drawable ID. Same as set in SET_PED_COMPONENT_VARIATION. Global drawable ID points to drawables as if drawables from all collections for the given component are placed into one continuous array.\n\nReturns:\n\nLocal index inside a collection that the given global drawable ID corresponds to. Returns -1 if Ped is not found or the global index is out of bounds.\n\nGets local index inside a collection (which can be obtained using GET_PED_COLLECTION_NAME_FROM_DRAWABLE) for the given global drawable ID. The collection name and index are used in functions like SET_PED_COLLECTION_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedCollectionLocalIndexFromProp",
    "hash": "0xFBDB885F",
    "code": "-- GET_PED_COLLECTION_LOCAL_INDEX_FROM_PROP\nlocal retval --[[ integer ]] =\n\tGetPedCollectionLocalIndexFromProp(\n\t\tped --[[ Ped ]], \n\t\tanchorPoint --[[ integer ]], \n\t\tpropIndex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX",
      "propIndex: \n\nGlobal prop index. Same as set by drawableId in SET_PED_PROP_INDEX. Global prop index points to prop as if props from all collections for the given component are placed into one continuous array."
    ],
    "returns": [
      "Local index inside a collection that the given global prop index corresponds to. Returns -1 if Ped is not found or the global index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\npropIndex: \n\nGlobal prop index. Same as set by drawableId in SET_PED_PROP_INDEX. Global prop index points to prop as if props from all collections for the given component are placed into one continuous array.\n\nReturns:\n\nLocal index inside a collection that the given global prop index corresponds to. Returns -1 if Ped is not found or the global index is out of bounds.\n\nGets local index inside a collection (which can be obtained using GET_PED_COLLECTION_NAME_FROM_PROP) for the given global prop index. The collection name and index are used in functions like SET_PED_COLLECTION_PROP_INDEX."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedCollectionName",
    "hash": "0xFED5D83A",
    "code": "-- GET_PED_COLLECTION_NAME\nlocal retval --[[ string ]] =\n\tGetPedCollectionName(\n\t\tped --[[ Ped ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "index: \n\nThe target collection index"
    ],
    "returns": [
      "Name of the collection with given index. Base game collection (always stored with index 0) is an empty string. Returns null if Ped is not found or index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nindex: \n\nThe target collection index\n\nReturns:\n\nName of the collection with given index. Base game collection (always stored with index 0) is an empty string. Returns null if Ped is not found or index is out of bounds.\n\nReturns name of collection under given index for the given Ped.\n\nCollections are groups of drawable components or props available for the given Ped. Usually collection corresponds to a certain DLC or the base game. See SET_PED_COLLECTION_COMPONENT_VARIATION, SET_PED_COLLECTION_PROP_INDEX, GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS etc natives for more details on how to work with collections.\n\nGET_PED_COLLECTION_NAME can be used together with GET_PED_COLLECTIONS_COUNT to list all collections attached to Ped."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedCollectionNameFromDrawable",
    "hash": "0xD6BBA48B",
    "code": "-- GET_PED_COLLECTION_NAME_FROM_DRAWABLE\nlocal retval --[[ string ]] =\n\tGetPedCollectionNameFromDrawable(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "drawableId: \n\nGlobal drawable ID. Same as set in SET_PED_COMPONENT_VARIATION. Global drawable ID points to drawables as if drawables from all collections for the given component are placed into one continuous array."
    ],
    "returns": [
      "Name of the collection that the given global drawable ID corresponds to. Base game collection is an empty string. Returns null if Ped is not found or the global index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ndrawableId: \n\nGlobal drawable ID. Same as set in SET_PED_COMPONENT_VARIATION. Global drawable ID points to drawables as if drawables from all collections for the given component are placed into one continuous array.\n\nReturns:\n\nName of the collection that the given global drawable ID corresponds to. Base game collection is an empty string. Returns null if Ped is not found or the global index is out of bounds.\n\nGets collection name for the given global drawable ID. Together with GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE is used to get collection and local index (inside the given collection) of the drawable. The collection name and index are used in functions like SET_PED_COLLECTION_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedCollectionNameFromProp",
    "hash": "0x8ED0C17",
    "code": "-- GET_PED_COLLECTION_NAME_FROM_PROP\nlocal retval --[[ string ]] =\n\tGetPedCollectionNameFromProp(\n\t\tped --[[ Ped ]], \n\t\tanchorPoint --[[ integer ]], \n\t\tpropIndex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX",
      "propIndex: \n\nGlobal prop index. Same as set by drawableId in SET_PED_PROP_INDEX. Global prop index points to prop as if props from all collections for the given component are placed into one continuous array."
    ],
    "returns": [
      "Name of the collection that the given global drawable ID corresponds to. Base game collection is an empty string. Returns null if Ped is not found or the global index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\npropIndex: \n\nGlobal prop index. Same as set by drawableId in SET_PED_PROP_INDEX. Global prop index points to prop as if props from all collections for the given component are placed into one continuous array.\n\nReturns:\n\nName of the collection that the given global drawable ID corresponds to. Base game collection is an empty string. Returns null if Ped is not found or the global index is out of bounds.\n\nGets collection name for the given global prop index. Together with GET_PED_COLLECTION_LOCAL_INDEX_FROM_PROP is used to get collection and local index (inside the given collection) of the prop. The collection name and index are used in functions like SET_PED_COLLECTION_PROP_INDEX."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedCollectionsCount",
    "hash": "0x45946359",
    "code": "-- GET_PED_COLLECTIONS_COUNT\nlocal retval --[[ integer ]] =\n\tGetPedCollectionsCount(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "Number of Ped variation collections. 0 if Ped is not found."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nNumber of Ped variation collections. 0 if Ped is not found.\n\nReturns number of variation collections available for the given Ped.\n\nCollections are groups of drawable components or props available for the given Ped. Usually collection corresponds to a certain DLC or the base game. See SET_PED_COLLECTION_COMPONENT_VARIATION, SET_PED_COLLECTION_PROP_INDEX, GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS etc natives for more details on how to work with collections.\n\nGET_PED_COLLECTIONS_COUNT can be used together with GET_PED_COLLECTION_NAME to list all collections attached to Ped."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedDecorations",
    "hash": "0x7CCE1163",
    "code": "-- GET_PED_DECORATIONS\nlocal retval --[[ object ]] =\n\tGetPedDecorations(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped you want to retrieve data for."
    ],
    "returns": [
      "An object containing a list of applied decorations."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped you want to retrieve data for.\n\nReturns:\n\nAn object containing a list of applied decorations.\n\nReturns a list of decorations applied to a ped.\n\nThe data returned adheres to the following layout:\n\n[ [ collectionHash1, overlayHash1 ], ..., [c ollectionHashN, overlayHashN ] ]\n\nThis command will return undefined data if invoked on a remote player ped."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedDensityMultiplier",
    "hash": "0xF5A904F9",
    "code": "-- GET_PED_DENSITY_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetPedDensityMultiplier()",
    "parameters": [],
    "returns": [
      "Returns ped density multiplier value."
    ],
    "description": "Returns:\n\nReturns ped density multiplier value.\n\nA getter for SET_PED_DENSITY_MULTIPLIER_THIS_FRAME."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedDesiredHeading",
    "hash": "0xC182F76E",
    "code": "-- GET_PED_DESIRED_HEADING\nlocal retval --[[ number ]] =\n\tGetPedDesiredHeading(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "Returns ped's desired heading."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nReturns ped's desired heading."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedDrawableGlobalIndexFromCollection",
    "hash": "0x280F1FC3",
    "code": "-- GET_PED_DRAWABLE_GLOBAL_INDEX_FROM_COLLECTION\nlocal retval --[[ integer ]] =\n\tGetPedDrawableGlobalIndexFromCollection(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tcollection --[[ string ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "drawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS."
    ],
    "returns": [
      "Global drawable ID that corresponds to the given collection and local drawable index. Returns -1 if Ped or collection does not exist or local index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\ndrawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.\n\nReturns:\n\nGlobal drawable ID that corresponds to the given collection and local drawable index. Returns -1 if Ped or collection does not exist or local index is out of bounds.\n\nReturns global drawable index based on the local one. Is it a reverse to GET_PED_COLLECTION_NAME_FROM_DRAWABLE and GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE natives.\n\nDrawables are stored inside collections. Each collection usually corresponds to a certain DCL or the base game.\n\nIf all drawables from all collections are placed into one continuous array - the global index will correspond to the index of drawable in such array. Local index is index of drawable in this array relative to the start of the given collection."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedDrawableVariationCollectionLocalIndex",
    "hash": "0x9970386F",
    "code": "-- GET_PED_DRAWABLE_VARIATION_COLLECTION_LOCAL_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedDrawableVariationCollectionLocalIndex(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION"
    ],
    "returns": [
      "Local drawable index of the drawable that is currently used in the given ped and component."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\nReturns:\n\nLocal drawable index of the drawable that is currently used in the given ped and component.\n\nAn analogue to GET_PED_DRAWABLE_VARIATION that returns collection local drawable index (inside GET_PED_DRAWABLE_VARIATION_COLLECTION_NAME collection) instead of the global drawable index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedDrawableVariationCollectionName",
    "hash": "0xBCE0AB63",
    "code": "-- GET_PED_DRAWABLE_VARIATION_COLLECTION_NAME\nlocal retval --[[ string ]] =\n\tGetPedDrawableVariationCollectionName(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION"
    ],
    "returns": [
      "Collection name to which the current drawable used in the given ped and component belongs to. Returns null if Ped is not found or index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\nReturns:\n\nCollection name to which the current drawable used in the given ped and component belongs to. Returns null if Ped is not found or index is out of bounds.\n\nAn analogue to GET_PED_DRAWABLE_VARIATION that returns collection name instead of the global drawable index.\n\nShould be used together with GET_PED_DRAWABLE_VARIATION_COLLECTION_LOCAL_INDEX."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedEyeColor",
    "hash": "0xA47B860F",
    "code": "-- GET_PED_EYE_COLOR\nlocal retval --[[ integer ]] =\n\tGetPedEyeColor(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "Returns ped's eye colour, or -1 if fails to get."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nReturns ped's eye colour, or -1 if fails to get.\n\nA getter for _SET_PED_EYE_COLOR. Returns -1 if fails to get."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedFaceFeature",
    "hash": "0xBA352ADD",
    "code": "-- GET_PED_FACE_FEATURE\nlocal retval --[[ number ]] =\n\tGetPedFaceFeature(\n\t\tped --[[ Ped ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "index: \n\nFace feature index"
    ],
    "returns": [
      "Returns ped's face feature value, or 0.0 if fails to get."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nindex: \n\nFace feature index\n\nReturns:\n\nReturns ped's face feature value, or 0.0 if fails to get.\n\nA getter for _SET_PED_FACE_FEATURE. Returns 0.0 if fails to get."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedHairColor",
    "hash": "0xA3EA2893",
    "code": "-- GET_PED_HAIR_COLOR\nlocal retval --[[ integer ]] =\n\tGetPedHairColor(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "Returns ped's primary hair colour."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nReturns ped's primary hair colour.\n\nA getter for _SET_PED_HAIR_COLOR. Returns -1 if fails to get."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedHairHighlightColor",
    "hash": "0x4B087305",
    "code": "-- GET_PED_HAIR_HIGHLIGHT_COLOR\nlocal retval --[[ integer ]] =\n\tGetPedHairHighlightColor(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "Returns ped's secondary hair colour."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nReturns ped's secondary hair colour.\n\nA getter for _SET_PED_HAIR_COLOR. Returns -1 if fails to get."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedHeadOverlayData",
    "hash": "0xC46EE605",
    "code": "-- GET_PED_HEAD_OVERLAY_DATA\nlocal retval --[[ boolean ]], overlayValue --[[ integer ]], colourType --[[ integer ]], firstColour --[[ integer ]], secondColour --[[ integer ]], overlayOpacity --[[ number ]] =\n\tGetPedHeadOverlayData(\n\t\tped --[[ Ped ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "index: \n\nOverlay index",
      "overlayValue: \n\nOverlay value pointer",
      "colourType: \n\nColour type pointer",
      "firstColour: \n\nFirst colour pointer",
      "secondColour: \n\nSecond colour pointer",
      "overlayOpacity: \n\nOpacity pointer"
    ],
    "returns": [
      "Returns ped's head overlay data."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nindex: \n\nOverlay index\n\noverlayValue: \n\nOverlay value pointer\n\ncolourType: \n\nColour type pointer\n\nfirstColour: \n\nFirst colour pointer\n\nsecondColour: \n\nSecond colour pointer\n\noverlayOpacity: \n\nOpacity pointer\n\nReturns:\n\nReturns ped's head overlay data.\n\nA getter for SET_PED_HEAD_OVERLAY and _SET_PED_HEAD_OVERLAY_COLOR natives."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedInVehicleSeat",
    "hash": "0x388FDE9A",
    "code": "-- GET_PED_IN_VEHICLE_SEAT\nlocal retval --[[ Entity ]] =\n\tGetPedInVehicleSeat(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [
      "The ped in the specified seat of the passed vehicle. Returns 0 if the specified seat is not occupied."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE.\n\nReturns:\n\nThe ped in the specified seat of the passed vehicle. Returns 0 if the specified seat is not occupied."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedMaxHealth",
    "hash": "0xA45B6C8D",
    "code": "-- GET_PED_MAX_HEALTH\nlocal retval --[[ integer ]] =\n\tGetPedMaxHealth(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedModelHealthConfig",
    "hash": "0xF71542F7",
    "code": "-- GET_PED_MODEL_HEALTH_CONFIG\nlocal retval --[[ Hash ]] =\n\tGetPedModelHealthConfig(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "modelHash: \n\nPed's model."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodelHash: \n\nPed's model.\n\nGets a ped model's health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedModelPersonality",
    "hash": "0xFE08CAD6",
    "code": "-- GET_PED_MODEL_PERSONALITY\nlocal retval --[[ Hash ]] =\n\tGetPedModelPersonality(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "modelHash: \n\nPed's model."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodelHash: \n\nPed's model.\n\nGets a ped model's personality type."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedMovementClipset",
    "hash": "0x69E81E3D",
    "code": "-- GET_PED_MOVEMENT_CLIPSET\nlocal retval --[[ integer ]] =\n\tGetPedMovementClipset(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "The current movement clipset hash."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nThe current movement clipset hash."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedPropCollectionLocalIndex",
    "hash": "0xCD420AD1",
    "code": "-- GET_PED_PROP_COLLECTION_LOCAL_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedPropCollectionLocalIndex(\n\t\tped --[[ Ped ]], \n\t\tanchorPoint --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX"
    ],
    "returns": [
      "Local drawable index of the drawable that is currently used in the given ped and component, or -1 if the ped does not have a prop at the specified anchor point"
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\nReturns:\n\nLocal drawable index of the drawable that is currently used in the given ped and component, or -1 if the ped does not have a prop at the specified anchor point\n\nAn analogue to GET_PED_PROP_INDEX that returns collection local prop index (inside GET_PED_PROP_COLLECTION_NAME collection) instead of the global prop index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedPropCollectionName",
    "hash": "0x6B5653E4",
    "code": "-- GET_PED_PROP_COLLECTION_NAME\nlocal retval --[[ string ]] =\n\tGetPedPropCollectionName(\n\t\tped --[[ Ped ]], \n\t\tanchorPoint --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX"
    ],
    "returns": [
      "Collection name to which the current prop used in the given ped and anchor point belongs to. Returns null if Ped is not found, does not have a prop at the specified anchor point, or if the index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\nReturns:\n\nCollection name to which the current prop used in the given ped and anchor point belongs to. Returns null if Ped is not found, does not have a prop at the specified anchor point, or if the index is out of bounds.\n\nAn analogue to GET_PED_PROP_INDEX that returns collection name instead of the global drawable index.\n\nShould be used together with GET_PED_PROP_COLLECTION_LOCAL_INDEX."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedPropGlobalIndexFromCollection",
    "hash": "0x2CB45CDC",
    "code": "-- GET_PED_PROP_GLOBAL_INDEX_FROM_COLLECTION\nlocal retval --[[ integer ]] =\n\tGetPedPropGlobalIndexFromCollection(\n\t\tped --[[ Ped ]], \n\t\tanchorPoint --[[ integer ]], \n\t\tcollection --[[ string ]], \n\t\tpropIndex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "propIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS."
    ],
    "returns": [
      "Global prop index that corresponds to the given collection and local prop index. Returns -1 if Ped or collection does not exist or local index is out of bounds."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\npropIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS.\n\nReturns:\n\nGlobal prop index that corresponds to the given collection and local prop index. Returns -1 if Ped or collection does not exist or local index is out of bounds.\n\nReturns global prop index based on the local one. Is it a reverse to GET_PED_COLLECTION_NAME_FROM_PROP and GET_PED_COLLECTION_LOCAL_INDEX_FROM_PROP natives.\n\nProps are stored inside collections. Each collection usually corresponds to a certain DCL or the base game.\n\nIf all props from all collections are placed into one continuous array - the global index will correspond to the index of the prop in such array. Local index is index of the prop in this array relative to the start of the given collection."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedRelationshipGroupHash",
    "hash": "0x354F283C",
    "code": "-- GET_PED_RELATIONSHIP_GROUP_HASH\nlocal retval --[[ Hash ]] =\n\tGetPedRelationshipGroupHash(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "The relationship group hash."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nThe relationship group hash.\n\nGets the current relationship group hash of a ped."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedScriptTaskCommand",
    "hash": "0x84FE084",
    "code": "-- GET_PED_SCRIPT_TASK_COMMAND\nlocal retval --[[ Hash ]] =\n\tGetPedScriptTaskCommand(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "The script task command currently assigned to the ped. A value of 0x811E343C denotes no script task is assigned."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nThe script task command currently assigned to the ped. A value of 0x811E343C denotes no script task is assigned.\n\nGets the script task command currently assigned to the ped."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedScriptTaskStage",
    "hash": "0x44B0E5E2",
    "code": "-- GET_PED_SCRIPT_TASK_STAGE\nlocal retval --[[ integer ]] =\n\tGetPedScriptTaskStage(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "The stage of the ped's scripted task. A value of 3 denotes no script task is assigned."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nThe stage of the ped's scripted task. A value of 3 denotes no script task is assigned.\n\nGets the stage of the peds scripted task."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedSourceOfDamage",
    "hash": "0x535DB43F",
    "code": "-- GET_PED_SOURCE_OF_DAMAGE\nlocal retval --[[ Entity ]] =\n\tGetPedSourceOfDamage(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "The entity id. Returns 0 if the ped has not been damaged recently."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nThe entity id. Returns 0 if the ped has not been damaged recently.\n\nGet the last entity that damaged the ped. This native is used server side when using OneSync."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedSourceOfDeath",
    "hash": "0x84ADF9EB",
    "code": "-- GET_PED_SOURCE_OF_DEATH\nlocal retval --[[ Entity ]] =\n\tGetPedSourceOfDeath(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "The entity id. Returns 0 if the ped has no killer."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nThe entity id. Returns 0 if the ped has no killer.\n\nGet the entity that killed the ped. This native is used server side when using OneSync."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedSpecificTaskType",
    "hash": "0x7F4563D3",
    "code": "-- GET_PED_SPECIFIC_TASK_TYPE\nlocal retval --[[ integer ]] =\n\tGetPedSpecificTaskType(\n\t\tped --[[ Ped ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped.",
      "index: \n\nA zero-based index with a maximum value of 7."
    ],
    "returns": [
      "The type of the specific task. 1604: A value of 530 denotes no script task is assigned or an invalid input was given. 2060+: A value of 531 denotes no script task is assigned or an invalid input was given."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nindex: \n\nA zero-based index with a maximum value of 7.\n\nReturns:\n\nThe type of the specific task. 1604: A value of 530 denotes no script task is assigned or an invalid input was given. 2060+: A value of 531 denotes no script task is assigned or an invalid input was given.\n\nGets the type of a ped's specific task given an index of the CPedTaskSpecificDataNode nodes. A ped will typically have a task at index 0, if a ped has multiple tasks at once they will be in the order 0, 1, 2, etc."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPedStealthMovement",
    "hash": "0x40321B83",
    "code": "-- GET_PED_STEALTH_MOVEMENT\nlocal retval --[[ bool ]] =\n\tGetPedStealthMovement(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "Whether or not the ped is stealthy."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nWhether or not the ped is stealthy."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPedSweat",
    "hash": "0x44B91E94",
    "code": "-- GET_PED_SWEAT\nlocal retval --[[ number ]] =\n\tGetPedSweat(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "Returns ped's sweat."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nReturns ped's sweat.\n\nA getter for SET_PED_SWEAT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerCameraRotation",
    "hash": "0x433C765D",
    "code": "-- GET_PLAYER_CAMERA_ROTATION\nlocal retval --[[ vector3 ]] =\n\tGetPlayerCameraRotation(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle."
    ],
    "returns": [
      "The player's camera rotation. Values are in radians."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle.\n\nReturns:\n\nThe player's camera rotation. Values are in radians.\n\nGets the current camera rotation for a specified player. This native is used server side when using OneSync."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerEndpoint",
    "hash": "0xFEE404F9",
    "code": "-- GET_PLAYER_ENDPOINT\nlocal retval --[[ string ]] =\n\tGetPlayerEndpoint(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerFakeWantedLevel",
    "hash": "0x98D244",
    "code": "-- GET_PLAYER_FAKE_WANTED_LEVEL\nlocal retval --[[ integer ]] =\n\tGetPlayerFakeWantedLevel(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe target player"
    ],
    "returns": [
      "The fake wanted level"
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe target player\n\nReturns:\n\nThe fake wanted level\n\nGets the current fake wanted level for a specified player. This native is used server side when using OneSync."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerFocusPos",
    "hash": "0x586F80FF",
    "code": "-- GET_PLAYER_FOCUS_POS\nlocal retval --[[ vector3 ]] =\n\tGetPlayerFocusPos(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player to get the focus position of"
    ],
    "returns": [
      "Returns a Vector3 containing the focus position of the player."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to get the focus position of\n\nReturns:\n\nReturns a Vector3 containing the focus position of the player.\n\nGets the focus position (i.e. the position of the active camera in the game world) of a player."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerFromIndex",
    "hash": "0xC8A9CE08",
    "code": "-- GET_PLAYER_FROM_INDEX\nlocal retval --[[ string ]] =\n\tGetPlayerFromIndex(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerFromServerId",
    "hash": "0x344EA166",
    "code": "-- GET_PLAYER_FROM_SERVER_ID\nlocal retval --[[ Player ]] =\n\tGetPlayerFromServerId(\n\t\tserverId --[[ integer ]]\n\t)",
    "parameters": [
      "serverId: \n\nThe player's server ID."
    ],
    "returns": [
      "A valid Player ID if one is found, -1 if not."
    ],
    "description": "Parameters:\n\nserverId: \n\nThe player's server ID.\n\nReturns:\n\nA valid Player ID if one is found, -1 if not.\n\nGets a local client's Player ID from its server ID counterpart, assuming the passed serverId exists on the client.\n\nIf no matching client is found, or an invalid value is passed over as the serverId native's parameter, the native result will be -1.\n\nIt's worth noting that this native method can only retrieve information about clients that are culled to the connected client."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetPlayerFromStateBagName",
    "hash": "0xA56135E0",
    "code": "-- GET_PLAYER_FROM_STATE_BAG_NAME\nlocal retval --[[ integer ]] =\n\tGetPlayerFromStateBagName(\n\t\tbagName --[[ string ]]\n\t)",
    "parameters": [
      "bagName: \n\nAn internal state bag ID from the argument to a state bag change handler."
    ],
    "returns": [
      "The player handle or 0 if the state bag name did not refer to a player, or the player does not exist."
    ],
    "description": "Parameters:\n\nbagName: \n\nAn internal state bag ID from the argument to a state bag change handler.\n\nReturns:\n\nThe player handle or 0 if the state bag name did not refer to a player, or the player does not exist.\n\nOn the server this will return the players source, on the client it will return the player handle."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerGuid",
    "hash": "0xE52D9680",
    "code": "-- GET_PLAYER_GUID\nlocal retval --[[ string ]] =\n\tGetPlayerGuid(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerIdentifier",
    "hash": "0x7302DBCF",
    "code": "-- GET_PLAYER_IDENTIFIER\nlocal retval --[[ string ]] =\n\tGetPlayerIdentifier(\n\t\tplayerSrc --[[ string ]], \n\t\tidentiferIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the identifier at the specific index, if out of bounds returns null"
    ],
    "description": "Returns:\n\nReturns the identifier at the specific index, if out of bounds returns null\n\nTo get the number of identifiers, use GET_NUM_PLAYER_IDENTIFIERS\n\nTo get a specific type of identifier, use GET_PLAYER_IDENTIFIER_BY_TYPE"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerIdentifierByType",
    "hash": "0xA61C8FC6",
    "code": "-- GET_PLAYER_IDENTIFIER_BY_TYPE\nlocal retval --[[ string ]] =\n\tGetPlayerIdentifierByType(\n\t\tplayerSrc --[[ string ]], \n\t\tidentifierType --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player to get the identifier for",
      "identifierType: \n\nThe string to match in an identifier, this can be \"license\" for example."
    ],
    "returns": [
      "The identifier that matches the string provided"
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to get the identifier for\n\nidentifierType: \n\nThe string to match in an identifier, this can be \"license\" for example.\n\nReturns:\n\nThe identifier that matches the string provided\n\nGet an identifier from a player by the type of the identifier. Known Identifiers"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerInvincible",
    "hash": "0x680C90EE",
    "code": "-- GET_PLAYER_INVINCIBLE\nlocal retval --[[ boolean ]] =\n\tGetPlayerInvincible(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [
      "A boolean to tell if the player is invincible."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nReturns:\n\nA boolean to tell if the player is invincible."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerInvincible_2",
    "hash": "0xF2E3912B",
    "code": "-- GET_PLAYER_INVINCIBLE_2\nlocal retval --[[ boolean ]] =\n\tGetPlayerInvincible_2(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [
      "player: \n\nThe player id"
    ],
    "returns": [
      "A boolean to tell if the player is invincible."
    ],
    "description": "Parameters:\n\nplayer: \n\nThe player id\n\nReturns:\n\nA boolean to tell if the player is invincible.\n\nUnlike GET_PLAYER_INVINCIBLE this native gets both SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED and SET_PLAYER_INVINCIBLE invincibility state."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerLastMsg",
    "hash": "0x427E8E6A",
    "code": "-- GET_PLAYER_LAST_MSG\nlocal retval --[[ integer ]] =\n\tGetPlayerLastMsg(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerMaxArmour",
    "hash": "0x2A50657",
    "code": "-- GET_PLAYER_MAX_ARMOUR\nlocal retval --[[ integer ]] =\n\tGetPlayerMaxArmour(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerMaxHealth",
    "hash": "0x8154E470",
    "code": "-- GET_PLAYER_MAX_HEALTH\nlocal retval --[[ integer ]] =\n\tGetPlayerMaxHealth(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerMaxStamina",
    "hash": "0xD014AB79",
    "code": "-- GET_PLAYER_MAX_STAMINA\nlocal retval --[[ number ]] =\n\tGetPlayerMaxStamina(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player max stamina."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player max stamina."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetPlayerMeleeWeaponDamageModifier",
    "hash": "0x8689A825",
    "code": "-- GET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetPlayerMeleeWeaponDamageModifier(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "Returns player melee weapon damage modifier value."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nReturns player melee weapon damage modifier value.\n\nA getter for SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerMeleeWeaponDefenseModifier",
    "hash": "0x27E94EF8",
    "code": "-- GET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetPlayerMeleeWeaponDefenseModifier(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player melee weapon defense modifier."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player melee weapon defense modifier.\n\nA getter for SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerName",
    "hash": "0x406B4B20",
    "code": "-- GET_PLAYER_NAME\nlocal retval --[[ string ]] =\n\tGetPlayerName(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerPed",
    "hash": "0x6E31E993",
    "code": "-- GET_PLAYER_PED\nlocal retval --[[ Entity ]] =\n\tGetPlayerPed(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player source, passed as a string."
    ],
    "returns": [
      "Returns a valid Ped Entity ID if the passed playerSrc is valid, 0 if not."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player source, passed as a string.\n\nReturns:\n\nReturns a valid Ped Entity ID if the passed playerSrc is valid, 0 if not.\n\nUsed to get the player's Ped Entity ID when a valid playerSrc is passed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerPeerStatistics",
    "hash": "0x9A928294",
    "code": "-- GET_PLAYER_PEER_STATISTICS\nlocal retval --[[ integer ]] =\n\tGetPlayerPeerStatistics(\n\t\tplayerSrc --[[ string ]], \n\t\tpeerStatistic --[[ integer ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player to get the stats of",
      "peerStatistic: \n\nThe statistic to get, this will error if its out of range"
    ],
    "returns": [
      "See ENetStatisticType for what this will return."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to get the stats of\n\npeerStatistic: \n\nThe statistic to get, this will error if its out of range\n\nReturns:\n\nSee ENetStatisticType for what this will return.\n\nconst int ENET_PACKET_LOSS_SCALE = 65536;\n\nenum PeerStatistics\n{\n\t// PacketLoss will only update once every 10 seconds, use PacketLossEpoch if you want the time\n\t// since the last time the packet loss was updated.\n\n\t// the amount of packet loss the player has, needs to be scaled with PACKET_LOSS_SCALE\n\tPacketLoss = 0,\n\t// The variance in the packet loss\n\tPacketLossVariance = 1,\n\t// The time since the last packet update in ms, relative to the peers connection time\n\tPacketLossEpoch = 2,\n\t// The mean amount of time it takes for a packet to get to the client (ping)\n\tRoundTripTime = 3,\n\t// The variance in the round trip time\n\tRoundTripTimeVariance = 4,\n\t// Despite their name, these are only updated once every 5 seconds, you can get the last time this was updated with PacketThrottleEpoch\n\t// The last recorded round trip time of a packet\n\tLastRoundTripTime = 5,\n\t// The last round trip time variance\n\tLastRoundTripTimeVariance = 6,\n\t// The time since the last packet throttle update, relative to the peers connection time\n\tPacketThrottleEpoch = 7,\n};\n\n\nThese statistics only update once every 10 seconds."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerPing",
    "hash": "0xFF1290D4",
    "code": "-- GET_PLAYER_PING\nlocal retval --[[ integer ]] =\n\tGetPlayerPing(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the mean amount of time a packet takes to get to the client"
    ],
    "description": "Returns:\n\nReturns the mean amount of time a packet takes to get to the client\n\nSee GET_PLAYER_PEER_STATISTICS if you want more detailed information, like packet loss, and packet/rtt variance"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerRoutingBucket",
    "hash": "0x52441C34",
    "code": "-- GET_PLAYER_ROUTING_BUCKET\nlocal retval --[[ integer ]] =\n\tGetPlayerRoutingBucket(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player to get the routing bucket for."
    ],
    "returns": [
      "The routing bucket ID."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to get the routing bucket for.\n\nReturns:\n\nThe routing bucket ID.\n\nGets the routing bucket for the specified player.\n\nRouting buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerServerId",
    "hash": "0x4D97BCC7",
    "code": "-- GET_PLAYER_SERVER_ID\nlocal retval --[[ integer ]] =\n\tGetPlayerServerId(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerStamina",
    "hash": "0xE415EC5C",
    "code": "-- GET_PLAYER_STAMINA\nlocal retval --[[ number ]] =\n\tGetPlayerStamina(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player stamina."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player stamina."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerTeam",
    "hash": "0x9873E404",
    "code": "-- GET_PLAYER_TEAM\nlocal retval --[[ integer ]] =\n\tGetPlayerTeam(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerTimeInPursuit",
    "hash": "0x7ADE63E1",
    "code": "-- GET_PLAYER_TIME_IN_PURSUIT\nlocal retval --[[ integer ]] =\n\tGetPlayerTimeInPursuit(\n\t\tplayerSrc --[[ string ]], \n\t\tlastPursuit --[[ boolean ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe target player",
      "lastPursuit: \n\nFalse = CurrentPursuit, True = LastPursuit"
    ],
    "returns": [
      "Returns -1, if the player is not wanted or wasn't in pursuit before, depending on the lastPursuit parameter Returns 0, if lastPursuit == False and the player has a wanted level, but the pursuit has not started yet Otherwise, will return the milliseconds of the pursuit."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe target player\n\nlastPursuit: \n\nFalse = CurrentPursuit, True = LastPursuit\n\nReturns:\n\nReturns -1, if the player is not wanted or wasn't in pursuit before, depending on the lastPursuit parameter Returns 0, if lastPursuit == False and the player has a wanted level, but the pursuit has not started yet Otherwise, will return the milliseconds of the pursuit.\n\nGets the amount of time player has spent evading the cops.\nCounter starts and increments only when cops are chasing the player.\nIf the player is evading, the timer will pause."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerTimeOnline",
    "hash": "0x67D2E605",
    "code": "-- GET_PLAYER_TIME_ONLINE\nlocal retval --[[ integer ]] =\n\tGetPlayerTimeOnline(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nA player."
    ],
    "returns": [
      "The current time online in seconds."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nA player.\n\nReturns:\n\nThe current time online in seconds.\n\nGets the current time online for a specified player."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerToken",
    "hash": "0x54C06897",
    "code": "-- GET_PLAYER_TOKEN\nlocal retval --[[ string ]] =\n\tGetPlayerToken(\n\t\tplayerSrc --[[ string ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nA player.",
      "index: \n\nIndex between 0 and GET_NUM_PLAYER_TOKENS."
    ],
    "returns": [
      "A token value."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nA player.\n\nindex: \n\nIndex between 0 and GET_NUM_PLAYER_TOKENS.\n\nReturns:\n\nA token value.\n\nGets a player's token. Tokens can be used to enhance banning logic, however are specific to a server."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerVehicleDamageModifier",
    "hash": "0x78F27B1F",
    "code": "-- GET_PLAYER_VEHICLE_DAMAGE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetPlayerVehicleDamageModifier(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player vehicle damage modifier."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player vehicle damage modifier.\n\nA getter for SET_PLAYER_VEHICLE_DAMAGE_MODIFIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetPlayerVehicleDefenseModifier",
    "hash": "0x8326E7CD",
    "code": "-- GET_PLAYER_VEHICLE_DEFENSE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetPlayerVehicleDefenseModifier(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player vehicle defense modifier."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player vehicle defense modifier.\n\nA getter for SET_PLAYER_VEHICLE_DEFENSE_MODIFIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerWantedCentrePosition",
    "hash": "0x821F2D2C",
    "code": "-- GET_PLAYER_WANTED_CENTRE_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetPlayerWantedCentrePosition(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe target player"
    ],
    "returns": [
      "The player's position known by police. Vector zero if the player has no wanted level."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe target player\n\nReturns:\n\nThe player's position known by police. Vector zero if the player has no wanted level.\n\nGets the current known coordinates for the specified player from cops perspective. This native is used server side when using OneSync."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetPlayerWantedLevel",
    "hash": "0xBDCDD163",
    "code": "-- GET_PLAYER_WANTED_LEVEL\nlocal retval --[[ integer ]] =\n\tGetPlayerWantedLevel(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe target player"
    ],
    "returns": [
      "The wanted level"
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe target player\n\nReturns:\n\nThe wanted level\n\nReturns given players wanted level server-side."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetPlayerWeaponDamageModifier",
    "hash": "0x2A3D7CDA",
    "code": "-- GET_PLAYER_WEAPON_DAMAGE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetPlayerWeaponDamageModifier(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player weapon damage modifier."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player weapon damage modifier.\n\nA getter for SET_PLAYER_WEAPON_DAMAGE_MODIFIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetPlayerWeaponDefenseModifier",
    "hash": "0xF1543251",
    "code": "-- GET_PLAYER_WEAPON_DEFENSE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetPlayerWeaponDefenseModifier(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player weapon defense modifier."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player weapon defense modifier.\n\nA getter for SET_PLAYER_WEAPON_DEFENSE_MODIFIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetPlayerWeaponDefenseModifier_2",
    "hash": "0x986B65FF",
    "code": "-- GET_PLAYER_WEAPON_DEFENSE_MODIFIER_2\nlocal retval --[[ number ]] =\n\tGetPlayerWeaponDefenseModifier_2(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index."
    ],
    "returns": [
      "The value of player weapon defense modifier 2."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index.\n\nReturns:\n\nThe value of player weapon defense modifier 2.\n\nA getter for _SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRandomVehicleDensityMultiplier",
    "hash": "0x7B0D00C5",
    "code": "-- GET_RANDOM_VEHICLE_DENSITY_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetRandomVehicleDensityMultiplier()",
    "parameters": [],
    "returns": [
      "Returns random vehicle density multiplier value."
    ],
    "description": "Returns:\n\nReturns random vehicle density multiplier value.\n\nA getter for SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME. Same as vehicle density multiplier."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetRegisteredCommands",
    "hash": "0xD4BEF069",
    "code": "-- GET_REGISTERED_COMMANDS\nlocal retval --[[ object ]] =\n\tGetRegisteredCommands()",
    "parameters": [],
    "returns": [
      "An object containing registered commands."
    ],
    "description": "Returns:\n\nAn object containing registered commands.\n\nReturns all commands that are registered in the command system. The data returned adheres to the following layout:\n\n[\n{\n\"name\": \"cmdlist\",\n\"resource\": \"resource\",\n\"arity\" = -1,\n},\n{\n\"name\": \"command1\"\n\"resource\": \"resource_2\",\n\"arity\" = -1,\n}\n]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetResourceByFindIndex",
    "hash": "0x387246B7",
    "code": "-- GET_RESOURCE_BY_FIND_INDEX\nlocal retval --[[ string ]] =\n\tGetResourceByFindIndex(\n\t\tfindIndex --[[ integer ]]\n\t)",
    "parameters": [
      "findIndex: \n\nThe index of the resource (starting at 0)"
    ],
    "returns": [
      "The resource name as a string"
    ],
    "description": "Parameters:\n\nfindIndex: \n\nThe index of the resource (starting at 0)\n\nReturns:\n\nThe resource name as a string"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetResourceCommands",
    "hash": "0x97628584",
    "code": "-- GET_RESOURCE_COMMANDS\nlocal retval --[[ object ]] =\n\tGetResourceCommands(\n\t\tresource --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "An object containing registered commands."
    ],
    "description": "Returns:\n\nAn object containing registered commands.\n\nReturns all commands registered by the specified resource. The data returned adheres to the following layout:\n\n[\n{\n\"name\": \"cmdlist\",\n\"resource\": \"example_resource\",\n\"arity\" = -1,\n},\n{\n\"name\": \"command1\"\n\"resource\": \"example_resource2\",\n\"arity\" = -1,\n}\n]"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetResourceKvpFloat",
    "hash": "0x35BDCEEA",
    "code": "-- GET_RESOURCE_KVP_FLOAT\nlocal retval --[[ number ]] =\n\tGetResourceKvpFloat(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [
      "key: \n\nThe key to fetch"
    ],
    "returns": [
      "The floating-point value stored under the specified key, or 0.0 if not found."
    ],
    "description": "Parameters:\n\nkey: \n\nThe key to fetch\n\nReturns:\n\nThe floating-point value stored under the specified key, or 0.0 if not found.\n\nA getter for SET_RESOURCE_KVP_FLOAT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetResourceKvpInt",
    "hash": "0x557B586A",
    "code": "-- GET_RESOURCE_KVP_INT\nlocal retval --[[ integer ]] =\n\tGetResourceKvpInt(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [
      "key: \n\nThe key to fetch"
    ],
    "returns": [
      "The integer value stored under the specified key, or 0 if not found."
    ],
    "description": "Parameters:\n\nkey: \n\nThe key to fetch\n\nReturns:\n\nThe integer value stored under the specified key, or 0 if not found.\n\nA getter for SET_RESOURCE_KVP_INT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetResourceKvpString",
    "hash": "0x5240DA5A",
    "code": "-- GET_RESOURCE_KVP_STRING\nlocal retval --[[ string ]] =\n\tGetResourceKvpString(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [
      "key: \n\nThe key to fetch"
    ],
    "returns": [
      "The string value stored under the specified key, or nil/null if not found."
    ],
    "description": "Parameters:\n\nkey: \n\nThe key to fetch\n\nReturns:\n\nThe string value stored under the specified key, or nil/null if not found.\n\nA getter for SET_RESOURCE_KVP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetResourceMetadata",
    "hash": "0x964BAB1D",
    "code": "-- GET_RESOURCE_METADATA\nlocal retval --[[ string ]] =\n\tGetResourceMetadata(\n\t\tresourceName --[[ string ]], \n\t\tmetadataKey --[[ string ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe resource name.",
      "metadataKey: \n\nThe key in the resource manifest.",
      "index: \n\nThe value index, in a range from [0..GET_NUM_RESOURCE_METDATA-1]."
    ],
    "returns": [],
    "description": "Parameters:\n\nresourceName: \n\nThe resource name.\n\nmetadataKey: \n\nThe key in the resource manifest.\n\nindex: \n\nThe value index, in a range from [0..GET_NUM_RESOURCE_METDATA-1].\n\nGets the metadata value at a specified key/index from a resource's manifest. See also: Resource manifest"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetResourcePath",
    "hash": "0x61DCF017",
    "code": "-- GET_RESOURCE_PATH\nlocal retval --[[ string ]] =\n\tGetResourcePath(\n\t\tresourceName --[[ string ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe name of the resource."
    ],
    "returns": [
      "The resource directory name, possibly without trailing slash."
    ],
    "description": "Parameters:\n\nresourceName: \n\nThe name of the resource.\n\nReturns:\n\nThe resource directory name, possibly without trailing slash.\n\nReturns the physical on-disk path of the specified resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetResourceState",
    "hash": "0x4039B485",
    "code": "-- GET_RESOURCE_STATE\nlocal retval --[[ string ]] =\n\tGetResourceState(\n\t\tresourceName --[[ string ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe name of the resource."
    ],
    "returns": [
      "The resource state. One of \"missing\", \"started\", \"starting\", \"stopped\", \"stopping\", \"uninitialized\" or \"unknown\"."
    ],
    "description": "Parameters:\n\nresourceName: \n\nThe name of the resource.\n\nReturns:\n\nThe resource state. One of \"missing\", \"started\", \"starting\", \"stopped\", \"stopping\", \"uninitialized\" or \"unknown\".\n\nReturns the current state of the specified resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRopeFlags",
    "hash": "0xA80FFE99",
    "code": "-- GET_ROPE_FLAGS\nlocal retval --[[ integer ]] =\n\tGetRopeFlags(\n\t\trope --[[ integer ]]\n\t)",
    "parameters": [
      "rope: \n\nThe rope to get the flags for."
    ],
    "returns": [
      "The rope's flags."
    ],
    "description": "Parameters:\n\nrope: \n\nThe rope to get the flags for.\n\nReturns:\n\nThe rope's flags.\n\nenum eRopeFlags\n{\n    DrawShadowEnabled = 2,\n\tBreakable = 4,\n\tRopeUnwindingFront = 8,\n\tRopeWinding = 32\n}"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRopeLengthChangeRate",
    "hash": "0x66D70EA3",
    "code": "-- GET_ROPE_LENGTH_CHANGE_RATE\nlocal retval --[[ number ]] =\n\tGetRopeLengthChangeRate(\n\t\trope --[[ integer ]]\n\t)",
    "parameters": [
      "rope: \n\nThe rope to get the length change rate for."
    ],
    "returns": [
      "The rope's length change rate."
    ],
    "description": "Parameters:\n\nrope: \n\nThe rope to get the length change rate for.\n\nReturns:\n\nThe rope's length change rate."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRopeTimeMultiplier",
    "hash": "0xF341E6CA",
    "code": "-- GET_ROPE_TIME_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetRopeTimeMultiplier(\n\t\trope --[[ integer ]]\n\t)",
    "parameters": [
      "rope: \n\nThe rope to get the time multiplier for."
    ],
    "returns": [
      "The rope's time multiplier."
    ],
    "description": "Parameters:\n\nrope: \n\nThe rope to get the time multiplier for.\n\nReturns:\n\nThe rope's time multiplier."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRopeUpdateOrder",
    "hash": "0x2AB2E0F6",
    "code": "-- GET_ROPE_UPDATE_ORDER\nlocal retval --[[ integer ]] =\n\tGetRopeUpdateOrder(\n\t\trope --[[ integer ]]\n\t)",
    "parameters": [
      "rope: \n\nThe rope to get the update order for."
    ],
    "returns": [
      "The rope's update order."
    ],
    "description": "Parameters:\n\nrope: \n\nThe rope to get the update order for.\n\nReturns:\n\nThe rope's update order."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRuntimeTextureHeight",
    "hash": "0x3574AACE",
    "code": "-- GET_RUNTIME_TEXTURE_HEIGHT\nlocal retval --[[ integer ]] =\n\tGetRuntimeTextureHeight(\n\t\ttex --[[ long ]]\n\t)",
    "parameters": [
      "tex: \n\nA handle to the runtime texture."
    ],
    "returns": [
      "The height in pixels."
    ],
    "description": "Parameters:\n\ntex: \n\nA handle to the runtime texture.\n\nReturns:\n\nThe height in pixels.\n\nGets the height of the specified runtime texture."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRuntimeTexturePitch",
    "hash": "0xCA0A085F",
    "code": "-- GET_RUNTIME_TEXTURE_PITCH\nlocal retval --[[ integer ]] =\n\tGetRuntimeTexturePitch(\n\t\ttex --[[ long ]]\n\t)",
    "parameters": [
      "tex: \n\nA handle to the runtime texture."
    ],
    "returns": [
      "The row pitch in bytes."
    ],
    "description": "Parameters:\n\ntex: \n\nA handle to the runtime texture.\n\nReturns:\n\nThe row pitch in bytes.\n\nGets the row pitch of the specified runtime texture, for use when creating data for SET_RUNTIME_TEXTURE_ARGB_DATA."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetRuntimeTextureWidth",
    "hash": "0xC9F55558",
    "code": "-- GET_RUNTIME_TEXTURE_WIDTH\nlocal retval --[[ integer ]] =\n\tGetRuntimeTextureWidth(\n\t\ttex --[[ long ]]\n\t)",
    "parameters": [
      "tex: \n\nA handle to the runtime texture."
    ],
    "returns": [
      "The width in pixels."
    ],
    "description": "Parameters:\n\ntex: \n\nA handle to the runtime texture.\n\nReturns:\n\nThe width in pixels.\n\nGets the width of the specified runtime texture."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetScenarioPedDensityMultiplier",
    "hash": "0x77C598B2",
    "code": "-- GET_SCENARIO_PED_DENSITY_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetScenarioPedDensityMultiplier()",
    "parameters": [],
    "returns": [
      "Returns scenario ped density multiplier value."
    ],
    "description": "Returns:\n\nReturns scenario ped density multiplier value.\n\nA getter for SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetSelectedPedWeapon",
    "hash": "0xD240123E",
    "code": "-- GET_SELECTED_PED_WEAPON\nlocal retval --[[ Hash ]] =\n\tGetSelectedPedWeapon(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "The weapon hash."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nThe weapon hash.\n\nAn alias of GET_CURRENT_PED_WEAPON.\n\nNote, the client-side GET_SELECTED_PED_WEAPON native returns the weapon selected via the HUD (weapon wheel). This data is not available to FXServer."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetStateBagKeys",
    "hash": "0x78D864C7",
    "code": "-- GET_STATE_BAG_KEYS\nlocal retval --[[ object ]] =\n\tGetStateBagKeys(\n\t\tbagName --[[ string ]]\n\t)",
    "parameters": [
      "bagName: \n\nThe name of the bag."
    ],
    "returns": [
      "Returns an array containing all keys for which the state bag has associated values."
    ],
    "description": "Parameters:\n\nbagName: \n\nThe name of the bag.\n\nReturns:\n\nReturns an array containing all keys for which the state bag has associated values."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetStateBagValue",
    "hash": "0x637F4C75",
    "code": "-- GET_STATE_BAG_VALUE\nlocal retval --[[ object ]] =\n\tGetStateBagValue(\n\t\tbagName --[[ string ]], \n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Value."
    ],
    "description": "Returns:\n\nValue.\n\nReturns the value of a state bag key."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetThrusterSideRcsThrottle",
    "hash": "0x1C939E87",
    "code": "-- GET_THRUSTER_SIDE_RCS_THROTTLE\nlocal retval --[[ number ]] =\n\tGetThrusterSideRcsThrottle(\n\t\tjetpack --[[ Vehicle ]]\n\t)",
    "parameters": [
      "jetpack: \n\nThe jetpack to check."
    ],
    "returns": [
      "Returns a value representing the side RCS (Reaction Control System) throttle of the jetpack. The values range from 0.0 (no throttle) to 1.0 (full throttle)."
    ],
    "description": "Parameters:\n\njetpack: \n\nThe jetpack to check.\n\nReturns:\n\nReturns a value representing the side RCS (Reaction Control System) throttle of the jetpack. The values range from 0.0 (no throttle) to 1.0 (full throttle)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetThrusterThrottle",
    "hash": "0x94E24C96",
    "code": "-- GET_THRUSTER_THROTTLE\nlocal retval --[[ number ]] =\n\tGetThrusterThrottle(\n\t\tjetpack --[[ Vehicle ]]\n\t)",
    "parameters": [
      "jetpack: \n\nThe jetpack to check."
    ],
    "returns": [
      "Returns a value representing the main throttle of the jetpack. The values range from 0.0 (no throttle) to 1.0 (full throttle)"
    ],
    "description": "Parameters:\n\njetpack: \n\nThe jetpack to check.\n\nReturns:\n\nReturns a value representing the main throttle of the jetpack. The values range from 0.0 (no throttle) to 1.0 (full throttle)"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierCount",
    "hash": "0xFE2A1D4D",
    "code": "-- GET_TIMECYCLE_MODIFIER_COUNT\nlocal retval --[[ integer ]] =\n\tGetTimecycleModifierCount()",
    "parameters": [],
    "returns": [
      "Returns the amount of timecycle modifiers loaded."
    ],
    "description": "Returns:\n\nReturns the amount of timecycle modifiers loaded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierIndexByName",
    "hash": "0x5F4CD0E2",
    "code": "-- GET_TIMECYCLE_MODIFIER_INDEX_BY_NAME\nlocal retval --[[ integer ]] =\n\tGetTimecycleModifierIndexByName(\n\t\tmodifierName --[[ string ]]\n\t)",
    "parameters": [
      "modifierName: \n\nThe timecycle modifier name."
    ],
    "returns": [
      "The timecycle modifier index."
    ],
    "description": "Parameters:\n\nmodifierName: \n\nThe timecycle modifier name.\n\nReturns:\n\nThe timecycle modifier index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierNameByIndex",
    "hash": "0x28CB8608",
    "code": "-- GET_TIMECYCLE_MODIFIER_NAME_BY_INDEX\nlocal retval --[[ string ]] =\n\tGetTimecycleModifierNameByIndex(\n\t\tmodifierIndex --[[ integer ]]\n\t)",
    "parameters": [
      "modifierIndex: \n\nThe timecycle modifier index."
    ],
    "returns": [
      "The timecycle modifier name."
    ],
    "description": "Parameters:\n\nmodifierIndex: \n\nThe timecycle modifier index.\n\nReturns:\n\nThe timecycle modifier name."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierStrength",
    "hash": "0xBE54124A",
    "code": "-- GET_TIMECYCLE_MODIFIER_STRENGTH\nlocal retval --[[ number ]] =\n\tGetTimecycleModifierStrength()",
    "parameters": [],
    "returns": [
      "Returns current timecycle modifier strength."
    ],
    "description": "Returns:\n\nReturns current timecycle modifier strength.\n\nA getter for SET_TIMECYCLE_MODIFIER_STRENGTH."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierVar",
    "hash": "0xA7109E12",
    "code": "-- GET_TIMECYCLE_MODIFIER_VAR\nlocal retval --[[ boolean ]], value1 --[[ number ]], value2 --[[ number ]] =\n\tGetTimecycleModifierVar(\n\t\tmodifierName --[[ string ]], \n\t\tvarName --[[ string ]]\n\t)",
    "parameters": [
      "modifierName: \n\nThe name of timecycle modifier.",
      "varName: \n\nThe name of timecycle variable.",
      "value1:",
      "value2:"
    ],
    "returns": [
      "Whether or not variable by name was found on the specified timecycle modifier."
    ],
    "description": "Parameters:\n\nmodifierName: \n\nThe name of timecycle modifier.\n\nvarName: \n\nThe name of timecycle variable.\n\nvalue1:\nvalue2:\nReturns:\n\nWhether or not variable by name was found on the specified timecycle modifier."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierVarCount",
    "hash": "0x60FB60FE",
    "code": "-- GET_TIMECYCLE_MODIFIER_VAR_COUNT\nlocal retval --[[ integer ]] =\n\tGetTimecycleModifierVarCount(\n\t\tmodifierName --[[ string ]]\n\t)",
    "parameters": [
      "modifierName: \n\nThe timecycle modifier name."
    ],
    "returns": [
      "The amount of variables used on a specified timecycle modifier."
    ],
    "description": "Parameters:\n\nmodifierName: \n\nThe timecycle modifier name.\n\nReturns:\n\nThe amount of variables used on a specified timecycle modifier."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierVarNameByIndex",
    "hash": "0xE874AB1D",
    "code": "-- GET_TIMECYCLE_MODIFIER_VAR_NAME_BY_INDEX\nlocal retval --[[ string ]] =\n\tGetTimecycleModifierVarNameByIndex(\n\t\tmodifierName --[[ string ]], \n\t\tmodifierVarIndex --[[ integer ]]\n\t)",
    "parameters": [
      "modifierName: \n\nThe name of timecycle modifier.",
      "modifierVarIndex: \n\nThe index of a variable on the specified timecycle modifier."
    ],
    "returns": [
      "The name of a variable by index."
    ],
    "description": "Parameters:\n\nmodifierName: \n\nThe name of timecycle modifier.\n\nmodifierVarIndex: \n\nThe index of a variable on the specified timecycle modifier.\n\nReturns:\n\nThe name of a variable by index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleVarCount",
    "hash": "0x838B34D8",
    "code": "-- GET_TIMECYCLE_VAR_COUNT\nlocal retval --[[ integer ]] =\n\tGetTimecycleVarCount()",
    "parameters": [],
    "returns": [
      "The amount of available variables for timecycle modifiers."
    ],
    "description": "Returns:\n\nThe amount of available variables for timecycle modifiers.\n\nReturns the amount of variables available to be applied on timecycle modifiers."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleVarDefaultValueByIndex",
    "hash": "0x3B90238",
    "code": "-- GET_TIMECYCLE_VAR_DEFAULT_VALUE_BY_INDEX\nlocal retval --[[ number ]] =\n\tGetTimecycleVarDefaultValueByIndex(\n\t\tvarIndex --[[ integer ]]\n\t)",
    "parameters": [
      "varIndex: \n\nThe index of variable."
    ],
    "returns": [
      "The default value of a timecycle variable."
    ],
    "description": "Parameters:\n\nvarIndex: \n\nThe index of variable.\n\nReturns:\n\nThe default value of a timecycle variable.\n\nSee GET_TIMECYCLE_VAR_COUNT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTimecycleVarNameByIndex",
    "hash": "0xC6C55AAF",
    "code": "-- GET_TIMECYCLE_VAR_NAME_BY_INDEX\nlocal retval --[[ string ]] =\n\tGetTimecycleVarNameByIndex(\n\t\tvarIndex --[[ integer ]]\n\t)",
    "parameters": [
      "varIndex: \n\nThe index of variable."
    ],
    "returns": [
      "The name of a timecycle variable."
    ],
    "description": "Parameters:\n\nvarIndex: \n\nThe index of variable.\n\nReturns:\n\nThe name of a timecycle variable.\n\nSee GET_TIMECYCLE_VAR_COUNT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrackBrakingDistance",
    "hash": "0xBF482A5E",
    "code": "-- GET_TRACK_BRAKING_DISTANCE\nlocal retval --[[ number ]] =\n\tGetTrackBrakingDistance(\n\t\ttrack --[[ integer ]]\n\t)",
    "parameters": [
      "track: \n\nThe track id (between 0 - 27)"
    ],
    "returns": [
      "The braking distance of the track. Used by trains to determine the point to slow down at when entering a station."
    ],
    "description": "Parameters:\n\ntrack: \n\nThe track id (between 0 - 27)\n\nReturns:\n\nThe braking distance of the track. Used by trains to determine the point to slow down at when entering a station."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrackMaxSpeed",
    "hash": "0x34EE2BF3",
    "code": "-- GET_TRACK_MAX_SPEED\nlocal retval --[[ number ]] =\n\tGetTrackMaxSpeed(\n\t\ttrack --[[ integer ]]\n\t)",
    "parameters": [
      "track: \n\nThe track id (between 0 - 27)"
    ],
    "returns": [
      "The max speed of the track"
    ],
    "description": "Parameters:\n\ntrack: \n\nThe track id (between 0 - 27)\n\nReturns:\n\nThe max speed of the track"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrackNodeCoords",
    "hash": "0x1628548E",
    "code": "-- GET_TRACK_NODE_COORDS\nlocal retval --[[ bool ]], coords --[[ vector3 ]] =\n\tGetTrackNodeCoords(\n\t\ttrackIndex --[[ integer ]], \n\t\ttrackNode --[[ integer ]]\n\t)",
    "parameters": [
      "trackIndex: \n\nThe track index",
      "trackNode: \n\nThe track node",
      "coords: \n\nThe resulting track node coords"
    ],
    "returns": [
      "Returns if it succeeds in getting coords or not"
    ],
    "description": "Parameters:\n\ntrackIndex: \n\nThe track index\n\ntrackNode: \n\nThe track node\n\ncoords: \n\nThe resulting track node coords\n\nReturns:\n\nReturns if it succeeds in getting coords or not\n\nGets the coordinates of a specific track node."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrackNodeCount",
    "hash": "0x896A0C11",
    "code": "-- GET_TRACK_NODE_COUNT\nlocal retval --[[ integer ]] =\n\tGetTrackNodeCount(\n\t\ttrackIndex --[[ integer ]]\n\t)",
    "parameters": [
      "trackIndex: \n\nThe track index"
    ],
    "returns": [
      "The amount of track nodes on the specified track"
    ],
    "description": "Parameters:\n\ntrackIndex: \n\nThe track index\n\nReturns:\n\nThe amount of track nodes on the specified track\n\nGets the specified tracks node count."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetTrainBackwardCarriage",
    "hash": "0x456E34A",
    "code": "-- GET_TRAIN_BACKWARD_CARRIAGE\nlocal retval --[[ integer ]] =\n\tGetTrainBackwardCarriage(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "The handle of the carriage behind this train in the chain. Otherwise returns 0 if the train is the caboose of the chain."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nThe handle of the carriage behind this train in the chain. Otherwise returns 0 if the train is the caboose of the chain."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetTrainCarriageEngine",
    "hash": "0x95070FA",
    "code": "-- GET_TRAIN_CARRIAGE_ENGINE\nlocal retval --[[ integer ]] =\n\tGetTrainCarriageEngine(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe entity handle."
    ],
    "returns": [
      "The train engine carriage."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe entity handle.\n\nReturns:\n\nThe train engine carriage."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetTrainCarriageIndex",
    "hash": "0x4B8285CF",
    "code": "-- GET_TRAIN_CARRIAGE_INDEX\nlocal retval --[[ integer ]] =\n\tGetTrainCarriageIndex(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe entity handle."
    ],
    "returns": [
      "The carriage index. -1 returned if invalid result."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe entity handle.\n\nReturns:\n\nThe carriage index. -1 returned if invalid result."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetTrainCruiseSpeed",
    "hash": "0xA4921EF5",
    "code": "-- GET_TRAIN_CRUISE_SPEED\nlocal retval --[[ number ]] =\n\tGetTrainCruiseSpeed(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "The desired cruise speed of the train. Not the speed the train is currently traveling at"
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nThe desired cruise speed of the train. Not the speed the train is currently traveling at\n\nGets the trains desired speed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrainCurrentTrackNode",
    "hash": "0xE015E854",
    "code": "-- GET_TRAIN_CURRENT_TRACK_NODE\nlocal retval --[[ integer ]] =\n\tGetTrainCurrentTrackNode(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe target train."
    ],
    "returns": [
      "Train's current track node index."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe target train.\n\nReturns:\n\nTrain's current track node index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetTrainDirection",
    "hash": "0x8DAF79B6",
    "code": "-- GET_TRAIN_DIRECTION\nlocal retval --[[ boolean ]] =\n\tGetTrainDirection(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "True if the train is moving forward on the track, False otherwise"
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nTrue if the train is moving forward on the track, False otherwise\n\nGets the direction the train is facing"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrainDoorCount",
    "hash": "0x99974721",
    "code": "-- GET_TRAIN_DOOR_COUNT\nlocal retval --[[ integer ]] =\n\tGetTrainDoorCount(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train to obtain the door count for."
    ],
    "returns": [
      "The door count."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train to obtain the door count for.\n\nReturns:\n\nThe door count.\n\nGets the door count for the specified train."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrainDoorOpenRatio",
    "hash": "0x40B16551",
    "code": "-- GET_TRAIN_DOOR_OPEN_RATIO\nlocal retval --[[ number ]] =\n\tGetTrainDoorOpenRatio(\n\t\ttrain --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [
      "train: \n\nThe train to obtain the door ratio for.",
      "doorIndex: \n\nZero-based door index."
    ],
    "returns": [
      "A value between 0.0 (fully closed) and 1.0 (fully open)."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train to obtain the door ratio for.\n\ndoorIndex: \n\nZero-based door index.\n\nReturns:\n\nA value between 0.0 (fully closed) and 1.0 (fully open).\n\nGets the ratio that a door is open for on a train."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetTrainForwardCarriage",
    "hash": "0x24DC88D9",
    "code": "-- GET_TRAIN_FORWARD_CARRIAGE\nlocal retval --[[ integer ]] =\n\tGetTrainForwardCarriage(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "The handle of the carriage in front of this train in the chain. Otherwise returns 0 if the train has no carriage in front of it"
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nThe handle of the carriage in front of this train in the chain. Otherwise returns 0 if the train has no carriage in front of it"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetTrainSpeed",
    "hash": "0x428668B7",
    "code": "-- GET_TRAIN_SPEED\nlocal retval --[[ number ]] =\n\tGetTrainSpeed(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "The current speed of the train"
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nThe current speed of the train\n\nGets the speed the train is currently going."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetTrainState",
    "hash": "0x81B50033",
    "code": "-- GET_TRAIN_STATE\nlocal retval --[[ integer ]] =\n\tGetTrainState(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "The trains current state`cpp enum eTrainState { MOVING = 0, ENTERING_STATION, OPENING_DOORS, STOPPED, CLOSING_DOORS, LEAVING_STATION, }"
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nThe trains current state`cpp enum eTrainState { MOVING = 0, ENTERING_STATION, OPENING_DOORS, STOPPED, CLOSING_DOORS, LEAVING_STATION, }"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetTrainTrackIndex",
    "hash": "0x9AA339D",
    "code": "-- GET_TRAIN_TRACK_INDEX\nlocal retval --[[ integer ]] =\n\tGetTrainTrackIndex(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "The track index the train is currently on."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nThe track index the train is currently on."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleAlarmTimeLeft",
    "hash": "0xC62AAC98",
    "code": "-- GET_VEHICLE_ALARM_TIME_LEFT\nlocal retval --[[ integer ]] =\n\tGetVehicleAlarmTimeLeft(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleBodyHealth",
    "hash": "0x2B2FCC28",
    "code": "-- GET_VEHICLE_BODY_HEALTH\nlocal retval --[[ number ]] =\n\tGetVehicleBodyHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleCheatPowerIncrease",
    "hash": "0xC3C93F28",
    "code": "-- GET_VEHICLE_CHEAT_POWER_INCREASE\nlocal retval --[[ number ]] =\n\tGetVehicleCheatPowerIncrease(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Returns vehicle's cheat power increase modifier value."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturns vehicle's cheat power increase modifier value.\n\nA getter for SET_VEHICLE_CHEAT_POWER_INCREASE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleClutch",
    "hash": "0x1DAD4583",
    "code": "-- GET_VEHICLE_CLUTCH\nlocal retval --[[ number ]] =\n\tGetVehicleClutch(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleColours",
    "hash": "0x40D82D88",
    "code": "-- GET_VEHICLE_COLOURS\nlocal colorPrimary --[[ integer ]], colorSecondary --[[ integer ]] =\n\tGetVehicleColours(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleCurrentGear",
    "hash": "0xB4F4E566",
    "code": "-- GET_VEHICLE_CURRENT_GEAR\nlocal retval --[[ integer ]] =\n\tGetVehicleCurrentGear(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleCurrentRpm",
    "hash": "0xE7B12B54",
    "code": "-- GET_VEHICLE_CURRENT_RPM\nlocal retval --[[ number ]] =\n\tGetVehicleCurrentRpm(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleCustomPrimaryColour",
    "hash": "0x1C2B9FEF",
    "code": "-- GET_VEHICLE_CUSTOM_PRIMARY_COLOUR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleCustomPrimaryColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleCustomSecondaryColour",
    "hash": "0x3FF247A2",
    "code": "-- GET_VEHICLE_CUSTOM_SECONDARY_COLOUR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleCustomSecondaryColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardBoost",
    "hash": "0xDFFABA2A",
    "code": "-- GET_VEHICLE_DASHBOARD_BOOST\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardBoost()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleDashboardColour",
    "hash": "0xA0DBD08D",
    "code": "-- GET_VEHICLE_DASHBOARD_COLOUR\nlocal color --[[ integer ]] =\n\tGetVehicleDashboardColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardCurrentGear",
    "hash": "0x435C86F4",
    "code": "-- GET_VEHICLE_DASHBOARD_CURRENT_GEAR\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardCurrentGear()",
    "parameters": [],
    "returns": [
      "The current gear."
    ],
    "description": "Returns:\n\nThe current gear.\n\nRetrieves the current gear displayed on the dashboard of the vehicle the player is in, returned as a float. This value represents the gear shown in the instrument cluster, such as \"R\" (0.0) or positive values (e.g., 1.0, 2.0, etc.) for drive gears."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardFuel",
    "hash": "0x19B0B2CE",
    "code": "-- GET_VEHICLE_DASHBOARD_FUEL\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardFuel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardLights",
    "hash": "0x500FFE9D",
    "code": "-- GET_VEHICLE_DASHBOARD_LIGHTS\nlocal retval --[[ integer ]] =\n\tGetVehicleDashboardLights()",
    "parameters": [],
    "returns": [],
    "description": "Gets the state of the player vehicle's dashboard lights as a bit set indicator_left = 1 indicator_right = 2 handbrakeLight = 4 engineLight = 8 ABSLight = 16 gasLight = 32 oilLight = 64 headlights = 128 highBeam = 256 batteryLight = 512"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardOilPressure",
    "hash": "0x3856D767",
    "code": "-- GET_VEHICLE_DASHBOARD_OIL_PRESSURE\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardOilPressure()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardOilTemp",
    "hash": "0x1F5996AA",
    "code": "-- GET_VEHICLE_DASHBOARD_OIL_TEMP\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardOilTemp()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardRpm",
    "hash": "0xF9716A11",
    "code": "-- GET_VEHICLE_DASHBOARD_RPM\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardRpm()",
    "parameters": [],
    "returns": [
      "float 0 to ~1.1 representing the angle of the rpm gauge on the player's vehicle dashboard"
    ],
    "description": "Returns:\n\nfloat 0 to ~1.1 representing the angle of the rpm gauge on the player's vehicle dashboard"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardSpeed",
    "hash": "0x9AAD420E",
    "code": "-- GET_VEHICLE_DASHBOARD_SPEED\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardSpeed(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardTemp",
    "hash": "0x6B6ADAFA",
    "code": "-- GET_VEHICLE_DASHBOARD_TEMP\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardTemp()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardVacuum",
    "hash": "0xFABE67A9",
    "code": "-- GET_VEHICLE_DASHBOARD_VACUUM\nlocal retval --[[ number ]] =\n\tGetVehicleDashboardVacuum()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDensityMultiplier",
    "hash": "0xEF7C6538",
    "code": "-- GET_VEHICLE_DENSITY_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetVehicleDensityMultiplier()",
    "parameters": [],
    "returns": [
      "Returns vehicle density multiplier value."
    ],
    "description": "Returns:\n\nReturns vehicle density multiplier value.\n\nA getter for SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleDirtLevel",
    "hash": "0xFD15C065",
    "code": "-- GET_VEHICLE_DIRT_LEVEL\nlocal retval --[[ number ]] =\n\tGetVehicleDirtLevel(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleDoorLockStatus",
    "hash": "0xD72CEF2",
    "code": "-- GET_VEHICLE_DOOR_LOCK_STATUS\nlocal retval --[[ integer ]] =\n\tGetVehicleDoorLockStatus(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nA vehicle handle."
    ],
    "returns": [
      "The door lock status for the specified vehicle."
    ],
    "description": "Parameters:\n\nvehicle: \n\nA vehicle handle.\n\nReturns:\n\nThe door lock status for the specified vehicle.\n\nenum_VehicleLockStatus = {\n    None = 0,\n    Locked = 2,\n    LockedForPlayer = 3,\n    StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.\n    CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1\n    CanBeBrokenIntoPersist = 8, -- Can be broken into persist\n    CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).\n}\n\n\nIt should be noted that while the client-side command and its setter distinguish between states 0 (unset) and 1 (unlocked), the game will synchronize both as state 0, so the server-side command will return only '0' if unlocked."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleDoorStatus",
    "hash": "0x6E35C49C",
    "code": "-- GET_VEHICLE_DOOR_STATUS\nlocal retval --[[ integer ]] =\n\tGetVehicleDoorStatus(\n\t\tvehicle --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle.",
      "doorIndex: \n\nIndex of door to check (0-6)."
    ],
    "returns": [
      "A number from 0 to 7."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\ndoorIndex: \n\nIndex of door to check (0-6).\n\nReturns:\n\nA number from 0 to 7.\n\nReturns the open position of the specified door on the target vehicle."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleDoorsLockedForPlayer",
    "hash": "0x1DC50247",
    "code": "-- GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER\nlocal retval --[[ integer ]] =\n\tGetVehicleDoorsLockedForPlayer(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Currently it only works when set to \"all players\"."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleDrawnWheelAngleMult",
    "hash": "0x21C1DA8E",
    "code": "-- GET_VEHICLE_DRAWN_WHEEL_ANGLE_MULT\nlocal retval --[[ number ]] =\n\tGetVehicleDrawnWheelAngleMult(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a vehicle's multiplier used with a wheel's GET_VEHICLE_WHEEL_STEERING_ANGLE to determine the angle the wheel is rendered."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleEngineHealth",
    "hash": "0x8880038A",
    "code": "-- GET_VEHICLE_ENGINE_HEALTH\nlocal retval --[[ number ]] =\n\tGetVehicleEngineHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleEngineTemperature",
    "hash": "0xF4F495CB",
    "code": "-- GET_VEHICLE_ENGINE_TEMPERATURE\nlocal retval --[[ number ]] =\n\tGetVehicleEngineTemperature(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleExtraColours",
    "hash": "0x80E4659B",
    "code": "-- GET_VEHICLE_EXTRA_COLOURS\nlocal pearlescentColor --[[ integer ]], wheelColor --[[ integer ]] =\n\tGetVehicleExtraColours(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleFlightNozzlePosition",
    "hash": "0xAD40AD55",
    "code": "-- GET_VEHICLE_FLIGHT_NOZZLE_POSITION\nlocal retval --[[ number ]] =\n\tGetVehicleFlightNozzlePosition(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "The flight nozzel position between 0.0 (flying normally) and 1.0 (VTOL mode)"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nThe flight nozzel position between 0.0 (flying normally) and 1.0 (VTOL mode)\n\nGets the flight nozzel position for the specified vehicle. See the client-side _GET_VEHICLE_FLIGHT_NOZZLE_POSITION native for usage examples."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleFuelLevel",
    "hash": "0x5F739BB8",
    "code": "-- GET_VEHICLE_FUEL_LEVEL\nlocal retval --[[ number ]] =\n\tGetVehicleFuelLevel(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleGearRatio",
    "hash": "0x82E794B7",
    "code": "-- GET_VEHICLE_GEAR_RATIO\nlocal retval --[[ number ]] =\n\tGetVehicleGearRatio(\n\t\tvehicle --[[ Vehicle ]], \n\t\tgear --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "gear: \n\nThe vehicles gear you want to get."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\ngear: \n\nThe vehicles gear you want to get.\n\nGets vehicles gear ratio on choosen gear."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleGravityAmount",
    "hash": "0xB48A1292",
    "code": "-- GET_VEHICLE_GRAVITY_AMOUNT\nlocal retval --[[ number ]] =\n\tGetVehicleGravityAmount(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetVehicleHandbrake",
    "hash": "0x483B013C",
    "code": "-- GET_VEHICLE_HANDBRAKE\nlocal retval --[[ boolean ]] =\n\tGetVehicleHandbrake(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleHandlingFloat",
    "hash": "0x642FC12F",
    "code": "-- GET_VEHICLE_HANDLING_FLOAT\nlocal retval --[[ number ]] =\n\tGetVehicleHandlingFloat(\n\t\tvehicle --[[ Vehicle ]], \n\t\tclass_ --[[ string ]], \n\t\tfieldName --[[ string ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "class_: \n\nThe handling class to get. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to get. These match the keys in handling.meta."
    ],
    "returns": [
      "A floating-point value."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nclass_: \n\nThe handling class to get. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to get. These match the keys in handling.meta.\n\nReturns:\n\nA floating-point value.\n\nReturns the effective handling data of a vehicle as a floating-point value. Example: local fSteeringLock = GetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock')"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleHandlingInt",
    "hash": "0x27396C75",
    "code": "-- GET_VEHICLE_HANDLING_INT\nlocal retval --[[ integer ]] =\n\tGetVehicleHandlingInt(\n\t\tvehicle --[[ Vehicle ]], \n\t\tclass_ --[[ string ]], \n\t\tfieldName --[[ string ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "class_: \n\nThe handling class to get. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to get. These match the keys in handling.meta."
    ],
    "returns": [
      "An integer."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nclass_: \n\nThe handling class to get. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to get. These match the keys in handling.meta.\n\nReturns:\n\nAn integer.\n\nReturns the effective handling data of a vehicle as an integer value. Example: local modelFlags = GetVehicleHandlingInt(vehicle, 'CHandlingData', 'strModelFlags')"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleHandlingVector",
    "hash": "0xFB341304",
    "code": "-- GET_VEHICLE_HANDLING_VECTOR\nlocal retval --[[ vector3 ]] =\n\tGetVehicleHandlingVector(\n\t\tvehicle --[[ Vehicle ]], \n\t\tclass_ --[[ string ]], \n\t\tfieldName --[[ string ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "class_: \n\nThe handling class to get. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to get. These match the keys in handling.meta."
    ],
    "returns": [
      "An integer."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nclass_: \n\nThe handling class to get. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to get. These match the keys in handling.meta.\n\nReturns:\n\nAn integer.\n\nReturns the effective handling data of a vehicle as a vector value. Example: local inertiaMultiplier = GetVehicleHandlingVector(vehicle, 'CHandlingData', 'vecInertiaMultiplier')"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleHasFlag",
    "hash": "0xD85C9F57",
    "code": "-- GET_VEHICLE_HAS_FLAG\nlocal retval --[[ bool ]] =\n\tGetVehicleHasFlag(\n\t\tvehicle --[[ Vehicle ]], \n\t\tflagIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain flags for.",
      "flagIndex: \n\nFlag index."
    ],
    "returns": [
      "A boolean for whether the flag is set.### Example`lua local vehicleFlags = { FLAG_SMALL_WORKER = 0, FLAG_BIG = 1, FLAG_NO_BOOT = 2, FLAG_ONLY_DURING_OFFICE_HOURS = 3 -- This is just a example, see fivem-docs to see all flags. }",
      "local function getAllVehicleFlags(vehicle) local flags = {} for i = 0, 256 do if GetVehicleHasFlag(vehicle, i) then flags#flags+1 = i end end return flags end",
      "local flagsVehicle = GetVehiclePedIsIn(PlayerPedId(), false) print(getAllVehicleFlags)"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain flags for.\n\nflagIndex: \n\nFlag index.\n\nReturns:\n\nA boolean for whether the flag is set.### Example`lua local vehicleFlags = { FLAG_SMALL_WORKER = 0, FLAG_BIG = 1, FLAG_NO_BOOT = 2, FLAG_ONLY_DURING_OFFICE_HOURS = 3 -- This is just a example, see fivem-docs to see all flags. }\n\nlocal function getAllVehicleFlags(vehicle) local flags = {} for i = 0, 256 do if GetVehicleHasFlag(vehicle, i) then flags#flags+1 = i end end return flags end\n\nlocal flagsVehicle = GetVehiclePedIsIn(PlayerPedId(), false) print(getAllVehicleFlags)\n\nconst VEHICLE_FLAGS = {\n    FLAG_SMALL_WORKER: 0,\n    FLAG_BIG: 1,\n    FLAG_NO_BOOT: 2,\n    FLAG_ONLY_DURING_OFFICE_HOURS: 3\n    // This is just a example, see fivem-docs to see all flags.\n};\n\nfunction getAllVehicleFlags(mVehicle = GetVehiclePedIsIn(PlayerPedId(), false)) {\n    const flags = [];\n    for (let i = 0; i < 204; i++) {\n        if (GetVehicleHasFlag(mVehicle, i)) {\n            flags.push(i);\n        }\n    }\n    return flags;\n}\n\nlet flagsVehicle = GetVehiclePedIsIn(PlayerPedId(), false);\nconsole.log(getAllVehicleFlags);\n```\n\nNote: Flags are not the same based on your gamebuild. Please see here to see a complete list of all vehicle flags.\n\nGet vehicle.meta flag by index. Useful examples include FLAG_LAW_ENFORCEMENT (31), FLAG_RICH_CAR (36), FLAG_IS_ELECTRIC (43), FLAG_IS_OFFROAD_VEHICLE (48)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleHeadlightsColour",
    "hash": "0xD7147656",
    "code": "-- GET_VEHICLE_HEADLIGHTS_COLOUR\nlocal retval --[[ integer ]] =\n\tGetVehicleHeadlightsColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleHighGear",
    "hash": "0xF1D1D689",
    "code": "-- GET_VEHICLE_HIGH_GEAR\nlocal retval --[[ integer ]] =\n\tGetVehicleHighGear(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleHomingLockonState",
    "hash": "0xFBDE9FD8",
    "code": "-- GET_VEHICLE_HOMING_LOCKON_STATE\nlocal retval --[[ integer ]] =\n\tGetVehicleHomingLockonState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "The lock on state."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nThe lock on state.\n\nGets the lock on state for the specified vehicle. See the client-side GET_VEHICLE_HOMING_LOCKON_STATE native for a description of lock on states."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleHornType",
    "hash": "0xDEA49773",
    "code": "-- GET_VEHICLE_HORN_TYPE\nlocal retval --[[ Hash ]] =\n\tGetVehicleHornType(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check the horn type."
    ],
    "returns": [
      "Returns the vehicle horn type hash, or 0 if one is not set."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check the horn type.\n\nReturns:\n\nReturns the vehicle horn type hash, or 0 if one is not set.\n\nThis is a getter for the client-side native START_VEHICLE_HORN, which allows you to return the horn type of the vehicle.\n\nNote: This native only gets the hash value set with START_VEHICLE_HORN. If a wrong hash is passed into START_VEHICLE_HORN, it will return this wrong hash.\n\nenum eHornTypes\n{\n    NORMAL = 1330140148,\n    HELDDOWN = -2087385909,\n    AGGRESSIVE = -92810745\n}"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleIndicatorLights",
    "hash": "0x83070354",
    "code": "-- GET_VEHICLE_INDICATOR_LIGHTS\nlocal retval --[[ integer ]] =\n\tGetVehicleIndicatorLights(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "An integer."
    ],
    "description": "Returns:\n\nAn integer.\n\nGets the vehicle indicator light state. 0 = off, 1 = left, 2 = right, 3 = both"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleInteriorColour",
    "hash": "0xCCFF3B6E",
    "code": "-- GET_VEHICLE_INTERIOR_COLOUR\nlocal color --[[ integer ]] =\n\tGetVehicleInteriorColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleLightMultiplier",
    "hash": "0x7E6E219C",
    "code": "-- GET_VEHICLE_LIGHT_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetVehicleLightMultiplier(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleLightsState",
    "hash": "0x7C278621",
    "code": "-- GET_VEHICLE_LIGHTS_STATE\nlocal retval --[[ boolean ]], lightsOn --[[ boolean ]], highbeamsOn --[[ boolean ]] =\n\tGetVehicleLightsState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleLivery",
    "hash": "0xEC82A51D",
    "code": "-- GET_VEHICLE_LIVERY\nlocal retval --[[ integer ]] =\n\tGetVehicleLivery(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleLockOnTarget",
    "hash": "0x4A557117",
    "code": "-- GET_VEHICLE_LOCK_ON_TARGET\nlocal retval --[[ Vehicle ]] =\n\tGetVehicleLockOnTarget(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "The vehicle that is locked on. 0 returned if no vehicle is locked on."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nThe vehicle that is locked on. 0 returned if no vehicle is locked on.\n\nGets the vehicle that is locked on to for the specified vehicle."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleNeonColour",
    "hash": "0xD9319DCB",
    "code": "-- GET_VEHICLE_NEON_COLOUR\nlocal red --[[ integer ]], green --[[ integer ]], blue --[[ integer ]] =\n\tGetVehicleNeonColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "red: \n\nPointer to an integer where the red component of the neon color will be stored.",
      "green: \n\nPointer to an integer where the green component of the neon color will be stored.",
      "blue: \n\nPointer to an integer where the blue component of the neon color will be stored."
    ],
    "returns": [
      "None. The neon color values are retrieved and stored in the red, green, and blue pointers. Make sure to store the returned values in variables for further use."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nred: \n\nPointer to an integer where the red component of the neon color will be stored.\n\ngreen: \n\nPointer to an integer where the green component of the neon color will be stored.\n\nblue: \n\nPointer to an integer where the blue component of the neon color will be stored.\n\nReturns:\n\nNone. The neon color values are retrieved and stored in the red, green, and blue pointers. Make sure to store the returned values in variables for further use.\n\nGetter to check the neon colour of a vehicle. This native is the server side getter of GET_VEHICLE_NEON_LIGHTS_COLOUR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleNeonEnabled",
    "hash": "0x684BDBF2",
    "code": "-- GET_VEHICLE_NEON_ENABLED\nlocal retval --[[ boolean ]] =\n\tGetVehicleNeonEnabled(\n\t\tvehicle --[[ Vehicle ]], \n\t\tneonIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "neonIndex: \n\nA value from the neonIndex enum representing the neon light to check."
    ],
    "returns": [
      "Returns true if the specified neon light is enabled, false otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nneonIndex: \n\nA value from the neonIndex enum representing the neon light to check.\n\nReturns:\n\nReturns true if the specified neon light is enabled, false otherwise.\n\nGetter to check if one of the neon lights of a vehicle is enabled. This native is the server side getter of IS_VEHICLE_NEON_LIGHT_ENABLED.\n\nenum neonIndex\n{\n    NEON_BACK = 0,   // Back neon\n    NEON_RIGHT = 1,  // Right neon\n    NEON_LEFT = 2,   // Left neon\n    NEON_FRONT = 3   // Front neon\n};"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleNextGear",
    "hash": "0xDDB298AE",
    "code": "-- GET_VEHICLE_NEXT_GEAR\nlocal retval --[[ integer ]] =\n\tGetVehicleNextGear(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleNumberOfWheels",
    "hash": "0xEDF4B0FC",
    "code": "-- GET_VEHICLE_NUMBER_OF_WHEELS\nlocal retval --[[ integer ]] =\n\tGetVehicleNumberOfWheels(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleNumberPlateText",
    "hash": "0xE8522D58",
    "code": "-- GET_VEHICLE_NUMBER_PLATE_TEXT\nlocal retval --[[ string ]] =\n\tGetVehicleNumberPlateText(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleNumberPlateTextIndex",
    "hash": "0x499747B6",
    "code": "-- GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX\nlocal retval --[[ integer ]] =\n\tGetVehicleNumberPlateTextIndex(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleOilLevel",
    "hash": "0xFC7F8EF4",
    "code": "-- GET_VEHICLE_OIL_LEVEL\nlocal retval --[[ number ]] =\n\tGetVehicleOilLevel(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehiclePedIsIn",
    "hash": "0xAFE92319",
    "code": "-- GET_VEHICLE_PED_IS_IN\nlocal retval --[[ Vehicle ]] =\n\tGetVehiclePedIsIn(\n\t\tped --[[ Ped ]], \n\t\tlastVehicle --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "lastVehicle: \n\nFalse = CurrentVehicle, True = LastVehicle"
    ],
    "returns": [
      "The vehicle id. Returns 0 if the ped is/was not in a vehicle."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nlastVehicle: \n\nFalse = CurrentVehicle, True = LastVehicle\n\nReturns:\n\nThe vehicle id. Returns 0 if the ped is/was not in a vehicle.\n\nGets the vehicle the specified Ped is/was in depending on bool value. This native is used server side when using OneSync."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehiclePetrolTankHealth",
    "hash": "0xE41595CE",
    "code": "-- GET_VEHICLE_PETROL_TANK_HEALTH\nlocal retval --[[ number ]] =\n\tGetVehiclePetrolTankHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleRadioStationIndex",
    "hash": "0x57037960",
    "code": "-- GET_VEHICLE_RADIO_STATION_INDEX\nlocal retval --[[ integer ]] =\n\tGetVehicleRadioStationIndex(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleRoofLivery",
    "hash": "0x872CF42",
    "code": "-- GET_VEHICLE_ROOF_LIVERY\nlocal retval --[[ integer ]] =\n\tGetVehicleRoofLivery(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetVehicleSteeringAngle",
    "hash": "0x1382FCEA",
    "code": "-- GET_VEHICLE_STEERING_ANGLE\nlocal retval --[[ number ]] =\n\tGetVehicleSteeringAngle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleSteeringScale",
    "hash": "0x954465DE",
    "code": "-- GET_VEHICLE_STEERING_SCALE\nlocal retval --[[ number ]] =\n\tGetVehicleSteeringScale(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleThrottleOffset",
    "hash": "0xD1D07351",
    "code": "-- GET_VEHICLE_THROTTLE_OFFSET\nlocal retval --[[ number ]] =\n\tGetVehicleThrottleOffset(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "A float among -1 and 1 according if the vehicle is moving forwards or backwards"
    ],
    "description": "Returns:\n\nA float among -1 and 1 according if the vehicle is moving forwards or backwards"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleTopSpeedModifier",
    "hash": "0x998B7FEE",
    "code": "-- GET_VEHICLE_TOP_SPEED_MODIFIER\nlocal retval --[[ number ]] =\n\tGetVehicleTopSpeedModifier(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Returns vehicle's modified top speed."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturns vehicle's modified top speed.\n\nA getter for MODIFY_VEHICLE_TOP_SPEED. Returns -1.0 if a modifier is not set."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleTotalRepairs",
    "hash": "0x9963D5F9",
    "code": "-- GET_VEHICLE_TOTAL_REPAIRS\nlocal retval --[[ integer ]] =\n\tGetVehicleTotalRepairs(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the total amount of repairs. Each repair will increase the count to make it possible to detect client repairs. The value has a range from 0 to 15. Next value after 15 is 0."
    ],
    "description": "Returns:\n\nReturns the total amount of repairs. Each repair will increase the count to make it possible to detect client repairs. The value has a range from 0 to 15. Next value after 15 is 0."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleTurboPressure",
    "hash": "0xE02B51D7",
    "code": "-- GET_VEHICLE_TURBO_PRESSURE\nlocal retval --[[ number ]] =\n\tGetVehicleTurboPressure(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "GetVehicleType",
    "hash": "0xA273060E",
    "code": "-- GET_VEHICLE_TYPE\nlocal retval --[[ string ]] =\n\tGetVehicleType(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle's entity handle."
    ],
    "returns": [
      "If the entity is a vehicle, the vehicle type. If it is not a vehicle, the return value will be null."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle's entity handle.\n\nReturns:\n\nIf the entity is a vehicle, the vehicle type. If it is not a vehicle, the return value will be null.\n\nReturns the type of the passed vehicle.\n\nFor client scripts, reference the more detailed GET_VEHICLE_TYPE_RAW native.\n\nVehicle types\nautomobile\nbike\nboat\nheli\nplane\nsubmarine\ntrailer\ntrain"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleTypeRaw",
    "hash": "0xDE73BC10",
    "code": "-- GET_VEHICLE_TYPE_RAW\nlocal retval --[[ integer ]] =\n\tGetVehicleTypeRaw(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle's entity handle."
    ],
    "returns": [
      "Returns the vehicles model type"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle's entity handle.\n\nReturns:\n\nReturns the vehicles model type\n\nReturns the model type of the vehicle as defined by:\n\nenum VehicleType\n{\n\tVEHICLE_TYPE_NONE = -1,\n\tVEHICLE_TYPE_CAR = 0,\n\tVEHICLE_TYPE_PLANE = 1,\n\tVEHICLE_TYPE_TRAILER = 2,\n\tVEHICLE_TYPE_QUADBIKE = 3,\n\tVEHICLE_TYPE_DRAFT = 4,\n\tVEHICLE_TYPE_SUBMARINECAR = 5,\n\tVEHICLE_TYPE_AMPHIBIOUS_AUTOMOBILE = 6,\n\tVEHICLE_TYPE_AMPHIBIOUS_QUADBIKE = 7,\n\tVEHICLE_TYPE_HELI = 8,\n\tVEHICLE_TYPE_BLIMP = 9,\n\tVEHICLE_TYPE_AUTOGYRO = 10,\n\tVEHICLE_TYPE_BIKE = 11,\n\tVEHICLE_TYPE_BICYCLE = 12,\n\tVEHICLE_TYPE_BOAT = 13,\n\tVEHICLE_TYPE_TRAIN = 14,\n\tVEHICLE_TYPE_SUBMARINE = 15,\n};"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleTyreSmokeColor",
    "hash": "0x75280015",
    "code": "-- GET_VEHICLE_TYRE_SMOKE_COLOR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleTyreSmokeColor(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelBrakePressure",
    "hash": "0x70FE2EFF",
    "code": "-- GET_VEHICLE_WHEEL_BRAKE_PRESSURE\nlocal retval --[[ number ]] =\n\tGetVehicleWheelBrakePressure(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets brake pressure of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS. Normal values around 1.0f when braking."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelFlags",
    "hash": "0xC70FA0C7",
    "code": "-- GET_VEHICLE_WHEEL_FLAGS\nlocal retval --[[ integer ]] =\n\tGetVehicleWheelFlags(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "An unsigned int containing bit flags."
    ],
    "description": "Returns:\n\nAn unsigned int containing bit flags.\n\nGets the flags of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelHealth",
    "hash": "0x54A677F5",
    "code": "-- GET_VEHICLE_WHEEL_HEALTH\nlocal retval --[[ number ]] =\n\tGetVehicleWheelHealth(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelIsPowered",
    "hash": "0x3CCF1B49",
    "code": "-- GET_VEHICLE_WHEEL_IS_POWERED\nlocal retval --[[ boolean ]] =\n\tGetVehicleWheelIsPowered(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets whether the wheel is powered. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS. This is a shortcut to a flag in GET_VEHICLE_WHEEL_FLAGS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelPower",
    "hash": "0xD203287",
    "code": "-- GET_VEHICLE_WHEEL_POWER\nlocal retval --[[ number ]] =\n\tGetVehicleWheelPower(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets power being sent to a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelRimColliderSize",
    "hash": "0xCEE21AB2",
    "code": "-- GET_VEHICLE_WHEEL_RIM_COLLIDER_SIZE\nlocal retval --[[ number ]] =\n\tGetVehicleWheelRimColliderSize(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "wheelIndex: \n\nIndex of wheel, 0-3."
    ],
    "returns": [
      "Float representing size of the rim collider. Not sure what it is used for, probably to detect whether bullets hit rim or tire and puncture it (and to determine size of the wheel when tire is fully blown)."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nwheelIndex: \n\nIndex of wheel, 0-3.\n\nReturns:\n\nFloat representing size of the rim collider. Not sure what it is used for, probably to detect whether bullets hit rim or tire and puncture it (and to determine size of the wheel when tire is fully blown)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelRotationSpeed",
    "hash": "0xEA1859E5",
    "code": "-- GET_VEHICLE_WHEEL_ROTATION_SPEED\nlocal retval --[[ number ]] =\n\tGetVehicleWheelRotationSpeed(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "The angular velocity of the wheel."
    ],
    "description": "Returns:\n\nThe angular velocity of the wheel.\n\nGets the rotation speed of a wheel. This is used internally to calcuate GET_VEHICLE_WHEEL_SPEED. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelSize",
    "hash": "0x4046B66",
    "code": "-- GET_VEHICLE_WHEEL_SIZE\nlocal retval --[[ number ]] =\n\tGetVehicleWheelSize(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for."
    ],
    "returns": [
      "Float representing size of the wheel (usually between 0.5 and 1.5)"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nReturns:\n\nFloat representing size of the wheel (usually between 0.5 and 1.5)\n\nReturns vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle). Only works on non-default wheels (returns 0 in case of default wheels)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelSpeed",
    "hash": "0x149C9DA0",
    "code": "-- GET_VEHICLE_WHEEL_SPEED\nlocal retval --[[ number ]] =\n\tGetVehicleWheelSpeed(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "An integer."
    ],
    "description": "Returns:\n\nAn integer.\n\nGets speed of a wheel at the tyre. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelSteeringAngle",
    "hash": "0xA0867448",
    "code": "-- GET_VEHICLE_WHEEL_STEERING_ANGLE\nlocal retval --[[ number ]] =\n\tGetVehicleWheelSteeringAngle(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "The steering angle of the wheel, with 0 being straight."
    ],
    "description": "Returns:\n\nThe steering angle of the wheel, with 0 being straight.\n\nGets steering angle of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelSurfaceMaterial",
    "hash": "0xA7F04022",
    "code": "-- GET_VEHICLE_WHEEL_SURFACE_MATERIAL\nlocal retval --[[ integer ]] =\n\tGetVehicleWheelSurfaceMaterial(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "wheelIndex: \n\nIndex of wheel, 0-3."
    ],
    "returns": [
      "Integer representing the index of the current surface material of that wheel. Check materials.dat for the indexes."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nwheelIndex: \n\nIndex of wheel, 0-3.\n\nReturns:\n\nInteger representing the index of the current surface material of that wheel. Check materials.dat for the indexes."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelSuspensionCompression",
    "hash": "0x2B48175B",
    "code": "-- GET_VEHICLE_WHEEL_SUSPENSION_COMPRESSION\nlocal retval --[[ number ]] =\n\tGetVehicleWheelSuspensionCompression(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "The current compression of the wheel's suspension."
    ],
    "description": "Returns:\n\nThe current compression of the wheel's suspension.\n\nGets the current suspension compression of a wheel. Returns a positive value. 0 means the suspension is fully extended, the wheel is off the ground. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelTireColliderSize",
    "hash": "0xE0BA9FE6",
    "code": "-- GET_VEHICLE_WHEEL_TIRE_COLLIDER_SIZE\nlocal retval --[[ number ]] =\n\tGetVehicleWheelTireColliderSize(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "wheelIndex: \n\nIndex of wheel, 0-3."
    ],
    "returns": [
      "Float representing size of the wheel collider."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nwheelIndex: \n\nIndex of wheel, 0-3.\n\nReturns:\n\nFloat representing size of the wheel collider."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelTireColliderWidth",
    "hash": "0xEF65929C",
    "code": "-- GET_VEHICLE_WHEEL_TIRE_COLLIDER_WIDTH\nlocal retval --[[ number ]] =\n\tGetVehicleWheelTireColliderWidth(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "wheelIndex: \n\nIndex of wheel, 0-3."
    ],
    "returns": [
      "Float representing width of the wheel collider."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nwheelIndex: \n\nIndex of wheel, 0-3.\n\nReturns:\n\nFloat representing width of the wheel collider."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelTractionVectorLength",
    "hash": "0x3BCFEE14",
    "code": "-- GET_VEHICLE_WHEEL_TRACTION_VECTOR_LENGTH\nlocal retval --[[ number ]] =\n\tGetVehicleWheelTractionVectorLength(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the traction vector length of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleWheelType",
    "hash": "0xDA58D7AE",
    "code": "-- GET_VEHICLE_WHEEL_TYPE\nlocal retval --[[ integer ]] =\n\tGetVehicleWheelType(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelWidth",
    "hash": "0x9C7B59F9",
    "code": "-- GET_VEHICLE_WHEEL_WIDTH\nlocal retval --[[ number ]] =\n\tGetVehicleWheelWidth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for."
    ],
    "returns": [
      "Float representing width of the wheel (usually between 0.1 and 1.5)"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nReturns:\n\nFloat representing width of the wheel (usually between 0.1 and 1.5)\n\nReturns vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle). Only works on non-default wheels (returns 0 in case of default wheels)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelXOffset",
    "hash": "0xCC90CBCA",
    "code": "-- GET_VEHICLE_WHEEL_X_OFFSET\nlocal retval --[[ number ]] =\n\tGetVehicleWheelXOffset(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the offset of the specified wheel relative to the wheel's axle center."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelYRotation",
    "hash": "0x2EA4AFFE",
    "code": "-- GET_VEHICLE_WHEEL_Y_ROTATION\nlocal retval --[[ number ]] =\n\tGetVehicleWheelYRotation(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleWheelieState",
    "hash": "0x137260D1",
    "code": "-- GET_VEHICLE_WHEELIE_STATE\nlocal retval --[[ integer ]] =\n\tGetVehicleWheelieState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nVehicle"
    ],
    "returns": [
      "Vehicle's current wheelie state."
    ],
    "description": "Parameters:\n\nvehicle: \n\nVehicle\n\nReturns:\n\nVehicle's current wheelie state.\n\nList of known states:\n\n1: Not wheeling.\n65: Vehicle is ready to do wheelie (burnouting).\n129: Vehicle is doing wheelie."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GetVehicleWindowTint",
    "hash": "0x13D53892",
    "code": "-- GET_VEHICLE_WINDOW_TINT\nlocal retval --[[ integer ]] =\n\tGetVehicleWindowTint(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleXenonLightsCustomColor",
    "hash": "0xC715F730",
    "code": "-- GET_VEHICLE_XENON_LIGHTS_CUSTOM_COLOR\nlocal retval --[[ boolean ]], red --[[ integer ]], green --[[ integer ]], blue --[[ integer ]] =\n\tGetVehicleXenonLightsCustomColor(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "red: \n\nRed color (0-255).",
      "green: \n\nGreen color (0-255).",
      "blue: \n\nBlue color (0-255)."
    ],
    "returns": [
      "A boolean indicating if vehicle have custom xenon lights RGB color."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nred: \n\nRed color (0-255).\n\ngreen: \n\nGreen color (0-255).\n\nblue: \n\nBlue color (0-255).\n\nReturns:\n\nA boolean indicating if vehicle have custom xenon lights RGB color.\n\nReturns vehicle xenon lights custom RGB color values. Do note this native doesn't return non-RGB colors that was set with _SET_VEHICLE_XENON_LIGHTS_COLOR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVehicleXmasSnowFactor",
    "hash": "0x16605B30",
    "code": "-- GET_VEHICLE_XMAS_SNOW_FACTOR\nlocal retval --[[ number ]] =\n\tGetVehicleXmasSnowFactor()",
    "parameters": [],
    "returns": [
      "Returns the grip factor for the vehicles wheels during xmas weather. default value is 0.2."
    ],
    "description": "Returns:\n\nReturns the grip factor for the vehicles wheels during xmas weather. default value is 0.2.\n\nA getter for SET_VEHICLE_XMAS_SNOW_FACTOR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetVisualSettingFloat",
    "hash": "0x15346B4D",
    "code": "-- GET_VISUAL_SETTING_FLOAT\nlocal retval --[[ number ]] =\n\tGetVisualSettingFloat(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [
      "name: \n\nThe name of the value to get, such as pedLight.color.red."
    ],
    "returns": [
      "Returns the floating point value of the specified visual setting on success."
    ],
    "description": "Parameters:\n\nname: \n\nThe name of the value to get, such as pedLight.color.red.\n\nReturns:\n\nReturns the floating point value of the specified visual setting on success.\n\nA getter for SET_VISUAL_SETTING_FLOAT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadAlpha",
    "hash": "0x14088095",
    "code": "-- GET_WATER_QUAD_ALPHA\nlocal retval --[[ boolean ]], a0 --[[ integer ]], a1 --[[ integer ]], a2 --[[ integer ]], a3 --[[ integer ]] =\n\tGetWaterQuadAlpha(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "a0: \n\nThe a0 level",
      "a1: \n\nThe a1 level",
      "a2: \n\nThe a2 level",
      "a3: \n\nThe a3 level"
    ],
    "returns": [
      "Returns true on success. Alpha values are undefined on failure"
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\na0: \n\nThe a0 level\n\na1: \n\nThe a1 level\n\na2: \n\nThe a2 level\n\na3: \n\nThe a3 level\n\nReturns:\n\nReturns true on success. Alpha values are undefined on failure"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadAtCoords",
    "hash": "0x17321452",
    "code": "-- GET_WATER_QUAD_AT_COORDS\nlocal retval --[[ integer ]] =\n\tGetWaterQuadAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate",
      "y: \n\nThe Y coordinate"
    ],
    "returns": [
      "The water quad index at the given position. Returns -1 if there isn't any there."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate\n\ny: \n\nThe Y coordinate\n\nReturns:\n\nThe water quad index at the given position. Returns -1 if there isn't any there.\n\nThis native returns the index of a water quad if the given point is inside its bounds.\n\nIf you also want to check for water level, check out GetWaterQuadAtCoords_3d"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadAtCoords_3d",
    "hash": "0xF8E03DB8",
    "code": "-- GET_WATER_QUAD_AT_COORDS_3D\nlocal retval --[[ integer ]] =\n\tGetWaterQuadAtCoords_3d(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate",
      "y: \n\nThe Y coordinate",
      "z: \n\nThe water level inside the water quad"
    ],
    "returns": [
      "The water quad index at the given position. Returns -1 if there isn't any there. Also returns -1 if the given point is above the water level."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate\n\ny: \n\nThe Y coordinate\n\nz: \n\nThe water level inside the water quad\n\nReturns:\n\nThe water quad index at the given position. Returns -1 if there isn't any there. Also returns -1 if the given point is above the water level.\n\nThis alternative implementation of GetWaterQuadAtCoords also checks the height of the water level."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadBounds",
    "hash": "0x42E9A06A",
    "code": "-- GET_WATER_QUAD_BOUNDS\nlocal retval --[[ boolean ]], minX --[[ integer ]], minY --[[ integer ]], maxX --[[ integer ]], maxY --[[ integer ]] =\n\tGetWaterQuadBounds(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "minX: \n\nThe minX coordinate",
      "minY: \n\nThe minY coordinate",
      "maxX: \n\nThe maxX coordinate",
      "maxY: \n\nThe maxY coordinate"
    ],
    "returns": [
      "Returns true on success. Bounds are undefined on failure"
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nminX: \n\nThe minX coordinate\n\nminY: \n\nThe minY coordinate\n\nmaxX: \n\nThe maxX coordinate\n\nmaxY: \n\nThe maxY coordinate\n\nReturns:\n\nReturns true on success. Bounds are undefined on failure"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadCount",
    "hash": "0xB1884159",
    "code": "-- GET_WATER_QUAD_COUNT\nlocal retval --[[ integer ]] =\n\tGetWaterQuadCount()",
    "parameters": [],
    "returns": [
      "Returns the amount of water quads loaded."
    ],
    "description": "Returns:\n\nReturns the amount of water quads loaded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadHasLimitedDepth",
    "hash": "0x22EA3BD8",
    "code": "-- GET_WATER_QUAD_HAS_LIMITED_DEPTH\nlocal retval --[[ boolean ]], hasLimitedDepth --[[ integer ]] =\n\tGetWaterQuadHasLimitedDepth(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "hasLimitedDepth:"
    ],
    "returns": [
      "Returns if the given water quad has a limited depth."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nhasLimitedDepth:\nReturns:\n\nReturns if the given water quad has a limited depth."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadIsInvisible",
    "hash": "0x1DEDBD77",
    "code": "-- GET_WATER_QUAD_IS_INVISIBLE\nlocal retval --[[ boolean ]], isInvisible --[[ integer ]] =\n\tGetWaterQuadIsInvisible(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "isInvisible:"
    ],
    "returns": [
      "Returns if the given water quad is invisible"
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nisInvisible:\nReturns:\n\nReturns if the given water quad is invisible"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadLevel",
    "hash": "0x6523816B",
    "code": "-- GET_WATER_QUAD_LEVEL\nlocal retval --[[ boolean ]], waterQuadLevel --[[ number ]] =\n\tGetWaterQuadLevel(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe returned water quad level",
      "waterQuadLevel:"
    ],
    "returns": [
      "Returns true on success. Level is undefined on failure"
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe returned water quad level\n\nwaterQuadLevel:\nReturns:\n\nReturns true on success. Level is undefined on failure\n\nlevel is defined as \"z\" in water.xml"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadNoStencil",
    "hash": "0x6F4ACBA",
    "code": "-- GET_WATER_QUAD_NO_STENCIL\nlocal retval --[[ boolean ]], noStencil --[[ integer ]] =\n\tGetWaterQuadNoStencil(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "noStencil:"
    ],
    "returns": [
      "Returns if the given water quad has no stencil."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nnoStencil:\nReturns:\n\nReturns if the given water quad has no stencil."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaterQuadType",
    "hash": "0xE2501B8B",
    "code": "-- GET_WATER_QUAD_TYPE\nlocal retval --[[ boolean ]], waterType --[[ integer ]] =\n\tGetWaterQuadType(\n\t\twaterQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "waterType:"
    ],
    "returns": [
      "Returns true on success. Type is undefined on failure"
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nwaterType:\nReturns:\n\nReturns true on success. Type is undefined on failure\n\nValid type definitions:\n\n0 Square\n1 Right triangle where the 90 degree angle is at maxX, minY\n2 Right triangle where the 90 degree angle is at minX, minY\n3 Right triangle where the 90 degree angle is at minX, maxY\n4 Right triangle where the 90 degree angle is at maxY, maxY"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaveQuadAmplitude",
    "hash": "0x865139A3",
    "code": "-- GET_WAVE_QUAD_AMPLITUDE\nlocal retval --[[ boolean ]], waveQuadAmplitude --[[ number ]] =\n\tGetWaveQuadAmplitude(\n\t\twaveQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waveQuad: \n\nThe wave quad index",
      "waveQuadAmplitude:"
    ],
    "returns": [
      "Returns true on success. Amplitude is undefined on failure"
    ],
    "description": "Parameters:\n\nwaveQuad: \n\nThe wave quad index\n\nwaveQuadAmplitude:\nReturns:\n\nReturns true on success. Amplitude is undefined on failure"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaveQuadAtCoords",
    "hash": "0x3F5A61A7",
    "code": "-- GET_WAVE_QUAD_AT_COORDS\nlocal retval --[[ integer ]] =\n\tGetWaveQuadAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate",
      "y: \n\nThe Y coordinate"
    ],
    "returns": [
      "The wave quad index at the given position. Returns -1 if there isn't any there."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate\n\ny: \n\nThe Y coordinate\n\nReturns:\n\nThe wave quad index at the given position. Returns -1 if there isn't any there.\n\nThis native returns the index of a wave quad if the given point is inside its bounds."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaveQuadBounds",
    "hash": "0xF86136DB",
    "code": "-- GET_WAVE_QUAD_BOUNDS\nlocal retval --[[ boolean ]], minX --[[ integer ]], minY --[[ integer ]], maxX --[[ integer ]], maxY --[[ integer ]] =\n\tGetWaveQuadBounds(\n\t\twaveQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waveQuad: \n\nThe wave quad index",
      "minX: \n\nThe minX coordinate",
      "minY: \n\nThe minY coordinate",
      "maxX: \n\nThe maxX coordinate",
      "maxY: \n\nThe maxY coordinate"
    ],
    "returns": [
      "Returns true on success. Bounds are undefined on failure"
    ],
    "description": "Parameters:\n\nwaveQuad: \n\nThe wave quad index\n\nminX: \n\nThe minX coordinate\n\nminY: \n\nThe minY coordinate\n\nmaxX: \n\nThe maxX coordinate\n\nmaxY: \n\nThe maxY coordinate\n\nReturns:\n\nReturns true on success. Bounds are undefined on failure"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaveQuadCount",
    "hash": "0x9250C76",
    "code": "-- GET_WAVE_QUAD_COUNT\nlocal retval --[[ integer ]] =\n\tGetWaveQuadCount()",
    "parameters": [],
    "returns": [
      "Returns the amount of wave quads loaded."
    ],
    "description": "Returns:\n\nReturns the amount of wave quads loaded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWaveQuadDirection",
    "hash": "0xCCE49A1C",
    "code": "-- GET_WAVE_QUAD_DIRECTION\nlocal retval --[[ boolean ]], directionX --[[ number ]], directionY --[[ number ]] =\n\tGetWaveQuadDirection(\n\t\twaveQuad --[[ integer ]]\n\t)",
    "parameters": [
      "waveQuad: \n\nThe wave quad index",
      "directionX: \n\nThe wave quad X direction",
      "directionY: \n\nThe wave quad Y direction"
    ],
    "returns": [
      "Returns true on success. Direction values are undefined on failure"
    ],
    "description": "Parameters:\n\nwaveQuad: \n\nThe wave quad index\n\ndirectionX: \n\nThe wave quad X direction\n\ndirectionY: \n\nThe wave quad Y direction\n\nReturns:\n\nReturns true on success. Direction values are undefined on failure"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponAccuracySpread",
    "hash": "0x5343721",
    "code": "-- GET_WEAPON_ACCURACY_SPREAD\nlocal retval --[[ number ]] =\n\tGetWeaponAccuracySpread(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [
      "weaponHash: \n\nWeapon name hash."
    ],
    "returns": [
      "The accuracy spread of a weapon."
    ],
    "description": "Parameters:\n\nweaponHash: \n\nWeapon name hash.\n\nReturns:\n\nThe accuracy spread of a weapon.\n\nA getter for the accuracy spread of a weapon."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponAnimationOverride",
    "hash": "0x63ED2E7",
    "code": "-- GET_WEAPON_ANIMATION_OVERRIDE\nlocal retval --[[ Hash ]] =\n\tGetWeaponAnimationOverride(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "The weapon animation override."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nThe weapon animation override.\n\nA getter for SET_WEAPON_ANIMATION_OVERRIDE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponComponentAccuracyModifier",
    "hash": "0xC693E278",
    "code": "-- GET_WEAPON_COMPONENT_ACCURACY_MODIFIER\nlocal retval --[[ number ]] =\n\tGetWeaponComponentAccuracyModifier(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [
      "componentHash: \n\nWeapon component name hash."
    ],
    "returns": [
      "A weapon component accuracy modifier."
    ],
    "description": "Parameters:\n\ncomponentHash: \n\nWeapon component name hash.\n\nReturns:\n\nA weapon component accuracy modifier.\n\nA getter for CWeaponAccuracyModifier in a weapon component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponComponentCameraHash",
    "hash": "0xACB7E68F",
    "code": "-- GET_WEAPON_COMPONENT_CAMERA_HASH\nlocal retval --[[ integer ]] =\n\tGetWeaponComponentCameraHash(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [
      "componentHash: \n\nWeapon component name hash."
    ],
    "returns": [
      "The hash of the scope camera."
    ],
    "description": "Parameters:\n\ncomponentHash: \n\nWeapon component name hash.\n\nReturns:\n\nThe hash of the scope camera.\n\nA getter for CameraHash in a weapon scope component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponComponentClipSize",
    "hash": "0xE14CF665",
    "code": "-- GET_WEAPON_COMPONENT_CLIP_SIZE\nlocal retval --[[ integer ]] =\n\tGetWeaponComponentClipSize(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [
      "componentHash: \n\nWeapon component name hash."
    ],
    "returns": [
      "A weapon component clip size."
    ],
    "description": "Parameters:\n\ncomponentHash: \n\nWeapon component name hash.\n\nReturns:\n\nA weapon component clip size.\n\nA getter for ClipSize in a weapon component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponComponentDamageModifier",
    "hash": "0x4A0E3855",
    "code": "-- GET_WEAPON_COMPONENT_DAMAGE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetWeaponComponentDamageModifier(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [
      "componentHash: \n\nWeapon component name hash."
    ],
    "returns": [
      "A weapon component damage modifier."
    ],
    "description": "Parameters:\n\ncomponentHash: \n\nWeapon component name hash.\n\nReturns:\n\nA weapon component damage modifier.\n\nA getter for CWeaponDamageModifier in a weapon component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponComponentRangeDamageModifier",
    "hash": "0xE134FB8D",
    "code": "-- GET_WEAPON_COMPONENT_RANGE_DAMAGE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetWeaponComponentRangeDamageModifier(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [
      "componentHash: \n\nWeapon component name hash."
    ],
    "returns": [
      "A weapon component damage modifier."
    ],
    "description": "Parameters:\n\ncomponentHash: \n\nWeapon component name hash.\n\nReturns:\n\nA weapon component damage modifier.\n\nA getter for CWeaponFallOffModifier damage modifier value in a weapon component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponComponentRangeModifier",
    "hash": "0x2FD0BC1B",
    "code": "-- GET_WEAPON_COMPONENT_RANGE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetWeaponComponentRangeModifier(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [
      "componentHash: \n\nWeapon component name hash."
    ],
    "returns": [
      "A weapon component range modifier."
    ],
    "description": "Parameters:\n\ncomponentHash: \n\nWeapon component name hash.\n\nReturns:\n\nA weapon component range modifier.\n\nA getter for CWeaponFallOffModifier range modifier value in a weapon component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponComponentReticuleHash",
    "hash": "0xF9AB9297",
    "code": "-- GET_WEAPON_COMPONENT_RETICULE_HASH\nlocal retval --[[ integer ]] =\n\tGetWeaponComponentReticuleHash(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [
      "componentHash: \n\nWeapon component name hash."
    ],
    "returns": [
      "The hash of the reticule camera."
    ],
    "description": "Parameters:\n\ncomponentHash: \n\nWeapon component name hash.\n\nReturns:\n\nThe hash of the reticule camera.\n\nA getter for ReticuleHash in a weapon scope component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponDamageModifier",
    "hash": "0xD979143",
    "code": "-- GET_WEAPON_DAMAGE_MODIFIER\nlocal retval --[[ number ]] =\n\tGetWeaponDamageModifier(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [
      "weaponHash: \n\nWeapon name hash."
    ],
    "returns": [
      "A weapon damage modifier."
    ],
    "description": "Parameters:\n\nweaponHash: \n\nWeapon name hash.\n\nReturns:\n\nA weapon damage modifier.\n\nA getter for _SET_WEAPON_DAMAGE_MODIFIER."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWeaponRecoilShakeAmplitude",
    "hash": "0x5E1AF5F",
    "code": "-- GET_WEAPON_RECOIL_SHAKE_AMPLITUDE\nlocal retval --[[ number ]] =\n\tGetWeaponRecoilShakeAmplitude(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [
      "weaponHash: \n\nWeapon name hash."
    ],
    "returns": [
      "The recoil shake amplitude of a weapon."
    ],
    "description": "Parameters:\n\nweaponHash: \n\nWeapon name hash.\n\nReturns:\n\nThe recoil shake amplitude of a weapon.\n\nA getter for the recoil shake amplitude of a weapon."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "GetWorldCoordFromScreenCoord",
    "hash": "0xC81D0659",
    "code": "-- GET_WORLD_COORD_FROM_SCREEN_COORD\nlocal worldVector --[[ vector3 ]], normalVector --[[ vector3 ]] =\n\tGetWorldCoordFromScreenCoord(\n\t\tscreenX --[[ number ]], \n\t\tscreenY --[[ number ]]\n\t)",
    "parameters": [
      "screenX: \n\nA screen horizontal axis coordinate (0.0 - 1.0).",
      "screenY: \n\nA screen vertical axis coordinate (0.0 - 1.0).",
      "worldVector: \n\nThe world coord vector pointer.",
      "normalVector: \n\nThe screen normal vector pointer."
    ],
    "returns": [
      "A Vector3 representing the world coordinates relative to the specified screen coordinates and a screen plane normal Vector3 (normalised)."
    ],
    "description": "Parameters:\n\nscreenX: \n\nA screen horizontal axis coordinate (0.0 - 1.0).\n\nscreenY: \n\nA screen vertical axis coordinate (0.0 - 1.0).\n\nworldVector: \n\nThe world coord vector pointer.\n\nnormalVector: \n\nThe screen normal vector pointer.\n\nReturns:\n\nA Vector3 representing the world coordinates relative to the specified screen coordinates and a screen plane normal Vector3 (normalised).\n\nConverts a screen coordinate into its relative world coordinate."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GiveWeaponComponentToPed",
    "hash": "0x3E1E286D",
    "code": "-- GIVE_WEAPON_COMPONENT_TO_PED\nGiveWeaponComponentToPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tcomponentHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "GIVE_WEAPON_COMPONENT_TO_PED\n\nThis is the server-side RPC native equivalent of the client native GIVE_WEAPON_COMPONENT_TO_PED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "GiveWeaponToPed",
    "hash": "0xC4D88A85",
    "code": "-- GIVE_WEAPON_TO_PED\nGiveWeaponToPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tammoCount --[[ integer ]], \n\tisHidden --[[ boolean ]], \n\tbForceInHand --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "GIVE_WEAPON_TO_PED\n\nThis is the server-side RPC native equivalent of the client native GIVE_WEAPON_TO_PED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "HasEntityBeenMarkedAsNoLongerNeeded",
    "hash": "0x9C9A3BE0",
    "code": "-- HAS_ENTITY_BEEN_MARKED_AS_NO_LONGER_NEEDED\nlocal retval --[[ boolean ]] =\n\tHasEntityBeenMarkedAsNoLongerNeeded(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "HasMinimapOverlayLoaded",
    "hash": "0xF7535F32",
    "code": "-- HAS_MINIMAP_OVERLAY_LOADED\nlocal retval --[[ boolean ]] =\n\tHasMinimapOverlayLoaded(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [
      "id: \n\nA minimap overlay ID."
    ],
    "returns": [
      "A boolean indicating load status."
    ],
    "description": "Parameters:\n\nid: \n\nA minimap overlay ID.\n\nReturns:\n\nA boolean indicating load status.\n\nReturns whether or not the specific minimap overlay has loaded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "HasVehicleBeenDamagedByBullets",
    "hash": "0xB8AF3137",
    "code": "-- HAS_VEHICLE_BEEN_DAMAGED_BY_BULLETS\nlocal retval --[[ boolean ]] =\n\tHasVehicleBeenDamagedByBullets(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Returns whether or not the target vehicle has been damaged by bullets."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturns whether or not the target vehicle has been damaged by bullets."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "HasVehicleBeenOwnedByPlayer",
    "hash": "0xE4E83A5B",
    "code": "-- HAS_VEHICLE_BEEN_OWNED_BY_PLAYER\nlocal retval --[[ boolean ]] =\n\tHasVehicleBeenOwnedByPlayer(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "IsAceAllowed",
    "hash": "0x7EBB9929",
    "code": "-- IS_ACE_ALLOWED\nlocal retval --[[ boolean ]] =\n\tIsAceAllowed(\n\t\tobject --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsBigmapActive",
    "hash": "0xFFF65C63",
    "code": "-- IS_BIGMAP_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsBigmapActive()",
    "parameters": [],
    "returns": [
      "A bool indicating if the minimap is currently expanded or normal state."
    ],
    "description": "Returns:\n\nA bool indicating if the minimap is currently expanded or normal state.\n\nReturns true if the minimap is currently expanded. False if it's the normal minimap state. Use IsBigmapFull to check if the full map is currently revealed on the minimap."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsBigmapFull",
    "hash": "0x66EE14B2",
    "code": "-- IS_BIGMAP_FULL\nlocal retval --[[ boolean ]] =\n\tIsBigmapFull()",
    "parameters": [],
    "returns": [
      "Returns true if the full map is currently revealed on the minimap. Use IsBigmapActive to check if the minimap is currently expanded or in it's normal state."
    ],
    "description": "Returns:\n\nReturns true if the full map is currently revealed on the minimap. Use IsBigmapActive to check if the minimap is currently expanded or in it's normal state."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsBoatAnchoredAndFrozen",
    "hash": "0xD5C39EE6",
    "code": "-- IS_BOAT_ANCHORED_AND_FROZEN\nlocal retval --[[ bool ]] =\n\tIsBoatAnchoredAndFrozen(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Returns whether or not the boat is anchored and frozen."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturns whether or not the boat is anchored and frozen."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsBoatWrecked",
    "hash": "0x9049DB44",
    "code": "-- IS_BOAT_WRECKED\nlocal retval --[[ bool ]] =\n\tIsBoatWrecked(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle."
    ],
    "returns": [
      "Returns whether or not the boat is wrecked."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nReturns:\n\nReturns whether or not the boat is wrecked."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsDisabledRawKeyDown",
    "hash": "0x36366EC3",
    "code": "-- IS_DISABLED_RAW_KEY_DOWN\nlocal retval --[[ boolean ]] =\n\tIsDisabledRawKeyDown(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of down state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of down state.\n\nGets if the specified rawKeyIndex is pressed down, even if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME.\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsDisabledRawKeyPressed",
    "hash": "0x1F7CBBAA",
    "code": "-- IS_DISABLED_RAW_KEY_PRESSED\nlocal retval --[[ boolean ]] =\n\tIsDisabledRawKeyPressed(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of pressed state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of pressed state.\n\nGets if the specified rawKeyIndex is pressed, even if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME.\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsDisabledRawKeyReleased",
    "hash": "0x72B66C09",
    "code": "-- IS_DISABLED_RAW_KEY_RELEASED\nlocal retval --[[ boolean ]] =\n\tIsDisabledRawKeyReleased(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of released state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of released state.\n\nGets if the specified rawKeyIndex was released, even if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME.\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsDisabledRawKeyUp",
    "hash": "0x2C033875",
    "code": "-- IS_DISABLED_RAW_KEY_UP\nlocal retval --[[ boolean ]] =\n\tIsDisabledRawKeyUp(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of up state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of up state.\n\nGets if the specified rawKeyIndex is up, even if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME.\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsDuiAvailable",
    "hash": "0x7AAC3B4C",
    "code": "-- IS_DUI_AVAILABLE\nlocal retval --[[ boolean ]] =\n\tIsDuiAvailable(\n\t\tduiObject --[[ long ]]\n\t)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle."
    ],
    "returns": [
      "A boolean indicating TRUE if the browser is created."
    ],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\nReturns:\n\nA boolean indicating TRUE if the browser is created.\n\nReturns whether or not a browser is created for a specified DUI browser object."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "IsDuplicityVersion",
    "hash": "0xCF24C52E",
    "code": "-- IS_DUPLICITY_VERSION\nlocal retval --[[ boolean ]] =\n\tIsDuplicityVersion()",
    "parameters": [],
    "returns": [
      "A boolean value."
    ],
    "description": "Returns:\n\nA boolean value.\n\nGets whether or not this is the CitizenFX server."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "IsEntityPositionFrozen",
    "hash": "0xEDBE6ADD",
    "code": "-- IS_ENTITY_POSITION_FROZEN\nlocal retval --[[ bool ]] =\n\tIsEntityPositionFrozen(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check for"
    ],
    "returns": [
      "Boolean stating if it is frozen or not."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check for\n\nReturns:\n\nBoolean stating if it is frozen or not.\n\nA getter for FREEZE_ENTITY_POSITION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsEntityVisible",
    "hash": "0x120B4ED5",
    "code": "-- IS_ENTITY_VISIBLE\nlocal retval --[[ boolean ]] =\n\tIsEntityVisible(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the entity is visible, false otherwise."
    ],
    "description": "Returns:\n\nReturns true if the entity is visible, false otherwise.\n\nThis native checks if the given entity is visible."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsFlashLightOn",
    "hash": "0x76876154",
    "code": "-- IS_FLASH_LIGHT_ON\nlocal retval --[[ bool ]] =\n\tIsFlashLightOn(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "Whether or not the ped's flash light is on."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nWhether or not the ped's flash light is on."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsHeliTailBoomBreakable",
    "hash": "0x23E46BD7",
    "code": "-- IS_HELI_TAIL_BOOM_BREAKABLE\nlocal retval --[[ boolean ]] =\n\tIsHeliTailBoomBreakable(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns true if the helicopter's tail boom can break, false if it cannot."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns true if the helicopter's tail boom can break, false if it cannot.\n\nThis is a getter for SET_HELI_TAIL_EXPLODE_THROW_DASHBOARD"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsHeliTailBoomBroken",
    "hash": "0x2C59F987",
    "code": "-- IS_HELI_TAIL_BOOM_BROKEN\nlocal retval --[[ boolean ]] =\n\tIsHeliTailBoomBroken(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nThe helicopter to check"
    ],
    "returns": [
      "Returns true if the helicopter's tail boom is broken, false if it is intact."
    ],
    "description": "Parameters:\n\nheli: \n\nThe helicopter to check\n\nReturns:\n\nReturns true if the helicopter's tail boom is broken, false if it is intact."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsNuiFocusKeepingInput",
    "hash": "0x39C9DC92",
    "code": "-- IS_NUI_FOCUS_KEEPING_INPUT\nlocal retval --[[ boolean ]] =\n\tIsNuiFocusKeepingInput()",
    "parameters": [],
    "returns": [
      "True or false."
    ],
    "description": "Returns:\n\nTrue or false.\n\nChecks if keyboard input is enabled during NUI focus using SET_NUI_FOCUS_KEEP_INPUT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsNuiFocused",
    "hash": "0x98545E6D",
    "code": "-- IS_NUI_FOCUSED\nlocal retval --[[ boolean ]] =\n\tIsNuiFocused()",
    "parameters": [],
    "returns": [
      "True or false."
    ],
    "description": "Returns:\n\nTrue or false.\n\nReturns the current NUI focus state previously set with SET_NUI_FOCUS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPedAPlayer",
    "hash": "0x404794CA",
    "code": "-- IS_PED_A_PLAYER\nlocal retval --[[ boolean ]] =\n\tIsPedAPlayer(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the ped is a player, false otherwise."
    ],
    "description": "Returns:\n\nReturns true if the ped is a player, false otherwise.\n\nThis native checks if the given ped is a player."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsPedCollectionComponentVariationGen9Exclusive",
    "hash": "0x33B2AFA2",
    "code": "-- IS_PED_COLLECTION_COMPONENT_VARIATION_GEN9_EXCLUSIVE\nlocal retval --[[ bool ]] =\n\tIsPedCollectionComponentVariationGen9Exclusive(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tcollection --[[ string ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "drawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS."
    ],
    "returns": [
      "Whether or not the ped component variation is a gen9 exclusive (stub assets)."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\ndrawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.\n\nReturns:\n\nWhether or not the ped component variation is a gen9 exclusive (stub assets).\n\nAn alternative to IS_PED_COMPONENT_VARIATION_GEN9_EXCLUSIVE that uses local collection indexing instead of the global one.\n\nThe local / collection relative indexing is useful because the global index may get shifted after Title Update. While local index will remain the same which simplifies migration to the newer game version.\n\nCollection name and local index inside the collection can be obtained from the global index using GET_PED_COLLECTION_NAME_FROM_DRAWABLE and GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE natives."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsPedCollectionComponentVariationValid",
    "hash": "0xCA63A52A",
    "code": "-- IS_PED_COLLECTION_COMPONENT_VARIATION_VALID\nlocal retval --[[ bool ]] =\n\tIsPedCollectionComponentVariationValid(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tcollection --[[ string ]], \n\t\tdrawableId --[[ integer ]], \n\t\ttextureId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "drawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS."
    ],
    "returns": [
      "Returns true if the component variation is valid. This may be useful for randomizing components using loops."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\ndrawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS.\n\nReturns:\n\nReturns true if the component variation is valid. This may be useful for randomizing components using loops.\n\nAn alternative to IS_PED_COMPONENT_VARIATION_VALID that uses local collection indexing instead of the global one.\n\nThe local / collection relative indexing is useful because the global index may get shifted after Title Update. While local index will remain the same which simplifies migration to the newer game version.\n\nCollection name and local index inside the collection can be obtained from the global index using GET_PED_COLLECTION_NAME_FROM_DRAWABLE and GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE natives."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsPedComponentVariationGen9Exclusive",
    "hash": "0xC767B581",
    "code": "-- IS_PED_COMPONENT_VARIATION_GEN9_EXCLUSIVE\nlocal retval --[[ bool ]] =\n\tIsPedComponentVariationGen9Exclusive(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped.",
      "componentId: \n\nThe component id.",
      "drawableId: \n\nThe drawable id."
    ],
    "returns": [
      "Whether or not the ped component variation is a gen9 exclusive (stub assets)."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\ncomponentId: \n\nThe component id.\n\ndrawableId: \n\nThe drawable id.\n\nReturns:\n\nWhether or not the ped component variation is a gen9 exclusive (stub assets)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPedHandcuffed",
    "hash": "0x25865633",
    "code": "-- IS_PED_HANDCUFFED\nlocal retval --[[ bool ]] =\n\tIsPedHandcuffed(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "Whether or not the ped is handcuffed."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nWhether or not the ped is handcuffed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPedRagdoll",
    "hash": "0xC833BBE1",
    "code": "-- IS_PED_RAGDOLL\nlocal retval --[[ bool ]] =\n\tIsPedRagdoll(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "Whether or not the ped is ragdolling."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nWhether or not the ped is ragdolling."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPedStrafing",
    "hash": "0xEFEED13C",
    "code": "-- IS_PED_STRAFING\nlocal retval --[[ bool ]] =\n\tIsPedStrafing(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "Whether or not the ped is strafing."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nWhether or not the ped is strafing."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPedUsingActionMode",
    "hash": "0x5AE7EDA2",
    "code": "-- IS_PED_USING_ACTION_MODE\nlocal retval --[[ bool ]] =\n\tIsPedUsingActionMode(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped."
    ],
    "returns": [
      "Whether or not the ped is using action mode."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped.\n\nReturns:\n\nWhether or not the ped is using action mode."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPlayerAceAllowed",
    "hash": "0xDEDAE23D",
    "code": "-- IS_PLAYER_ACE_ALLOWED\nlocal retval --[[ boolean ]] =\n\tIsPlayerAceAllowed(\n\t\tplayerSrc --[[ string ]], \n\t\tobject --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPlayerCommerceInfoLoaded",
    "hash": "0xBEFE93F4",
    "code": "-- IS_PLAYER_COMMERCE_INFO_LOADED\nlocal retval --[[ boolean ]] =\n\tIsPlayerCommerceInfoLoaded(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [
      "A boolean."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nReturns:\n\nA boolean.\n\nRequests whether or not the commerce data for the specified player has loaded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPlayerCommerceInfoLoadedExt",
    "hash": "0x1D14F4FE",
    "code": "-- IS_PLAYER_COMMERCE_INFO_LOADED_EXT\nlocal retval --[[ boolean ]] =\n\tIsPlayerCommerceInfoLoadedExt(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [
      "A boolean."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nReturns:\n\nA boolean.\n\nRequests whether or not the commerce data for the specified player has loaded from Tebex."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPlayerEvadingWantedLevel",
    "hash": "0x89A3881A",
    "code": "-- IS_PLAYER_EVADING_WANTED_LEVEL\nlocal retval --[[ boolean ]] =\n\tIsPlayerEvadingWantedLevel(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe target player"
    ],
    "returns": [
      "boolean value, depending if the player is evading his wanted level or not."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe target player\n\nReturns:\n\nboolean value, depending if the player is evading his wanted level or not.\n\nThis will return true if the player is evading wanted level, meaning that the wanted level stars are blink.\nOtherwise will return false.\n\nIf the player is not wanted, it simply returns false."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPlayerInFreeCamMode",
    "hash": "0x1F14F2AC",
    "code": "-- IS_PLAYER_IN_FREE_CAM_MODE\nlocal retval --[[ bool ]] =\n\tIsPlayerInFreeCamMode(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player to get the free camera mode status of"
    ],
    "returns": [
      "Returns if the player is in free camera mode."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to get the free camera mode status of\n\nReturns:\n\nReturns if the player is in free camera mode."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsPlayerUsingSuperJump",
    "hash": "0xC7D2C20C",
    "code": "-- IS_PLAYER_USING_SUPER_JUMP\nlocal retval --[[ boolean ]] =\n\tIsPlayerUsingSuperJump(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [
      "A boolean."
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nReturns:\n\nA boolean."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "IsPrincipalAceAllowed",
    "hash": "0x37CF52CE",
    "code": "-- IS_PRINCIPAL_ACE_ALLOWED\nlocal retval --[[ boolean ]] =\n\tIsPrincipalAceAllowed(\n\t\tprincipal --[[ string ]], \n\t\tobject --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsRawKeyDown",
    "hash": "0xD95A7387",
    "code": "-- IS_RAW_KEY_DOWN\nlocal retval --[[ boolean ]] =\n\tIsRawKeyDown(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of down state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of down state.\n\nGets if the specified rawKeyIndex is pressed down on the keyboard.\n\nThis will not be triggered if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsRawKeyPressed",
    "hash": "0x69F7C29E",
    "code": "-- IS_RAW_KEY_PRESSED\nlocal retval --[[ boolean ]] =\n\tIsRawKeyPressed(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of pressed state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of pressed state.\n\nGets if the specified rawKeyIndex is pressed on the keyboard.\n\nThis will not be triggered if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsRawKeyReleased",
    "hash": "0xEAA50861",
    "code": "-- IS_RAW_KEY_RELEASED\nlocal retval --[[ boolean ]] =\n\tIsRawKeyReleased(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of released state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of released state.\n\nGets if the specified rawKeyIndex was just released on the keyboard.\n\nThis will not be triggered if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsRawKeyUp",
    "hash": "0x36F4E505",
    "code": "-- IS_RAW_KEY_UP\nlocal retval --[[ boolean ]] =\n\tIsRawKeyUp(\n\t\trawKeyIndex --[[ integer ]]\n\t)",
    "parameters": [
      "rawKeyIndex: \n\nIndex of raw key from keyboard."
    ],
    "returns": [
      "Returns bool value of up state."
    ],
    "description": "Parameters:\n\nrawKeyIndex: \n\nIndex of raw key from keyboard.\n\nReturns:\n\nReturns bool value of up state.\n\nGets if the specified rawKeyIndex is up on the keyboard.\n\nThis will not be triggered if the key is disabled with DISABLE_RAW_KEY_THIS_FRAME\n\nVirtual key codes can be found here"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsStreamingFileReady",
    "hash": "0xA194934D",
    "code": "-- IS_STREAMING_FILE_READY\nlocal retval --[[ boolean ]] =\n\tIsStreamingFileReady(\n\t\tregisterAs --[[ string ]]\n\t)",
    "parameters": [
      "registerAs: \n\nThe file name to check, for example asset.ydr."
    ],
    "returns": [
      "Whether or not the streaming file has been registered."
    ],
    "description": "Parameters:\n\nregisterAs: \n\nThe file name to check, for example asset.ydr.\n\nReturns:\n\nWhether or not the streaming file has been registered.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nReturns whether an asynchronous streaming file registration completed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsTrackEnabled",
    "hash": "0x31E695CB",
    "code": "-- IS_TRACK_ENABLED\nlocal retval --[[ bool ]] =\n\tIsTrackEnabled(\n\t\ttrack --[[ integer ]]\n\t)",
    "parameters": [
      "track: \n\nThe track id (between 0 - 27)"
    ],
    "returns": [
      "If this track is enabled."
    ],
    "description": "Parameters:\n\ntrack: \n\nThe track id (between 0 - 27)\n\nReturns:\n\nIf this track is enabled.\n\nGetter for SET_TRACK_ENABLED"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsTrackSwitchedOff",
    "hash": "0xE0C53765",
    "code": "-- IS_TRACK_SWITCHED_OFF\nlocal retval --[[ bool ]] =\n\tIsTrackSwitchedOff(\n\t\ttrack --[[ integer ]]\n\t)",
    "parameters": [
      "track: \n\nThe track id (between 0 - 27)"
    ],
    "returns": [
      "If this track allows ambient trains to spawn"
    ],
    "description": "Parameters:\n\ntrack: \n\nThe track id (between 0 - 27)\n\nReturns:\n\nIf this track allows ambient trains to spawn\n\nGetter for SWITCH_TRAIN_TRACK. Determines if ambient trains are able to spawn on this track."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsTrainCaboose",
    "hash": "0xFA9336E5",
    "code": "-- IS_TRAIN_CABOOSE\nlocal retval --[[ bool ]] =\n\tIsTrainCaboose(\n\t\ttrain --[[ Vehicle ]]\n\t)",
    "parameters": [
      "train: \n\nThe train handle"
    ],
    "returns": [
      "Returns true if the train is the caboose of the chain."
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nReturns:\n\nReturns true if the train is the caboose of the chain."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsVehicleAlarmSet",
    "hash": "0xDC921211",
    "code": "-- IS_VEHICLE_ALARM_SET\nlocal retval --[[ boolean ]] =\n\tIsVehicleAlarmSet(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "IsVehicleEngineStarting",
    "hash": "0xBB340D04",
    "code": "-- IS_VEHICLE_ENGINE_STARTING\nlocal retval --[[ boolean ]] =\n\tIsVehicleEngineStarting(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsVehicleExtraTurnedOn",
    "hash": "0x42098B5",
    "code": "-- IS_VEHICLE_EXTRA_TURNED_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleExtraTurnedOn(\n\t\tvehicle --[[ Vehicle ]], \n\t\textraId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsVehicleInteriorLightOn",
    "hash": "0xA411F72C",
    "code": "-- IS_VEHICLE_INTERIOR_LIGHT_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleInteriorLightOn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsVehicleNeedsToBeHotwired",
    "hash": "0xF9933BF4",
    "code": "-- IS_VEHICLE_NEEDS_TO_BE_HOTWIRED\nlocal retval --[[ boolean ]] =\n\tIsVehicleNeedsToBeHotwired(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsVehiclePreviouslyOwnedByPlayer",
    "hash": "0xF849ED67",
    "code": "-- IS_VEHICLE_PREVIOUSLY_OWNED_BY_PLAYER\nlocal retval --[[ boolean ]] =\n\tIsVehiclePreviouslyOwnedByPlayer(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsVehicleSirenOn",
    "hash": "0x25EB5873",
    "code": "-- IS_VEHICLE_SIREN_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleSirenOn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsVehicleTyreBurst",
    "hash": "0x48C80210",
    "code": "-- IS_VEHICLE_TYRE_BURST\nlocal retval --[[ boolean ]] =\n\tIsVehicleTyreBurst(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelID --[[ integer ]], \n\t\tcompletely --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsVehicleWanted",
    "hash": "0xA7DAF7C",
    "code": "-- IS_VEHICLE_WANTED\nlocal retval --[[ boolean ]] =\n\tIsVehicleWanted(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "IsVehicleWheelBrokenOff",
    "hash": "0xCF1BC668",
    "code": "-- IS_VEHICLE_WHEEL_BROKEN_OFF\nlocal retval --[[ boolean ]] =\n\tIsVehicleWheelBrokenOff(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "wheelIndex: \n\nThe wheel index."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nwheelIndex: \n\nThe wheel index.\n\nGetter for BREAK_OFF_VEHICLE_WHEEL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "IsVehicleWindowIntact",
    "hash": "0xAC4EF23D",
    "code": "-- IS_VEHICLE_WINDOW_INTACT\nlocal retval --[[ boolean ]] =\n\tIsVehicleWindowIntact(\n\t\tvehicle --[[ Vehicle ]], \n\t\twindowIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle.",
      "windowIndex: \n\nThe window index."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nwindowIndex: \n\nThe window index.\n\nSee the client-side IS_VEHICLE_WINDOW_INTACT for a window indexes list."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "LeaveCursorMode",
    "hash": "0xADECF19E",
    "code": "-- LEAVE_CURSOR_MODE\nLeaveCursorMode()",
    "parameters": [],
    "returns": [],
    "description": "Leaves cursor mode. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "LoadPlayerCommerceData",
    "hash": "0xA8F63EAB",
    "code": "-- LOAD_PLAYER_COMMERCE_DATA\nLoadPlayerCommerceData(\n\tplayerSrc --[[ string ]]\n)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nRequests the commerce data for the specified player, including the owned SKUs. Use IS_PLAYER_COMMERCE_INFO_LOADED to check if it has loaded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "LoadPlayerCommerceDataExt",
    "hash": "0x7995539E",
    "code": "-- LOAD_PLAYER_COMMERCE_DATA_EXT\nLoadPlayerCommerceDataExt(\n\tplayerSrc --[[ string ]]\n)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nRequests the commerce data from Tebex for the specified player, including the owned SKUs.\n\nUse IS_PLAYER_COMMERCE_INFO_LOADED_EXT to check if it has loaded.\n\nThis will not automatically update whenever a client purchases a package, if you want to fetch new purchases you will need to call this native again.\n\nThis native will temporarily cache the players commerce data for 10 seconds, a call to this native after 10 seconds will re-fetch the players commerce data."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "LoadResourceFile",
    "hash": "0x76A9EE1F",
    "code": "-- LOAD_RESOURCE_FILE\nlocal retval --[[ string ]] =\n\tLoadResourceFile(\n\t\tresourceName --[[ string ]], \n\t\tfileName --[[ string ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe resource name.",
      "fileName: \n\nThe file in the resource."
    ],
    "returns": [
      "The file contents"
    ],
    "description": "Parameters:\n\nresourceName: \n\nThe resource name.\n\nfileName: \n\nThe file in the resource.\n\nReturns:\n\nThe file contents\n\nReads the contents of a text file in a specified resource. If executed on the client, this file has to be included in files in the resource manifest. Example: local data = LoadResourceFile(\"devtools\", \"data.json\")"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "LoadWaterFromPath",
    "hash": "0xF5102568",
    "code": "-- LOAD_WATER_FROM_PATH\nlocal retval --[[ boolean ]] =\n\tLoadWaterFromPath(\n\t\tresourceName --[[ string ]], \n\t\tfileName --[[ string ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe name of the resource containing your modified water definition",
      "fileName: \n\nThe name of the file"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nresourceName: \n\nThe name of the resource containing your modified water definition\n\nfileName: \n\nThe name of the file\n\nReturns:\n\nReturns true on success.\n\nDefine the xml in a resources fxmanifest, under the file(s) section."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleAddVoiceChannelListen",
    "hash": "0xC79F44BF",
    "code": "-- MUMBLE_ADD_VOICE_CHANNEL_LISTEN\nMumbleAddVoiceChannelListen(\n\tchannel --[[ integer ]]\n)",
    "parameters": [
      "channel: \n\nA game voice channel ID."
    ],
    "returns": [],
    "description": "Parameters:\n\nchannel: \n\nA game voice channel ID.\n\nStarts listening to the specified channel, when available."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleAddVoiceTargetChannel",
    "hash": "0x4D386C9E",
    "code": "-- MUMBLE_ADD_VOICE_TARGET_CHANNEL\nMumbleAddVoiceTargetChannel(\n\ttargetId --[[ integer ]], \n\tchannel --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).",
      "channel: \n\nA game voice channel ID."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nchannel: \n\nA game voice channel ID.\n\nAdds the specified channel to the target list for the specified Mumble voice target ID."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleAddVoiceTargetPlayer",
    "hash": "0x32C5355A",
    "code": "-- MUMBLE_ADD_VOICE_TARGET_PLAYER\nMumbleAddVoiceTargetPlayer(\n\ttargetId --[[ integer ]], \n\tplayer --[[ Player ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).",
      "player: \n\nA game player index."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nplayer: \n\nA game player index.\n\nAdds the specified player to the target list for the specified Mumble voice target ID."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleAddVoiceTargetPlayerByServerId",
    "hash": "0x25F2B65F",
    "code": "-- MUMBLE_ADD_VOICE_TARGET_PLAYER_BY_SERVER_ID\nMumbleAddVoiceTargetPlayerByServerId(\n\ttargetId --[[ integer ]], \n\tserverId --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).",
      "serverId: \n\nThe player's server id."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nserverId: \n\nThe player's server id.\n\nAdds the specified player to the target list for the specified Mumble voice target ID."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleClearVoiceChannel",
    "hash": "0xBF847807",
    "code": "-- MUMBLE_CLEAR_VOICE_CHANNEL\nMumbleClearVoiceChannel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleClearVoiceTarget",
    "hash": "0x8555DCBA",
    "code": "-- MUMBLE_CLEAR_VOICE_TARGET\nMumbleClearVoiceTarget(\n\ttargetId --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive)."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nClears the target list for the specified Mumble voice target ID."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleClearVoiceTargetChannels",
    "hash": "0x5EA72E76",
    "code": "-- MUMBLE_CLEAR_VOICE_TARGET_CHANNELS\nMumbleClearVoiceTargetChannels(\n\ttargetId --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive)."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nClears channels from the target list for the specified Mumble voice target ID."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleClearVoiceTargetPlayers",
    "hash": "0x912E21DA",
    "code": "-- MUMBLE_CLEAR_VOICE_TARGET_PLAYERS\nMumbleClearVoiceTargetPlayers(\n\ttargetId --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive)."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nClears players from the target list for the specified Mumble voice target ID."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "MumbleCreateChannel",
    "hash": "0x262663C5",
    "code": "-- MUMBLE_CREATE_CHANNEL\nMumbleCreateChannel(\n\tid --[[ integer ]]\n)",
    "parameters": [
      "id: \n\nID of the channel."
    ],
    "returns": [],
    "description": "Parameters:\n\nid: \n\nID of the channel.\n\nCreate a permanent voice channel."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleDoesChannelExist",
    "hash": "0xCC8CA25",
    "code": "-- MUMBLE_DOES_CHANNEL_EXIST\nlocal retval --[[ boolean ]] =\n\tMumbleDoesChannelExist(\n\t\tchannel --[[ integer ]]\n\t)",
    "parameters": [
      "channel: \n\nA game voice channel ID."
    ],
    "returns": [
      "True if the specific channel exists. False otherwise."
    ],
    "description": "Parameters:\n\nchannel: \n\nA game voice channel ID.\n\nReturns:\n\nTrue if the specific channel exists. False otherwise.\n\nCheck whether specified channel exists on the Mumble server."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleGetTalkerProximity",
    "hash": "0x84E02A32",
    "code": "-- MUMBLE_GET_TALKER_PROXIMITY\nlocal retval --[[ number ]] =\n\tMumbleGetTalkerProximity()",
    "parameters": [],
    "returns": [
      "Talker proximity value."
    ],
    "description": "Returns:\n\nTalker proximity value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleGetVoiceChannelFromServerId",
    "hash": "0x221C09F1",
    "code": "-- MUMBLE_GET_VOICE_CHANNEL_FROM_SERVER_ID\nlocal retval --[[ integer ]] =\n\tMumbleGetVoiceChannelFromServerId(\n\t\tserverId --[[ integer ]]\n\t)",
    "parameters": [
      "serverId: \n\nThe player's server id."
    ],
    "returns": [
      "Int representing the identifier of the voice channel."
    ],
    "description": "Parameters:\n\nserverId: \n\nThe player's server id.\n\nReturns:\n\nInt representing the identifier of the voice channel.\n\nReturns the mumble voice channel from a player's server id."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleIsActive",
    "hash": "0xE820BC10",
    "code": "-- MUMBLE_IS_ACTIVE\nlocal retval --[[ boolean ]] =\n\tMumbleIsActive()",
    "parameters": [],
    "returns": [
      "True if the player has enabled voice chat."
    ],
    "description": "Returns:\n\nTrue if the player has enabled voice chat."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleIsConnected",
    "hash": "0xB816370A",
    "code": "-- MUMBLE_IS_CONNECTED\nlocal retval --[[ boolean ]] =\n\tMumbleIsConnected()",
    "parameters": [],
    "returns": [
      "True if the player is connected to a mumble server."
    ],
    "description": "Returns:\n\nTrue if the player is connected to a mumble server.\n\nThis native will return true if the user succesfully connected to the voice server. If the user disabled the voice-chat setting it will return false."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "MumbleIsPlayerMuted",
    "hash": "0x1D5D50C2",
    "code": "-- MUMBLE_IS_PLAYER_MUTED\nlocal retval --[[ boolean ]] =\n\tMumbleIsPlayerMuted(\n\t\tplayerSrc --[[ integer ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player to get the mute state for"
    ],
    "returns": [
      "Whether or not the player is muted"
    ],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to get the mute state for\n\nReturns:\n\nWhether or not the player is muted\n\nChecks if the player is currently muted"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleIsPlayerTalking",
    "hash": "0x33EEF97F",
    "code": "-- MUMBLE_IS_PLAYER_TALKING\nlocal retval --[[ boolean ]] =\n\tMumbleIsPlayerTalking(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [
      "player: \n\nThe target player."
    ],
    "returns": [
      "Whether or not the player is talking."
    ],
    "description": "Parameters:\n\nplayer: \n\nThe target player.\n\nReturns:\n\nWhether or not the player is talking."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleRemoveVoiceChannelListen",
    "hash": "0x231523B7",
    "code": "-- MUMBLE_REMOVE_VOICE_CHANNEL_LISTEN\nMumbleRemoveVoiceChannelListen(\n\tchannel --[[ integer ]]\n)",
    "parameters": [
      "channel: \n\nA game voice channel ID."
    ],
    "returns": [],
    "description": "Parameters:\n\nchannel: \n\nA game voice channel ID.\n\nStops listening to the specified channel."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleRemoveVoiceTargetChannel",
    "hash": "0x268DB867",
    "code": "-- MUMBLE_REMOVE_VOICE_TARGET_CHANNEL\nMumbleRemoveVoiceTargetChannel(\n\ttargetId --[[ integer ]], \n\tchannel --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).",
      "channel: \n\nThe game voice channel ID to remove from the target."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nchannel: \n\nThe game voice channel ID to remove from the target.\n\nRemoves the specified voice channel from the user's voice targets.\n\nPerforms the opposite operation of MUMBLE_ADD_VOICE_TARGET_CHANNEL"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleRemoveVoiceTargetPlayer",
    "hash": "0x88CD646F",
    "code": "-- MUMBLE_REMOVE_VOICE_TARGET_PLAYER\nMumbleRemoveVoiceTargetPlayer(\n\ttargetId --[[ integer ]], \n\tplayer --[[ Player ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).",
      "player: \n\nThe player index to remove from the target."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nplayer: \n\nThe player index to remove from the target.\n\nRemoves the specified player from the user's voice targets.\n\nPerforms the opposite operation of MUMBLE_ADD_VOICE_TARGET_PLAYER"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleRemoveVoiceTargetPlayerByServerId",
    "hash": "0x930BD34B",
    "code": "-- MUMBLE_REMOVE_VOICE_TARGET_PLAYER_BY_SERVER_ID\nMumbleRemoveVoiceTargetPlayerByServerId(\n\ttargetId --[[ integer ]], \n\tserverId --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).",
      "serverId: \n\nThe player's server id to remove from the target."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive).\n\nserverId: \n\nThe player's server id to remove from the target.\n\nRemoves the specified player from the user's voice targets.\n\nPerforms the opposite operation of MUMBLE_ADD_VOICE_TARGET_PLAYER_BY_SERVER_ID"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetActive",
    "hash": "0xD932A3F3",
    "code": "-- MUMBLE_SET_ACTIVE\nMumbleSetActive(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nVoice chat state."
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nVoice chat state."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetAudioInputDistance",
    "hash": "0x1B1052E2",
    "code": "-- MUMBLE_SET_AUDIO_INPUT_DISTANCE\nMumbleSetAudioInputDistance(\n\tdistance --[[ number ]]\n)",
    "parameters": [
      "distance: \n\nThe input distance."
    ],
    "returns": [],
    "description": "Parameters:\n\ndistance: \n\nThe input distance.\n\nSets the current input distance. The player will be able to talk to other players within this distance."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetAudioInputIntent",
    "hash": "0x6383526B",
    "code": "-- MUMBLE_SET_AUDIO_INPUT_INTENT\nMumbleSetAudioInputIntent(\n\tintentHash --[[ Hash ]]\n)",
    "parameters": [
      "intentHash: \n\nThe intent hash."
    ],
    "returns": [],
    "description": "Parameters:\n\nintentHash: \n\nThe intent hash.\n\nUse this native to disable noise suppression and high pass filters.\n\nThe possible intents for this are as follows (backticks are used to represent hashes):\n\nIndex\tDescription\n`speech`\tDefault intent\n`music`\tDisable noise suppression and high pass filter"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetAudioOutputDistance",
    "hash": "0x74C597D9",
    "code": "-- MUMBLE_SET_AUDIO_OUTPUT_DISTANCE\nMumbleSetAudioOutputDistance(\n\tdistance --[[ number ]]\n)",
    "parameters": [
      "distance: \n\nThe output distance."
    ],
    "returns": [],
    "description": "Parameters:\n\ndistance: \n\nThe output distance.\n\nSets the current output distance. The player will be able to hear other players talking within this distance."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "MumbleSetPlayerMuted",
    "hash": "0xCC6C2EB1",
    "code": "-- MUMBLE_SET_PLAYER_MUTED\nMumbleSetPlayerMuted(\n\tplayerSrc --[[ integer ]], \n\ttoggle --[[ bool ]]\n)",
    "parameters": [
      "playerSrc: \n\nThe player to set the mute state of",
      "toggle: \n\nWhether to mute or unmute the player"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to set the mute state of\n\ntoggle: \n\nWhether to mute or unmute the player\n\nMutes or unmutes the specified player"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetServerAddress",
    "hash": "0xE6EB2CD8",
    "code": "-- MUMBLE_SET_SERVER_ADDRESS\nMumbleSetServerAddress(\n\taddress --[[ string ]], \n\tport --[[ integer ]]\n)",
    "parameters": [
      "address: \n\nThe address of the mumble server.",
      "port: \n\nThe port of the mumble server."
    ],
    "returns": [],
    "description": "Parameters:\n\naddress: \n\nThe address of the mumble server.\n\nport: \n\nThe port of the mumble server.\n\nChanges the Mumble server address to connect to, and reconnects to the new address.\n\nSetting the address to an empty string and the port to -1 will reset to the built in FXServer Mumble Implementation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetSubmixForServerId",
    "hash": "0xFE3A3054",
    "code": "-- MUMBLE_SET_SUBMIX_FOR_SERVER_ID\nMumbleSetSubmixForServerId(\n\tserverId --[[ integer ]], \n\tsubmixId --[[ integer ]]\n)",
    "parameters": [
      "serverId: \n\nThe player's server ID.",
      "submixId: \n\nThe submix ID."
    ],
    "returns": [],
    "description": "Parameters:\n\nserverId: \n\nThe player's server ID.\n\nsubmixId: \n\nThe submix ID.\n\nSets the audio submix ID for a specified player using Mumble 'Native Audio' functionality."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetTalkerProximity",
    "hash": "0x74E927B0",
    "code": "-- MUMBLE_SET_TALKER_PROXIMITY\nMumbleSetTalkerProximity(\n\tvalue --[[ number ]]\n)",
    "parameters": [
      "value: \n\nProximity value."
    ],
    "returns": [],
    "description": "Parameters:\n\nvalue: \n\nProximity value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetVoiceChannel",
    "hash": "0x8737EEE8",
    "code": "-- MUMBLE_SET_VOICE_CHANNEL\nMumbleSetVoiceChannel(\n\tchannel --[[ integer ]]\n)",
    "parameters": [
      "channel: \n\nA game voice channel ID."
    ],
    "returns": [],
    "description": "Parameters:\n\nchannel: \n\nA game voice channel ID."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetVoiceTarget",
    "hash": "0x960A4A95",
    "code": "-- MUMBLE_SET_VOICE_TARGET\nMumbleSetVoiceTarget(\n\ttargetId --[[ integer ]]\n)",
    "parameters": [
      "targetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive). 0 disables voice targets, and 31 is server loopback."
    ],
    "returns": [],
    "description": "Parameters:\n\ntargetId: \n\nA Mumble voice target ID, ranging from 1..30 (inclusive). 0 disables voice targets, and 31 is server loopback.\n\nSets the current Mumble voice target ID to broadcast voice to."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetVolumeOverride",
    "hash": "0x61C309E3",
    "code": "-- MUMBLE_SET_VOLUME_OVERRIDE\nMumbleSetVolumeOverride(\n\tplayer --[[ Player ]], \n\tvolume --[[ number ]]\n)",
    "parameters": [
      "player: \n\nA game player index.",
      "volume: \n\nThe volume, ranging from 0.0 to 1.0 (or above)."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nA game player index.\n\nvolume: \n\nThe volume, ranging from 0.0 to 1.0 (or above).\n\nOverrides the output volume for a particular player on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.\n\nSet to -1.0 to reset the Volume override."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "MumbleSetVolumeOverrideByServerId",
    "hash": "0xCE8E25B4",
    "code": "-- MUMBLE_SET_VOLUME_OVERRIDE_BY_SERVER_ID\nMumbleSetVolumeOverrideByServerId(\n\tserverId --[[ integer ]], \n\tvolume --[[ number ]]\n)",
    "parameters": [
      "serverId: \n\nThe player's server id.",
      "volume: \n\nThe volume, ranging from 0.0 to 1.0 (or above)."
    ],
    "returns": [],
    "description": "Parameters:\n\nserverId: \n\nThe player's server id.\n\nvolume: \n\nThe volume, ranging from 0.0 to 1.0 (or above).\n\nOverrides the output volume for a particular player with the specified server id and player name on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "NetworkGetEntityFromNetworkId",
    "hash": "0x5B912C3F",
    "code": "-- NETWORK_GET_ENTITY_FROM_NETWORK_ID\nlocal retval --[[ Entity ]] =\n\tNetworkGetEntityFromNetworkId(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "NetworkGetEntityOwner",
    "hash": "0x526FEE31",
    "code": "-- NETWORK_GET_ENTITY_OWNER\nlocal retval --[[ integer ]] =\n\tNetworkGetEntityOwner(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the owner for."
    ],
    "returns": [
      "On the server, the server ID of the entity owner. On the client, returns the player/slot ID of the entity owner."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the owner for.\n\nReturns:\n\nOn the server, the server ID of the entity owner. On the client, returns the player/slot ID of the entity owner.\n\nReturns the owner ID of the specified entity."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "NetworkGetFirstEntityOwner",
    "hash": "0x1E546224",
    "code": "-- NETWORK_GET_FIRST_ENTITY_OWNER\nlocal retval --[[ integer ]] =\n\tNetworkGetFirstEntityOwner(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the first owner for."
    ],
    "returns": [
      "The server ID of the first entity owner."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the first owner for.\n\nReturns:\n\nThe server ID of the first entity owner.\n\nReturns the first owner ID of the specified entity."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "NetworkGetNetworkIdFromEntity",
    "hash": "0x9E35DAB6",
    "code": "-- NETWORK_GET_NETWORK_ID_FROM_ENTITY\nlocal retval --[[ integer ]] =\n\tNetworkGetNetworkIdFromEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "NetworkGetVoiceProximityOverrideForPlayer",
    "hash": "0xFFEEF513",
    "code": "-- NETWORK_GET_VOICE_PROXIMITY_OVERRIDE_FOR_PLAYER\nlocal retval --[[ vector3 ]] =\n\tNetworkGetVoiceProximityOverrideForPlayer(\n\t\tplayerSrc --[[ string ]]\n\t)",
    "parameters": [
      "playerSrc: \n\nThe player handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "OnesyncEnableRemoteAttachmentSanitization",
    "hash": "0x30CE39D8",
    "code": "-- ONESYNC_ENABLE_REMOTE_ATTACHMENT_SANITIZATION\nOnesyncEnableRemoteAttachmentSanitization(\n\tenable --[[ boolean ]]\n)",
    "parameters": [
      "enable: \n\nWhether to enable sanitization."
    ],
    "returns": [],
    "description": "Parameters:\n\nenable: \n\nWhether to enable sanitization.\n\nToggles a check that prevents attaching (networked) entities to remotely owned peds. This is disabled by default."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "OverridePedsCanStandOnTopFlag",
    "hash": "0x90A9E0B2",
    "code": "-- OVERRIDE_PEDS_CAN_STAND_ON_TOP_FLAG\nOverridePedsCanStandOnTopFlag(\n\tflag --[[ boolean ]]\n)",
    "parameters": [
      "flag: \n\ntrue to override, false to use default game behavior."
    ],
    "returns": [],
    "description": "Parameters:\n\nflag: \n\ntrue to override, false to use default game behavior.\n\nSets whether peds can stand on top of all vehicles without falling off.\n\nNote this flag is not replicated automatically, you will have to manually do so."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "OverridePedsUseDefaultDriveByClipset",
    "hash": "0xB14F8EAD",
    "code": "-- OVERRIDE_PEDS_USE_DEFAULT_DRIVE_BY_CLIPSET\nOverridePedsUseDefaultDriveByClipset(\n\tflag --[[ boolean ]]\n)",
    "parameters": [
      "flag: \n\ntrue to override, false to use default game behavior."
    ],
    "returns": [],
    "description": "Parameters:\n\nflag: \n\ntrue to override, false to use default game behavior.\n\nAllows the bypassing of default game behavior that prevents the use of SET_PED_DRIVE_BY_CLIPSET_OVERRIDE in certain scenarios to avoid clipping issues (e.g., when there is more than one Ped in a vehicle).\n\nNote: This flag and the overridden clipset are not replicated values and require synchronization through user scripts. Additionally, current game behavior also restricts applying this clipset locally when in first-person mode and will require a temporary workaround."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "OverridePopGroups",
    "hash": "0xD3BC438F",
    "code": "-- OVERRIDE_POP_GROUPS\nOverridePopGroups(\n\tpath --[[ string ]]\n)",
    "parameters": [
      "path: \n\nThe file path to load (popgroups, @resource/popgroups), or null to reload the default population groups file."
    ],
    "returns": [],
    "description": "Parameters:\n\npath: \n\nThe file path to load (popgroups, @resource/popgroups), or null to reload the default population groups file.\n\nReplaces the popgroups (CPopGroupList) meta file with the file in the specified path."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "OverrideReactionToVehicleSiren",
    "hash": "0x3F3EB3F7",
    "code": "-- OVERRIDE_REACTION_TO_VEHICLE_SIREN\nOverrideReactionToVehicleSiren(\n\tstate --[[ boolean ]], \n\treaction --[[ integer ]]\n)",
    "parameters": [
      "state: \n\nToggle on or off",
      "reaction: \n\nDecide how they should react"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nToggle on or off\n\nreaction: \n\nDecide how they should react\n\nSetting the state to true and a value between 0 and 2 will cause pedestrian vehicles to react accordingly to sirens.\n\nenum Reactions {\n    Left = 0,\n    Right = 1,\n    Stop = 2\n}"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "OverrideVehiclePedsCanStandOnTopFlag",
    "hash": "0x7FA03E76",
    "code": "-- OVERRIDE_VEHICLE_PEDS_CAN_STAND_ON_TOP_FLAG\nOverrideVehiclePedsCanStandOnTopFlag(\n\tvehicle --[[ Vehicle ]], \n\tcan --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle.",
      "can: \n\nCan they?"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle.\n\ncan: \n\nCan they?\n\nOverrides whether or not peds can stand on top of the specified vehicle.\n\nNote this flag is not replicated automatically, you will have to manually do so."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "PerformHttpRequestInternal",
    "hash": "0x8E8CC653",
    "code": "-- PERFORM_HTTP_REQUEST_INTERNAL\nlocal retval --[[ integer ]] =\n\tPerformHttpRequestInternal(\n\t\trequestData --[[ string ]], \n\t\trequestDataLength --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "PerformHttpRequestInternalEx",
    "hash": "0x6B171E87",
    "code": "-- PERFORM_HTTP_REQUEST_INTERNAL_EX\nlocal retval --[[ integer ]] =\n\tPerformHttpRequestInternalEx(\n\t\trequestData --[[ object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "PrintStructuredTrace",
    "hash": "0x90892DED",
    "code": "-- PRINT_STRUCTURED_TRACE\nPrintStructuredTrace(\n\tjsonString --[[ string ]]\n)",
    "parameters": [
      "jsonString: \n\nJSON data to submit as payload in the script_structured_trace event."
    ],
    "returns": [],
    "description": "Parameters:\n\njsonString: \n\nJSON data to submit as payload in the script_structured_trace event.\n\nPrints 'structured trace' data to the server file descriptor 3 channel. This is not generally useful outside of server monitoring utilities."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "ProfilerEnterScope",
    "hash": "0xC795A4A9",
    "code": "-- PROFILER_ENTER_SCOPE\nProfilerEnterScope(\n\tscopeName --[[ string ]]\n)",
    "parameters": [
      "scopeName: \n\nScope name."
    ],
    "returns": [],
    "description": "Parameters:\n\nscopeName: \n\nScope name.\n\nScope entry for profiler."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "ProfilerExitScope",
    "hash": "0xB39CA35C",
    "code": "-- PROFILER_EXIT_SCOPE\nProfilerExitScope()",
    "parameters": [],
    "returns": [],
    "description": "Scope exit for profiler."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "ProfilerIsRecording",
    "hash": "0xF8B7D7BB",
    "code": "-- PROFILER_IS_RECORDING\nlocal retval --[[ boolean ]] =\n\tProfilerIsRecording()",
    "parameters": [],
    "returns": [
      "True or false."
    ],
    "description": "Returns:\n\nTrue or false.\n\nReturns true if the profiler is active."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterArchetypes",
    "hash": "0x3C2F9037",
    "code": "-- REGISTER_ARCHETYPES\nRegisterArchetypes(\n\tfactory --[[ func ]]\n)",
    "parameters": [
      "factory: \n\nA function returning a list of archetypes."
    ],
    "returns": [],
    "description": "Parameters:\n\nfactory: \n\nA function returning a list of archetypes.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nRegisters a set of archetypes with the game engine. These should match CBaseArchetypeDef class information from the game."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "RegisterCommand",
    "hash": "0x5FA79B0F",
    "code": "-- REGISTER_COMMAND\nRegisterCommand(\n\tcommandName --[[ string ]], \n\thandler --[[ func ]], \n\trestricted --[[ boolean ]]\n)",
    "parameters": [
      "commandName: \n\nThe command you want to register.",
      "handler: \n\nA handler function that gets called whenever the command is executed.",
      "restricted: \n\nIf this is a server command and you set this to true, then players will need the command.yourCommandName ace permission to execute this command."
    ],
    "returns": [],
    "description": "Parameters:\n\ncommandName: \n\nThe command you want to register.\n\nhandler: \n\nA handler function that gets called whenever the command is executed.\n\nrestricted: \n\nIf this is a server command and you set this to true, then players will need the command.yourCommandName ace permission to execute this command.\n\nRegistered commands can be executed by entering them in the client console (this works for client side and server side registered commands). Or by entering them in the server console/through an RCON client (only works for server side registered commands). Or if you use a supported chat resource, like the default one provided in the cfx-server-data repository, then you can enter the command in chat by prefixing it with a /.\n\nCommands registered using this function can also be executed by resources, using the ExecuteCommand native.\n\nThe restricted bool is not used on the client side. Permissions can only be checked on the server side, so if you want to limit your command with an ace permission automatically, make it a server command (by registering it in a server script).\n\nExample result:"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RegisterConsoleListener",
    "hash": "0x281B5448",
    "code": "-- REGISTER_CONSOLE_LISTENER\nRegisterConsoleListener(\n\tlistener --[[ func ]]\n)",
    "parameters": [
      "listener: \n\nA function of (channel: string, message: string) => void. The message might contain \\n."
    ],
    "returns": [],
    "description": "Parameters:\n\nlistener: \n\nA function of (channel: string, message: string) => void. The message might contain \\n.\n\nRegisters a listener for console output messages."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterFontFile",
    "hash": "0x1B3A363",
    "code": "-- REGISTER_FONT_FILE\nRegisterFontFile(\n\tfileName --[[ string ]]\n)",
    "parameters": [
      "fileName: \n\nThe name of the .gfx file, without extension."
    ],
    "returns": [],
    "description": "Parameters:\n\nfileName: \n\nThe name of the .gfx file, without extension.\n\nRegisters a specified .gfx file as GFx font library. The .gfx file has to be registered with the streamer already."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterFontId",
    "hash": "0xACF6D8EE",
    "code": "-- REGISTER_FONT_ID\nlocal retval --[[ integer ]] =\n\tRegisterFontId(\n\t\tfontName --[[ string ]]\n\t)",
    "parameters": [
      "fontName: \n\nThe name of the font in the GFx font library."
    ],
    "returns": [
      "An index to use with SET_TEXT_FONT and similar natives."
    ],
    "description": "Parameters:\n\nfontName: \n\nThe name of the font in the GFx font library.\n\nReturns:\n\nAn index to use with SET_TEXT_FONT and similar natives.\n\nRegisters a specified font name for use with text draw commands."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterKeyMapping",
    "hash": "0xD7664FD1",
    "code": "-- REGISTER_KEY_MAPPING\nRegisterKeyMapping(\n\tcommandString --[[ string ]], \n\tdescription --[[ string ]], \n\tdefaultMapper --[[ string ]], \n\tdefaultParameter --[[ string ]]\n)",
    "parameters": [
      "commandString: \n\nThe command to execute, and the identifier of the binding.",
      "description: \n\nA description for in the settings menu.",
      "defaultMapper: \n\nThe mapper ID to use for the default binding, e.g. keyboard.",
      "defaultParameter: \n\nThe IO parameter ID to use for the default binding, e.g. f3."
    ],
    "returns": [],
    "description": "Parameters:\n\ncommandString: \n\nThe command to execute, and the identifier of the binding.\n\ndescription: \n\nA description for in the settings menu.\n\ndefaultMapper: \n\nThe mapper ID to use for the default binding, e.g. keyboard.\n\ndefaultParameter: \n\nThe IO parameter ID to use for the default binding, e.g. f3.\n\nRegisters a key mapping for the current resource.\n\nSee the related cookbook post for more information.\n\nBelow you can find some examples on how to create these keybindings as well as the alternate keybinding syntax, which is preceded by ~! to indicate that it's an alternate key."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterNuiCallback",
    "hash": "0xC59B980C",
    "code": "-- REGISTER_NUI_CALLBACK\nRegisterNuiCallback(\n\tcallbackType --[[ string ]], \n\tcallback --[[ func ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterNuiCallbackType",
    "hash": "0xCD03CDA9",
    "code": "-- REGISTER_NUI_CALLBACK_TYPE\nRegisterNuiCallbackType(\n\tcallbackType --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterRawNuiCallback",
    "hash": "0xA8AE9C2F",
    "code": "-- REGISTER_RAW_NUI_CALLBACK\nRegisterRawNuiCallback(\n\tcallbackType --[[ string ]], \n\tcallback --[[ func ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "RegisterResourceAsEventHandler",
    "hash": "0xD233A168",
    "code": "-- REGISTER_RESOURCE_AS_EVENT_HANDLER\nRegisterResourceAsEventHandler(\n\teventName --[[ string ]]\n)",
    "parameters": [
      "eventName: \n\nAn event name, or \"*\" to disable HLL event filtering for this resource."
    ],
    "returns": [],
    "description": "Parameters:\n\neventName: \n\nAn event name, or \"*\" to disable HLL event filtering for this resource.\n\nAn internal function which allows the current resource's HLL script runtimes to receive state for the specified event."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RegisterResourceAsset",
    "hash": "0x9862B266",
    "code": "-- REGISTER_RESOURCE_ASSET\nlocal retval --[[ string ]] =\n\tRegisterResourceAsset(\n\t\tresourceName --[[ string ]], \n\t\tfileName --[[ string ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe resource to add the asset to.",
      "fileName: \n\nA file name in the resource."
    ],
    "returns": [
      "A cache string to pass to REGISTER_STREAMING_FILE_FROM_CACHE on the client."
    ],
    "description": "Parameters:\n\nresourceName: \n\nThe resource to add the asset to.\n\nfileName: \n\nA file name in the resource.\n\nReturns:\n\nA cache string to pass to REGISTER_STREAMING_FILE_FROM_CACHE on the client.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nRegisters a cached resource asset with the resource system, similar to the automatic scanning of the stream/ folder."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RegisterResourceBuildTaskFactory",
    "hash": "0x285B43CA",
    "code": "-- REGISTER_RESOURCE_BUILD_TASK_FACTORY\nRegisterResourceBuildTaskFactory(\n\tfactoryId --[[ string ]], \n\tfactoryFn --[[ func ]]\n)",
    "parameters": [
      "factoryId: \n\nThe identifier for the build task.",
      "factoryFn: \n\nThe factory function."
    ],
    "returns": [],
    "description": "Parameters:\n\nfactoryId: \n\nThe identifier for the build task.\n\nfactoryFn: \n\nThe factory function.\n\nRegisters a build task factory for resources. The function should return an object (msgpack map) with the following fields:\n\n{\n// returns whether the specific resource should be built\nshouldBuild = func(resourceName: string): bool,\n\n// asynchronously start building the specific resource.\n// call cb when completed\nbuild = func(resourceName: string, cb: func(success: bool, status: string): void): void\n}"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterRopeData",
    "hash": "0xF213AE8D",
    "code": "-- REGISTER_ROPE_DATA\nlocal retval --[[ integer ]] =\n\tRegisterRopeData(\n\t\tnumSections --[[ integer ]], \n\t\tradius --[[ number ]], \n\t\tdiffuseTextureName --[[ string ]], \n\t\tnormalMapName --[[ string ]], \n\t\tdistanceMappingScale --[[ number ]], \n\t\tuvScaleX --[[ number ]], \n\t\tuvScaleY --[[ number ]], \n\t\tspecularFresnel --[[ number ]], \n\t\tspecularFalloff --[[ number ]], \n\t\tspecularIntensity --[[ number ]], \n\t\tbumpiness --[[ number ]], \n\t\tcolor --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns a non-negative value on success, or -1 if the rope data could not be registered or an invalid argument is passed."
    ],
    "description": "Returns:\n\nReturns a non-negative value on success, or -1 if the rope data could not be registered or an invalid argument is passed.\n\nRegisters a custom rope data with the game. For guidance on what these values should be use common:/data/ropedata.xml as a reference. Returns a rope type which can be passed into ADD_ROPE to use a custom rope design. Once a rope data is registered it can be used indefinitely and you should take caution not too register too many as to exceed the games limit."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterStreamingFileFromCache",
    "hash": "0xCEAD2D4B",
    "code": "-- REGISTER_STREAMING_FILE_FROM_CACHE\nRegisterStreamingFileFromCache(\n\tresourceName --[[ string ]], \n\tfileName --[[ string ]], \n\tcacheString --[[ string ]]\n)",
    "parameters": [
      "resourceName: \n\nThe resource to add the asset to.",
      "fileName: \n\nA file name in the resource.",
      "cacheString: \n\nThe string returned from REGISTER_RESOURCE_ASSET on the server."
    ],
    "returns": [],
    "description": "Parameters:\n\nresourceName: \n\nThe resource to add the asset to.\n\nfileName: \n\nA file name in the resource.\n\ncacheString: \n\nThe string returned from REGISTER_RESOURCE_ASSET on the server.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nRegisters a dynamic streaming asset from the server with the GTA streaming module system."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterStreamingFileFromKvs",
    "hash": "0x1493DCC1",
    "code": "-- REGISTER_STREAMING_FILE_FROM_KVS\nRegisterStreamingFileFromKvs(\n\tkvsKey --[[ string ]]\n)",
    "parameters": [
      "kvsKey: \n\nThe KVP key in the current resource to register as an asset."
    ],
    "returns": [],
    "description": "Parameters:\n\nkvsKey: \n\nThe KVP key in the current resource to register as an asset.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nRegisters a KVP value as an asset with the GTA streaming module system. This function currently won't work."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterStreamingFileFromUrl",
    "hash": "0xF44BFB95",
    "code": "-- REGISTER_STREAMING_FILE_FROM_URL\nRegisterStreamingFileFromUrl(\n\tregisterAs --[[ string ]], \n\turl --[[ string ]]\n)",
    "parameters": [
      "registerAs: \n\nThe file name to register as, for example asset.ydr.",
      "url: \n\nThe URL to fetch the asset from."
    ],
    "returns": [],
    "description": "Parameters:\n\nregisterAs: \n\nThe file name to register as, for example asset.ydr.\n\nurl: \n\nThe URL to fetch the asset from.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nRegisters a file from an URL as a streaming asset in the GTA streaming subsystem. This will asynchronously register the asset, and caching is done based on the URL itself - cache headers are ignored.\n\nUse IS_STREAMING_FILE_READY to check if the asset has been registered successfully."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RegisterTrackJunction",
    "hash": "0x35F743B5",
    "code": "-- REGISTER_TRACK_JUNCTION\nlocal retval --[[ integer ]] =\n\tRegisterTrackJunction(\n\t\ttrackIndex --[[ integer ]], \n\t\ttrackNode --[[ integer ]], \n\t\tnewIndex --[[ integer ]], \n\t\tnewNode --[[ integer ]], \n\t\tdirection --[[ bool ]]\n\t)",
    "parameters": [
      "trackIndex: \n\nThe track index a train should be on",
      "trackNode: \n\nThe node a train should be on",
      "newIndex: \n\nThe new track index for a train to be placed on",
      "newNode: \n\nThe new track node for a train to be placed on",
      "direction: \n\nThe direction a train should be traveling for this junction"
    ],
    "returns": [
      "The track junction's handle or -1 if invalid."
    ],
    "description": "Parameters:\n\ntrackIndex: \n\nThe track index a train should be on\n\ntrackNode: \n\nThe node a train should be on\n\nnewIndex: \n\nThe new track index for a train to be placed on\n\nnewNode: \n\nThe new track node for a train to be placed on\n\ndirection: \n\nThe direction a train should be traveling for this junction\n\nReturns:\n\nThe track junction's handle or -1 if invalid.\n\nRegisters a track junction that when enabled will cause a train on the defined trackIndex, node and direction to change its current track index and begin traveling on the new node"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RemoveAllPedWeapons",
    "hash": "0xA44CE817",
    "code": "-- REMOVE_ALL_PED_WEAPONS\nRemoveAllPedWeapons(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "p1:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\np1:\n\nParameter p1 does not seem to be used or referenced in game binaries.\\ Note: When called for networked entities, a CRemoveAllWeaponsEvent will be created per request.\n\nThis is the server-side RPC native equivalent of the client native REMOVE_ALL_PED_WEAPONS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RemoveBlip",
    "hash": "0xD8C3C1CD",
    "code": "-- REMOVE_BLIP\nlocal blip --[[ Blip ]] =\n\tRemoveBlip()",
    "parameters": [
      "blip: \n\nBlip handle to remove."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nBlip handle to remove.\n\nRemoves the blip from your map. Note: This function only works on the script that created the blip, if you wish to remove blips created by other scripts, see SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT.\n\nThis is the server-side RPC native equivalent of the client native REMOVE_BLIP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "RemoveConvarChangeListener",
    "hash": "0xEAC49841",
    "code": "-- REMOVE_CONVAR_CHANGE_LISTENER\nRemoveConvarChangeListener(\n\tcookie --[[ integer ]]\n)",
    "parameters": [
      "cookie: \n\nThe cookie returned from ADD_CONVAR_CHANGE_LISTENER"
    ],
    "returns": [],
    "description": "Parameters:\n\ncookie: \n\nThe cookie returned from ADD_CONVAR_CHANGE_LISTENER"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RemoveDryVolume",
    "hash": "0x7BCAA6E7",
    "code": "-- REMOVE_DRY_VOLUME\nRemoveDryVolume(\n\thandle --[[ integer ]]\n)",
    "parameters": [
      "handle: \n\nThe handle of the dry volume that needs to be removed."
    ],
    "returns": [],
    "description": "Parameters:\n\nhandle: \n\nThe handle of the dry volume that needs to be removed.\n\nRemoves a dry volume from the game session. See CREATE_DRY_VOLUME for more info"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RemoveHealthConfig",
    "hash": "0xE0ED5FB",
    "code": "-- REMOVE_HEALTH_CONFIG\nRemoveHealthConfig(\n\tconfigName --[[ string ]]\n)",
    "parameters": [
      "configName: \n\nRemoves config name. Cannot be default game health config name."
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nRemoves config name. Cannot be default game health config name.\n\nRemoves health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RemoveReplaceTexture",
    "hash": "0xA896B20A",
    "code": "-- REMOVE_REPLACE_TEXTURE\nRemoveReplaceTexture(\n\torigTxd --[[ string ]], \n\torigTxn --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Experimental natives, please do not use in a live environment."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "RemoveStateBagChangeHandler",
    "hash": "0xD36BE661",
    "code": "-- REMOVE_STATE_BAG_CHANGE_HANDLER\nRemoveStateBagChangeHandler(\n\tcookie --[[ integer ]]\n)",
    "parameters": [
      "cookie: \n\nThe cookie."
    ],
    "returns": [],
    "description": "Parameters:\n\ncookie: \n\nThe cookie.\n\nExperimental: This native may be altered or removed in future versions of CitizenFX without warning.\n\nRemoves a handler for changes to a state bag."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RemoveTimecycleModifier",
    "hash": "0x36DF8612",
    "code": "-- REMOVE_TIMECYCLE_MODIFIER\nRemoveTimecycleModifier(\n\tmodifierName --[[ string ]]\n)",
    "parameters": [
      "modifierName: \n\nThe timecycle modifier name."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodifierName: \n\nThe timecycle modifier name."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RemoveTimecycleModifierVar",
    "hash": "0x5A5E0D05",
    "code": "-- REMOVE_TIMECYCLE_MODIFIER_VAR\nRemoveTimecycleModifierVar(\n\tmodifierName --[[ string ]], \n\tvarName --[[ string ]]\n)",
    "parameters": [
      "modifierName: \n\nThe name of timecycle modifier.",
      "varName: \n\nThe name of timecycle variable."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodifierName: \n\nThe name of timecycle modifier.\n\nvarName: \n\nThe name of timecycle variable."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RemoveTrackJunction",
    "hash": "0x4F3D2B2A",
    "code": "-- REMOVE_TRACK_JUNCTION\nlocal retval --[[ bool ]] =\n\tRemoveTrackJunction(\n\t\tjunctionIndex --[[ integer ]]\n\t)",
    "parameters": [
      "junctionIndex: \n\nThe junctions index"
    ],
    "returns": [
      "Returns if it succeeds in removing a junction or not"
    ],
    "description": "Parameters:\n\njunctionIndex: \n\nThe junctions index\n\nReturns:\n\nReturns if it succeeds in removing a junction or not\n\nRemoves the specified track junction."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RemoveWeaponComponentFromPed",
    "hash": "0x412AA00D",
    "code": "-- REMOVE_WEAPON_COMPONENT_FROM_PED\nRemoveWeaponComponentFromPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tcomponentHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REMOVE_WEAPON_COMPONENT_FROM_PED\n\nThis is the server-side RPC native equivalent of the client native REMOVE_WEAPON_COMPONENT_FROM_PED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RemoveWeaponFromPed",
    "hash": "0x9C37F220",
    "code": "-- REMOVE_WEAPON_FROM_PED\nRemoveWeaponFromPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native removes a specified weapon from your selected ped.\nWeapon Hashes: pastebin.com/0wwDZgkF\nExample:\nC#:\nFunction.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);\nC++:\nWEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);\nThe code above removes the knife from the player.\n\n\nThis is the server-side RPC native equivalent of the client native REMOVE_WEAPON_FROM_PED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "RequestPlayerCommerceSession",
    "hash": "0x96F93CCE",
    "code": "-- REQUEST_PLAYER_COMMERCE_SESSION\nRequestPlayerCommerceSession(\n\tplayerSrc --[[ string ]], \n\tskuId --[[ integer ]]\n)",
    "parameters": [
      "playerSrc: \n\nThe player handle",
      "skuId: \n\nThe ID of the SKU."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player handle\n\nskuId: \n\nThe ID of the SKU.\n\nRequests the specified player to buy the passed SKU. This'll pop up a prompt on the client, which upon acceptance will open the browser prompting further purchase details."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "RequestResourceFileSet",
    "hash": "0xE7490533",
    "code": "-- REQUEST_RESOURCE_FILE_SET\nlocal retval --[[ boolean ]] =\n\tRequestResourceFileSet(\n\t\tsetName --[[ string ]]\n\t)",
    "parameters": [
      "setName: \n\nThe name of the file set as specified in fxmanifest.lua."
    ],
    "returns": [
      "TRUE if the set is mounted, FALSE if the request is still pending."
    ],
    "description": "Parameters:\n\nsetName: \n\nThe name of the file set as specified in fxmanifest.lua.\n\nReturns:\n\nTRUE if the set is mounted, FALSE if the request is still pending.\n\nRequests a resource file set with the specified name to be downloaded and mounted on top of the current resource.\n\nResource file sets are specified in fxmanifest.lua with the following syntax:\n\nfile_set 'addon_ui' {\n    'ui/addon/index.html',\n    'ui/addon/**.js',\n}\n\n\nThis command will trigger a script error if the request failed."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ResetEntityDrawOutlineRenderTechnique",
    "hash": "0x8EB6EC38",
    "code": "-- RESET_ENTITY_DRAW_OUTLINE_RENDER_TECHNIQUE\nResetEntityDrawOutlineRenderTechnique()",
    "parameters": [],
    "returns": [],
    "description": "This function undoes changes made by SET_ENTITY_DRAW_OUTLINE_RENDER_TECHNIQUE, restoring the original outline rendering behavior. The default render technique group is unlit."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ResetFlyThroughWindscreenParams",
    "hash": "0x6D712937",
    "code": "-- RESET_FLY_THROUGH_WINDSCREEN_PARAMS\nResetFlyThroughWindscreenParams()",
    "parameters": [],
    "returns": [],
    "description": "Resets parameters which is used by the game for checking is ped needs to fly through windscreen after a crash to default values."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ResetMapZoomDataLevel",
    "hash": "0x11A5B7ED",
    "code": "-- RESET_MAP_ZOOM_DATA_LEVEL\nResetMapZoomDataLevel(\n\tindex --[[ integer ]]\n)",
    "parameters": [
      "index: \n\nZoom level index."
    ],
    "returns": [],
    "description": "Parameters:\n\nindex: \n\nZoom level index.\n\nResets values from the zoom level data by index to defaults from mapzoomdata.meta."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ResetMapdataEntityMatrix",
    "hash": "0x8143FA4F",
    "code": "-- RESET_MAPDATA_ENTITY_MATRIX\nlocal retval --[[ boolean ]] =\n\tResetMapdataEntityMatrix(\n\t\tmapDataHash --[[ integer ]], \n\t\tentityInternalIdx --[[ integer ]]\n\t)",
    "parameters": [
      "mapDataHash: \n\nA mapdata hash from mapDataLoaded event.",
      "entityInternalIdx: \n\nAn internal entity's index."
    ],
    "returns": [
      "True if successful, false if not."
    ],
    "description": "Parameters:\n\nmapDataHash: \n\nA mapdata hash from mapDataLoaded event.\n\nentityInternalIdx: \n\nAn internal entity's index.\n\nReturns:\n\nTrue if successful, false if not.\n\nResets mapdata entity transform matrix to its original state. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ResetPedModelPersonality",
    "hash": "0x79A12861",
    "code": "-- RESET_PED_MODEL_PERSONALITY\nResetPedModelPersonality(\n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [
      "modelHash: \n\nPed's model."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodelHash: \n\nPed's model.\n\nRestores an overridden ped model personality type to the default value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ResetVehiclePedsCanStandOnTopFlag",
    "hash": "0xDF62CFE2",
    "code": "-- RESET_VEHICLE_PEDS_CAN_STAND_ON_TOP_FLAG\nResetVehiclePedsCanStandOnTopFlag(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle.\n\nResets whether or not peds can stand on top of the specified vehicle.\n\nNote this flag is not replicated automatically, you will have to manually do so."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ResetWater",
    "hash": "0x1DA4791",
    "code": "-- RESET_WATER\nResetWater()",
    "parameters": [],
    "returns": [],
    "description": "Resets the water to the games default water.xml."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SaveResourceFile",
    "hash": "0xA09E7E7B",
    "code": "-- SAVE_RESOURCE_FILE\nlocal retval --[[ boolean ]] =\n\tSaveResourceFile(\n\t\tresourceName --[[ string ]], \n\t\tfileName --[[ string ]], \n\t\tdata --[[ string ]], \n\t\tdataLength --[[ integer ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe name of the resource.",
      "fileName: \n\nThe name of the file.",
      "data: \n\nThe data to write to the file.",
      "dataLength: \n\nThe length of the written data."
    ],
    "returns": [
      "A value indicating if the write succeeded."
    ],
    "description": "Parameters:\n\nresourceName: \n\nThe name of the resource.\n\nfileName: \n\nThe name of the file.\n\ndata: \n\nThe data to write to the file.\n\ndataLength: \n\nThe length of the written data.\n\nReturns:\n\nA value indicating if the write succeeded.\n\nWrites the specified data to a file in the specified resource. Using a length of -1 will automatically detect the length assuming the data is a C string."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ScanResourceRoot",
    "hash": "0x636F097F",
    "code": "-- SCAN_RESOURCE_ROOT\nScanResourceRoot(\n\trootPath --[[ string ]], \n\tcallback --[[ func ]]\n)",
    "parameters": [
      "rootPath: \n\nThe resource directory to scan.",
      "callback: \n\nA callback that will receive an object with results."
    ],
    "returns": [],
    "description": "Parameters:\n\nrootPath: \n\nThe resource directory to scan.\n\ncallback: \n\nA callback that will receive an object with results.\n\nScans the resources in the specified resource root. This function is only available in the 'monitor mode' process and is not available for user resources."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "ScheduleResourceTick",
    "hash": "0xB88A73AD",
    "code": "-- SCHEDULE_RESOURCE_TICK\nScheduleResourceTick(\n\tresourceName --[[ string ]]\n)",
    "parameters": [
      "resourceName: \n\nThe resource to tick."
    ],
    "returns": [],
    "description": "Parameters:\n\nresourceName: \n\nThe resource to tick.\n\nSchedules the specified resource to run a tick as soon as possible, bypassing the server's fixed tick rate."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SelectEntityAtCursor",
    "hash": "0x3DD8130F",
    "code": "-- SELECT_ENTITY_AT_CURSOR\nlocal retval --[[ Entity ]] =\n\tSelectEntityAtCursor(\n\t\thitFlags --[[ integer ]], \n\t\tprecise --[[ boolean ]]\n\t)",
    "parameters": [
      "hitFlags: \n\nA bit mask of entity types to match.",
      "precise: \n\nWhether to do a precise test, i.e. of visual coordinates, too."
    ],
    "returns": [
      "An entity handle, or zero."
    ],
    "description": "Parameters:\n\nhitFlags: \n\nA bit mask of entity types to match.\n\nprecise: \n\nWhether to do a precise test, i.e. of visual coordinates, too.\n\nReturns:\n\nAn entity handle, or zero.\n\nGets the selected entity at the current mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SelectEntityAtPos",
    "hash": "0xAFE8D405",
    "code": "-- SELECT_ENTITY_AT_POS\nlocal retval --[[ Entity ]] =\n\tSelectEntityAtPos(\n\t\tfracX --[[ number ]], \n\t\tfracY --[[ number ]], \n\t\thitFlags --[[ integer ]], \n\t\tprecise --[[ boolean ]]\n\t)",
    "parameters": [
      "fracX: \n\nMouse cursor X fraction.",
      "fracY: \n\nMouse cursor Y fraction.",
      "hitFlags: \n\nA bit mask of entity types to match.",
      "precise: \n\nWhether to do a precise test, i.e. of visual coordinates, too."
    ],
    "returns": [
      "An entity handle, or zero."
    ],
    "description": "Parameters:\n\nfracX: \n\nMouse cursor X fraction.\n\nfracY: \n\nMouse cursor Y fraction.\n\nhitFlags: \n\nA bit mask of entity types to match.\n\nprecise: \n\nWhether to do a precise test, i.e. of visual coordinates, too.\n\nReturns:\n\nAn entity handle, or zero.\n\nGets the selected entity at the specified mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SendDuiMessage",
    "hash": "0xCD380DA9",
    "code": "-- SEND_DUI_MESSAGE\nSendDuiMessage(\n\tduiObject --[[ long ]], \n\tjsonString --[[ string ]]\n)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle.",
      "jsonString: \n\nThe message, encoded as JSON."
    ],
    "returns": [],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\njsonString: \n\nThe message, encoded as JSON.\n\nSends a message to the specific DUI root page. This is similar to SEND_NUI_MESSAGE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SendDuiMouseDown",
    "hash": "0x5D01F191",
    "code": "-- SEND_DUI_MOUSE_DOWN\nSendDuiMouseDown(\n\tduiObject --[[ long ]], \n\tbutton --[[ string ]]\n)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle.",
      "button: \n\nEither 'left', 'middle' or 'right'."
    ],
    "returns": [],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\nbutton: \n\nEither 'left', 'middle' or 'right'.\n\nInjects a 'mouse down' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SendDuiMouseMove",
    "hash": "0xD9D7A0AA",
    "code": "-- SEND_DUI_MOUSE_MOVE\nSendDuiMouseMove(\n\tduiObject --[[ long ]], \n\tx --[[ integer ]], \n\ty --[[ integer ]]\n)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle.",
      "x: \n\nThe mouse X position.",
      "y: \n\nThe mouse Y position."
    ],
    "returns": [],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\nx: \n\nThe mouse X position.\n\ny: \n\nThe mouse Y position.\n\nInjects a 'mouse move' event for a DUI object. Coordinates are in browser space."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SendDuiMouseUp",
    "hash": "0x1D735B93",
    "code": "-- SEND_DUI_MOUSE_UP\nSendDuiMouseUp(\n\tduiObject --[[ long ]], \n\tbutton --[[ string ]]\n)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle.",
      "button: \n\nEither 'left', 'middle' or 'right'."
    ],
    "returns": [],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\nbutton: \n\nEither 'left', 'middle' or 'right'.\n\nInjects a 'mouse up' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SendDuiMouseWheel",
    "hash": "0x2D62133A",
    "code": "-- SEND_DUI_MOUSE_WHEEL\nSendDuiMouseWheel(\n\tduiObject --[[ long ]], \n\tdeltaY --[[ integer ]], \n\tdeltaX --[[ integer ]]\n)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle.",
      "deltaY: \n\nThe wheel Y delta.",
      "deltaX: \n\nThe wheel X delta."
    ],
    "returns": [],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\ndeltaY: \n\nThe wheel Y delta.\n\ndeltaX: \n\nThe wheel X delta.\n\nInjects a 'mouse wheel' event for a DUI object."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SendLoadingScreenMessage",
    "hash": "0x8BBE6CC0",
    "code": "-- SEND_LOADING_SCREEN_MESSAGE\nlocal retval --[[ boolean ]] =\n\tSendLoadingScreenMessage(\n\t\tjsonString --[[ string ]]\n\t)",
    "parameters": [
      "jsonString: \n\nThe JSON-encoded message."
    ],
    "returns": [
      "A success value."
    ],
    "description": "Parameters:\n\njsonString: \n\nThe JSON-encoded message.\n\nReturns:\n\nA success value.\n\nSends a message to the loadingScreen NUI frame, which contains the HTML page referenced in loadscreen resources."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SendNuiMessage",
    "hash": "0x78608ACB",
    "code": "-- SEND_NUI_MESSAGE\nlocal retval --[[ boolean ]] =\n\tSendNuiMessage(\n\t\tjsonString --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetAimCooldown",
    "hash": "0xA42A3DBF",
    "code": "-- SET_AIM_COOLDOWN\nSetAimCooldown(\n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "value: \n\nNumber of milliseconds between allowed aiming"
    ],
    "returns": [],
    "description": "Parameters:\n\nvalue: \n\nNumber of milliseconds between allowed aiming\n\nAdds a cooldown between instances of moving and then aiming. Can be optionally used to hinder 'speedboosting' To turn off, set value to 0"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetAudioSubmixEffectParamFloat",
    "hash": "0x9A209B3C",
    "code": "-- SET_AUDIO_SUBMIX_EFFECT_PARAM_FLOAT\nSetAudioSubmixEffectParamFloat(\n\tsubmixId --[[ integer ]], \n\teffectSlot --[[ integer ]], \n\tparamIndex --[[ integer ]], \n\tparamValue --[[ number ]]\n)",
    "parameters": [
      "submixId: \n\nThe submix.",
      "effectSlot: \n\nThe effect slot for the submix. It is expected that the effect is set in this slot beforehand.",
      "paramIndex: \n\nThe parameter index for the effect.",
      "paramValue: \n\nThe parameter value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nsubmixId: \n\nThe submix.\n\neffectSlot: \n\nThe effect slot for the submix. It is expected that the effect is set in this slot beforehand.\n\nparamIndex: \n\nThe parameter index for the effect.\n\nparamValue: \n\nThe parameter value to set.\n\nSets a floating-point parameter for a submix effect."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetAudioSubmixEffectParamInt",
    "hash": "0x77FAE2B8",
    "code": "-- SET_AUDIO_SUBMIX_EFFECT_PARAM_INT\nSetAudioSubmixEffectParamInt(\n\tsubmixId --[[ integer ]], \n\teffectSlot --[[ integer ]], \n\tparamIndex --[[ integer ]], \n\tparamValue --[[ integer ]]\n)",
    "parameters": [
      "submixId: \n\nThe submix.",
      "effectSlot: \n\nThe effect slot for the submix. It is expected that the effect is set in this slot beforehand.",
      "paramIndex: \n\nThe parameter index for the effect.",
      "paramValue: \n\nThe parameter value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nsubmixId: \n\nThe submix.\n\neffectSlot: \n\nThe effect slot for the submix. It is expected that the effect is set in this slot beforehand.\n\nparamIndex: \n\nThe parameter index for the effect.\n\nparamValue: \n\nThe parameter value to set.\n\nSets an integer parameter for a submix effect."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetAudioSubmixEffectRadioFx",
    "hash": "0xAAA94D53",
    "code": "-- SET_AUDIO_SUBMIX_EFFECT_RADIO_FX\nSetAudioSubmixEffectRadioFx(\n\tsubmixId --[[ integer ]], \n\teffectSlot --[[ integer ]]\n)",
    "parameters": [
      "submixId: \n\nThe submix.",
      "effectSlot: \n\nThe effect slot for the submix."
    ],
    "returns": [],
    "description": "Parameters:\n\nsubmixId: \n\nThe submix.\n\neffectSlot: \n\nThe effect slot for the submix.\n\nAssigns a RadioFX effect to a submix effect slot.\n\nThe parameter values for this effect are as follows (backticks are used to represent hashes):\n\nIndex\tType\tDescription\n`enabled`\tint\tEnables or disables RadioFX on this DSP.\n`default`\tint\tSets default parameters for the RadioFX DSP and enables it.\n`freq_low`\tfloat\t\n`freq_hi`\tfloat\t\n`fudge`\tfloat\t\n`rm_mod_freq`\tfloat\t\n`rm_mix`\tfloat\t\n`o_freq_lo`\tfloat\t\n`o_freq_hi`\tfloat"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetAudioSubmixOutputVolumes",
    "hash": "0x825DC0D1",
    "code": "-- SET_AUDIO_SUBMIX_OUTPUT_VOLUMES\nSetAudioSubmixOutputVolumes(\n\tsubmixId --[[ integer ]], \n\toutputSlot --[[ integer ]], \n\tfrontLeftVolume --[[ number ]], \n\tfrontRightVolume --[[ number ]], \n\trearLeftVolume --[[ number ]], \n\trearRightVolume --[[ number ]], \n\tchannel5Volume --[[ number ]], \n\tchannel6Volume --[[ number ]]\n)",
    "parameters": [
      "submixId: \n\nThe submix.",
      "outputSlot: \n\nThe output slot index.",
      "frontLeftVolume: \n\nThe volume for the front left channel.",
      "frontRightVolume: \n\nThe volume for the front right channel.",
      "rearLeftVolume: \n\nThe volume for the rear left channel.",
      "rearRightVolume: \n\nThe volume for the rear right channel.",
      "channel5Volume: \n\nThe volume for channel 5.",
      "channel6Volume: \n\nThe volume for channel 6."
    ],
    "returns": [],
    "description": "Parameters:\n\nsubmixId: \n\nThe submix.\n\noutputSlot: \n\nThe output slot index.\n\nfrontLeftVolume: \n\nThe volume for the front left channel.\n\nfrontRightVolume: \n\nThe volume for the front right channel.\n\nrearLeftVolume: \n\nThe volume for the rear left channel.\n\nrearRightVolume: \n\nThe volume for the rear right channel.\n\nchannel5Volume: \n\nThe volume for channel 5.\n\nchannel6Volume: \n\nThe volume for channel 6.\n\nSets the volumes for the sound channels in a submix effect. Values can be between 0.0 and 1.0. Channel 5 and channel 6 are not used in voice chat but are believed to be center and LFE channels. Output slot starts at 0 for the first ADD_AUDIO_SUBMIX_OUTPUT call then incremented by 1 on each subsequent call."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetBlipSprite",
    "hash": "0x8DBBB0B9",
    "code": "-- SET_BLIP_SPRITE\nSetBlipSprite(\n\tblip --[[ Blip ]], \n\tspriteId --[[ integer ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to change.",
      "spriteId: \n\nThe sprite ID to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to change.\n\nspriteId: \n\nThe sprite ID to set.\n\nSets the displayed sprite for a specific blip. There's a list of sprites on the FiveM documentation site.\n\nThis is the server-side RPC native equivalent of the client native SET_BLIP_SPRITE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetCalmingQuadBounds",
    "hash": "0xC5945BD9",
    "code": "-- SET_CALMING_QUAD_BOUNDS\nlocal retval --[[ boolean ]] =\n\tSetCalmingQuadBounds(\n\t\twaterQuad --[[ integer ]], \n\t\tminX --[[ integer ]], \n\t\tminY --[[ integer ]], \n\t\tmaxX --[[ integer ]], \n\t\tmaxY --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe calming quad index",
      "minX: \n\nThe minX coordinate",
      "minY: \n\nThe minY coordinate",
      "maxX: \n\nThe maxX coordinate",
      "maxY: \n\nThe maxY coordinate"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe calming quad index\n\nminX: \n\nThe minX coordinate\n\nminY: \n\nThe minY coordinate\n\nmaxX: \n\nThe maxX coordinate\n\nmaxY: \n\nThe maxY coordinate\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetCalmingQuadDampening",
    "hash": "0x67977501",
    "code": "-- SET_CALMING_QUAD_DAMPENING\nlocal retval --[[ boolean ]] =\n\tSetCalmingQuadDampening(\n\t\tcalmingQuad --[[ integer ]], \n\t\tdampening --[[ number ]]\n\t)",
    "parameters": [
      "calmingQuad: \n\nThe calming quad",
      "dampening: \n\nThe dampening value"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\ncalmingQuad: \n\nThe calming quad\n\ndampening: \n\nThe dampening value\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetConvar",
    "hash": "0x341B16D2",
    "code": "-- SET_CONVAR\nSetConvar(\n\tvarName --[[ string ]], \n\tvalue --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetConvarReplicated",
    "hash": "0xF292858C",
    "code": "-- SET_CONVAR_REPLICATED\nSetConvarReplicated(\n\tvarName --[[ string ]], \n\tvalue --[[ string ]]\n)",
    "parameters": [
      "varName: \n\nThe console variable name.",
      "value: \n\nThe value to set for the given console variable."
    ],
    "returns": [],
    "description": "Parameters:\n\nvarName: \n\nThe console variable name.\n\nvalue: \n\nThe value to set for the given console variable.\n\nUsed to replicate a server variable onto clients."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetConvarServerInfo",
    "hash": "0x9338D547",
    "code": "-- SET_CONVAR_SERVER_INFO\nSetConvarServerInfo(\n\tvarName --[[ string ]], \n\tvalue --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetCurrentPedWeapon",
    "hash": "0xB8278882",
    "code": "-- SET_CURRENT_PED_WEAPON\nSetCurrentPedWeapon(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tbForceInHand --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_CURRENT_PED_WEAPON\n\nThis is the server-side RPC native equivalent of the client native SET_CURRENT_PED_WEAPON."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDefaultVehicleNumberPlateTextPattern",
    "hash": "0x79780FD2",
    "code": "-- SET_DEFAULT_VEHICLE_NUMBER_PLATE_TEXT_PATTERN\nSetDefaultVehicleNumberPlateTextPattern(\n\tplateIndex --[[ integer ]], \n\tpattern --[[ string ]]\n)",
    "parameters": [
      "plateIndex: \n\nA plate index, or -1 to set a default for any indices that do not have a specific value.",
      "pattern: \n\nA number plate pattern string, or a null value to reset to default."
    ],
    "returns": [],
    "description": "Parameters:\n\nplateIndex: \n\nA plate index, or -1 to set a default for any indices that do not have a specific value.\n\npattern: \n\nA number plate pattern string, or a null value to reset to default.\n\nSets the default number plate text pattern for vehicles seen on the local client with the specified plate index as their default index (plateProbabilities from carvariations).\n\nFor consistency, this should be used with the same value on all clients, since vehicles without custom text will use a seeded random number generator with this pattern to determine the default plate text.\n\nThe default value is 11AAA111, and using this or a NULL string will revert to the default game RNG.\n\nPattern string format\n1 will lead to a random number from 0-9.\nA will lead to a random letter from A-Z.\n. will lead to a random letter or number, with 50% probability of being either.\n^1 will lead to a literal 1 being emitted.\n^A will lead to a literal A being emitted.\nAny other character will lead to said character being emitted.\nA string shorter than 8 characters will be padded on the right."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDiscordAppId",
    "hash": "0x6A02254D",
    "code": "-- SET_DISCORD_APP_ID\nSetDiscordAppId(\n\tappId --[[ string ]]\n)",
    "parameters": [
      "appId: \n\nA valid Discord API App Id, can be generated at https://discordapp.com/developers/applications/"
    ],
    "returns": [],
    "description": "Parameters:\n\nappId: \n\nA valid Discord API App Id, can be generated at https://discordapp.com/developers/applications/\n\nThis native sets the app id for the discord rich presence implementation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDiscordRichPresenceAction",
    "hash": "0xCBBC3FAC",
    "code": "-- SET_DISCORD_RICH_PRESENCE_ACTION\nSetDiscordRichPresenceAction(\n\tindex --[[ integer ]], \n\tlabel --[[ string ]], \n\turl --[[ string ]]\n)",
    "parameters": [
      "index: \n\nThe button index, either 0 or 1.",
      "label: \n\nThe text to display on the button.",
      "url: \n\nThe URL to open when clicking the button. This has to start with fivem://connect/ or https://."
    ],
    "returns": [],
    "description": "Parameters:\n\nindex: \n\nThe button index, either 0 or 1.\n\nlabel: \n\nThe text to display on the button.\n\nurl: \n\nThe URL to open when clicking the button. This has to start with fivem://connect/ or https://.\n\nSets a clickable button to be displayed in a player's Discord rich presence."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDiscordRichPresenceAsset",
    "hash": "0x53DFD530",
    "code": "-- SET_DISCORD_RICH_PRESENCE_ASSET\nSetDiscordRichPresenceAsset(\n\tassetName --[[ string ]]\n)",
    "parameters": [
      "assetName: \n\nThe name of a valid asset registered on Discordapp's developer dashboard. note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native."
    ],
    "returns": [],
    "description": "Parameters:\n\nassetName: \n\nThe name of a valid asset registered on Discordapp's developer dashboard. note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.\n\nThis native sets the image asset for the discord rich presence implementation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDiscordRichPresenceAssetSmall",
    "hash": "0xF61D04C4",
    "code": "-- SET_DISCORD_RICH_PRESENCE_ASSET_SMALL\nSetDiscordRichPresenceAssetSmall(\n\tassetName --[[ string ]]\n)",
    "parameters": [
      "assetName: \n\nThe name of a valid asset registered on Discordapp's developer dashboard. Note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native."
    ],
    "returns": [],
    "description": "Parameters:\n\nassetName: \n\nThe name of a valid asset registered on Discordapp's developer dashboard. Note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.\n\nThis native sets the small image asset for the discord rich presence implementation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDiscordRichPresenceAssetSmallText",
    "hash": "0x35E62B6A",
    "code": "-- SET_DISCORD_RICH_PRESENCE_ASSET_SMALL_TEXT\nSetDiscordRichPresenceAssetSmallText(\n\ttext --[[ string ]]\n)",
    "parameters": [
      "text: \n\nText to be displayed when hovering over small image asset. Note that you must also set a valid small image asset using the SET_DISCORD_RICH_PRESENCE_ASSET_SMALL native."
    ],
    "returns": [],
    "description": "Parameters:\n\ntext: \n\nText to be displayed when hovering over small image asset. Note that you must also set a valid small image asset using the SET_DISCORD_RICH_PRESENCE_ASSET_SMALL native.\n\nThis native sets the hover text of the small image asset for the discord rich presence implementation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDiscordRichPresenceAssetText",
    "hash": "0xB029D2FA",
    "code": "-- SET_DISCORD_RICH_PRESENCE_ASSET_TEXT\nSetDiscordRichPresenceAssetText(\n\ttext --[[ string ]]\n)",
    "parameters": [
      "text: \n\nText to be displayed when hovering over image asset. Note that you must also set a valid image asset using the SET_DISCORD_RICH_PRESENCE_ASSET native."
    ],
    "returns": [],
    "description": "Parameters:\n\ntext: \n\nText to be displayed when hovering over image asset. Note that you must also set a valid image asset using the SET_DISCORD_RICH_PRESENCE_ASSET native.\n\nThis native sets the hover text of the image asset for the discord rich presence implementation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetDuiUrl",
    "hash": "0xF761D9F3",
    "code": "-- SET_DUI_URL\nSetDuiUrl(\n\tduiObject --[[ long ]], \n\turl --[[ string ]]\n)",
    "parameters": [
      "duiObject: \n\nThe DUI browser handle.",
      "url: \n\nThe new URL."
    ],
    "returns": [],
    "description": "Parameters:\n\nduiObject: \n\nThe DUI browser handle.\n\nurl: \n\nThe new URL.\n\nNavigates the specified DUI browser to a different URL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetEmitterProbeLength",
    "hash": "0x8AA1F3C2",
    "code": "-- SET_EMITTER_PROBE_LENGTH\nSetEmitterProbeLength(\n\tprobeLength --[[ number ]]\n)",
    "parameters": [
      "probeLength: \n\nThe desired probe length (20.0 - 150.0)"
    ],
    "returns": [],
    "description": "Parameters:\n\nprobeLength: \n\nThe desired probe length (20.0 - 150.0)\n\nAllows StaticEmitter's without a linked entity to make use of environment features like occlusion and reverb even if they are located higher than 20.0 units above any static collision inside interiors.\n\nThis native allows you to extend the probe range up to 150.0 units."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityCoords",
    "hash": "0xDF70B41B",
    "code": "-- SET_ENTITY_COORDS\nSetEntityCoords(\n\tentity --[[ Entity ]], \n\txPos --[[ number ]], \n\tyPos --[[ number ]], \n\tzPos --[[ number ]], \n\talive --[[ boolean ]], \n\tdeadFlag --[[ boolean ]], \n\tragdollFlag --[[ boolean ]], \n\tclearArea --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to change coordinates for.",
      "xPos: \n\nThe X coordinate.",
      "yPos: \n\nThe Y coordinate.",
      "zPos: \n\nThe Z coordinate, ground level.",
      "alive: \n\nUnused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.",
      "deadFlag: \n\nWhether to disable physics for dead peds, too, and not just living peds.",
      "ragdollFlag: \n\nA special flag used for ragdolling peds.",
      "clearArea: \n\nWhether to clear any entities in the target area."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to change coordinates for.\n\nxPos: \n\nThe X coordinate.\n\nyPos: \n\nThe Y coordinate.\n\nzPos: \n\nThe Z coordinate, ground level.\n\nalive: \n\nUnused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.\n\ndeadFlag: \n\nWhether to disable physics for dead peds, too, and not just living peds.\n\nragdollFlag: \n\nA special flag used for ragdolling peds.\n\nclearArea: \n\nWhether to clear any entities in the target area.\n\nSets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.\n\nThis is the server-side RPC native equivalent of the client native SET_ENTITY_COORDS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityDistanceCullingRadius",
    "hash": "0xD3A183A3",
    "code": "-- SET_ENTITY_DISTANCE_CULLING_RADIUS\nSetEntityDistanceCullingRadius(\n\tentity --[[ Entity ]], \n\tradius --[[ number ]]\n)",
    "parameters": [
      "entity: \n\nThe entity handle to override the distance culling radius.",
      "radius: \n\nThe new distance culling radius."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle to override the distance culling radius.\n\nradius: \n\nThe new distance culling radius.\n\nIt overrides the default distance culling radius of an entity. Set to 0.0 to reset. If you want to interact with an entity outside of your players' scopes set the radius to a huge number.\n\nWARNING: Culling natives are deprecated and have known, unfixable issues"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetEntityDrawOutline",
    "hash": "0x76180407",
    "code": "-- SET_ENTITY_DRAW_OUTLINE\nSetEntityDrawOutline(\n\tentity --[[ Entity ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nA valid entity handle.",
      "enabled: \n\nWhether or not to draw an outline."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nA valid entity handle.\n\nenabled: \n\nWhether or not to draw an outline.\n\nDraws an outline around a given entity. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetEntityDrawOutlineColor",
    "hash": "0xB41A56C2",
    "code": "-- SET_ENTITY_DRAW_OUTLINE_COLOR\nSetEntityDrawOutlineColor(\n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [
      "red: \n\nRed component of color.",
      "green: \n\nGreen component of color.",
      "blue: \n\nBlue component of color.",
      "alpha: \n\nAlpha component of color, ignored for shader 0."
    ],
    "returns": [],
    "description": "Parameters:\n\nred: \n\nRed component of color.\n\ngreen: \n\nGreen component of color.\n\nblue: \n\nBlue component of color.\n\nalpha: \n\nAlpha component of color, ignored for shader 0.\n\nSets color for entity outline. 255, 0, 255, 255 by default."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetEntityDrawOutlineRenderTechnique",
    "hash": "0x68DFF2DD",
    "code": "-- SET_ENTITY_DRAW_OUTLINE_RENDER_TECHNIQUE\nSetEntityDrawOutlineRenderTechnique(\n\ttechniqueGroup --[[ string ]]\n)",
    "parameters": [
      "techniqueGroup: \n\nTechnique group name."
    ],
    "returns": [],
    "description": "Parameters:\n\ntechniqueGroup: \n\nTechnique group name.\n\nSets the render technique for drawing an entity's outline. This function allows you to specify a technique group name to control how the entity's outline is rendered in the game.\n\nList of known technique group's:\n\nalt0\nalt1\nalt2\nalt3\nalt4\nalt5\nalt6\nalt7\nalt8\nblit\ncube\ndefault\ngeometry\nimposter\nimposterdeferred\nlightweight0\nlightweight0CutOut\nlightweight0CutOutTint\nlightweight0WaterRefractionAlpha\nlightweight4\nlightweight4CutOut\nlightweight4CutOutTint\nlightweight4WaterRefractionAlpha\nlightweight8\nlightweight8CutOut\nlightweight8CutOutTint\nlightweight8WaterRefractionAlpha\nlightweightHighQuality0\nlightweightHighQuality0CutOut\nlightweightHighQuality0WaterRefractionAlpha\nlightweightHighQuality4\nlightweightHighQuality4CutOut\nlightweightHighQuality4WaterRefractionAlpha\nlightweightHighQuality8\nlightweightHighQuality8CutOut\nlightweightHighQuality8WaterRefractionAlpha\nlightweightNoCapsule4\nlightweightNoCapsule8\nmultilight\ntessellate\nui\nunlit\nwaterreflection\nwaterreflectionalphaclip\nwaterreflectionalphacliptint\nwdcascade"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetEntityDrawOutlineShader",
    "hash": "0x5261A01A",
    "code": "-- SET_ENTITY_DRAW_OUTLINE_SHADER\nSetEntityDrawOutlineShader(\n\tshader --[[ integer ]]\n)",
    "parameters": [
      "shader: \n\nAn outline shader variant."
    ],
    "returns": [],
    "description": "Parameters:\n\nshader: \n\nAn outline shader variant.\n\nSets variant of shader that will be used to draw entity outline.\n\nVariants are:\n\n0: Default value, gauss shader.\n1: 2px wide solid color outline.\n2: Fullscreen solid color except for entity."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityHeading",
    "hash": "0xE0FF064D",
    "code": "-- SET_ENTITY_HEADING\nSetEntityHeading(\n\tentity --[[ Entity ]], \n\theading --[[ number ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to set the heading for.",
      "heading: \n\nThe heading in degrees."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to set the heading for.\n\nheading: \n\nThe heading in degrees.\n\nSet the heading of an entity in degrees also known as \"Yaw\".\n\nThis is the server-side RPC native equivalent of the client native SET_ENTITY_HEADING."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityIgnoreRequestControlFilter",
    "hash": "0x9F7F8D36",
    "code": "-- SET_ENTITY_IGNORE_REQUEST_CONTROL_FILTER\nSetEntityIgnoreRequestControlFilter(\n\tentity --[[ Entity ]], \n\tignore --[[ bool ]]\n)",
    "parameters": [
      "entity: \n\nThe entity handle to ignore the request control filter.",
      "ignore: \n\nDefine if the entity ignores the request control filter policy."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle to ignore the request control filter.\n\nignore: \n\nDefine if the entity ignores the request control filter policy.\n\nIt allows to flag an entity to ignore the request control filter policy."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetEntityMatrix",
    "hash": "0xFB0639B",
    "code": "-- SET_ENTITY_MATRIX\nSetEntityMatrix(\n\tentity --[[ Entity ]], \n\tforwardX --[[ number ]], \n\tforwardY --[[ number ]], \n\tforwardZ --[[ number ]], \n\trightX --[[ number ]], \n\trightY --[[ number ]], \n\trightZ --[[ number ]], \n\tupX --[[ number ]], \n\tupY --[[ number ]], \n\tupZ --[[ number ]], \n\tatX --[[ number ]], \n\tatY --[[ number ]], \n\tatZ --[[ number ]]\n)",
    "parameters": [
      "entity: \n\nA valid entity handle.",
      "forwardX:",
      "forwardY:",
      "forwardZ:",
      "rightX:",
      "rightY:",
      "rightZ:",
      "upX:",
      "upY:",
      "upZ:",
      "atX:",
      "atY:",
      "atZ:"
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nA valid entity handle.\n\nforwardX:\nforwardY:\nforwardZ:\nrightX:\nrightY:\nrightZ:\nupX:\nupY:\nupZ:\natX:\natY:\natZ:\n\nSets an entity's matrix. Arguments are in the same order as with GET_ENTITY_MATRIX."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityOrphanMode",
    "hash": "0x489E9162",
    "code": "-- SET_ENTITY_ORPHAN_MODE\nSetEntityOrphanMode(\n\tentity --[[ Entity ]], \n\torphanMode --[[ integer ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to set the orphan mode of",
      "orphanMode: \n\nThe mode that the server should use for determining if an entity should be removed."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to set the orphan mode of\n\norphanMode: \n\nThe mode that the server should use for determining if an entity should be removed.\n\nenum EntityOrphanMode {\n    // Default, this will delete the entity when it isn't relevant to any players\n    // NOTE: this *doesn't* mean when they're no longer in scope\n    DeleteWhenNotRelevant = 0,\n    // The entity will be deleted whenever its original owner disconnects\n    // NOTE: if this is set when the entities original owner has already left it will be\n    // marked for deletion (similar to just calling DELETE_ENTITY)\n    DeleteOnOwnerDisconnect = 1,\n    // The entity will never be deleted by the server when it does relevancy checks\n    // you should only use this on entities that need to be relatively persistent\n    KeepEntity = 2\n}\n\n\nSets what the server will do when the entity no longer has its original owner. By default the server will cleanup entities that it considers \"no longer relevant\".\n\nWhen used on trains, this native will recursively call onto all attached carriages.\n\nNOTE: When used with KeepEntity (2) this native only guarantees that the server will not delete the entity, client requests to delete the entity will still work perfectly fine."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityRemoteSyncedScenesAllowed",
    "hash": "0xD3FC9D88",
    "code": "-- SET_ENTITY_REMOTE_SYNCED_SCENES_ALLOWED\nSetEntityRemoteSyncedScenesAllowed(\n\tentity --[[ Entity ]], \n\tallow --[[ bool ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to set the flag for.",
      "allow: \n\nWhether to allow remote synced scenes for the entity."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to set the flag for.\n\nallow: \n\nWhether to allow remote synced scenes for the entity.\n\nEnables or disables the owner check for the specified entity in network-synchronized scenes. When set to false, the entity cannot participate in synced scenes initiated by clients that do not own the entity.\n\nBy default, this is false for all entities, meaning only the entity's owner can include it in networked synchronized scenes."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityRotation",
    "hash": "0xA345EFE",
    "code": "-- SET_ENTITY_ROTATION\nSetEntityRotation(\n\tentity --[[ Entity ]], \n\tpitch --[[ number ]], \n\troll --[[ number ]], \n\tyaw --[[ number ]], \n\trotationOrder --[[ integer ]], \n\tbDeadCheck --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to rotate.",
      "pitch: \n\nThe pitch (X-axis) rotation in degrees.",
      "roll: \n\nThe roll (Y-axis) rotation in degrees.",
      "yaw: \n\nThe yaw (Z-axis) rotation in degrees.",
      "rotationOrder: \n\nSpecifies the order in which yaw, pitch, and roll are applied, see GET_ENTITY_ROTATION for the available rotation orders.",
      "bDeadCheck: \n\nUsually set to true. Determines whether to check if the entity is dead before applying the rotation."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to rotate.\n\npitch: \n\nThe pitch (X-axis) rotation in degrees.\n\nroll: \n\nThe roll (Y-axis) rotation in degrees.\n\nyaw: \n\nThe yaw (Z-axis) rotation in degrees.\n\nrotationOrder: \n\nSpecifies the order in which yaw, pitch, and roll are applied, see GET_ENTITY_ROTATION for the available rotation orders.\n\nbDeadCheck: \n\nUsually set to true. Determines whether to check if the entity is dead before applying the rotation.\n\nSets the rotation of a specified entity in the game world.\n\nNativeDB Introduced: v323\n\nThis is the server-side RPC native equivalent of the client native SET_ENTITY_ROTATION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityRoutingBucket",
    "hash": "0x635E5289",
    "code": "-- SET_ENTITY_ROUTING_BUCKET\nSetEntityRoutingBucket(\n\tentity --[[ Entity ]], \n\tbucket --[[ integer ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to set the routing bucket for.",
      "bucket: \n\nThe bucket ID."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to set the routing bucket for.\n\nbucket: \n\nThe bucket ID.\n\nSets the routing bucket for the specified entity.\n\nRouting buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetEntityVelocity",
    "hash": "0xFF5A1988",
    "code": "-- SET_ENTITY_VELOCITY\nSetEntityVelocity(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Note that the third parameter(denoted as z) is \"up and down\" with positive numbers encouraging upwards movement.\n\nThis is the server-side RPC native equivalent of the client native SET_ENTITY_VELOCITY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetFlashLightKeepOnWhileMoving",
    "hash": "0x7635B349",
    "code": "-- SET_FLASH_LIGHT_KEEP_ON_WHILE_MOVING\nSetFlashLightKeepOnWhileMoving(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nOn/Off"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nOn/Off\n\nAllows Weapon-Flashlight beams to stay visible while moving. Normally it only stays on while aiming."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetFlyThroughWindscreenParams",
    "hash": "0x4D3118ED",
    "code": "-- SET_FLY_THROUGH_WINDSCREEN_PARAMS\nlocal retval --[[ boolean ]] =\n\tSetFlyThroughWindscreenParams(\n\t\tvehMinSpeed --[[ number ]], \n\t\tunkMinSpeed --[[ number ]], \n\t\tunkModifier --[[ number ]], \n\t\tminDamage --[[ number ]]\n\t)",
    "parameters": [
      "vehMinSpeed: \n\nVehicle minimum speed (default 35.0).",
      "unkMinSpeed: \n\nUnknown minimum speed (default 40.0).",
      "unkModifier: \n\nUnknown modifier (default 17.0).",
      "minDamage: \n\nMinimum damage (default 2000.0)."
    ],
    "returns": [
      "A bool indicating if parameters was set successfully."
    ],
    "description": "Parameters:\n\nvehMinSpeed: \n\nVehicle minimum speed (default 35.0).\n\nunkMinSpeed: \n\nUnknown minimum speed (default 40.0).\n\nunkModifier: \n\nUnknown modifier (default 17.0).\n\nminDamage: \n\nMinimum damage (default 2000.0).\n\nReturns:\n\nA bool indicating if parameters was set successfully.\n\nSets some in-game parameters which is used for checks is ped needs to fly through windscreen after a crash."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetFogVolumeRenderDisabled",
    "hash": "0xFBC64DA3",
    "code": "-- SET_FOG_VOLUME_RENDER_DISABLED\nSetFogVolumeRenderDisabled(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nToggle on or off."
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nToggle on or off.\n\nThis completely disables rendering of fog volumes (vfxfogvolumeinfo.ymt)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetFuelConsumptionRateMultiplier",
    "hash": "0x845F3E5C",
    "code": "-- SET_FUEL_CONSUMPTION_RATE_MULTIPLIER\nSetFuelConsumptionRateMultiplier(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [
      "multiplier: \n\nGlobal fuel consumption multiplier. If negative - 0 will be used instead."
    ],
    "returns": [],
    "description": "Parameters:\n\nmultiplier: \n\nGlobal fuel consumption multiplier. If negative - 0 will be used instead.\n\nSets fuel consumption rate multiplier for all vehicles operated by a player. This is a way to slow down or speed up fuel consumption for all vehicles at a time. If 0 - it practically means that fuel will not be consumed. By default is set to 1.\n\nWhen the multiplier is set to 1 a default 65 litre gas tank car with average fuel consumption can stay idle for ~16.67 hours or run with max RPM for ~2.5 hours.\n\nTo customize fuel consumption per vehicle / vehicle class use SET_HANDLING_FLOAT/SET_VEHICLE_HANDLING_FLOAT natives with fieldName equal to fPetrolConsumptionRate. By default it is set to 0.5 for all vehicles."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetFuelConsumptionState",
    "hash": "0x81DAD03E",
    "code": "-- SET_FUEL_CONSUMPTION_STATE\nSetFuelConsumptionState(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nTrue to turn on. False to turn off."
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nTrue to turn on. False to turn off.\n\nTurns on and off fuel consumption in all vehicles operated by a player. NPC operated vehicles will not consume fuel to avoid traffic disruptions.\n\nThe default Gta5 behaviour is fuel consumption turned off."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetGameType",
    "hash": "0xF90B7469",
    "code": "-- SET_GAME_TYPE\nSetGameType(\n\tgametypeName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetGlobalPassengerMassMultiplier",
    "hash": "0x1C47F6AC",
    "code": "-- SET_GLOBAL_PASSENGER_MASS_MULTIPLIER\nSetGlobalPassengerMassMultiplier(\n\tmassMul --[[ number ]]\n)",
    "parameters": [
      "massMul: \n\nWeight of each passenger (not counting the driver) as a percentage of vehicle mass. Is applied to all vehicles. Default value is 0.05"
    ],
    "returns": [],
    "description": "Parameters:\n\nmassMul: \n\nWeight of each passenger (not counting the driver) as a percentage of vehicle mass. Is applied to all vehicles. Default value is 0.05"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHandlingField",
    "hash": "0xFE8064E3",
    "code": "-- SET_HANDLING_FIELD\nSetHandlingField(\n\tvehicle --[[ string ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ Any ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle class to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle class to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe value to set.\n\nSets a global handling override for a specific vehicle class. The name is supposed to match the handlingName field from handling.meta. Example: SetHandlingField('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHandlingFloat",
    "hash": "0x90DD01C",
    "code": "-- SET_HANDLING_FLOAT\nSetHandlingFloat(\n\tvehicle --[[ string ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle class to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe floating-point value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle class to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe floating-point value to set.\n\nSets a global handling override for a specific vehicle class. The name is supposed to match the handlingName field from handling.meta. Example: SetHandlingFloat('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHandlingInt",
    "hash": "0x8AB3F46C",
    "code": "-- SET_HANDLING_INT\nSetHandlingInt(\n\tvehicle --[[ string ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle class to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe integer value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle class to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe integer value to set.\n\nSets a global handling override for a specific vehicle class. The name is supposed to match the handlingName field from handling.meta."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHandlingVector",
    "hash": "0x7F9D543",
    "code": "-- SET_HANDLING_VECTOR\nSetHandlingVector(\n\tvehicle --[[ string ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ vector3 ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle class to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe Vector3 value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle class to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe Vector3 value to set.\n\nSets a global handling override for a specific vehicle class. The name is supposed to match the handlingName field from handling.meta. Example: SetHandlingVector('AIRTUG', 'CHandlingData', 'vecCentreOfMassOffset', vector3(0.0, 0.0, -5.0))"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigDefaultArmor",
    "hash": "0x20A1E6A2",
    "code": "-- SET_HEALTH_CONFIG_DEFAULT_ARMOR\nSetHealthConfigDefaultArmor(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default armor value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigDefaultEndurance",
    "hash": "0x60F20B81",
    "code": "-- SET_HEALTH_CONFIG_DEFAULT_ENDURANCE\nSetHealthConfigDefaultEndurance(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default endurance value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigDefaultHealth",
    "hash": "0xC705C778",
    "code": "-- SET_HEALTH_CONFIG_DEFAULT_HEALTH\nSetHealthConfigDefaultHealth(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default health value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigDogTakedownThreshold",
    "hash": "0x9A995E96",
    "code": "-- SET_HEALTH_CONFIG_DOG_TAKEDOWN_THRESHOLD\nSetHealthConfigDogTakedownThreshold(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default dog takedown threshold value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigDyingThreshold",
    "hash": "0x9B00FD77",
    "code": "-- SET_HEALTH_CONFIG_DYING_THRESHOLD\nSetHealthConfigDyingThreshold(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default dying health threshold value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigFatiguedThreshold",
    "hash": "0xC58953FD",
    "code": "-- SET_HEALTH_CONFIG_FATIGUED_THRESHOLD\nSetHealthConfigFatiguedThreshold(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default fatigued health threshold value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigHurtThreshold",
    "hash": "0x98DF1A83",
    "code": "-- SET_HEALTH_CONFIG_HURT_THRESHOLD\nSetHealthConfigHurtThreshold(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default hurt health threshold value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigInjuredThreshold",
    "hash": "0xF9D9B647",
    "code": "-- SET_HEALTH_CONFIG_INJURED_THRESHOLD\nSetHealthConfigInjuredThreshold(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default injured health threshold value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigInvincible",
    "hash": "0x4A9EEDE6",
    "code": "-- SET_HEALTH_CONFIG_INVINCIBLE\nSetHealthConfigInvincible(\n\tconfigName --[[ string ]], \n\tnewValue --[[ boolean ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default invincible value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigMeleeFatalAttack",
    "hash": "0xDD443E53",
    "code": "-- SET_HEALTH_CONFIG_MELEE_FATAL_ATTACK\nSetHealthConfigMeleeFatalAttack(\n\tconfigName --[[ string ]], \n\tnewValue --[[ boolean ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default melee cardinal fatal attack value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHealthConfigWritheFromBulletThreshold",
    "hash": "0xE97633CB",
    "code": "-- SET_HEALTH_CONFIG_WRITHE_FROM_BULLET_THRESHOLD\nSetHealthConfigWritheFromBulletThreshold(\n\tconfigName --[[ string ]], \n\tnewValue --[[ number ]]\n)",
    "parameters": [
      "configName: \n\nName of health config.",
      "newValue: \n\nValue"
    ],
    "returns": [],
    "description": "Parameters:\n\nconfigName: \n\nName of health config.\n\nnewValue: \n\nValue\n\nSets default writhe from bullet threshold value for specific health config."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetHttpHandler",
    "hash": "0xF5C6330C",
    "code": "-- SET_HTTP_HANDLER\nSetHttpHandler(\n\thandler --[[ func ]]\n)",
    "parameters": [
      "handler: \n\nThe handler function."
    ],
    "returns": [],
    "description": "Parameters:\n\nhandler: \n\nThe handler function.\n\nSets the handler for HTTP requests made to the executing resource.\n\nExample request URL: http://localhost:30120/http-test/ping - this request will be sent to the http-test resource with the /ping path.\n\nThe handler function assumes the following signature:\n\nfunction HttpHandler(\n  request: {\n    address: string;\n    headers: Record<string, string>;\n    method: string;\n    path: string;\n    setDataHandler(handler: (data: string) => void): void;\n    setDataHandler(handler: (data: ArrayBuffer) => void, binary: 'binary'): void;\n    setCancelHandler(handler: () => void): void;\n  },\n  response: {\n    writeHead(code: number, headers?: Record<string, string | string[]>): void;\n    write(data: string): void;\n    send(data?: string): void;\n  }\n): void;\nrequest: The request object.\naddress: The IP address of the request sender.\npath: The path to where the request was sent.\nheaders: The headers sent with the request.\nmethod: The request method.\nsetDataHandler: Sets the handler for when a data body is passed with the request. Additionally you can pass the 'binary' argument to receive a BufferArray in JavaScript or System.Byte[] in C# (has no effect in Lua).\nsetCancelHandler: Sets the handler for when the request is cancelled.\nresponse: An object to control the response.\nwriteHead: Sets the status code & headers of the response. Can be only called once and won't work if called after running other response functions.\nwrite: Writes to the response body without sending it. Can be called multiple times.\nsend: Writes to the response body and then sends it along with the status code & headers, finishing the request."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHudComponentAlign",
    "hash": "0xEED219F2",
    "code": "-- SET_HUD_COMPONENT_ALIGN\nSetHudComponentAlign(\n\tid --[[ integer ]], \n\thorizontalAlign --[[ integer ]], \n\tverticalAlign --[[ integer ]]\n)",
    "parameters": [
      "id: \n\nThe hud component id.",
      "horizontalAlign: \n\nThe horizontal alignment.",
      "verticalAlign: \n\nThe vertical alignment."
    ],
    "returns": [],
    "description": "Parameters:\n\nid: \n\nThe hud component id.\n\nhorizontalAlign: \n\nThe horizontal alignment.\n\nverticalAlign: \n\nThe vertical alignment.\n\nSee SET_SCRIPT_GFX_ALIGN for details about how gfx align works."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetHudComponentSize",
    "hash": "0x7644A9FA",
    "code": "-- SET_HUD_COMPONENT_SIZE\nSetHudComponentSize(\n\tid --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [
      "id: \n\nThe hud component id.",
      "x: \n\nNew size X.",
      "y: \n\nNew size Y."
    ],
    "returns": [],
    "description": "Parameters:\n\nid: \n\nThe hud component id.\n\nx: \n\nNew size X.\n\ny: \n\nNew size Y."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorPortalCornerPosition",
    "hash": "0x87F43553",
    "code": "-- SET_INTERIOR_PORTAL_CORNER_POSITION\nSetInteriorPortalCornerPosition(\n\tinteriorId --[[ integer ]], \n\tportalIndex --[[ integer ]], \n\tcornerIndex --[[ integer ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "cornerIndex: \n\nInterior corner index.",
      "posX:",
      "posY:",
      "posZ:"
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\ncornerIndex: \n\nInterior corner index.\n\nposX:\nposY:\nposZ:"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorPortalEntityFlag",
    "hash": "0x8349CD76",
    "code": "-- SET_INTERIOR_PORTAL_ENTITY_FLAG\nSetInteriorPortalEntityFlag(\n\tinteriorId --[[ integer ]], \n\tportalIndex --[[ integer ]], \n\tentityIndex --[[ integer ]], \n\tflag --[[ integer ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "entityIndex: \n\nPortal entity index.",
      "flag: \n\nNew flag value."
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nentityIndex: \n\nPortal entity index.\n\nflag: \n\nNew flag value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorPortalFlag",
    "hash": "0x88B2355E",
    "code": "-- SET_INTERIOR_PORTAL_FLAG\nSetInteriorPortalFlag(\n\tinteriorId --[[ integer ]], \n\tportalIndex --[[ integer ]], \n\tflag --[[ integer ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "flag: \n\nNew flag value."
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nflag: \n\nNew flag value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorPortalRoomFrom",
    "hash": "0x298FC783",
    "code": "-- SET_INTERIOR_PORTAL_ROOM_FROM\nSetInteriorPortalRoomFrom(\n\tinteriorId --[[ integer ]], \n\tportalIndex --[[ integer ]], \n\troomFrom --[[ integer ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "roomFrom: \n\nNew value."
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nroomFrom: \n\nNew value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorPortalRoomTo",
    "hash": "0x58982680",
    "code": "-- SET_INTERIOR_PORTAL_ROOM_TO\nSetInteriorPortalRoomTo(\n\tinteriorId --[[ integer ]], \n\tportalIndex --[[ integer ]], \n\troomTo --[[ integer ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "portalIndex: \n\nInterior portal index.",
      "roomTo: \n\nNew value."
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nportalIndex: \n\nInterior portal index.\n\nroomTo: \n\nNew value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorProbeLength",
    "hash": "0x423F7E39",
    "code": "-- SET_INTERIOR_PROBE_LENGTH\nSetInteriorProbeLength(\n\tprobeLength --[[ number ]]\n)",
    "parameters": [
      "probeLength: \n\nThe desired probe length (0.0 - 150.0)"
    ],
    "returns": [],
    "description": "Parameters:\n\nprobeLength: \n\nThe desired probe length (0.0 - 150.0)\n\nOverwrite the games default CPortalTracker interior detection range. This fixes potentially unwanted behaviour in the base game and allows you to build custom interiors with larger ceiling heights without running into graphical glitches.\n\nBy default CPortalTracker will probe 4 units downward trying to reach collisions that are part of the interior the entity is in. If no collision can be found 16 units are used in some circumstances.\n\nThere are 30+ hard coded special cases, only some of them exposed via script (for example ENABLE_STADIUM_PROBES_THIS_FRAME).\n\nThis native allows you to extend the probe range up to 150 units which is the same value the game uses for the xs_arena_interior"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorRoomExtents",
    "hash": "0x4FDCF51E",
    "code": "-- SET_INTERIOR_ROOM_EXTENTS\nSetInteriorRoomExtents(\n\tinteriorId --[[ integer ]], \n\troomIndex --[[ integer ]], \n\tbbMinX --[[ number ]], \n\tbbMinY --[[ number ]], \n\tbbMinZ --[[ number ]], \n\tbbMaxX --[[ number ]], \n\tbbMaxY --[[ number ]], \n\tbbMaxZ --[[ number ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomIndex: \n\nInterior room index.",
      "bbMinX:",
      "bbMinY:",
      "bbMinZ:",
      "bbMaxX:",
      "bbMaxY:",
      "bbMaxZ:"
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomIndex: \n\nInterior room index.\n\nbbMinX:\nbbMinY:\nbbMinZ:\nbbMaxX:\nbbMaxY:\nbbMaxZ:"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorRoomFlag",
    "hash": "0x5518D60B",
    "code": "-- SET_INTERIOR_ROOM_FLAG\nSetInteriorRoomFlag(\n\tinteriorId --[[ integer ]], \n\troomIndex --[[ integer ]], \n\tflag --[[ integer ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomIndex: \n\nInterior room index.",
      "flag: \n\nNew flag value."
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomIndex: \n\nInterior room index.\n\nflag: \n\nNew flag value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetInteriorRoomTimecycle",
    "hash": "0x31C9A848",
    "code": "-- SET_INTERIOR_ROOM_TIMECYCLE\nSetInteriorRoomTimecycle(\n\tinteriorId --[[ integer ]], \n\troomIndex --[[ integer ]], \n\ttimecycleHash --[[ integer ]]\n)",
    "parameters": [
      "interiorId: \n\nThe target interior.",
      "roomIndex: \n\nInterior room index.",
      "timecycleHash: \n\nTimecycle hash."
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorId: \n\nThe target interior.\n\nroomIndex: \n\nInterior room index.\n\ntimecycleHash: \n\nTimecycle hash."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetKeyMappingHideResources",
    "hash": "0xCB0241B5",
    "code": "-- SET_KEY_MAPPING_HIDE_RESOURCES\nSetKeyMappingHideResources(\n\thide --[[ bool ]]\n)",
    "parameters": [
      "hide: \n\ntrue will disable the display of resource names, and false will enable it."
    ],
    "returns": [],
    "description": "Parameters:\n\nhide: \n\ntrue will disable the display of resource names, and false will enable it.\n\nToggles the visibility of resource names in the FiveM key mapping page."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetManualShutdownLoadingScreenNui",
    "hash": "0x1722C938",
    "code": "-- SET_MANUAL_SHUTDOWN_LOADING_SCREEN_NUI\nSetManualShutdownLoadingScreenNui(\n\tmanualShutdown --[[ boolean ]]\n)",
    "parameters": [
      "manualShutdown: \n\nTRUE to manually shut down the loading screen NUI."
    ],
    "returns": [],
    "description": "Parameters:\n\nmanualShutdown: \n\nTRUE to manually shut down the loading screen NUI.\n\nSets whether or not SHUTDOWN_LOADING_SCREEN automatically shuts down the NUI frame for the loading screen. If this is enabled, you will have to manually invoke SHUTDOWN_LOADING_SCREEN_NUI whenever you want to hide the NUI loading screen."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetMapName",
    "hash": "0xB7BA82DC",
    "code": "-- SET_MAP_NAME\nSetMapName(\n\tmapName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetMapZoomDataLevel",
    "hash": "0x447C718E",
    "code": "-- SET_MAP_ZOOM_DATA_LEVEL\nSetMapZoomDataLevel(\n\tindex --[[ integer ]], \n\tzoomScale --[[ number ]], \n\tzoomSpeed --[[ number ]], \n\tscrollSpeed --[[ number ]], \n\ttilesX --[[ number ]], \n\ttilesY --[[ number ]]\n)",
    "parameters": [
      "index: \n\nZoom level index.",
      "zoomScale: \n\nfZoomScale value.",
      "zoomSpeed: \n\nfZoomSpeed value.",
      "scrollSpeed: \n\nfScrollSpeed value.",
      "tilesX: \n\nvTiles X.",
      "tilesY: \n\nvTiles Y."
    ],
    "returns": [],
    "description": "Parameters:\n\nindex: \n\nZoom level index.\n\nzoomScale: \n\nfZoomScale value.\n\nzoomSpeed: \n\nfZoomSpeed value.\n\nscrollSpeed: \n\nfScrollSpeed value.\n\ntilesX: \n\nvTiles X.\n\ntilesY: \n\nvTiles Y.\n\nSets values to the zoom level data by index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetMillisecondsPerGameMinute",
    "hash": "0x36CA2554",
    "code": "-- SET_MILLISECONDS_PER_GAME_MINUTE\nSetMillisecondsPerGameMinute(\n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "value: \n\nMilliseconds."
    ],
    "returns": [],
    "description": "Parameters:\n\nvalue: \n\nMilliseconds.\n\nOverrides how many real ms are equal to one game minute. A setter for GetMillisecondsPerGameMinute."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetMinimapClipType",
    "hash": "0xB8B4490C",
    "code": "-- SET_MINIMAP_CLIP_TYPE\nSetMinimapClipType(\n\ttype --[[ integer ]]\n)",
    "parameters": [
      "type: \n\n0 for rectangular, 1 for rounded."
    ],
    "returns": [],
    "description": "Parameters:\n\ntype: \n\n0 for rectangular, 1 for rounded.\n\nSets the type for the minimap blip clipping object to be either rectangular or rounded."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetMinimapComponentPosition",
    "hash": "0x3E882B23",
    "code": "-- SET_MINIMAP_COMPONENT_POSITION\nSetMinimapComponentPosition(\n\tname --[[ string ]], \n\talignX --[[ string ]], \n\talignY --[[ string ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tsizeX --[[ number ]], \n\tsizeY --[[ number ]]\n)",
    "parameters": [
      "name: \n\nThe name of the minimap component to override.",
      "alignX: \n\nEquivalent to the alignX field in frontend.xml.",
      "alignY: \n\nEquivalent to the alignY field in frontend.xml.",
      "posX: \n\nEquivalent to the posX field in frontend.xml.",
      "posY: \n\nEquivalent to the posY field in frontend.xml.",
      "sizeX: \n\nEquivalent to the sizeX field in frontend.xml.",
      "sizeY: \n\nEquivalent to the sizeY field in frontend.xml."
    ],
    "returns": [],
    "description": "Parameters:\n\nname: \n\nThe name of the minimap component to override.\n\nalignX: \n\nEquivalent to the alignX field in frontend.xml.\n\nalignY: \n\nEquivalent to the alignY field in frontend.xml.\n\nposX: \n\nEquivalent to the posX field in frontend.xml.\n\nposY: \n\nEquivalent to the posY field in frontend.xml.\n\nsizeX: \n\nEquivalent to the sizeX field in frontend.xml.\n\nsizeY: \n\nEquivalent to the sizeY field in frontend.xml.\n\nOverrides the minimap component data (from common:/data/ui/frontend.xml) for a specified component."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetMinimapOverlayDisplay",
    "hash": "0x6A48B3CA",
    "code": "-- SET_MINIMAP_OVERLAY_DISPLAY\nSetMinimapOverlayDisplay(\n\tminiMap --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\txScale --[[ number ]], \n\tyScale --[[ number ]], \n\talpha --[[ number ]]\n)",
    "parameters": [
      "miniMap: \n\nThe minimap overlay ID.",
      "x: \n\nThe X position for the overlay. This is equivalent to a game coordinate X.",
      "y: \n\nThe Y position for the overlay. This is equivalent to a game coordinate Y, except that it's inverted (gfxY = -gameY).",
      "xScale: \n\nThe X scale for the overlay. This is equivalent to the Flash _xscale property, therefore 100 = 100%.",
      "yScale: \n\nThe Y scale for the overlay. This is equivalent to the Flash _yscale property.",
      "alpha: \n\nThe alpha value for the overlay. This is equivalent to the Flash _alpha property, therefore 100 = 100%."
    ],
    "returns": [],
    "description": "Parameters:\n\nminiMap: \n\nThe minimap overlay ID.\n\nx: \n\nThe X position for the overlay. This is equivalent to a game coordinate X.\n\ny: \n\nThe Y position for the overlay. This is equivalent to a game coordinate Y, except that it's inverted (gfxY = -gameY).\n\nxScale: \n\nThe X scale for the overlay. This is equivalent to the Flash _xscale property, therefore 100 = 100%.\n\nyScale: \n\nThe Y scale for the overlay. This is equivalent to the Flash _yscale property.\n\nalpha: \n\nThe alpha value for the overlay. This is equivalent to the Flash _alpha property, therefore 100 = 100%.\n\nSets the display info for a minimap overlay."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetModelHeadlightConfiguration",
    "hash": "0x7F6B8D75",
    "code": "-- SET_MODEL_HEADLIGHT_CONFIGURATION\nSetModelHeadlightConfiguration(\n\tmodelHash --[[ Hash ]], \n\tratePerSecond --[[ number ]], \n\theadlightRotation --[[ number ]], \n\tinvertRotation --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native is deprecated and does nothing!"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetMpGamerTagsUseVehicleBehavior",
    "hash": "0x7A27BC93",
    "code": "-- SET_MP_GAMER_TAGS_USE_VEHICLE_BEHAVIOR\nSetMpGamerTagsUseVehicleBehavior(\n\tenabled --[[ bool ]]\n)",
    "parameters": [
      "enabled: \n\nWhether tags should use normal game behavior. Default is true."
    ],
    "returns": [],
    "description": "Parameters:\n\nenabled: \n\nWhether tags should use normal game behavior. Default is true.\n\nSets whether all tags should group (normal game behavior) or should remain independent and above each ped's respective head when in a vehicle."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetMpGamerTagsVisibleDistance",
    "hash": "0xD61676B3",
    "code": "-- SET_MP_GAMER_TAGS_VISIBLE_DISTANCE\nSetMpGamerTagsVisibleDistance(\n\tdistance --[[ number ]]\n)",
    "parameters": [
      "distance: \n\nThe visible distance. Default is 100.0f."
    ],
    "returns": [],
    "description": "Parameters:\n\ndistance: \n\nThe visible distance. Default is 100.0f.\n\nSets the maximum distance at which all tags will be visible and which beyond will not be displayed. Distance is measured from the camera position."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetNetworkWalkMode",
    "hash": "0x55188D2D",
    "code": "-- SET_NETWORK_WALK_MODE\nSetNetworkWalkMode(\n\tenabled --[[ bool ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetNuiFocus",
    "hash": "0x5B98AE30",
    "code": "-- SET_NUI_FOCUS\nSetNuiFocus(\n\thasFocus --[[ boolean ]], \n\thasCursor --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetNuiFocusKeepInput",
    "hash": "0x3FF5E5F8",
    "code": "-- SET_NUI_FOCUS_KEEP_INPUT\nSetNuiFocusKeepInput(\n\tkeepInput --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetNuiZindex",
    "hash": "0x3734AAFF",
    "code": "-- SET_NUI_ZINDEX\nSetNuiZindex(\n\tzIndex --[[ integer ]]\n)",
    "parameters": [
      "zIndex: \n\nNew z-index value."
    ],
    "returns": [],
    "description": "Parameters:\n\nzIndex: \n\nNew z-index value.\n\nSet the z-index of the NUI resource."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedAmmo",
    "hash": "0xBF90DF1A",
    "code": "-- SET_PED_AMMO\nSetPedAmmo(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tammo --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 4: BOOL p3\n\nThis is the server-side RPC native equivalent of the client native SET_PED_AMMO."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedArmour",
    "hash": "0x4E3A0CC4",
    "code": "-- SET_PED_ARMOUR\nSetPedArmour(\n\tped --[[ Ped ]], \n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the armor of the specified ped.\nped: The Ped to set the armor of.\namount: A value between 0 and 100 indicating the value to set the Ped's armor to.\n\n\nThis is the server-side RPC native equivalent of the client native SET_PED_ARMOUR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedCanRagdoll",
    "hash": "0xCF1384C4",
    "code": "-- SET_PED_CAN_RAGDOLL\nSetPedCanRagdoll(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PED_CAN_RAGDOLL\n\nThis is the server-side RPC native equivalent of the client native SET_PED_CAN_RAGDOLL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedCollectionComponentVariation",
    "hash": "0x88711BBA",
    "code": "-- SET_PED_COLLECTION_COMPONENT_VARIATION\nSetPedCollectionComponentVariation(\n\tped --[[ Ped ]], \n\tcomponentId --[[ integer ]], \n\tcollection --[[ string ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tpaletteId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "drawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS.",
      "paletteId: \n\n0 to 3."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\ndrawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS.\n\npaletteId: \n\n0 to 3.\n\nAn alternative to SET_PED_COMPONENT_VARIATION that uses local collection indexing instead of the global one.\n\nThe local / collection relative indexing is useful because the global index may get shifted after Title Update. While local index will remain the same which simplifies migration to the newer game version.\n\nCollection name and local index inside the collection can be obtained from the global index using GET_PED_COLLECTION_NAME_FROM_DRAWABLE and GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE natives."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedCollectionPreloadPropData",
    "hash": "0x14B5BBE0",
    "code": "-- SET_PED_COLLECTION_PRELOAD_PROP_DATA\nSetPedCollectionPreloadPropData(\n\tped --[[ Ped ]], \n\tanchorPoint --[[ integer ]], \n\tcollection --[[ string ]], \n\tpropIndex --[[ integer ]], \n\ttextureId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "propIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_TEXTURE_VARIATIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\npropIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_TEXTURE_VARIATIONS.\n\nAn alternative to SET_PED_PRELOAD_PROP_DATA that uses local collection indexing instead of the global one.\n\nThe local / collection relative indexing is useful because the global index may get shifted after Title Update. While local index will remain the same which simplifies migration to the newer game version.\n\nCollection name and local index inside the collection can be obtained from the global index using GET_PED_COLLECTION_NAME_FROM_PROP and GET_PED_COLLECTION_LOCAL_INDEX_FROM_PROP natives."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedCollectionPreloadVariationData",
    "hash": "0x3EC75558",
    "code": "-- SET_PED_COLLECTION_PRELOAD_VARIATION_DATA\nSetPedCollectionPreloadVariationData(\n\tped --[[ Ped ]], \n\tcomponentId --[[ integer ]], \n\tcollection --[[ string ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe target ped",
      "componentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "drawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\ncomponentId: \n\nOne of the components from SET_PED_COMPONENT_VARIATION\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\ndrawableId: \n\nLocal drawable Id inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_TEXTURE_VARIATIONS.\n\nAn alternative to SET_PED_PRELOAD_VARIATION_DATA that uses local collection indexing instead of the global one.\n\nThe local / collection relative indexing is useful because the global index may get shifted after Title Update. While local index will remain the same which simplifies migration to the newer game version.\n\nCollection name and local index inside the collection can be obtained from the global index using GET_PED_COLLECTION_NAME_FROM_DRAWABLE and GET_PED_COLLECTION_LOCAL_INDEX_FROM_DRAWABLE natives."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedCollectionPropIndex",
    "hash": "0x75240BCB",
    "code": "-- SET_PED_COLLECTION_PROP_INDEX\nSetPedCollectionPropIndex(\n\tped --[[ Ped ]], \n\tanchorPoint --[[ integer ]], \n\tcollection --[[ string ]], \n\tpropIndex --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tattach --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe target ped",
      "anchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX",
      "collection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.",
      "propIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_TEXTURE_VARIATIONS.",
      "attach: \n\nAttached or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nanchorPoint: \n\nOne of the anchor points from SET_PED_PROP_INDEX\n\ncollection: \n\nName of the collection. Empty string for the base game collection. See GET_PED_COLLECTION_NAME in order to list all available collections.\n\npropIndex: \n\nLocal prop index inside the given collection. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_COLLECTION_PROP_TEXTURE_VARIATIONS.\n\nattach: \n\nAttached or not.\n\nAn alternative to SET_PED_PROP_INDEX that uses local collection indexing instead of the global one.\n\nThe local / collection relative indexing is useful because the global index may get shifted after Title Update. While local index will remain the same which simplifies migration to the newer game version.\n\nCollection name and local index inside the collection can be obtained from the global index using GET_PED_COLLECTION_NAME_FROM_PROP and GET_PED_COLLECTION_LOCAL_INDEX_FROM_PROP natives."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedComponentVariation",
    "hash": "0xD4F7B05C",
    "code": "-- SET_PED_COMPONENT_VARIATION\nSetPedComponentVariation(\n\tped --[[ Ped ]], \n\tcomponentId --[[ integer ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tpaletteId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component that you want to set.",
      "drawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_TEXTURE_VARIATIONS.",
      "paletteId: \n\n0 to 3."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component that you want to set.\n\ndrawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_TEXTURE_VARIATIONS.\n\npaletteId: \n\n0 to 3.\n\nThis native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.\n\nMP Freemode list of components\n\n0: Face 1: Mask 2: Hair 3: Torso 4: Leg 5: Parachute / bag 6: Shoes 7: Accessory 8: Undershirt 9: Kevlar 10: Badge 11: Torso 2 List of Component IDs\n\n// Components\nenum ePedVarComp\n{\nPV_COMP_INVALID = 0xFFFFFFFF,\nPV_COMP_HEAD = 0, // \"HEAD\"\nPV_COMP_BERD = 1, // \"BEARD\"\nPV_COMP_HAIR = 2, // \"HAIR\"\nPV_COMP_UPPR = 3, // \"UPPER\"\nPV_COMP_LOWR = 4, // \"LOWER\"\nPV_COMP_HAND = 5, // \"HAND\"\nPV_COMP_FEET = 6, // \"FEET\"\nPV_COMP_TEEF = 7, // \"TEETH\"\nPV_COMP_ACCS = 8, // \"ACCESSORIES\"\nPV_COMP_TASK = 9, // \"TASK\"\nPV_COMP_DECL = 10, // \"DECL\"\nPV_COMP_JBIB = 11, // \"JBIB\"\nPV_COMP_MAX = 12,\n};\n\n\nThis is the server-side RPC native equivalent of the client native SET_PED_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedConfigFlag",
    "hash": "0x9CFBE10D",
    "code": "-- SET_PED_CONFIG_FLAG\nSetPedConfigFlag(\n\tped --[[ Ped ]], \n\tflagId --[[ integer ]], \n\tvalue --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "// Potential names and hash collisions included as comments\nenum ePedConfigFlags {\nCPED_CONFIG_FLAG_CreatedByFactory = 0,\nCPED_CONFIG_FLAG_CanBeShotInVehicle = 1,\nCPED_CONFIG_FLAG_NoCriticalHits = 2,\nCPED_CONFIG_FLAG_DrownsInWater = 3,\nCPED_CONFIG_FLAG_DrownsInSinkingVehicle = 4,\nCPED_CONFIG_FLAG_DiesInstantlyWhenSwimming = 5,\nCPED_CONFIG_FLAG_HasBulletProofVest = 6,\nCPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,\nCPED_CONFIG_FLAG_NeverFallOffSkis = 8,\nCPED_CONFIG_FLAG_NeverEverTargetThisPed = 9,\nCPED_CONFIG_FLAG_ThisPedIsATargetPriority = 10,\nCPED_CONFIG_FLAG_TargettableWithNoLos = 11,\nCPED_CONFIG_FLAG_DoesntListenToPlayerGroupCommands = 12,\nCPED_CONFIG_FLAG_NeverLeavesGroup = 13,\nCPED_CONFIG_FLAG_DoesntDropWeaponsWhenDead = 14,\nCPED_CONFIG_FLAG_SetDelayedWeaponAsCurrent = 15,\nCPED_CONFIG_FLAG_KeepTasksAfterCleanUp = 16,\nCPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,\nCPED_CONFIG_FLAG_HasAScriptBrain = 18,\nCPED_CONFIG_FLAG_WaitingForScriptBrainToLoad = 19,\nCPED_CONFIG_FLAG_AllowMedicsToReviveMe = 20,\nCPED_CONFIG_FLAG_MoneyHasBeenGivenByScript = 21,\nCPED_CONFIG_FLAG_NotAllowedToCrouch = 22,\nCPED_CONFIG_FLAG_DeathPickupsPersist = 23,\nCPED_CONFIG_FLAG_IgnoreSeenMelee = 24,\nCPED_CONFIG_FLAG_ForceDieIfInjured = 25,\nCPED_CONFIG_FLAG_DontDragMeOutCar = 26,\nCPED_CONFIG_FLAG_StayInCarOnJack = 27,\nCPED_CONFIG_FLAG_ForceDieInCar = 28,\nCPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,\nCPED_CONFIG_FLAG_WillRemainOnBoatAfterMissionEnds = 30,\nCPED_CONFIG_FLAG_DontStoreAsPersistent = 31,\nCPED_CONFIG_FLAG_WillFlyThroughWindscreen = 32,\nCPED_CONFIG_FLAG_DieWhenRagdoll = 33,\nCPED_CONFIG_FLAG_HasHelmet = 34,\nCPED_CONFIG_FLAG_UseHelmet = 35,\nCPED_CONFIG_FLAG_DontTakeOffHelmet = 36,\nCPED_CONFIG_FLAG_HideInCutscene = 37,\nCPED_CONFIG_FLAG_PedIsEnemyToPlayer = 38,\nCPED_CONFIG_FLAG_DisableEvasiveDives = 39,\nCPED_CONFIG_FLAG_PedGeneratesDeadBodyEvents = 40,\nCPED_CONFIG_FLAG_DontAttackPlayerWithoutWantedLevel = 41,\nCPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,\nCPED_CONFIG_FLAG_DisablePlayerLockon = 43,\nCPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,\nCPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,\n_0xDB115BFA = 46,\nCPED_CONFIG_FLAG_PedBeingDeleted = 47,\nCPED_CONFIG_FLAG_BlockWeaponSwitching = 48,\nCPED_CONFIG_FLAG_BlockGroupPedAimedAtResponse = 49,\nCPED_CONFIG_FLAG_WillFollowLeaderAnyMeans = 50,\nCPED_CONFIG_FLAG_BlippedByScript = 51,\nCPED_CONFIG_FLAG_DrawRadarVisualField = 52,\nCPED_CONFIG_FLAG_StopWeaponFiringOnImpact = 53,\nCPED_CONFIG_FLAG_DissableAutoFallOffTests = 54,\nCPED_CONFIG_FLAG_SteerAroundDeadBodies = 55,\nCPED_CONFIG_FLAG_ConstrainToNavMesh = 56,\nCPED_CONFIG_FLAG_SyncingAnimatedProps = 57,\nCPED_CONFIG_FLAG_IsFiring = 58,\nCPED_CONFIG_FLAG_WasFiring = 59,\nCPED_CONFIG_FLAG_IsStanding = 60,\nCPED_CONFIG_FLAG_WasStanding = 61,\nCPED_CONFIG_FLAG_InVehicle = 62,\nCPED_CONFIG_FLAG_OnMount = 63,\nCPED_CONFIG_FLAG_AttachedToVehicle = 64,\nCPED_CONFIG_FLAG_IsSwimming = 65,\nCPED_CONFIG_FLAG_WasSwimming = 66,\nCPED_CONFIG_FLAG_IsSkiing = 67,\nCPED_CONFIG_FLAG_IsSitting = 68,\nCPED_CONFIG_FLAG_KilledByStealth = 69,\nCPED_CONFIG_FLAG_KilledByTakedown = 70,\nCPED_CONFIG_FLAG_Knockedout = 71,\nCPED_CONFIG_FLAG_ClearRadarBlipOnDeath = 72,\nCPED_CONFIG_FLAG_JustGotOffTrain = 73,\nCPED_CONFIG_FLAG_JustGotOnTrain = 74,\nCPED_CONFIG_FLAG_UsingCoverPoint = 75,\nCPED_CONFIG_FLAG_IsInTheAir = 76,\nCPED_CONFIG_FLAG_KnockedUpIntoAir = 77,\nCPED_CONFIG_FLAG_IsAimingGun = 78,\nCPED_CONFIG_FLAG_HasJustLeftCar = 79,\nCPED_CONFIG_FLAG_TargetWhenInjuredAllowed = 80,\nCPED_CONFIG_FLAG_CurrLeftFootCollNM = 81,\nCPED_CONFIG_FLAG_PrevLeftFootCollNM = 82,\nCPED_CONFIG_FLAG_CurrRightFootCollNM = 83,\nCPED_CONFIG_FLAG_PrevRightFootCollNM = 84,\nCPED_CONFIG_FLAG_HasBeenBumpedInCar = 85,\nCPED_CONFIG_FLAG_InWaterTaskQuitToClimbLadder = 86,\nCPED_CONFIG_FLAG_NMTwoHandedWeaponBothHandsConstrained = 87,\nCPED_CONFIG_FLAG_CreatedBloodPoolTimer = 88,\nCPED_CONFIG_FLAG_DontActivateRagdollFromAnyPedImpact = 89,\nCPED_CONFIG_FLAG_GroupPedFailedToEnterCover = 90,\nCPED_CONFIG_FLAG_AlreadyChattedOnPhone = 91,\nCPED_CONFIG_FLAG_AlreadyReactedToPedOnRoof = 92,\nCPED_CONFIG_FLAG_ForcePedLoadCover = 93,\nCPED_CONFIG_FLAG_BlockCoweringInCover = 94,\nCPED_CONFIG_FLAG_BlockPeekingInCover = 95,\nCPED_CONFIG_FLAG_JustLeftCarNotCheckedForDoors = 96,\nCPED_CONFIG_FLAG_VaultFromCover = 97,\nCPED_CONFIG_FLAG_AutoConversationLookAts = 98,\nCPED_CONFIG_FLAG_UsingCrouchedPedCapsule = 99,\nCPED_CONFIG_FLAG_HasDeadPedBeenReported = 100,\nCPED_CONFIG_FLAG_ForcedAim = 101,\nCPED_CONFIG_FLAG_SteersAroundPeds = 102,\nCPED_CONFIG_FLAG_SteersAroundObjects = 103,\nCPED_CONFIG_FLAG_OpenDoorArmIK = 104,\nCPED_CONFIG_FLAG_ForceReload = 105,\nCPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,\nCPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,\nCPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,\nCPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,\nCPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,\nCPED_CONFIG_FLAG_IsBeingDraggedToSafety = 111,\nCPED_CONFIG_FLAG_HasBeenDraggedToSafety = 112,\nCPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,\nCPED_CONFIG_FLAG_ForceScriptControlledKnockout = 114,\nCPED_CONFIG_FLAG_FallOutOfVehicleWhenKilled = 115,\nCPED_CONFIG_FLAG_GetOutBurningVehicle = 116,\nCPED_CONFIG_FLAG_BumpedByPlayer = 117,\nCPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,\nCPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,\nCPED_CONFIG_FLAG_IsHandCuffed = 120,\nCPED_CONFIG_FLAG_IsAnkleCuffed = 121,\nCPED_CONFIG_FLAG_DisableMelee = 122,\nCPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,\nCPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,\nCPED_CONFIG_FLAG_UNUSED_REPLACE_ME = 125,\nCPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,\nCPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,\nCPED_CONFIG_FLAG_CanBeAgitated = 128,\nCPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,\nCPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,\nCPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,\nCPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,\nCPED_CONFIG_FLAG_ForcePedToBeDragged = 133,\nCPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,\nCPED_CONFIG_FLAG_IsScuba = 135,\nCPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,\nCPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,\nCPED_CONFIG_FLAG_RidingTrain = 138,\nCPED_CONFIG_FLAG_ArrestResult = 139,\nCPED_CONFIG_FLAG_CanAttackFriendly = 140,\nCPED_CONFIG_FLAG_WillJackAnyPlayer = 141,\nCPED_CONFIG_FLAG_BumpedByPlayerVehicle = 142,\nCPED_CONFIG_FLAG_DodgedPlayerVehicle = 143,\nCPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,\nCPED_CONFIG_FLAG_NoCopWantedAggro = 145,\nCPED_CONFIG_FLAG_DisableLadderClimbing = 146,\nCPED_CONFIG_FLAG_StairsDetected = 147,\nCPED_CONFIG_FLAG_SlopeDetected = 148,\nCPED_CONFIG_FLAG_HelmetHasBeenShot = 149,\nCPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,\nCPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,\nCPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,\nCPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,\nCPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,\nCPED_CONFIG_FLAG_CanPerformArrest = 155,\nCPED_CONFIG_FLAG_CanPerformUncuff = 156,\nCPED_CONFIG_FLAG_CanBeArrested = 157,\nCPED_CONFIG_FLAG_MoverConstrictedByOpposingCollisions = 158,\nCPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,\nCPED_CONFIG_FLAG_DontActivateRagdollFromImpactObject = 160,\nCPED_CONFIG_FLAG_DontActivateRagdollFromMelee = 161,\nCPED_CONFIG_FLAG_DontActivateRagdollFromWaterJet = 162,\nCPED_CONFIG_FLAG_DontActivateRagdollFromDrowning = 163,\nCPED_CONFIG_FLAG_DontActivateRagdollFromFalling = 164,\nCPED_CONFIG_FLAG_DontActivateRagdollFromRubberBullet = 165,\nCPED_CONFIG_FLAG_IsInjured = 166,\nCPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,\nCPED_CONFIG_FLAG_SwimmingTasksRunning = 168,\nCPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,\nCPED_CONFIG_FLAG_ForceDirectEntry = 170,\nCPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,\nCPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,\nCPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,\nCPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,\nCPED_CONFIG_FLAG_PlayerInContactWithKinematicPed = 175,\nCPED_CONFIG_FLAG_PlayerInContactWithSomethingOtherThanKinematicPed = 176,\nCPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,\nCPED_CONFIG_FLAG_AdditionalRappellingPed = 178,\nCPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,\nCPED_CONFIG_FLAG_IsInCustody = 180,\nCPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,\nCPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,\nCPED_CONFIG_FLAG_IsAgitated = 183,\nCPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,\nCPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,\nCPED_CONFIG_FLAG_EnableWeaponBlocking = 186,\nCPED_CONFIG_FLAG_HasHurtStarted = 187,\nCPED_CONFIG_FLAG_DisableHurt = 188,\nCPED_CONFIG_FLAG_PlayerIsWeird = 189,\nCPED_CONFIG_FLAG_PedHadPhoneConversation = 190,\nCPED_CONFIG_FLAG_BeganCrossingRoad = 191,\nCPED_CONFIG_FLAG_WarpIntoLeadersVehicle = 192,\nCPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,\nCPED_CONFIG_FLAG_UsingScenario = 194,\nCPED_CONFIG_FLAG_VisibleOnScreen = 195,\nCPED_CONFIG_FLAG_DontCollideWithKinematic = 196,\nCPED_CONFIG_FLAG_ActivateOnSwitchFromLowPhysicsLod = 197,\nCPED_CONFIG_FLAG_DontActivateRagdollOnPedCollisionWhenDead = 198,\nCPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,\nCPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,\nCPED_CONFIG_FLAG_UseDiminishingAmmoRate = 201,\nCPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,\nCPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,\nCPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,\nCPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,\nCPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,\nCPED_CONFIG_FLAG_LowPhysicsLodMayPlaceOnNavMesh = 207,\nCPED_CONFIG_FLAG_DisableExplosionReactions = 208,\nCPED_CONFIG_FLAG_DodgedPlayer = 209,\nCPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,\nCPED_CONFIG_FLAG_ForcedToStayInCover = 211,\nCPED_CONFIG_FLAG_GeneratesSoundEvents = 212,\nCPED_CONFIG_FLAG_ListensToSoundEvents = 213,\nCPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,\nCPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,\nCPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,\nCPED_CONFIG_FLAG_ForceExitToSkyDive = 217,\nCPED_CONFIG_FLAG_SteersAroundVehicles = 218,\nCPED_CONFIG_FLAG_AllowPedInVehiclesOverrideTaskFlags = 219,\nCPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,\nCPED_CONFIG_FLAG_DisableExitToSkyDive = 221,\nCPED_CONFIG_FLAG_ScriptHasDisabledCollision = 222,\nCPED_CONFIG_FLAG_UseAmbientModelScaling = 223,\nCPED_CONFIG_FLAG_DontWatchFirstOnNextHurryAway = 224,\nCPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,\nCPED_CONFIG_FLAG_DisablePedAvoidance = 226,\nCPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,\nCPED_CONFIG_FLAG_CanLosePropsOnDamage = 228,\nCPED_CONFIG_FLAG_DisablePanicInVehicle = 229,\nCPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,\nCPED_CONFIG_FLAG_HasShotBeenReactedToFromFront = 231,\nCPED_CONFIG_FLAG_HasShotBeenReactedToFromBack = 232,\nCPED_CONFIG_FLAG_HasShotBeenReactedToFromLeft = 233,\nCPED_CONFIG_FLAG_HasShotBeenReactedToFromRight = 234,\nCPED_CONFIG_FLAG_AllowBlockDeadPedRagdollActivation = 235,\nCPED_CONFIG_FLAG_IsHoldingProp = 236,\nCPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,\nCPED_CONFIG_FLAG_ForcePlayNormalScenarioExitOnNextScriptCommand = 238,\nCPED_CONFIG_FLAG_ForcePlayImmediateScenarioExitOnNextScriptCommand = 239,\nCPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,\nCPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,\nCPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,\nCPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,\nCPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,\nCPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,\nCPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,\nCPED_CONFIG_FLAG_InStrafeTransition = 247,\nCPED_CONFIG_FLAG_CanPlayInCarIdles = 248,\nCPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,\nCPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,\nCPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,\nCPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,\nCPED_CONFIG_FLAG_OnStairs = 253,\nCPED_CONFIG_FLAG_SimulatingAiming = 254,\nCPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,\nCPED_CONFIG_FLAG_ParentCarIsBeingRemoved = 256,\nCPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,\nCPED_CONFIG_FLAG_CanLoseHelmetOnDamage = 258,\nCPED_CONFIG_FLAG_NeverDoScenarioExitProbeChecks = 259,\nCPED_CONFIG_FLAG_SuppressLowLODRagdollSwitchWhenCorpseSettles = 260,\nCPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,\nCPED_CONFIG_FLAG_JustLeftVehicleNeedsReset = 262,\nCPED_CONFIG_FLAG_TeleportIfCantReachPlayer = 263,\nCPED_CONFIG_FLAG_PedsInVehiclePositionNeedsReset = 264,\nCPED_CONFIG_FLAG_PedsFullyInSeat = 265,\nCPED_CONFIG_FLAG_AllowPlayerLockOnIfFriendly = 266,\nCPED_CONFIG_FLAG_UseCameraHeadingForDesiredDirectionLockOnTest = 267,\nCPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,\nCPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,\nCPED_CONFIG_FLAG_OnStairSlope = 270,\nCPED_CONFIG_FLAG_HasPlayedNMGetup = 271,\nCPED_CONFIG_FLAG_DontBlipCop = 272,\nCPED_CONFIG_FLAG_SpawnedAtExtendedRangeScenario = 273,\nCPED_CONFIG_FLAG_WalkAlongsideLeaderWhenClose = 274,\nCPED_CONFIG_FLAG_KillWhenTrapped = 275,\nCPED_CONFIG_FLAG_EdgeDetected = 276,\nCPED_CONFIG_FLAG_AlwaysWakeUpPhysicsOfIntersectedPeds = 277,\nCPED_CONFIG_FLAG_EquippedAmbientLoadOutWeapon = 278,\nCPED_CONFIG_FLAG_AvoidTearGas = 279,\nCPED_CONFIG_FLAG_StoppedSpeechUponFreezing = 280,\nCPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,\nCPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,\nCPED_CONFIG_FLAG_ThrownFromVehicleDueToExhaustion = 283,\nCPED_CONFIG_FLAG_UpdateEnclosedSearchRegion = 284,\nCPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,\nCPED_CONFIG_FLAG_ShouldChargeNow = 286,\nCPED_CONFIG_FLAG_RagdollingOnBoat = 287,\nCPED_CONFIG_FLAG_HasBrandishedWeapon = 288,\nCPED_CONFIG_FLAG_AllowMinorReactionsAsMissionPed = 289,\nCPED_CONFIG_FLAG_BlockDeadBodyShockingEventsWhenDead = 290,\nCPED_CONFIG_FLAG_PedHasBeenSeen = 291,\nCPED_CONFIG_FLAG_PedIsInReusePool = 292,\nCPED_CONFIG_FLAG_PedWasReused = 293,\nCPED_CONFIG_FLAG_DisableShockingEvents = 294,\nCPED_CONFIG_FLAG_MovedUsingLowLodPhysicsSinceLastActive = 295,\nCPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,\nCPED_CONFIG_FLAG_ForcePlayFleeScenarioExitOnNextScriptCommand = 297,\nCPED_CONFIG_FLAG_JustBumpedIntoVehicle = 298,\nCPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,\nCPED_CONFIG_FLAG_ShouldThrowSmokeNow = 300,\nCPED_CONFIG_FLAG_DisablePedConstraints = 301,\nCPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,\nCPED_CONFIG_FLAG_CreatedByDispatch = 303,\nCPED_CONFIG_FLAG_PointGunLeftHandSupporting = 304,\nCPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,\nCPED_CONFIG_FLAG_DontActivateRagdollFromPlayerPedImpact = 306,\nCPED_CONFIG_FLAG_DontActivateRagdollFromAiRagdollImpact = 307,\nCPED_CONFIG_FLAG_DontActivateRagdollFromPlayerRagdollImpact = 308,\nCPED_CONFIG_FLAG_DisableQuadrupedSpring = 309,\nCPED_CONFIG_FLAG_IsInCluster = 310,\nCPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,\nCPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,\nCPED_CONFIG_FLAG_PreferInjuredGetup = 313,\nCPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,\nCPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,\nCPED_CONFIG_FLAG_JackedAbandonedCar = 316,\nCPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,\nCPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,\nCPED_CONFIG_FLAG_HasPortablePickupAttached = 319,\nCPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,\nCPED_CONFIG_FLAG_HasClothCollisionBounds = 321,\nCPED_CONFIG_FLAG_HasHighHeels = 322,\nCPED_CONFIG_FLAG_TreatAsAmbientPedForDriverLockOn = 323,\nCPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,\nCPED_CONFIG_FLAG_SpawnedAtScenario = 325,\nCPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,\nCPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,\nCPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,\nCPED_CONFIG_FLAG_DisableTalkTo = 329,\nCPED_CONFIG_FLAG_DontBlip = 330,\nCPED_CONFIG_FLAG_IsSwitchingWeapon = 331,\nCPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,\nCPED_CONFIG_FLAG_ScriptForceNoTimesliceIntelligenceUpdate = 333,\nCPED_CONFIG_FLAG_JackedOutOfMyVehicle = 334,\nCPED_CONFIG_FLAG_WentIntoCombatAfterBeingJacked = 335,\nCPED_CONFIG_FLAG_DontActivateRagdollForVehicleGrab = 336,\nCPED_CONFIG_FLAG_ForcePackageCharacterCloth = 337,\nCPED_CONFIG_FLAG_DontRemoveWithValidOrder = 338,\nCPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,\nCPED_CONFIG_FLAG_ForcedToStayInCoverDueToPlayerSwitch = 340,\nCPED_CONFIG_FLAG_ForceProneCharacterCloth = 341,\nCPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,\nCPED_CONFIG_FLAG_InToStrafeTransition = 343,\nCPED_CONFIG_FLAG_KilledByStandardMelee = 344,\nCPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,\nCPED_CONFIG_FLAG_ForcePlayDirectedNormalScenarioExitOnNextScriptCommand = 346,\nCPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,\nCPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,\nCPED_CONFIG_FLAG_EquipJetpack = 349,\nCPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,\nCPED_CONFIG_FLAG_ScriptHasCompletelyDisabledCollision = 351,\nCPED_CONFIG_FLAG_NeverDoScenarioNavChecks = 352,\nCPED_CONFIG_FLAG_ForceSynchronousScenarioExitChecking = 353,\nCPED_CONFIG_FLAG_ThrowingGrenadeWhileAiming = 354,\nCPED_CONFIG_FLAG_HeadbobToRadioEnabled = 355,\nCPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,\nCPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,\nCPED_CONFIG_FLAG_DontBlipNotSynced = 358,\nCPED_CONFIG_FLAG_IsDuckingInVehicle = 359,\nCPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,\nCPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,\nCPED_CONFIG_FLAG_HasReserveParachute = 362,\nCPED_CONFIG_FLAG_UseReserveParachute = 363,\nCPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,\nCPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,\nCPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,\nCPED_CONFIG_FLAG_DontActivateRagdollFromSmokeGrenade = 367,\nCPED_CONFIG_FLAG_LinkMBRToOwnerOnChain = 368,\nCPED_CONFIG_FLAG_AmbientFriendBumpedByPlayer = 369,\nCPED_CONFIG_FLAG_AmbientFriendBumpedByPlayerVehicle = 370,\nCPED_CONFIG_FLAG_InFPSUnholsterTransition = 371,\nCPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,\nCPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,\nCPED_CONFIG_FLAG_NeverLeaveTrain = 374,\nCPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,\nCPED_CONFIG_FLAG_UseFPSUnholsterTransitionDuringCombatRoll = 376,\nCPED_CONFIG_FLAG_ExitingFPSCombatRoll = 377,\nCPED_CONFIG_FLAG_ScriptHasControlOfPlayer = 378,\nCPED_CONFIG_FLAG_PlayFPSIdleFidgetsForProjectile = 379,\nCPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,\nCPED_CONFIG_FLAG_DisableAutoEquipHelmetsInAircraft = 381,\nCPED_CONFIG_FLAG_WasPlayingFPSGetup = 382,\nCPED_CONFIG_FLAG_WasPlayingFPSMeleeActionResult = 383,\nCPED_CONFIG_FLAG_PreferNoPriorityRemoval = 384,\nCPED_CONFIG_FLAG_FPSFidgetsAbortedOnFire = 385,\nCPED_CONFIG_FLAG_ForceFPSIKWithUpperBodyAnim = 386,\nCPED_CONFIG_FLAG_SwitchingCharactersInFirstPerson = 387,\nCPED_CONFIG_FLAG_IsClimbingLadder = 388,\nCPED_CONFIG_FLAG_HasBareFeet = 389,\nCPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,\nCPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,\nCPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,\nCPED_CONFIG_FLAG_ResetLastVehicleOnVehicleExit = 393,\nCPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,\nCPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,\nCPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,\nCPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,\nCPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,\nCPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,\nCPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,\nCPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,\nCPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,\nCPED_CONFIG_FLAG_ChangeFromPermanentToAmbientPopTypeOnMigration = 403,\nCPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,\nCPED_CONFIG_FLAG_UsingLowriderLeans = 405,\nCPED_CONFIG_FLAG_UsingAlternateLowriderLeans = 406,\nCPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,\nCPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,\nCPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,\nCPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,\nCPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,\nCPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,\nCPED_CONFIG_FLAG_IsHolsteringWeapon = 413,\nCPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,\nCPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,\nCPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,\nCPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,\nCPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,\nCPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,\nCPED_CONFIG_FLAG_IsPerformingVehicleMelee = 420,\nCPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,\nCPED_CONFIG_FLAG_DisableVehicleCombat = 422,\nCPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamage = 423,\nCPED_CONFIG_FLAG_AllowBikeAlternateAnimations = 424,\nCPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamageNonSynced = 425,\nCPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,\nCPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,\nCPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,\nCPED_CONFIG_FLAG_DisableStartEngine = 429,\nCPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,\nCPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,\nCPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,\nCPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,\nCPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,\nCPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,\nCPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,\nCPED_CONFIG_FLAG_DontShoutTargetPosition = 437,\nCPED_CONFIG_FLAG_DisableHelmetArmor = 438,\nCPED_CONFIG_FLAG_CreatedByConcealedPlayer = 439,\nCPED_CONFIG_FLAG_PermanentlyDisablePotentialToBeWalkedIntoResponse = 440,\nCPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,\nCPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,\nCPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,\nCPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,\nCPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,\nCPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,\nCPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,\nCPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,\nCPED_CONFIG_FLAG_FiresDummyRockets = 449,\nCPED_CONFIG_FLAG_PedIsArresting = 450,\nCPED_CONFIG_FLAG_IsDecoyPed = 451,\nCPED_CONFIG_FLAG_HasEstablishedDecoy = 452,\nCPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,\nCPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,\nCPED_CONFIG_FLAG_HitByTranqWeapon = 455,\nCPED_CONFIG_FLAG_CanBeIncapacitated = 456,\nCPED_CONFIG_FLAG_ForcedAimFromArrest = 457,\nCPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,\n_0x4376ABF2 = 459,\nCPED_CONFIG_FLAG_RagdollFloatsIndefinitely = 460,\nCPED_CONFIG_FLAG_BlockElectricWeaponDamage = 461,\n_0x262A3B8E = 462,\n_0x1AA79A25 = 463,\n}\n\n\nThis is the server-side RPC native equivalent of the client native SET_PED_CONFIG_FLAG."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedDefaultComponentVariation",
    "hash": "0xC866A984",
    "code": "-- SET_PED_DEFAULT_COMPONENT_VARIATION\nSetPedDefaultComponentVariation(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets Ped Default Clothes\n\nThis is the server-side RPC native equivalent of the client native SET_PED_DEFAULT_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedEyeColor",
    "hash": "0xEC09DB1B",
    "code": "-- _SET_PED_EYE_COLOR\nSetPedEyeColor(\n\tped --[[ Ped ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used for freemode (online) characters. Indices:\n\nblack\nvery light blue/green\ndark blue\nbrown\ndarker brown\nlight brown\nblue\nlight blue\npink\nyellow\npurple\nblack\ndark green\nlight brown\nyellow/black pattern\nlight colored spiral pattern\nshiny red\nshiny half blue/half red\nhalf black/half light blue\nwhite/red perimter\ngreen snake\nred snake\ndark blue snake\ndark yellow\nbright yellow\nall black\nred small pupil\ndevil blue/black\nwhite small pupil\nglossed over\n\nThis is the server-side RPC native equivalent of the client native _SET_PED_EYE_COLOR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedFaceFeature",
    "hash": "0x6C8D4458",
    "code": "-- _SET_PED_FACE_FEATURE\nSetPedFaceFeature(\n\tped --[[ Ped ]], \n\tindex --[[ integer ]], \n\tscale --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "index: \n\nAn integer ranging from 0 to 19",
      "scale: \n\nA float ranging from -1.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\nindex: \n\nAn integer ranging from 0 to 19\n\nscale: \n\nA float ranging from -1.0 to 1.0\n\nSets the various freemode face features, e.g. nose length, chin shape. Indexes (From 0 to 19): Parentheses indicate morph scale/direction as in (-1.0 to 1.0)\n\n0: Nose Width (Thin/Wide)\n1: Nose Peak (Up/Down)\n2: Nose Length (Long/Short)\n3: Nose Bone Curveness (Crooked/Curved)\n4: Nose Tip (Up/Down)\n5: Nose Bone Twist (Left/Right)\n6: Eyebrow (Up/Down)\n7: Eyebrow (In/Out)\n8: Cheek Bones (Up/Down)\n9: Cheek Sideways Bone Size (In/Out)\n10: Cheek Bones Width (Puffed/Gaunt)\n11: Eye Opening (Both) (Wide/Squinted)\n12: Lip Thickness (Both) (Fat/Thin)\n13: Jaw Bone Width (Narrow/Wide)\n14: Jaw Bone Shape (Round/Square)\n15: Chin Bone (Up/Down)\n16: Chin Bone Length (In/Out or Backward/Forward)\n17: Chin Bone Shape (Pointed/Square)\n18: Chin Hole (Chin Bum)\n19: Neck Thickness (Thin/Thick) Note: You may need to call SetPedHeadBlendData prior to calling this native in order for it to work.\n\nThis is the server-side RPC native equivalent of the client native _SET_PED_FACE_FEATURE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedHairTint",
    "hash": "0xA23FE32C",
    "code": "-- SET_PED_HAIR_TINT\nSetPedHairTint(\n\tped --[[ Ped ]], \n\tcolorID --[[ integer ]], \n\thighlightColorID --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped whose hair tint is to be set.",
      "colorID: \n\nThe tint index for the primary hair color.",
      "highlightColorID: \n\nThe tint index for the hair highlight color."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped whose hair tint is to be set.\n\ncolorID: \n\nThe tint index for the primary hair color.\n\nhighlightColorID: \n\nThe tint index for the hair highlight color.\n\nSets the tint index for the hair on the specified ped.\n\nNativeDB Introduced: v323\n\nThis is the server-side RPC native equivalent of the client native SET_PED_HAIR_TINT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedHeadBlendData",
    "hash": "0x60746B88",
    "code": "-- SET_PED_HEAD_BLEND_DATA\nSetPedHeadBlendData(\n\tped --[[ Ped ]], \n\tshapeFirstID --[[ integer ]], \n\tshapeSecondID --[[ integer ]], \n\tshapeThirdID --[[ integer ]], \n\tskinFirstID --[[ integer ]], \n\tskinSecondID --[[ integer ]], \n\tskinThirdID --[[ integer ]], \n\tshapeMix --[[ number ]], \n\tskinMix --[[ number ]], \n\tthirdMix --[[ number ]], \n\tisParent --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "shapeFirstID: \n\nControls the shape of the first ped's face",
      "shapeSecondID: \n\nControls the shape of the second ped's face",
      "shapeThirdID: \n\nControls the shape of the third ped's face",
      "skinFirstID: \n\nControls the first id's skin tone",
      "skinSecondID: \n\nControls the second id's skin tone",
      "skinThirdID: \n\nControls the third id's skin tone",
      "shapeMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (shapeFirstID and shapeSecondID)",
      "skinMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (skinFirstID and skinSecondID)",
      "thirdMix: \n\nOverrides the others in favor of the third IDs.",
      "isParent: \n\nIsParent is set for \"children\" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\nshapeFirstID: \n\nControls the shape of the first ped's face\n\nshapeSecondID: \n\nControls the shape of the second ped's face\n\nshapeThirdID: \n\nControls the shape of the third ped's face\n\nskinFirstID: \n\nControls the first id's skin tone\n\nskinSecondID: \n\nControls the second id's skin tone\n\nskinThirdID: \n\nControls the third id's skin tone\n\nshapeMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (shapeFirstID and shapeSecondID)\n\nskinMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (skinFirstID and skinSecondID)\n\nthirdMix: \n\nOverrides the others in favor of the third IDs.\n\nisParent: \n\nIsParent is set for \"children\" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.\n\nFor more info please refer to this topic. Other information: IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.</br> This native function is often called prior to calling natives such as:\n\nSetPedHairColor\nSetPedHeadOverlayColor\nSetPedHeadOverlay\nSetPedFaceFeature\n\nThis is the server-side RPC native equivalent of the client native SET_PED_HEAD_BLEND_DATA."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedHeadOverlay",
    "hash": "0xD28DBA90",
    "code": "-- SET_PED_HEAD_OVERLAY\nSetPedHeadOverlay(\n\tped --[[ Ped ]], \n\toverlayID --[[ integer ]], \n\tindex --[[ integer ]], \n\topacity --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "overlayID: \n\nThe overlay id displayed up above.",
      "index: \n\nAn integer representing the index (from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1)",
      "opacity: \n\nA float ranging from 0.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\noverlayID: \n\nThe overlay id displayed up above.\n\nindex: \n\nAn integer representing the index (from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1)\n\nopacity: \n\nA float ranging from 0.0 to 1.0\n\nOverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.\noverlayID       Part                  Index, to disable\n0               Blemishes             0 - 23, 255\n1               Facial Hair           0 - 28, 255\n2               Eyebrows              0 - 33, 255\n3               Ageing                0 - 14, 255\n4               Makeup                0 - 74, 255\n5               Blush                 0 - 6, 255\n6               Complexion            0 - 11, 255\n7               Sun Damage            0 - 10, 255\n8               Lipstick              0 - 9, 255\n9               Moles/Freckles        0 - 17, 255\n10              Chest Hair            0 - 16, 255\n11              Body Blemishes        0 - 11, 255\n12              Add Body Blemishes    0 - 1, 255\n\n\nNote: You may need to call SetPedHeadBlendData prior to calling this native in order for it to work.\n\nThis is the server-side RPC native equivalent of the client native SET_PED_HEAD_OVERLAY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedHeadOverlayColor",
    "hash": "0x78935A27",
    "code": "-- _SET_PED_HEAD_OVERLAY_COLOR\nSetPedHeadOverlayColor(\n\tped --[[ Ped ]], \n\toverlayID --[[ integer ]], \n\tcolorType --[[ integer ]], \n\tcolorID --[[ integer ]], \n\tsecondColorID --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "overlayID: \n\nAn integer representing the overlay id",
      "colorType: \n\n1 for eyebrows, beards, makeup, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.",
      "colorID: \n\nAn integer representing the primary color id",
      "secondColorID: \n\nAn integer representing the secondary color id"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\noverlayID: \n\nAn integer representing the overlay id\n\ncolorType: \n\n1 for eyebrows, beards, makeup, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.\n\ncolorID: \n\nAn integer representing the primary color id\n\nsecondColorID: \n\nAn integer representing the secondary color id\n\nUsed for freemode (online) characters.\nCalled after SET_PED_HEAD_OVERLAY().\n\n\nNote: You may need to call SetPedHeadBlendData prior to calling this native in order for it to work.\n\nThis is the server-side RPC native equivalent of the client native _SET_PED_HEAD_OVERLAY_COLOR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedIntoVehicle",
    "hash": "0x7500C79",
    "code": "-- SET_PED_INTO_VEHICLE\nSetPedIntoVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tseatIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PED_INTO_VEHICLE\n\nThis is the server-side RPC native equivalent of the client native SET_PED_INTO_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedMeleeCombatLimits",
    "hash": "0x8E51EC29",
    "code": "-- SET_PED_MELEE_COMBAT_LIMITS\nSetPedMeleeCombatLimits(\n\tprimaryCount --[[ integer ]], \n\tsecondaryCount --[[ integer ]], \n\tpopulationPedCount --[[ integer ]]\n)",
    "parameters": [
      "primaryCount: \n\nThe number of peds that engage in combat (default: 1)",
      "secondaryCount: \n\nThe number of peds that engage in taunting (default: 3)",
      "populationPedCount: \n\nThe maximum number of population peds (ambient and scenario) that can engage in combat (default: 3)"
    ],
    "returns": [],
    "description": "Parameters:\n\nprimaryCount: \n\nThe number of peds that engage in combat (default: 1)\n\nsecondaryCount: \n\nThe number of peds that engage in taunting (default: 3)\n\npopulationPedCount: \n\nThe maximum number of population peds (ambient and scenario) that can engage in combat (default: 3)\n\nOverride the limits on the number and types of melee combatants. The game is limited to at most ten combatants among the three types: primary, secondary, and observers.\n\nThis native infers the number of observers based on the primary and secondary counts."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedModelHealthConfig",
    "hash": "0xAF12A05D",
    "code": "-- SET_PED_MODEL_HEALTH_CONFIG\nSetPedModelHealthConfig(\n\tmodelHash --[[ Hash ]], \n\tconfigName --[[ string ]]\n)",
    "parameters": [
      "modelHash: \n\nPed's model.",
      "configName: \n\nName of health config."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodelHash: \n\nPed's model.\n\nconfigName: \n\nName of health config.\n\nSets a ped model's health config. Takes effect only after setting player model with SET_PLAYER_MODEL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedModelPersonality",
    "hash": "0x46F6B38B",
    "code": "-- SET_PED_MODEL_PERSONALITY\nSetPedModelPersonality(\n\tmodelHash --[[ Hash ]], \n\tpersonalityHash --[[ Hash ]]\n)",
    "parameters": [
      "modelHash: \n\nPed's model.",
      "personalityHash: \n\nPersonality hash."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodelHash: \n\nPed's model.\n\npersonalityHash: \n\nPersonality hash.\n\nOverrides a ped model personality type."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedPropIndex",
    "hash": "0x829F2E2",
    "code": "-- SET_PED_PROP_INDEX\nSetPedPropIndex(\n\tped --[[ Ped ]], \n\tcomponentId --[[ integer ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tattach --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component that you want to set. Refer to SET_PED_COMPONENT_VARIATION.",
      "drawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS.",
      "attach: \n\nAttached or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component that you want to set. Refer to SET_PED_COMPONENT_VARIATION.\n\ndrawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS.\n\nattach: \n\nAttached or not.\n\nThis native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.\n\nMP Freemode list of props\n\n0: Hats 1: Glasses 2: Ears 6: Watches 7: Bracelets List of Prop IDs\n\nenum eAnchorPoints\n{\nANCHOR_HEAD = 0, // \"p_head\"\nANCHOR_EYES = 1, // \"p_eyes\"\nANCHOR_EARS = 2, // \"p_ears\"\nANCHOR_MOUTH = 3, // \"p_mouth\"\nANCHOR_LEFT_HAND = 4, // \"p_lhand\"\nANCHOR_RIGHT_HAND = 5, // \"p_rhand\"\nANCHOR_LEFT_WRIST = 6, // \"p_lwrist\"\nANCHOR_RIGHT_WRIST = 7, // \"p_rwrist\"\nANCHOR_HIP = 8, // \"p_lhip\"\nANCHOR_LEFT_FOOT = 9, // \"p_lfoot\"\nANCHOR_RIGHT_FOOT = 10, // \"p_rfoot\"\nANCHOR_PH_L_HAND = 11, // \"ph_lhand\"\nANCHOR_PH_R_HAND = 12, // \"ph_rhand\"\nNUM_ANCHORS = 13,\n};\n\n\nThis is the server-side RPC native equivalent of the client native SET_PED_PROP_INDEX."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedRandomComponentVariation",
    "hash": "0x4111BA46",
    "code": "-- SET_PED_RANDOM_COMPONENT_VARIATION\nSetPedRandomComponentVariation(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused.\n\nThis is the server-side RPC native equivalent of the client native SET_PED_RANDOM_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedRandomProps",
    "hash": "0xE3318E0E",
    "code": "-- SET_PED_RANDOM_PROPS\nSetPedRandomProps(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nSET_PED_RANDOM_PROPS\n\nThis is the server-side RPC native equivalent of the client native SET_PED_RANDOM_PROPS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedResetFlag",
    "hash": "0xCFF6FF66",
    "code": "-- SET_PED_RESET_FLAG\nSetPedResetFlag(\n\tped --[[ Ped ]], \n\tflagId --[[ integer ]], \n\tdoReset --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1); Known values:\n\nThis is the server-side RPC native equivalent of the client native SET_PED_RESET_FLAG."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedToRagdoll",
    "hash": "0x83CB5052",
    "code": "-- SET_PED_TO_RAGDOLL\nSetPedToRagdoll(\n\tped --[[ Ped ]], \n\tminTime --[[ integer ]], \n\tmaxTime --[[ integer ]], \n\tragdollType --[[ integer ]], \n\tbAbortIfInjured --[[ boolean ]], \n\tbAbortIfDead --[[ boolean ]], \n\tbForceScriptControl --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to ragdoll.",
      "minTime: \n\nTime(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.",
      "maxTime:",
      "ragdollType:",
      "bAbortIfInjured: \n\nunused",
      "bAbortIfDead: \n\nunused",
      "bForceScriptControl:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to ragdoll.\n\nminTime: \n\nTime(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.\n\nmaxTime:\nragdollType:\nbAbortIfInjured: \n\nunused\n\nbAbortIfDead: \n\nunused\n\nbForceScriptControl:\n\np4/p5: Unusued in TU27\n\nRagdoll Types\n\n0: CTaskNMRelax 1: CTaskNMScriptControl: Hardcoded not to work in networked environments. Else: CTaskNMBalance\n\nThis is the server-side RPC native equivalent of the client native SET_PED_TO_RAGDOLL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPedToRagdollWithFall",
    "hash": "0xFA12E286",
    "code": "-- SET_PED_TO_RAGDOLL_WITH_FALL\nSetPedToRagdollWithFall(\n\tped --[[ Ped ]], \n\tminTime --[[ integer ]], \n\tmaxTime --[[ integer ]], \n\tnFallType --[[ integer ]], \n\tdirX --[[ number ]], \n\tdirY --[[ number ]], \n\tdirZ --[[ number ]], \n\tfGroundHeight --[[ number ]], \n\tgrab1X --[[ number ]], \n\tgrab1Y --[[ number ]], \n\tgrab1Z --[[ number ]], \n\tgrab2X --[[ number ]], \n\tgrab2Y --[[ number ]], \n\tgrab2Z --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to ragdoll.",
      "minTime:",
      "maxTime:",
      "nFallType: \n\nThe type of fall.",
      "dirX: \n\nThe x direction of the fall.",
      "dirY: \n\nThe y direction of the fall.",
      "dirZ: \n\nThe z direction of the fall.",
      "fGroundHeight: \n\nThe ground height (z).",
      "grab1X: \n\nunused",
      "grab1Y: \n\nunused",
      "grab1Z: \n\nunused",
      "grab2X: \n\nunused",
      "grab2Y: \n\nunused",
      "grab2Z: \n\nunused"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to ragdoll.\n\nminTime:\nmaxTime:\nnFallType: \n\nThe type of fall.\n\ndirX: \n\nThe x direction of the fall.\n\ndirY: \n\nThe y direction of the fall.\n\ndirZ: \n\nThe z direction of the fall.\n\nfGroundHeight: \n\nThe ground height (z).\n\ngrab1X: \n\nunused\n\ngrab1Y: \n\nunused\n\ngrab1Z: \n\nunused\n\ngrab2X: \n\nunused\n\ngrab2Y: \n\nunused\n\ngrab2Z: \n\nunused\n\nenum eNMFallType {\nTYPE_FROM_HIGH = 0,\nTYPE_OVER_WALL = 1,\nTYPE_DOWN_STAIRS = 2,\nTYPE_DIE_TYPES = 3,\nTYPE_DIE_FROM_HIGH = 4,\nTYPE_DIE_OVER_WALL = 5,\nTYPE_DIE_DOWN_STAIRS = 6\n}\n\nReturn variable is never used in R*'s scripts.\nNot sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.\nx, y, and z are coordinates, most likely to where the ped will fall.\np7 is probably the force of the fall, but untested, so I left the variable name the same.\np8 to p13 are always 0f in R*'s scripts.\n(Simplified) Example of the usage of the function from R*'s scripts:\nped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);\n\n\nThis is the server-side RPC native equivalent of the client native SET_PED_TO_RAGDOLL_WITH_FALL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPedTurningThresholds",
    "hash": "0xB300F03",
    "code": "-- SET_PED_TURNING_THRESHOLDS\nSetPedTurningThresholds(\n\tmin --[[ number ]], \n\tmax --[[ number ]]\n)",
    "parameters": [
      "min: \n\nLeftside angle on the above diagram",
      "max: \n\nRightside angle on the above diagram"
    ],
    "returns": [],
    "description": "Parameters:\n\nmin: \n\nLeftside angle on the above diagram\n\nmax: \n\nRightside angle on the above diagram\n\nPurpose: The game's default values for these make shooting while traveling Left quite a bit slower than shooting while traveling right (This could be a game-balance thing?)\n\nDefault Min: -45 Degrees Default Max: 135 Degrees\n\n   \\ ,- ~ ||~ - ,\n, ' \\    x   x    ' ,\n\n\n, \\ x x x , , \\ x x , , \\ x x , , \\ x , , \\ x , , \\ x x , , \\ x , , , ' ' - , _ _ _ , ' \\\n\nIf the transition angle is within the shaded portion (x), there will be no transition(Quicker) The angle corresponds to where you are looking(North on the circle) vs. the heading of your Ped. Note: For some reason,\n\nYou can set these values to whatever you'd like with this native, but keep in mind that the transitional spin is only clockwise for some reason.\n\nI'd personally recommend something like -135/135"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPlayerControl",
    "hash": "0xD17AFCD8",
    "code": "-- SET_PLAYER_CONTROL\nSetPlayerControl(\n\tplayer --[[ Player ]], \n\tbHasControl --[[ boolean ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Flags:\nSPC_AMBIENT_SCRIPT = (1 << 1),\nSPC_CLEAR_TASKS = (1 << 2),\nSPC_REMOVE_FIRES = (1 << 3),\nSPC_REMOVE_EXPLOSIONS = (1 << 4),\nSPC_REMOVE_PROJECTILES = (1 << 5),\nSPC_DEACTIVATE_GADGETS = (1 << 6),\nSPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),\nSPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),\nSPC_ALLOW_PLAYER_DAMAGE = (1 << 9),\nSPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),\nSPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),\nSPC_ALLOW_PAD_SHAKE = (1 << 12)\nSee: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt\n\n\nThis is the server-side RPC native equivalent of the client native SET_PLAYER_CONTROL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPlayerCullingRadius",
    "hash": "0x8A2FBAD4",
    "code": "-- SET_PLAYER_CULLING_RADIUS\nSetPlayerCullingRadius(\n\tplayerSrc --[[ string ]], \n\tradius --[[ number ]]\n)",
    "parameters": [
      "playerSrc: \n\nThe player to set the culling radius for.",
      "radius: \n\nThe radius."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to set the culling radius for.\n\nradius: \n\nThe radius.\n\nSets the culling radius for the specified player. Set to 0.0 to reset.\n\nWARNING: Culling natives are deprecated and have known, unfixable issues"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPlayerInvincible",
    "hash": "0xDFB9A2A2",
    "code": "-- SET_PLAYER_INVINCIBLE\nSetPlayerInvincible(\n\tplayer --[[ Player ]], \n\tbInvincible --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe player index.",
      "bInvincible:"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player index.\n\nbInvincible:\n\nMake the player impervious to all forms of damage.\n\nThis is the server-side RPC native equivalent of the client native SET_PLAYER_INVINCIBLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPlayerMaxStamina",
    "hash": "0x35594F67",
    "code": "-- SET_PLAYER_MAX_STAMINA\nlocal retval --[[ bool ]] =\n\tSetPlayerMaxStamina(\n\t\tplayerId --[[ Player ]], \n\t\tmaxStamina --[[ number ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index",
      "maxStamina: \n\nThe value you want to set"
    ],
    "returns": [
      "Did you manage to set the value."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index\n\nmaxStamina: \n\nThe value you want to set\n\nReturns:\n\nDid you manage to set the value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPlayerModel",
    "hash": "0x774A4C54",
    "code": "-- SET_PLAYER_MODEL\nSetPlayerModel(\n\tplayer --[[ Player ]], \n\tmodel --[[ Hash ]]\n)",
    "parameters": [
      "player: \n\nThe player to set the model for",
      "model: \n\nThe model to use"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player to set the model for\n\nmodel: \n\nThe model to use\n\nSet the model for a specific Player. Note that this will destroy the current Ped for the Player and create a new one, any reference to the old ped will be invalid after calling this. As per usual, make sure to request the model first and wait until it has loaded.\n\nThis is the server-side RPC native equivalent of the client native SET_PLAYER_MODEL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPlayerRoutingBucket",
    "hash": "0x6504EB38",
    "code": "-- SET_PLAYER_ROUTING_BUCKET\nSetPlayerRoutingBucket(\n\tplayerSrc --[[ string ]], \n\tbucket --[[ integer ]]\n)",
    "parameters": [
      "playerSrc: \n\nThe player to set the routing bucket for.",
      "bucket: \n\nThe bucket ID."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayerSrc: \n\nThe player to set the routing bucket for.\n\nbucket: \n\nThe bucket ID.\n\nSets the routing bucket for the specified player.\n\nRouting buckets are also known as 'dimensions' or 'virtual worlds' in past echoes, however they are population-aware."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPlayerStamina",
    "hash": "0xA9EC16C7",
    "code": "-- SET_PLAYER_STAMINA\nlocal retval --[[ bool ]] =\n\tSetPlayerStamina(\n\t\tplayerId --[[ Player ]], \n\t\tstamina --[[ number ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index",
      "stamina: \n\nThe value you want to set"
    ],
    "returns": [
      "Did you manage to set the value."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index\n\nstamina: \n\nThe value you want to set\n\nReturns:\n\nDid you manage to set the value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetPlayerTalkingOverride",
    "hash": "0xFC02CAF6",
    "code": "-- SET_PLAYER_TALKING_OVERRIDE\nSetPlayerTalkingOverride(\n\tplayer --[[ Player ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe target player.",
      "state: \n\nOverriding state."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe target player.\n\nstate: \n\nOverriding state.\n\nthe status of default voip system. It affects on NETWORK_IS_PLAYER_TALKING and mp_facial animation. This function doesn't need to be called every frame, it works like a switcher."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetPlayerWantedLevel",
    "hash": "0xB7A0914B",
    "code": "-- SET_PLAYER_WANTED_LEVEL\nSetPlayerWantedLevel(\n\tplayer --[[ Player ]], \n\twantedLevel --[[ integer ]], \n\tdelayedResponse --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nthe target player",
      "wantedLevel: \n\nthe wanted level 1-5",
      "delayedResponse: \n\nfalse = 0-10sec police spawn response time, true = 10-20sec police spawn response time"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nthe target player\n\nwantedLevel: \n\nthe wanted level 1-5\n\ndelayedResponse: \n\nfalse = 0-10sec police spawn response time, true = 10-20sec police spawn response time\n\nSET_PLAYER_WANTED_LEVEL\n\nThis is the server-side RPC native equivalent of the client native SET_PLAYER_WANTED_LEVEL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetReactionToVehicleWithSirenDisabled",
    "hash": "0xB90BBC6E",
    "code": "-- SET_REACTION_TO_VEHICLE_WITH_SIREN_DISABLED\nSetReactionToVehicleWithSirenDisabled(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nToggle on or off."
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nToggle on or off.\n\nThis completely disables pedestrian vehicles from reacting to sirens. They will not try to do any maneuver to evade."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "SetResourceKvp",
    "hash": "0x21C7A35B",
    "code": "-- SET_RESOURCE_KVP\nSetResourceKvp(\n\tkey --[[ string ]], \n\tvalue --[[ string ]]\n)",
    "parameters": [
      "key: \n\nThe key to set",
      "value: \n\nThe value to write"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to set\n\nvalue: \n\nThe value to write\n\nA setter for GET_RESOURCE_KVP_STRING."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "SetResourceKvpFloat",
    "hash": "0x9ADD2938",
    "code": "-- SET_RESOURCE_KVP_FLOAT\nSetResourceKvpFloat(\n\tkey --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "key: \n\nThe key to set",
      "value: \n\nThe value to write"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to set\n\nvalue: \n\nThe value to write\n\nA setter for GET_RESOURCE_KVP_FLOAT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "SetResourceKvpFloatNoSync",
    "hash": "0x3517BFBE",
    "code": "-- SET_RESOURCE_KVP_FLOAT_NO_SYNC\nSetResourceKvpFloatNoSync(\n\tkey --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "key: \n\nThe key to set",
      "value: \n\nThe value to write"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to set\n\nvalue: \n\nThe value to write\n\nNonsynchronous SET_RESOURCE_KVP_FLOAT operation; see FLUSH_RESOURCE_KVP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "SetResourceKvpInt",
    "hash": "0x6A2B1E8",
    "code": "-- SET_RESOURCE_KVP_INT\nSetResourceKvpInt(\n\tkey --[[ string ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "key: \n\nThe key to set",
      "value: \n\nThe value to write"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to set\n\nvalue: \n\nThe value to write\n\nA setter for GET_RESOURCE_KVP_INT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "SetResourceKvpIntNoSync",
    "hash": "0x26AEB707",
    "code": "-- SET_RESOURCE_KVP_INT_NO_SYNC\nSetResourceKvpIntNoSync(\n\tkey --[[ string ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "key: \n\nThe key to set",
      "value: \n\nThe value to write"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to set\n\nvalue: \n\nThe value to write\n\nNonsynchronous SET_RESOURCE_KVP_INT operation; see FLUSH_RESOURCE_KVP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "SetResourceKvpNoSync",
    "hash": "0xCF9A2FF",
    "code": "-- SET_RESOURCE_KVP_NO_SYNC\nSetResourceKvpNoSync(\n\tkey --[[ string ]], \n\tvalue --[[ string ]]\n)",
    "parameters": [
      "key: \n\nThe key to set",
      "value: \n\nThe value to write"
    ],
    "returns": [],
    "description": "Parameters:\n\nkey: \n\nThe key to set\n\nvalue: \n\nThe value to write\n\nNonsynchronous SET_RESOURCE_KVP operation; see FLUSH_RESOURCE_KVP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetRichPresence",
    "hash": "0x7BDCBD45",
    "code": "-- SET_RICH_PRESENCE\nSetRichPresence(\n\tpresenceState --[[ string ]]\n)",
    "parameters": [
      "presenceState: \n\nThe rich presence string to set."
    ],
    "returns": [],
    "description": "Parameters:\n\npresenceState: \n\nThe rich presence string to set.\n\nSets the player's rich presence detail state for social platform providers to a specified string."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetRopeLengthChangeRate",
    "hash": "0x69B680A7",
    "code": "-- SET_ROPE_LENGTH_CHANGE_RATE\nSetRopeLengthChangeRate(\n\trope --[[ integer ]], \n\tlengthChangeRate --[[ number ]]\n)",
    "parameters": [
      "rope: \n\nThe rope to set the length change rate for.",
      "lengthChangeRate: \n\nThe rope's new length change rate."
    ],
    "returns": [],
    "description": "Parameters:\n\nrope: \n\nThe rope to set the length change rate for.\n\nlengthChangeRate: \n\nThe rope's new length change rate.\n\nSet's the ropes length change rate, which is the speed that rope should wind if started."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetRopesCreateNetworkWorldState",
    "hash": "0xE62FC73",
    "code": "-- SET_ROPES_CREATE_NETWORK_WORLD_STATE\nSetRopesCreateNetworkWorldState(\n\tshouldCreate --[[ boolean ]]\n)",
    "parameters": [
      "shouldCreate: \n\nWhether to create an underlying network world state"
    ],
    "returns": [],
    "description": "Parameters:\n\nshouldCreate: \n\nWhether to create an underlying network world state\n\nToggles whether the usage of ADD_ROPE should create an underlying CNetworkRopeWorldStateData. By default this is set to false."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetRoutingBucketEntityLockdownMode",
    "hash": "0xA0F2201F",
    "code": "-- SET_ROUTING_BUCKET_ENTITY_LOCKDOWN_MODE\nSetRoutingBucketEntityLockdownMode(\n\tbucketId --[[ integer ]], \n\tmode --[[ string ]]\n)",
    "parameters": [
      "bucketId: \n\nThe routing bucket ID to adjust.",
      "mode: \n\nOne of aforementioned modes."
    ],
    "returns": [],
    "description": "Parameters:\n\nbucketId: \n\nThe routing bucket ID to adjust.\n\nmode: \n\nOne of aforementioned modes.\n\nSets the entity lockdown mode for a specific routing bucket.\n\nLockdown modes are:\n\nMode\tMeaning\nstrict\tNo entities can be created by clients at all.\nrelaxed\tOnly script-owned entities created by clients are blocked.\ninactive\tClients can create any entity they want."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetRoutingBucketPopulationEnabled",
    "hash": "0xCE51AC2C",
    "code": "-- SET_ROUTING_BUCKET_POPULATION_ENABLED\nSetRoutingBucketPopulationEnabled(\n\tbucketId --[[ integer ]], \n\tmode --[[ boolean ]]\n)",
    "parameters": [
      "bucketId: \n\nThe routing bucket ID to adjust.",
      "mode: \n\ntrue to enable population, false to disable population."
    ],
    "returns": [],
    "description": "Parameters:\n\nbucketId: \n\nThe routing bucket ID to adjust.\n\nmode: \n\ntrue to enable population, false to disable population.\n\nSets whether or not the specified routing bucket has automatically-created population enabled."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetRuntimeTextureArgbData",
    "hash": "0x3963D527",
    "code": "-- SET_RUNTIME_TEXTURE_ARGB_DATA\nlocal retval --[[ boolean ]] =\n\tSetRuntimeTextureArgbData(\n\t\ttex --[[ long ]], \n\t\tbuffer --[[ string ]], \n\t\tlength --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetRuntimeTextureImage",
    "hash": "0x28FC4ECB",
    "code": "-- SET_RUNTIME_TEXTURE_IMAGE\nlocal retval --[[ boolean ]] =\n\tSetRuntimeTextureImage(\n\t\ttex --[[ long ]], \n\t\tfileName --[[ string ]]\n\t)",
    "parameters": [
      "tex: \n\nA runtime texture handle.",
      "fileName: \n\nThe file name of an image to load, or a base64 \"data:\" URL. This should preferably be a PNG, and has to be specified as a file in the resource manifest."
    ],
    "returns": [
      "TRUE for success, FALSE for failure."
    ],
    "description": "Parameters:\n\ntex: \n\nA runtime texture handle.\n\nfileName: \n\nThe file name of an image to load, or a base64 \"data:\" URL. This should preferably be a PNG, and has to be specified as a file in the resource manifest.\n\nReturns:\n\nTRUE for success, FALSE for failure.\n\nReplaces the pixel data in a runtime texture with the image data from a file in the current resource, or a data URL.\n\nIf the bitmap is a different size compared to the existing texture, it will be resampled.\n\nThis command may end up executed asynchronously, and only update the texture data at a later time."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetRuntimeTexturePixel",
    "hash": "0xAB65ACEE",
    "code": "-- SET_RUNTIME_TEXTURE_PIXEL\nSetRuntimeTexturePixel(\n\ttex --[[ long ]], \n\tx --[[ integer ]], \n\ty --[[ integer ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [
      "tex: \n\nA handle to the runtime texture.",
      "x: \n\nThe X position of the pixel to change.",
      "y: \n\nThe Y position of the pixel to change.",
      "r: \n\nThe new R value (0-255).",
      "g: \n\nThe new G value (0-255).",
      "b: \n\nThe new B value (0-255).",
      "a: \n\nThe new A value (0-255)."
    ],
    "returns": [],
    "description": "Parameters:\n\ntex: \n\nA handle to the runtime texture.\n\nx: \n\nThe X position of the pixel to change.\n\ny: \n\nThe Y position of the pixel to change.\n\nr: \n\nThe new R value (0-255).\n\ng: \n\nThe new G value (0-255).\n\nb: \n\nThe new B value (0-255).\n\na: \n\nThe new A value (0-255).\n\nSets a pixel in the specified runtime texture. This will have to be committed using COMMIT_RUNTIME_TEXTURE to have any effect."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetSnakeoilForEntry",
    "hash": "0xA7DD3209",
    "code": "-- SET_SNAKEOIL_FOR_ENTRY\nSetSnakeoilForEntry(\n\tname --[[ string ]], \n\tpath --[[ string ]], \n\tdata --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "SetStateBagValue",
    "hash": "0x8D50E33A",
    "code": "-- SET_STATE_BAG_VALUE\nSetStateBagValue(\n\tbagName --[[ string ]], \n\tkeyName --[[ string ]], \n\tvalueData --[[ string ]], \n\tvalueLength --[[ integer ]], \n\treplicated --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Internal function for setting a state bag value."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTextChatEnabled",
    "hash": "0x97B2F9F8",
    "code": "-- SET_TEXT_CHAT_ENABLED\nlocal retval --[[ boolean ]] =\n\tSetTextChatEnabled(\n\t\tenabled --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTimecycleModifierVar",
    "hash": "0x6E0A422B",
    "code": "-- SET_TIMECYCLE_MODIFIER_VAR\nSetTimecycleModifierVar(\n\tmodifierName --[[ string ]], \n\tvarName --[[ string ]], \n\tvalue1 --[[ number ]], \n\tvalue2 --[[ number ]]\n)",
    "parameters": [
      "modifierName: \n\nThe name of timecycle modifier.",
      "varName: \n\nThe name of timecycle variable.",
      "value1: \n\nThe first value of variable.",
      "value2: \n\nThe second value of variable."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodifierName: \n\nThe name of timecycle modifier.\n\nvarName: \n\nThe name of timecycle variable.\n\nvalue1: \n\nThe first value of variable.\n\nvalue2: \n\nThe second value of variable."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrackBrakingDistance",
    "hash": "0x77EB78D0",
    "code": "-- SET_TRACK_BRAKING_DISTANCE\nSetTrackBrakingDistance(\n\ttrack --[[ integer ]], \n\tbrakingDistance --[[ number ]]\n)",
    "parameters": [
      "track: \n\nThe track id (between 0 - 27)",
      "brakingDistance: \n\nThe new braking distance"
    ],
    "returns": [],
    "description": "Parameters:\n\ntrack: \n\nThe track id (between 0 - 27)\n\nbrakingDistance: \n\nThe new braking distance\n\nSets the braking distance of the track. Used by trains to determine the point to slow down when entering a station."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrackEnabled",
    "hash": "0x4B41E84C",
    "code": "-- SET_TRACK_ENABLED\nSetTrackEnabled(\n\ttrack --[[ integer ]], \n\tenabled --[[ bool ]]\n)",
    "parameters": [
      "track: \n\nThe track id (between 0 - 27)",
      "enabled: \n\nShould this track be enabled"
    ],
    "returns": [],
    "description": "Parameters:\n\ntrack: \n\nThe track id (between 0 - 27)\n\nenabled: \n\nShould this track be enabled\n\nToggles the track being active. If disabled mission trains will not be able to spawn on this track and will look for the next closest track to spawn"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrackJunctionActive",
    "hash": "0x537B449D",
    "code": "-- SET_TRACK_JUNCTION_ACTIVE\nlocal retval --[[ bool ]] =\n\tSetTrackJunctionActive(\n\t\tjunctionIndex --[[ integer ]], \n\t\tstate --[[ bool ]]\n\t)",
    "parameters": [
      "junctionIndex: \n\nThe junctions index",
      "state: \n\nToggles the state of the junction"
    ],
    "returns": [
      "Returns if it succeeds setting the junctions state or not"
    ],
    "description": "Parameters:\n\njunctionIndex: \n\nThe junctions index\n\nstate: \n\nToggles the state of the junction\n\nReturns:\n\nReturns if it succeeds setting the junctions state or not\n\nSets the state of a track junction."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrackMaxSpeed",
    "hash": "0x37BFC732",
    "code": "-- SET_TRACK_MAX_SPEED\nSetTrackMaxSpeed(\n\ttrack --[[ integer ]], \n\tnewSpeed --[[ integer ]]\n)",
    "parameters": [
      "track: \n\nThe track id (between 0 - 27)",
      "newSpeed: \n\nThe tracks new speed"
    ],
    "returns": [],
    "description": "Parameters:\n\ntrack: \n\nThe track id (between 0 - 27)\n\nnewSpeed: \n\nThe tracks new speed\n\nSets the max speed for the train tracks. Used by ambient trains and for station calculations"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrainDoorOpenRatio",
    "hash": "0x2468DBE8",
    "code": "-- SET_TRAIN_DOOR_OPEN_RATIO\nSetTrainDoorOpenRatio(\n\ttrain --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tratio --[[ number ]]\n)",
    "parameters": [
      "train: \n\nThe train to set the door ratio for.",
      "doorIndex: \n\nZero-based door index.",
      "ratio: \n\nA value between 0.0 (fully closed) and 1.0 (fully open)."
    ],
    "returns": [],
    "description": "Parameters:\n\ntrain: \n\nThe train to set the door ratio for.\n\ndoorIndex: \n\nZero-based door index.\n\nratio: \n\nA value between 0.0 (fully closed) and 1.0 (fully open).\n\nSets the ratio that a door is open for on a train."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrainState",
    "hash": "0x61CB74A0",
    "code": "-- SET_TRAIN_STATE\nSetTrainState(\n\ttrain --[[ Vehicle ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [
      "train: \n\nThe train handle",
      "state: \n\nThe trains new state"
    ],
    "returns": [
      "The trains current state, refer to GET_TRAIN_STATE"
    ],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nstate: \n\nThe trains new state\n\nReturns:\n\nThe trains current state, refer to GET_TRAIN_STATE"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrainStopAtStations",
    "hash": "0xECB8B577",
    "code": "-- SET_TRAIN_STOP_AT_STATIONS\nSetTrainStopAtStations(\n\ttrain --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "train: \n\nThe train handle",
      "state: \n\nTrue to make the train stop at stations. False to make the train not stop at stations"
    ],
    "returns": [],
    "description": "Parameters:\n\ntrain: \n\nThe train handle\n\nstate: \n\nTrue to make the train stop at stations. False to make the train not stop at stations\n\nToggles a train's ability to stop at stations"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetTrainsForceDoorsOpen",
    "hash": "0xD4D1BA63",
    "code": "-- SET_TRAINS_FORCE_DOORS_OPEN\nSetTrainsForceDoorsOpen(\n\tforceOpen --[[ bool ]]\n)",
    "parameters": [
      "forceOpen: \n\nShould force open."
    ],
    "returns": [],
    "description": "Parameters:\n\nforceOpen: \n\nShould force open.\n\nEnables or disables whether train doors should be forced open whilst a player is inside the train. This is enabled by default in multiplayer."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleAlarm",
    "hash": "0x24877D84",
    "code": "-- SET_VEHICLE_ALARM\nSetVehicleAlarm(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_ALARM\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_ALARM."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleAlarmTimeLeft",
    "hash": "0xC108EE6F",
    "code": "-- SET_VEHICLE_ALARM_TIME_LEFT\nSetVehicleAlarmTimeLeft(\n\tvehicle --[[ Vehicle ]], \n\ttime --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleAutoRepairDisabled",
    "hash": "0x5F3A3574",
    "code": "-- SET_VEHICLE_AUTO_REPAIR_DISABLED\nSetVehicleAutoRepairDisabled(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set disable auto vehicle repair.",
      "value: \n\nSetting the value to true prevents the vehicle from being repaired when a extra is enabled. Setting the value to false allows the vehicle from being repaired when a extra is enabled."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set disable auto vehicle repair.\n\nvalue: \n\nSetting the value to true prevents the vehicle from being repaired when a extra is enabled. Setting the value to false allows the vehicle from being repaired when a extra is enabled.\n\nDisables the vehicle from being repaired when a vehicle extra is enabled."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleBodyHealth",
    "hash": "0x920C2517",
    "code": "-- SET_VEHICLE_BODY_HEALTH\nSetVehicleBodyHealth(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p2 often set to 1000.0 in the decompiled scripts.\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_BODY_HEALTH."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleClutch",
    "hash": "0x2F70ACED",
    "code": "-- SET_VEHICLE_CLUTCH\nSetVehicleClutch(\n\tvehicle --[[ Vehicle ]], \n\tclutch --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleColourCombination",
    "hash": "0xA557AEAD",
    "code": "-- SET_VEHICLE_COLOUR_COMBINATION\nSetVehicleColourCombination(\n\tvehicle --[[ Vehicle ]], \n\tcolorCombination --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to modify.",
      "colorCombination: \n\nOne of the default color values of the vehicle."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to modify.\n\ncolorCombination: \n\nOne of the default color values of the vehicle.\n\nSets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter). Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_COLOUR_COMBINATION."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleColours",
    "hash": "0x57F24253",
    "code": "-- SET_VEHICLE_COLOURS\nSetVehicleColours(\n\tvehicle --[[ Vehicle ]], \n\tcolorPrimary --[[ integer ]], \n\tcolorSecondary --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "colorPrimary & colorSecondary are the paint indexes for the vehicle. For a list of valid paint indexes, view: pastebin.com/pwHci0xK\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_COLOURS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleCurrentGear",
    "hash": "0x8923DD42",
    "code": "-- SET_VEHICLE_CURRENT_GEAR\nSetVehicleCurrentGear(\n\tvehicle --[[ Vehicle ]], \n\tgear --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "gear: \n\nThe gear you want the vehicle to use."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\ngear: \n\nThe gear you want the vehicle to use."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleCurrentRpm",
    "hash": "0x2A01A8FC",
    "code": "-- SET_VEHICLE_CURRENT_RPM\nSetVehicleCurrentRpm(\n\tvehicle --[[ Vehicle ]], \n\trpm --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleCustomPrimaryColour",
    "hash": "0x8DF9F9BC",
    "code": "-- SET_VEHICLE_CUSTOM_PRIMARY_COLOUR\nSetVehicleCustomPrimaryColour(\n\tvehicle --[[ Vehicle ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_CUSTOM_PRIMARY_COLOUR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleCustomSecondaryColour",
    "hash": "0x9D77259E",
    "code": "-- SET_VEHICLE_CUSTOM_SECONDARY_COLOUR\nSetVehicleCustomSecondaryColour(\n\tvehicle --[[ Vehicle ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_CUSTOM_SECONDARY_COLOUR."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleDirtLevel",
    "hash": "0x2B39128B",
    "code": "-- SET_VEHICLE_DIRT_LEVEL\nSetVehicleDirtLevel(\n\tvehicle --[[ Vehicle ]], \n\tdirtLevel --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set.",
      "dirtLevel: \n\nA number between 0.0 and 15.0 representing the vehicles dirt level."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set.\n\ndirtLevel: \n\nA number between 0.0 and 15.0 representing the vehicles dirt level.\n\nSets the dirt level of the passed vehicle.\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_DIRT_LEVEL."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleDoorBroken",
    "hash": "0x8147FEA7",
    "code": "-- SET_VEHICLE_DOOR_BROKEN\nSetVehicleDoorBroken(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tdeleteDoor --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_DOOR_BROKEN."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleDoorsLocked",
    "hash": "0x4CDD35D0",
    "code": "-- SET_VEHICLE_DOORS_LOCKED\nSetVehicleDoorsLocked(\n\tvehicle --[[ Vehicle ]], \n\tdoorLockStatus --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle whose doors are to be locked.",
      "doorLockStatus: \n\nThe lock state to apply to the vehicle's doors, see eVehicleLockState."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle whose doors are to be locked.\n\ndoorLockStatus: \n\nThe lock state to apply to the vehicle's doors, see eVehicleLockState.\n\nLocks the doors of a specified vehicle to a defined lock state, affecting how players and NPCs can interact with the vehicle.\n\nNativeDB Introduced: v323\nenum eVehicleLockState {\n// No specific lock state, vehicle behaves according to the game's default settings.\nVEHICLELOCK_NONE = 0,\n// Vehicle is fully unlocked, allowing free entry by players and NPCs.\nVEHICLELOCK_UNLOCKED = 1,\n// Vehicle is locked, preventing entry by players and NPCs.\nVEHICLELOCK_LOCKED = 2,\n// Vehicle locks out only players, allowing NPCs to enter.\nVEHICLELOCK_LOCKOUT_PLAYER_ONLY = 3,\n// Vehicle is locked once a player enters, preventing others from entering.\nVEHICLELOCK_LOCKED_PLAYER_INSIDE = 4,\n// Vehicle starts in a locked state, but may be unlocked through game events.\nVEHICLELOCK_LOCKED_INITIALLY = 5,\n// Forces the vehicle's doors to shut and lock.\nVEHICLELOCK_FORCE_SHUT_DOORS = 6,\n// Vehicle is locked but can still be damaged.\nVEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7,\n// Vehicle is locked, but its trunk/boot remains unlocked.\nVEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED = 8,\n// Vehicle is locked and does not allow passengers, except for the driver.\nVEHICLELOCK_LOCKED_NO_PASSENGERS = 9,\n// Vehicle is completely locked, preventing entry entirely, even if previously inside.\nVEHICLELOCK_CANNOT_ENTER = 10\n};\n\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_DOORS_LOCKED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleEngineTemperature",
    "hash": "0x6C93C4A9",
    "code": "-- SET_VEHICLE_ENGINE_TEMPERATURE\nSetVehicleEngineTemperature(\n\tvehicle --[[ Vehicle ]], \n\ttemperature --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleFlag",
    "hash": "0x63AE1A34",
    "code": "-- SET_VEHICLE_FLAG\nlocal retval --[[ bool ]] =\n\tSetVehicleFlag(\n\t\tvehicle --[[ Vehicle ]], \n\t\tflagIndex --[[ integer ]], \n\t\tvalue --[[ bool ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set flag for.",
      "flagIndex: \n\nFlag index.",
      "value: \n\ntrue to enable the flag, false to disable it."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set flag for.\n\nflagIndex: \n\nFlag index.\n\nvalue: \n\ntrue to enable the flag, false to disable it.\n\nThis native is a setter for GET_VEHICLE_HAS_FLAG."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleFuelLevel",
    "hash": "0xBA970511",
    "code": "-- SET_VEHICLE_FUEL_LEVEL\nSetVehicleFuelLevel(\n\tvehicle --[[ Vehicle ]], \n\tlevel --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleGearRatio",
    "hash": "0x496EF2F2",
    "code": "-- SET_VEHICLE_GEAR_RATIO\nSetVehicleGearRatio(\n\tvehicle --[[ Vehicle ]], \n\tgear --[[ integer ]], \n\tratio --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "gear: \n\nThe vehicles gear you want to change.",
      "ratio: \n\nThe gear ratio you want to use."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\ngear: \n\nThe vehicles gear you want to change.\n\nratio: \n\nThe gear ratio you want to use.\n\nSets the vehicles gear ratio on choosen gear, reverse gear needs to be a negative float and forward moving gear needs to be a positive float. Refer to the examples if confused."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleGravityAmount",
    "hash": "0x1A963E58",
    "code": "-- SET_VEHICLE_GRAVITY_AMOUNT\nSetVehicleGravityAmount(\n\tvehicle --[[ Vehicle ]], \n\tgravity --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleHandlingField",
    "hash": "0x2BA40795",
    "code": "-- SET_VEHICLE_HANDLING_FIELD\nSetVehicleHandlingField(\n\tvehicle --[[ Vehicle ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ Any ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe value to set.\n\nSets a handling override for a specific vehicle. Certain handling flags can only be set globally using SET_HANDLING_FIELD, this might require some experimentation. Example: SetVehicleHandlingField(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleHandlingFloat",
    "hash": "0x488C86D2",
    "code": "-- SET_VEHICLE_HANDLING_FLOAT\nSetVehicleHandlingFloat(\n\tvehicle --[[ Vehicle ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe floating-point value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe floating-point value to set.\n\nSets a handling override for a specific vehicle. Certain handling flags can only be set globally using SET_HANDLING_FLOAT, this might require some experimentation. Example: SetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleHandlingInt",
    "hash": "0xC37F4CF9",
    "code": "-- SET_VEHICLE_HANDLING_INT\nSetVehicleHandlingInt(\n\tvehicle --[[ Vehicle ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe integer value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe integer value to set.\n\nSets a handling override for a specific vehicle. Certain handling flags can only be set globally using SET_HANDLING_INT, this might require some experimentation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleHandlingVector",
    "hash": "0x12497890",
    "code": "-- SET_VEHICLE_HANDLING_VECTOR\nSetVehicleHandlingVector(\n\tvehicle --[[ Vehicle ]], \n\tclass_ --[[ string ]], \n\tfieldName --[[ string ]], \n\tvalue --[[ vector3 ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set data for.",
      "class_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.",
      "fieldName: \n\nThe field name to set. These match the keys in handling.meta.",
      "value: \n\nThe Vector3 value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set data for.\n\nclass_: \n\nThe handling class to set. Only \"CHandlingData\" is supported at this time.\n\nfieldName: \n\nThe field name to set. These match the keys in handling.meta.\n\nvalue: \n\nThe Vector3 value to set.\n\nSets a handling override for a specific vehicle. Certain handling flags can only be set globally using SET_HANDLING_VECTOR, this might require some experimentation."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleHighGear",
    "hash": "0x20B1B3E6",
    "code": "-- SET_VEHICLE_HIGH_GEAR\nSetVehicleHighGear(\n\tvehicle --[[ Vehicle ]], \n\tgear --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleNextGear",
    "hash": "0x3A4566F4",
    "code": "-- SET_VEHICLE_NEXT_GEAR\nSetVehicleNextGear(\n\tvehicle --[[ Vehicle ]], \n\tnextGear --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "nextGear: \n\nThe vehicles next gear."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nnextGear: \n\nThe vehicles next gear."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleNitroPtfxRange",
    "hash": "0xA40CB822",
    "code": "-- SET_VEHICLE_NITRO_PTFX_RANGE\nSetVehicleNitroPtfxRange(\n\trange --[[ number ]]\n)",
    "parameters": [
      "range: \n\nThe visible distance. Default is 50.0f."
    ],
    "returns": [],
    "description": "Parameters:\n\nrange: \n\nThe visible distance. Default is 50.0f.\n\nSets the maximum distance in which _SET_VEHICLE_NITRO_ENABLED PTFX are rendered. Distance is measured from the camera position."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "SetVehicleNumberPlateText",
    "hash": "0x400F9556",
    "code": "-- SET_VEHICLE_NUMBER_PLATE_TEXT\nSetVehicleNumberPlateText(\n\tvehicle --[[ Vehicle ]], \n\tplateText --[[ string ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set the plate for",
      "plateText: \n\nThe text to set the plate to, 8 chars maximum"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set the plate for\n\nplateText: \n\nThe text to set the plate to, 8 chars maximum\n\nSET_VEHICLE_NUMBER_PLATE_TEXT\n\nThis is the server-side RPC native equivalent of the client native SET_VEHICLE_NUMBER_PLATE_TEXT."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleOilLevel",
    "hash": "0x90D1CAD1",
    "code": "-- SET_VEHICLE_OIL_LEVEL\nSetVehicleOilLevel(\n\tvehicle --[[ Vehicle ]], \n\tlevel --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehiclePitchBias",
    "hash": "0x2A6CC9F2",
    "code": "-- SET_VEHICLE_PITCH_BIAS\nSetVehiclePitchBias(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nTarget vehicle.",
      "value: \n\nPitch bias value."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nTarget vehicle.\n\nvalue: \n\nPitch bias value.\n\nSet the vehicle's pitch bias. Only works on planes."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleRollBias",
    "hash": "0x264B45DE",
    "code": "-- SET_VEHICLE_ROLL_BIAS\nSetVehicleRollBias(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nTarget vehicle.",
      "value: \n\nRoll bias value."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nTarget vehicle.\n\nvalue: \n\nRoll bias value.\n\nSet the vehicle's roll bias. Only works on planes."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleSteeringAngle",
    "hash": "0xFFCCC2EA",
    "code": "-- SET_VEHICLE_STEERING_ANGLE\nSetVehicleSteeringAngle(\n\tvehicle --[[ Vehicle ]], \n\tangle --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleSteeringScale",
    "hash": "0xEB46596F",
    "code": "-- SET_VEHICLE_STEERING_SCALE\nSetVehicleSteeringScale(\n\tvehicle --[[ Vehicle ]], \n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleSuspensionHeight",
    "hash": "0xB3439A01",
    "code": "-- SET_VEHICLE_SUSPENSION_HEIGHT\nSetVehicleSuspensionHeight(\n\tvehicle --[[ Vehicle ]], \n\tnewHeight --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the height of the vehicle's suspension. This changes the same value set by Suspension in the mod shop. Negatives values raise the car. Positive values lower the car.\n\nThis is change is visual only. The collision of the vehicle will not move."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleTurboPressure",
    "hash": "0x6485615E",
    "code": "-- SET_VEHICLE_TURBO_PRESSURE\nSetVehicleTurboPressure(\n\tvehicle --[[ Vehicle ]], \n\tpressure --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelBrakePressure",
    "hash": "0xE80F4E31",
    "code": "-- SET_VEHICLE_WHEEL_BRAKE_PRESSURE\nSetVehicleWheelBrakePressure(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tpressure --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets brake pressure of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS. Normal values around 1.0f"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelFlags",
    "hash": "0xD2B9E90D",
    "code": "-- SET_VEHICLE_WHEEL_FLAGS\nSetVehicleWheelFlags(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the flags of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelHealth",
    "hash": "0xB22ECEFD",
    "code": "-- SET_VEHICLE_WHEEL_HEALTH\nSetVehicleWheelHealth(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelIsPowered",
    "hash": "0xBD5291A0",
    "code": "-- SET_VEHICLE_WHEEL_IS_POWERED\nSetVehicleWheelIsPowered(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tpowered --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets whether the wheel is powered. On all wheel drive cars this works to change which wheels receive power, but if a car's fDriveBiasFront doesn't send power to that wheel, it won't get power anyway. This can be fixed by changing the fDriveBiasFront with SET_VEHICLE_HANDLING_FLOAT. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS. This is a shortcut to a flag in SET_VEHICLE_WHEEL_FLAGS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelPower",
    "hash": "0xC6146043",
    "code": "-- SET_VEHICLE_WHEEL_POWER\nSetVehicleWheelPower(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tpower --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets power being sent to a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelRimColliderSize",
    "hash": "0xF380E184",
    "code": "-- SET_VEHICLE_WHEEL_RIM_COLLIDER_SIZE\nSetVehicleWheelRimColliderSize(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "wheelIndex: \n\nIndex of wheel, 0-3.",
      "value: \n\nSize of rim collider."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nwheelIndex: \n\nIndex of wheel, 0-3.\n\nvalue: \n\nSize of rim collider.\n\nNot sure what this changes, probably determines physical rim size in case the tire is blown."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelRotationSpeed",
    "hash": "0x35ED100D",
    "code": "-- SET_VEHICLE_WHEEL_ROTATION_SPEED\nSetVehicleWheelRotationSpeed(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the rotation speed of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelSize",
    "hash": "0x53AB5C35",
    "code": "-- SET_VEHICLE_WHEEL_SIZE\nlocal retval --[[ boolean ]] =\n\tSetVehicleWheelSize(\n\t\tvehicle --[[ Vehicle ]], \n\t\tsize --[[ number ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set data for.",
      "size: \n\nSize of the wheels (usually between 0.5 and 1.5 is reasonable)."
    ],
    "returns": [
      "Bool - whether change was successful or not"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set data for.\n\nsize: \n\nSize of the wheels (usually between 0.5 and 1.5 is reasonable).\n\nReturns:\n\nBool - whether change was successful or not\n\nSets vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle). Only works on non-default wheels. Returns whether change was successful (can be false if trying to set size for non-default wheels)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelTireColliderSize",
    "hash": "0xB962D05C",
    "code": "-- SET_VEHICLE_WHEEL_TIRE_COLLIDER_SIZE\nSetVehicleWheelTireColliderSize(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "wheelIndex: \n\nIndex of wheel, 0-3.",
      "value: \n\nRadius of tire collider."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nwheelIndex: \n\nIndex of wheel, 0-3.\n\nvalue: \n\nRadius of tire collider.\n\nUse along with SetVehicleWheelSize to resize the wheels (this native sets the collider size affecting physics while SetVehicleWheelSize will change visual size)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelTireColliderWidth",
    "hash": "0x47BD0270",
    "code": "-- SET_VEHICLE_WHEEL_TIRE_COLLIDER_WIDTH\nSetVehicleWheelTireColliderWidth(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to obtain data for.",
      "wheelIndex: \n\nIndex of wheel, 0-3.",
      "value: \n\nWidth of tire collider."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to obtain data for.\n\nwheelIndex: \n\nIndex of wheel, 0-3.\n\nvalue: \n\nWidth of tire collider.\n\nUse along with SetVehicleWheelWidth to resize the wheels (this native sets the collider width affecting physics while SetVehicleWheelWidth will change visual width)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelTractionVectorLength",
    "hash": "0x85C85A3A",
    "code": "-- SET_VEHICLE_WHEEL_TRACTION_VECTOR_LENGTH\nSetVehicleWheelTractionVectorLength(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tlength --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the traction vector length of a wheel. Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelWidth",
    "hash": "0x64C3F1C0",
    "code": "-- SET_VEHICLE_WHEEL_WIDTH\nlocal retval --[[ boolean ]] =\n\tSetVehicleWheelWidth(\n\t\tvehicle --[[ Vehicle ]], \n\t\twidth --[[ number ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set data for.",
      "width: \n\nWidth of the wheels (usually between 0.1 and 1.5 is reasonable)."
    ],
    "returns": [
      "Bool - whether change was successful or not"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set data for.\n\nwidth: \n\nWidth of the wheels (usually between 0.1 and 1.5 is reasonable).\n\nReturns:\n\nBool - whether change was successful or not\n\nSets vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle). Only works on non-default wheels. Returns whether change was successful (can be false if trying to set width for non-default wheels)."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelXOffset",
    "hash": "0xBD6357D",
    "code": "-- SET_VEHICLE_WHEEL_X_OFFSET\nSetVehicleWheelXOffset(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\toffset --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adjusts the offset of the specified wheel relative to the wheel's axle center. Needs to be called every frame in order to function properly, as GTA will reset the offset otherwise. This function can be especially useful to set the track width of a vehicle, for example:\n\nfunction SetVehicleFrontTrackWidth(vehicle, width)\nSetVehicleWheelXOffset(vehicle, 0, -width/2)\nSetVehicleWheelXOffset(vehicle, 1, width/2)\nend"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelYRotation",
    "hash": "0xC6C2171F",
    "code": "-- SET_VEHICLE_WHEEL_Y_ROTATION\nSetVehicleWheelYRotation(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleWheelieState",
    "hash": "0xEAB8DB65",
    "code": "-- SET_VEHICLE_WHEELIE_STATE\nSetVehicleWheelieState(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nVehicle",
      "state: \n\nWheelie state"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nVehicle\n\nstate: \n\nWheelie state\n\nExample script: https://pastebin.com/J6XGbkCW\n\nList of known states:\n\n1: Not wheeling.\n65: Vehicle is ready to do wheelie (burnouting).\n129: Vehicle is doing wheelie."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleXenonLightsCustomColor",
    "hash": "0x1683E7F0",
    "code": "-- SET_VEHICLE_XENON_LIGHTS_CUSTOM_COLOR\nSetVehicleXenonLightsCustomColor(\n\tvehicle --[[ Vehicle ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "red: \n\nRed color (0-255).",
      "green: \n\nGreen color (0-255).",
      "blue: \n\nBlue color (0-255)."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nred: \n\nRed color (0-255).\n\ngreen: \n\nGreen color (0-255).\n\nblue: \n\nBlue color (0-255).\n\nSets custom vehicle xenon lights color, allowing to use RGB palette. The game will ignore lights color set by _SET_VEHICLE_XENON_LIGHTS_COLOR when custom color is active. This native is not synced between players. Requires xenon lights mod to be set on vehicle."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVehicleXmasSnowFactor",
    "hash": "0x80CC4C9E",
    "code": "-- SET_VEHICLE_XMAS_SNOW_FACTOR\nSetVehicleXmasSnowFactor(\n\tgripFactor --[[ number ]]\n)",
    "parameters": [
      "gripFactor: \n\namount of grip strength vehicle wheels have when xmas weather is active, 0.0 being normal weather grip. 0.2 is the default."
    ],
    "returns": [],
    "description": "Parameters:\n\ngripFactor: \n\namount of grip strength vehicle wheels have when xmas weather is active, 0.0 being normal weather grip. 0.2 is the default."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetVisualSettingFloat",
    "hash": "0xD1D31681",
    "code": "-- SET_VISUAL_SETTING_FLOAT\nSetVisualSettingFloat(\n\tname --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "name: \n\nThe name of the value to set, such as pedLight.color.red.",
      "value: \n\nThe value to write."
    ],
    "returns": [],
    "description": "Parameters:\n\nname: \n\nThe name of the value to set, such as pedLight.color.red.\n\nvalue: \n\nThe value to write.\n\nOverrides a floating point value from visualsettings.dat temporarily."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterAreaClipRect",
    "hash": "0x9FCD2EE6",
    "code": "-- SET_WATER_AREA_CLIP_RECT\nSetWaterAreaClipRect(\n\tminX --[[ integer ]], \n\tminY --[[ integer ]], \n\tmaxX --[[ integer ]], \n\tmaxY --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets world clip boundaries for water quads file (water.xml, water_heistisland.xml) Used internally by LOAD_GLOBAL_WATER_FILE"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterQuadAlpha",
    "hash": "0xF49797EB",
    "code": "-- SET_WATER_QUAD_ALPHA\nlocal retval --[[ boolean ]] =\n\tSetWaterQuadAlpha(\n\t\twaterQuad --[[ integer ]], \n\t\ta0 --[[ integer ]], \n\t\ta1 --[[ integer ]], \n\t\ta2 --[[ integer ]], \n\t\ta3 --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "a0: \n\nThe a0 level",
      "a1: \n\nThe a1 level",
      "a2: \n\nThe a2 level",
      "a3: \n\nThe a3 level"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\na0: \n\nThe a0 level\n\na1: \n\nThe a1 level\n\na2: \n\nThe a2 level\n\na3: \n\nThe a3 level\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterQuadBounds",
    "hash": "0x80AD144C",
    "code": "-- SET_WATER_QUAD_BOUNDS\nlocal retval --[[ boolean ]] =\n\tSetWaterQuadBounds(\n\t\twaterQuad --[[ integer ]], \n\t\tminX --[[ integer ]], \n\t\tminY --[[ integer ]], \n\t\tmaxX --[[ integer ]], \n\t\tmaxY --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "minX: \n\nThe minX coordinate",
      "minY: \n\nThe minY coordinate",
      "maxX: \n\nThe maxX coordinate",
      "maxY: \n\nThe maxY coordinate"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nminX: \n\nThe minX coordinate\n\nminY: \n\nThe minY coordinate\n\nmaxX: \n\nThe maxX coordinate\n\nmaxY: \n\nThe maxY coordinate\n\nReturns:\n\nReturns true on success.\n\nThis native allows you to update the bounds of a specified water quad index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterQuadHasLimitedDepth",
    "hash": "0xD1FDCFC1",
    "code": "-- SET_WATER_QUAD_HAS_LIMITED_DEPTH\nlocal retval --[[ boolean ]] =\n\tSetWaterQuadHasLimitedDepth(\n\t\twaterQuad --[[ integer ]], \n\t\thasLimitedDepth --[[ boolean ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "hasLimitedDepth: \n\nUnknown effect"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nhasLimitedDepth: \n\nUnknown effect\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterQuadIsInvisible",
    "hash": "0xA387D917",
    "code": "-- SET_WATER_QUAD_IS_INVISIBLE\nlocal retval --[[ boolean ]] =\n\tSetWaterQuadIsInvisible(\n\t\twaterQuad --[[ integer ]], \n\t\tisInvisible --[[ boolean ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "isInvisible: \n\nUnknown effect"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nisInvisible: \n\nUnknown effect\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterQuadLevel",
    "hash": "0x6292F7A8",
    "code": "-- SET_WATER_QUAD_LEVEL\nlocal retval --[[ boolean ]] =\n\tSetWaterQuadLevel(\n\t\twaterQuad --[[ integer ]], \n\t\tlevel --[[ number ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "level: \n\nThe water level inside the water quad"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nlevel: \n\nThe water level inside the water quad\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterQuadNoStencil",
    "hash": "0xC3FF42FF",
    "code": "-- SET_WATER_QUAD_NO_STENCIL\nlocal retval --[[ boolean ]] =\n\tSetWaterQuadNoStencil(\n\t\twaterQuad --[[ integer ]], \n\t\tnoStencil --[[ bool ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "noStencil: \n\nUnknown effect"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\nnoStencil: \n\nUnknown effect\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaterQuadType",
    "hash": "0x50131EB2",
    "code": "-- SET_WATER_QUAD_TYPE\nlocal retval --[[ boolean ]] =\n\tSetWaterQuadType(\n\t\twaterQuad --[[ integer ]], \n\t\ttype --[[ integer ]]\n\t)",
    "parameters": [
      "waterQuad: \n\nThe water quad index",
      "type: \n\nThe water quad type"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaterQuad: \n\nThe water quad index\n\ntype: \n\nThe water quad type\n\nReturns:\n\nReturns true on success.\n\nThis native allows you to update the water quad type.\n\nValid type definitions:\n\n0 Square\n1 Right triangle where the 90 degree angle is at maxX, minY\n2 Right triangle where the 90 degree angle is at minX, minY\n3 Right triangle where the 90 degree angle is at minX, maxY\n4 Right triangle where the 90 degree angle is at maxY, maxY"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaveQuadAmplitude",
    "hash": "0xE4174B7B",
    "code": "-- SET_WAVE_QUAD_AMPLITUDE\nlocal retval --[[ boolean ]] =\n\tSetWaveQuadAmplitude(\n\t\twaveQuad --[[ integer ]], \n\t\tamplitude --[[ number ]]\n\t)",
    "parameters": [
      "waveQuad: \n\nThe wave quad index",
      "amplitude: \n\nThe amplitude value"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaveQuad: \n\nThe wave quad index\n\namplitude: \n\nThe amplitude value\n\nReturns:\n\nReturns true on success."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaveQuadBounds",
    "hash": "0x1FCC1FAF",
    "code": "-- SET_WAVE_QUAD_BOUNDS\nlocal retval --[[ boolean ]] =\n\tSetWaveQuadBounds(\n\t\twaveQuad --[[ integer ]], \n\t\tminX --[[ integer ]], \n\t\tminY --[[ integer ]], \n\t\tmaxX --[[ integer ]], \n\t\tmaxY --[[ integer ]]\n\t)",
    "parameters": [
      "waveQuad: \n\nThe wave quad index",
      "minX: \n\nThe minX coordinate",
      "minY: \n\nThe minY coordinate",
      "maxX: \n\nThe maxX coordinate",
      "maxY: \n\nThe maxY coordinate"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaveQuad: \n\nThe wave quad index\n\nminX: \n\nThe minX coordinate\n\nminY: \n\nThe minY coordinate\n\nmaxX: \n\nThe maxX coordinate\n\nmaxY: \n\nThe maxY coordinate\n\nReturns:\n\nReturns true on success.\n\nThis native allows you to update the bounds of a specified water quad index."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWaveQuadDirection",
    "hash": "0xFC9341A3",
    "code": "-- SET_WAVE_QUAD_DIRECTION\nlocal retval --[[ boolean ]] =\n\tSetWaveQuadDirection(\n\t\twaveQuad --[[ integer ]], \n\t\tdirectionX --[[ number ]], \n\t\tdirectionY --[[ number ]]\n\t)",
    "parameters": [
      "waveQuad: \n\nThe wave quad index",
      "directionX: \n\nThe minX coordinate",
      "directionY: \n\nThe minY coordinate"
    ],
    "returns": [
      "Returns true on success."
    ],
    "description": "Parameters:\n\nwaveQuad: \n\nThe wave quad index\n\ndirectionX: \n\nThe minX coordinate\n\ndirectionY: \n\nThe minY coordinate\n\nReturns:\n\nReturns true on success.\n\ndirectionX/Y should be constrained between -1.0 and 1.0 A positive value will create the wave starting at min and rolling towards max A negative value will create the wave starting at max and rolling towards min Applying both values allows you to make diagonal waves"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWeaponAccuracySpread",
    "hash": "0x598DD6AE",
    "code": "-- SET_WEAPON_ACCURACY_SPREAD\nSetWeaponAccuracySpread(\n\tweaponHash --[[ Hash ]], \n\tspread --[[ number ]]\n)",
    "parameters": [
      "weaponHash: \n\nWeapon name hash.",
      "spread: \n\nAccuracy spread"
    ],
    "returns": [],
    "description": "Parameters:\n\nweaponHash: \n\nWeapon name hash.\n\nspread: \n\nAccuracy spread\n\nA setter for the accuracy spread of a weapon."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWeaponRecoilShakeAmplitude",
    "hash": "0x9864312F",
    "code": "-- SET_WEAPON_RECOIL_SHAKE_AMPLITUDE\nSetWeaponRecoilShakeAmplitude(\n\tweaponHash --[[ Hash ]], \n\tamplitude --[[ number ]]\n)",
    "parameters": [
      "weaponHash: \n\nWeapon name hash.",
      "amplitude: \n\nRecoil shake amplitude"
    ],
    "returns": [],
    "description": "Parameters:\n\nweaponHash: \n\nWeapon name hash.\n\namplitude: \n\nRecoil shake amplitude\n\nA setter for the recoil shake amplitude of a weapon."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWeaponsNoAimBlocking",
    "hash": "0xDFD8F6DE",
    "code": "-- SET_WEAPONS_NO_AIM_BLOCKING\nSetWeaponsNoAimBlocking(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nOn/Off"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nOn/Off\n\nDisables weapons aim blocking due to environment for local player. For non-player peds SET_PED_ENABLE_WEAPON_BLOCKING can be used."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWeaponsNoAutoreload",
    "hash": "0x311150E5",
    "code": "-- SET_WEAPONS_NO_AUTORELOAD\nSetWeaponsNoAutoreload(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nOn/Off"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nOn/Off\n\nDisables the game's built-in auto-reloading."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWeaponsNoAutoswap",
    "hash": "0x2A7B50E",
    "code": "-- SET_WEAPONS_NO_AUTOSWAP\nSetWeaponsNoAutoswap(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nOn/Off"
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nOn/Off\n\nDisables autoswapping to another weapon when the current weapon runs out of ammo."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWeatherCycleEntry",
    "hash": "0xD264D4E1",
    "code": "-- SET_WEATHER_CYCLE_ENTRY\nlocal retval --[[ boolean ]] =\n\tSetWeatherCycleEntry(\n\t\tindex --[[ integer ]], \n\t\ttypeName --[[ string ]], \n\t\ttimeMult --[[ integer ]]\n\t)",
    "parameters": [
      "index: \n\nThe index of the entry to set. Must be between 0 and 255",
      "typeName: \n\nThe name of the weather type for this cycle",
      "timeMult: \n\nThe relative duration of this cycle, which is multiplied by msPerCycle during 'APPLY_WEATHER_CYCLES'. Must be between 1 and 255"
    ],
    "returns": [
      "Returns true if all parameters were valid, otherwise false."
    ],
    "description": "Parameters:\n\nindex: \n\nThe index of the entry to set. Must be between 0 and 255\n\ntypeName: \n\nThe name of the weather type for this cycle\n\ntimeMult: \n\nThe relative duration of this cycle, which is multiplied by msPerCycle during 'APPLY_WEATHER_CYCLES'. Must be between 1 and 255\n\nReturns:\n\nReturns true if all parameters were valid, otherwise false."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWeatherOwnedByNetwork",
    "hash": "0x2703D582",
    "code": "-- SET_WEATHER_OWNED_BY_NETWORK\nSetWeatherOwnedByNetwork(\n\tnetwork --[[ boolean ]]\n)",
    "parameters": [
      "network: \n\ntrue to let the network control weather, false to not use network weather behavior."
    ],
    "returns": [],
    "description": "Parameters:\n\nnetwork: \n\ntrue to let the network control weather, false to not use network weather behavior.\n\nSets whether or not the weather should be owned by the network subsystem.\n\nTo be able to use _SET_WEATHER_TYPE_TRANSITION, this has to be set to false."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "SetWetClothPinRadiusScale",
    "hash": "0xF1BD2CEF",
    "code": "-- SET_WET_CLOTH_PIN_RADIUS_SCALE\nSetWetClothPinRadiusScale(\n\tscale --[[ number ]]\n)",
    "parameters": [
      "scale: \n\nA value that controls the wet cloth radius scale, default: 0.3, maximum: 1.0(used for dry cloth by default), lower values increase the adhesion effect of wet cloth, making it cling more tightly to the surface."
    ],
    "returns": [],
    "description": "Parameters:\n\nscale: \n\nA value that controls the wet cloth radius scale, default: 0.3, maximum: 1.0(used for dry cloth by default), lower values increase the adhesion effect of wet cloth, making it cling more tightly to the surface.\n\nModifies the radius scale used in the simulation of wet cloth physics. This affects how cloth behaves when wet, changing how it sticks or reacts to movement."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "ShutdownLoadingScreenNui",
    "hash": "0xB9234AFB",
    "code": "-- SHUTDOWN_LOADING_SCREEN_NUI\nShutdownLoadingScreenNui()",
    "parameters": [],
    "returns": [],
    "description": "Shuts down the loadingScreen NUI frame, similarly to SHUTDOWN_LOADING_SCREEN."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "StartFindExternalKvp",
    "hash": "0x8F2EECC3",
    "code": "-- START_FIND_EXTERNAL_KVP\nlocal retval --[[ integer ]] =\n\tStartFindExternalKvp(\n\t\tresourceName --[[ string ]], \n\t\tprefix --[[ string ]]\n\t)",
    "parameters": [
      "resourceName: \n\nThe resource to try finding the key/values for",
      "prefix: \n\nA prefix match"
    ],
    "returns": [
      "A KVP find handle to use with FIND_KVP and close with END_FIND_KVP"
    ],
    "description": "Parameters:\n\nresourceName: \n\nThe resource to try finding the key/values for\n\nprefix: \n\nA prefix match\n\nReturns:\n\nA KVP find handle to use with FIND_KVP and close with END_FIND_KVP\n\nEquivalent of START_FIND_KVP, but for another resource than the current one."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "StartFindKvp",
    "hash": "0xDD379006",
    "code": "-- START_FIND_KVP\nlocal retval --[[ integer ]] =\n\tStartFindKvp(\n\t\tprefix --[[ string ]]\n\t)",
    "parameters": [
      "prefix: \n\nA prefix match"
    ],
    "returns": [
      "A KVP find handle to use with FIND_KVP and close with END_FIND_KVP"
    ],
    "description": "Parameters:\n\nprefix: \n\nA prefix match\n\nReturns:\n\nA KVP find handle to use with FIND_KVP and close with END_FIND_KVP"
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "StartResource",
    "hash": "0x29B440DC",
    "code": "-- START_RESOURCE\nlocal retval --[[ boolean ]] =\n\tStartResource(\n\t\tresourceName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "StateBagHasKey",
    "hash": "0x12A330",
    "code": "-- STATE_BAG_HAS_KEY\nlocal retval --[[ bool ]] =\n\tStateBagHasKey(\n\t\tbagName --[[ string ]], \n\t\tkey --[[ string ]]\n\t)",
    "parameters": [
      "bagName: \n\nThe name of the bag.",
      "key: \n\nThe key used to check data existence."
    ],
    "returns": [
      "Returns true if the data associated with the specified key exists; otherwise, returns false."
    ],
    "description": "Parameters:\n\nbagName: \n\nThe name of the bag.\n\nkey: \n\nThe key used to check data existence.\n\nReturns:\n\nReturns true if the data associated with the specified key exists; otherwise, returns false."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "StopResource",
    "hash": "0x21783161",
    "code": "-- STOP_RESOURCE\nlocal retval --[[ boolean ]] =\n\tStopResource(\n\t\tresourceName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskCombatPed",
    "hash": "0xCB0D8932",
    "code": "-- TASK_COMBAT_PED\nTaskCombatPed(\n\tped --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the specified ped attack the target ped.\np2 should be 0\np3 should be 16\n\n\nThis is the server-side RPC native equivalent of the client native TASK_COMBAT_PED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskDriveBy",
    "hash": "0x2B84D1C4",
    "code": "-- TASK_DRIVE_BY\nTaskDriveBy(\n\tdriverPed --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\ttargetVehicle --[[ Vehicle ]], \n\ttargetX --[[ number ]], \n\ttargetY --[[ number ]], \n\ttargetZ --[[ number ]], \n\tdistanceToShoot --[[ number ]], \n\tpedAccuracy --[[ integer ]], \n\tp8 --[[ boolean ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nTASK::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});\nNeeds working example. Doesn't seem to do anything.\nI marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.\nI marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.\nI marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.\n\n\nThis is the server-side RPC native equivalent of the client native TASK_DRIVE_BY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskEnterVehicle",
    "hash": "0xB8689B4E",
    "code": "-- TASK_ENTER_VEHICLE\nTaskEnterVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\ttimeout --[[ integer ]], \n\tseatIndex --[[ integer ]], \n\tspeed --[[ number ]], \n\tflag --[[ integer ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "speed 1.0 = walk, 2.0 = run\np5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle\np6 is always 0\n\n\nThis is the server-side RPC native equivalent of the client native TASK_ENTER_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskEveryoneLeaveVehicle",
    "hash": "0xC1971F30",
    "code": "-- TASK_EVERYONE_LEAVE_VEHICLE\nTaskEveryoneLeaveVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "TASK_EVERYONE_LEAVE_VEHICLE\n\nThis is the server-side RPC native equivalent of the client native TASK_EVERYONE_LEAVE_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskGoStraightToCoord",
    "hash": "0x80A9E7A7",
    "code": "-- TASK_GO_STRAIGHT_TO_COORD\nTaskGoStraightToCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\ttimeout --[[ integer ]], \n\ttargetHeading --[[ number ]], \n\tdistanceToSlide --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "x: \n\nThe x coordinate.",
      "y: \n\nThe y coordinate.",
      "z: \n\nThe z coordinate.",
      "speed: \n\nThe ped movement speed.",
      "timeout: \n\n-1 , other values appear to break the ped movement.",
      "targetHeading: \n\nThe heading you want the ped to be on x,y,z coord.",
      "distanceToSlide: \n\nThe distance from x,y,z where the ped will start sliding."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nx: \n\nThe x coordinate.\n\ny: \n\nThe y coordinate.\n\nz: \n\nThe z coordinate.\n\nspeed: \n\nThe ped movement speed.\n\ntimeout: \n\n-1 , other values appear to break the ped movement.\n\ntargetHeading: \n\nThe heading you want the ped to be on x,y,z coord.\n\ndistanceToSlide: \n\nThe distance from x,y,z where the ped will start sliding.\n\nTASK_GO_STRAIGHT_TO_COORD\n\nThis is the server-side RPC native equivalent of the client native TASK_GO_STRAIGHT_TO_COORD."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskGoToCoordAnyMeans",
    "hash": "0xF91DF93B",
    "code": "-- TASK_GO_TO_COORD_ANY_MEANS\nTaskGoToCoordAnyMeans(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tfMoveBlendRatio --[[ number ]], \n\tvehicle --[[ Vehicle ]], \n\tbUseLongRangeVehiclePathing --[[ boolean ]], \n\tdrivingFlags --[[ integer ]], \n\tfMaxRangeToShootTargets --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped Handle.",
      "x: \n\nThe goto target coordinate.",
      "y: \n\nThe goto target coordinate.",
      "z: \n\nThe goto target coordinate.",
      "fMoveBlendRatio: \n\n0.0 = still, 1.0 = walk, 2.0 = run, 3.0 = sprint.",
      "vehicle: \n\nIf defined, the pedestrian will only move if said vehicle exists. If you don't want any sort of association, just set it to 0.",
      "bUseLongRangeVehiclePathing: \n\nSetting to true tells the vehicle to use longrange vehicle pathing.",
      "drivingFlags: \n\nSee eDrivingMode enum.",
      "fMaxRangeToShootTargets: \n\nDetermines the maximum distance at which the Ped will engage in combat with threatening targets."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped Handle.\n\nx: \n\nThe goto target coordinate.\n\ny: \n\nThe goto target coordinate.\n\nz: \n\nThe goto target coordinate.\n\nfMoveBlendRatio: \n\n0.0 = still, 1.0 = walk, 2.0 = run, 3.0 = sprint.\n\nvehicle: \n\nIf defined, the pedestrian will only move if said vehicle exists. If you don't want any sort of association, just set it to 0.\n\nbUseLongRangeVehiclePathing: \n\nSetting to true tells the vehicle to use longrange vehicle pathing.\n\ndrivingFlags: \n\nSee eDrivingMode enum.\n\nfMaxRangeToShootTargets: \n\nDetermines the maximum distance at which the Ped will engage in combat with threatening targets.\n\nTells a ped to go to a coord by any means.\n\nenum eDrivingMode {\nDF_StopForCars = 1,\nDF_StopForPeds = 2,\nDF_SwerveAroundAllCars = 4,\nDF_SteerAroundStationaryCars = 8,\nDF_SteerAroundPeds = 16,\nDF_SteerAroundObjects = 32,\nDF_DontSteerAroundPlayerPed = 64,\nDF_StopAtLights = 128,\nDF_GoOffRoadWhenAvoiding = 256,\nDF_DriveIntoOncomingTraffic = 512,\nDF_DriveInReverse = 1024,\n// If pathfinding fails, cruise randomly instead of going on a straight line\nDF_UseWanderFallbackInsteadOfStraightLine = 2048,\nDF_AvoidRestrictedAreas = 4096,\n// These only work on MISSION_CRUISE\nDF_PreventBackgroundPathfinding = 8192,\nDF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,\nDF_UseShortCutLinks =  262144,\nDF_ChangeLanesAroundObstructions = 524288,\n// cruise tasks ignore this anyway--only used for goto's\nDF_UseSwitchedOffNodes =  2097152,\n// if you're going to be primarily driving off road\nDF_PreferNavmeshRoute =  4194304,\n// Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly\nDF_PlaneTaxiMode =  8388608,\nDF_ForceStraightLine = 16777216,\nDF_UseStringPullingAtJunctions = 33554432,\nDF_AvoidHighways = 536870912,\nDF_ForceJoinInRoadDirection = 1073741824,\n// Standard driving mode. stops for cars, peds, and lights, goes around stationary obstructions\nDRIVINGMODE_STOPFORCARS = 786603, // DF_StopForCars|DF_StopForPeds|DF_SteerAroundObjects|DF_SteerAroundStationaryCars|DF_StopAtLights|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,\t\t// Obey lights too\n// Like the above, but doesn't steer around anything in its way - will only wait instead.\nDRIVINGMODE_STOPFORCARS_STRICT = 262275, // DF_StopForCars|DF_StopForPeds|DF_StopAtLights|DF_UseShortCutLinks, // Doesn't deviate an inch.\n// Default \"alerted\" driving mode. drives around everything, doesn't obey lights\nDRIVINGMODE_AVOIDCARS = 786469, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars,\n// Very erratic driving. difference between this and AvoidCars is that it doesn't use the brakes at ALL to help with steering\nDRIVINGMODE_AVOIDCARS_RECKLESS = 786468, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,\n// Smashes through everything\nDRIVINGMODE_PLOUGHTHROUGH = 262144, // DF_UseShortCutLinks\n// Drives normally except for the fact that it ignores lights\nDRIVINGMODE_STOPFORCARS_IGNORELIGHTS = 786475, // DF_StopForCars|DF_SteerAroundStationaryCars|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions\n// Try to swerve around everything, but stop for lights if necessary\nDRIVINGMODE_AVOIDCARS_OBEYLIGHTS = 786597, // DF_SwerveAroundAllCars|DF_StopAtLights|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars\n// Swerve around cars, be careful around peds, and stop for lights\nDRIVINGMODE_AVOIDCARS_STOPFORPEDS_OBEYLIGHTS = 786599 // DF_SwerveAroundAllCars|DF_StopAtLights|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars\n};\n\n\nThis is the server-side RPC native equivalent of the client native TASK_GO_TO_COORD_ANY_MEANS."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskGoToEntity",
    "hash": "0x374827C2",
    "code": "-- TASK_GO_TO_ENTITY\nTaskGoToEntity(\n\tentity --[[ Entity ]], \n\ttarget --[[ Entity ]], \n\tduration --[[ integer ]], \n\tdistance --[[ number ]], \n\tspeed --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0\nNote: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.\nExample: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)\nPed will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).\n\n\nThis is the server-side RPC native equivalent of the client native TASK_GO_TO_ENTITY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskHandsUp",
    "hash": "0x8DCC19C5",
    "code": "-- TASK_HANDS_UP\nTaskHandsUp(\n\tped --[[ Ped ]], \n\tduration --[[ integer ]], \n\tfacingPed --[[ Ped ]], \n\tp3 --[[ integer ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "In the scripts, p3 was always -1.\np3 seems to be duration or timeout of turn animation.\nAlso facingPed can be 0 or -1 so ped will just raise hands up.\n\n\nThis is the server-side RPC native equivalent of the client native TASK_HANDS_UP."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskLeaveAnyVehicle",
    "hash": "0xDBDD79FA",
    "code": "-- TASK_LEAVE_ANY_VEHICLE\nTaskLeaveAnyVehicle(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Flags are the same flags used in TASK_LEAVE_VEHICLE\n\nThis is the server-side RPC native equivalent of the client native TASK_LEAVE_ANY_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskLeaveVehicle",
    "hash": "0x7B1141C6",
    "code": "-- TASK_LEAVE_VEHICLE\nTaskLeaveVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Flags from decompiled scripts:\n0 = normal exit and closes door.\n1 = normal exit and closes door.\n16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)\n64 = normal exit and closes door, maybe a bit slower animation than 0.\n256 = normal exit but does not close the door.\n4160 = ped is throwing himself out, even when the vehicle is still.\n262144 = ped moves to passenger seat first, then exits normally\nOthers to be tried out: 320, 512, 131072.\n\n\nThis is the server-side RPC native equivalent of the client native TASK_LEAVE_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskPlayAnim",
    "hash": "0x5AB552C6",
    "code": "-- TASK_PLAY_ANIM\nTaskPlayAnim(\n\tped --[[ Ped ]], \n\tanimDictionary --[[ string ]], \n\tanimationName --[[ string ]], \n\tblendInSpeed --[[ number ]], \n\tblendOutSpeed --[[ number ]], \n\tduration --[[ integer ]], \n\tflag --[[ integer ]], \n\tplaybackRate --[[ number ]], \n\tlockX --[[ boolean ]], \n\tlockY --[[ boolean ]], \n\tlockZ --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped you want to play the animation",
      "animDictionary: \n\nThe animation dictionary",
      "animationName: \n\nThe animation name",
      "blendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "blendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "duration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled",
      "flag: \n\nThe animation flags (see enum)",
      "playbackRate: \n\nThe playback rate (between 0.0 and 1.0)",
      "lockX:",
      "lockY:",
      "lockZ:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped you want to play the animation\n\nanimDictionary: \n\nThe animation dictionary\n\nanimationName: \n\nThe animation name\n\nblendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nblendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nduration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled\n\nflag: \n\nThe animation flags (see enum)\n\nplaybackRate: \n\nThe playback rate (between 0.0 and 1.0)\n\nlockX:\nlockY:\nlockZ:\n\nAnimations list\n\nenum eScriptedAnimFlags\n{\nAF_LOOPING = 1,\nAF_HOLD_LAST_FRAME = 2,\nAF_REPOSITION_WHEN_FINISHED = 4,\nAF_NOT_INTERRUPTABLE = 8,\nAF_UPPERBODY = 16,\nAF_SECONDARY = 32,\nAF_REORIENT_WHEN_FINISHED = 64,\nAF_ABORT_ON_PED_MOVEMENT = 128,\nAF_ADDITIVE = 256,\nAF_TURN_OFF_COLLISION = 512,\nAF_OVERRIDE_PHYSICS = 1024,\nAF_IGNORE_GRAVITY = 2048,\nAF_EXTRACT_INITIAL_OFFSET = 4096,\nAF_EXIT_AFTER_INTERRUPTED = 8192,\nAF_TAG_SYNC_IN = 16384,\nAF_TAG_SYNC_OUT = 32768,\nAF_TAG_SYNC_CONTINUOUS = 65536,\nAF_FORCE_START = 131072,\nAF_USE_KINEMATIC_PHYSICS = 262144,\nAF_USE_MOVER_EXTRACTION = 524288,\nAF_HIDE_WEAPON = 1048576,\nAF_ENDS_IN_DEAD_POSE = 2097152,\nAF_ACTIVATE_RAGDOLL_ON_COLLISION = 4194304,\nAF_DONT_EXIT_ON_DEATH = 8388608,\nAF_ABORT_ON_WEAPON_DAMAGE = 16777216,\nAF_DISABLE_FORCED_PHYSICS_UPDATE = 33554432,\nAF_PROCESS_ATTACHMENTS_ON_START = 67108864,\nAF_EXPAND_PED_CAPSULE_FROM_SKELETON = 134217728,\nAF_USE_ALTERNATIVE_FP_ANIM = 268435456,\nAF_BLENDOUT_WRT_LAST_FRAME = 536870912,\nAF_USE_FULL_BLENDING = 1073741824\n}\n\n\nThis is the server-side RPC native equivalent of the client native TASK_PLAY_ANIM."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskPlayAnimAdvanced",
    "hash": "0x3DDEB0E6",
    "code": "-- TASK_PLAY_ANIM_ADVANCED\nTaskPlayAnimAdvanced(\n\tped --[[ Ped ]], \n\tanimDictionary --[[ string ]], \n\tanimationName --[[ string ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tblendInSpeed --[[ number ]], \n\tblendOutSpeed --[[ number ]], \n\tduration --[[ integer ]], \n\tflag --[[ Any ]], \n\tanimTime --[[ number ]], \n\tp14 --[[ Any ]], \n\tp15 --[[ Any ]]\n)",
    "parameters": [
      "ped: \n\nThe ped you want to play the animation",
      "animDictionary: \n\nThe animation dictionary",
      "animationName: \n\nThe animation name",
      "posX: \n\nInitial X position of the task",
      "posY: \n\nInitial Y position of the task",
      "posZ: \n\nInitial Z position of the task",
      "rotX: \n\nInitial X rotation of the task",
      "rotY: \n\nInitial Y rotation of the task",
      "rotZ: \n\nInitial Z rotation of the task",
      "blendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "blendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "duration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled",
      "flag: \n\nSee TASK_PLAY_ANIM",
      "animTime: \n\nValue between 0.0 and 1.0, lets you start an animation from the given point",
      "p14:",
      "p15:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped you want to play the animation\n\nanimDictionary: \n\nThe animation dictionary\n\nanimationName: \n\nThe animation name\n\nposX: \n\nInitial X position of the task\n\nposY: \n\nInitial Y position of the task\n\nposZ: \n\nInitial Z position of the task\n\nrotX: \n\nInitial X rotation of the task\n\nrotY: \n\nInitial Y rotation of the task\n\nrotZ: \n\nInitial Z rotation of the task\n\nblendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nblendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nduration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled\n\nflag: \n\nSee TASK_PLAY_ANIM\n\nanimTime: \n\nValue between 0.0 and 1.0, lets you start an animation from the given point\n\np14:\np15:\n\nSimilar in functionality to TASK_PLAY_ANIM, except the position and rotation parameters let you specify the initial position and rotation of the task. The ped is teleported to the position specified. Animations list\n\nThis is the server-side RPC native equivalent of the client native TASK_PLAY_ANIM_ADVANCED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskReactAndFleePed",
    "hash": "0x8A632BD8",
    "code": "-- TASK_REACT_AND_FLEE_PED\nTaskReactAndFleePed(\n\tped --[[ Ped ]], \n\tfleeTarget --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "TASK_REACT_AND_FLEE_PED\n\nThis is the server-side RPC native equivalent of the client native TASK_REACT_AND_FLEE_PED."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskShootAtCoord",
    "hash": "0x601C22E3",
    "code": "-- TASK_SHOOT_AT_COORD\nTaskShootAtCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tduration --[[ integer ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Firing Pattern Hash Information: https://pastebin.com/Px036isB\n\nThis is the server-side RPC native equivalent of the client native TASK_SHOOT_AT_COORD."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskShootAtEntity",
    "hash": "0xAC0631C9",
    "code": "-- TASK_SHOOT_AT_ENTITY\nTaskShootAtEntity(\n\tentity --[[ Entity ]], \n\ttarget --[[ Entity ]], \n\tduration --[[ integer ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "//this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds\nEntity aimedentity;\nPlayer player = PLAYER::PLAYER_ID();\nPLAYER::_GET_AIMED_ENTITY(player, &aimedentity);\n//bg is an array of peds\nTASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY(\"FIRING_PATTERN_FULL_AUTO\"));\nin practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.\nFiring Pattern Hash Information: https://pastebin.com/Px036isB\n\n\nThis is the server-side RPC native equivalent of the client native TASK_SHOOT_AT_ENTITY."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TaskWarpPedIntoVehicle",
    "hash": "0x65D4A35D",
    "code": "-- TASK_WARP_PED_INTO_VEHICLE\nTaskWarpPedIntoVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tseatIndex --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped to be warped into the vehicle.",
      "vehicle: \n\nThe target vehicle into which the ped will be warped.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped to be warped into the vehicle.\n\nvehicle: \n\nThe target vehicle into which the ped will be warped.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE.\n\nNativeDB Introduced: v323\n\nWarp a ped into a vehicle. Note: It's better to use TASK_ENTER_VEHICLE with the flag \"warp\" flag instead of this native.\n\nThis is the server-side RPC native equivalent of the client native TASK_WARP_PED_INTO_VEHICLE."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TempBanPlayer",
    "hash": "0x1E35DBBA",
    "code": "-- TEMP_BAN_PLAYER\nTempBanPlayer(\n\tplayerSrc --[[ string ]], \n\treason --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TriggerClientEventInternal",
    "hash": "0x2F7A49E6",
    "code": "-- TRIGGER_CLIENT_EVENT_INTERNAL\nTriggerClientEventInternal(\n\teventName --[[ string ]], \n\teventTarget --[[ string ]], \n\teventPayload --[[ string ]], \n\tpayloadLength --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The backing function for TriggerClientEvent."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "TriggerEventInternal",
    "hash": "0x91310870",
    "code": "-- TRIGGER_EVENT_INTERNAL\nTriggerEventInternal(\n\teventName --[[ string ]], \n\teventPayload --[[ string ]], \n\tpayloadLength --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The backing function for TriggerEvent."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "TriggerLatentClientEventInternal",
    "hash": "0x70B35890",
    "code": "-- TRIGGER_LATENT_CLIENT_EVENT_INTERNAL\nTriggerLatentClientEventInternal(\n\teventName --[[ string ]], \n\teventTarget --[[ string ]], \n\teventPayload --[[ string ]], \n\tpayloadLength --[[ integer ]], \n\tbps --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The backing function for TriggerLatentClientEvent."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "TriggerLatentServerEventInternal",
    "hash": "0x128737EA",
    "code": "-- TRIGGER_LATENT_SERVER_EVENT_INTERNAL\nTriggerLatentServerEventInternal(\n\teventName --[[ string ]], \n\teventPayload --[[ string ]], \n\tpayloadLength --[[ integer ]], \n\tbps --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The backing function for TriggerLatentServerEvent."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "TriggerServerEventInternal",
    "hash": "0x7FDD1128",
    "code": "-- TRIGGER_SERVER_EVENT_INTERNAL\nTriggerServerEventInternal(\n\teventName --[[ string ]], \n\teventPayload --[[ string ]], \n\tpayloadLength --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The backing function for TriggerServerEvent."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "UnregisterRawNuiCallback",
    "hash": "0x7FB46432",
    "code": "-- UNREGISTER_RAW_NUI_CALLBACK\nUnregisterRawNuiCallback(\n\tcallbackType --[[ string ]]\n)",
    "parameters": [
      "callbackType: \n\nThe callback type to target"
    ],
    "returns": [],
    "description": "Parameters:\n\ncallbackType: \n\nThe callback type to target\n\nWill unregister and cleanup a registered NUI callback handler.\n\nUse along side the REGISTER_RAW_NUI_CALLBACK native."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: client",
    "name": "UpdateMapdataEntity",
    "hash": "0xFC52CB91",
    "code": "-- UPDATE_MAPDATA_ENTITY\nUpdateMapdataEntity(\n\tmapdata --[[ integer ]], \n\tentity --[[ integer ]], \n\tentityDef --[[ object ]]\n)",
    "parameters": [
      "mapdata: \n\nA fwMapData index from GET_MAPDATA_FROM_HASH_KEY.",
      "entity: \n\nAn entity index from GET_ENTITY_INDEX_FROM_MAPDATA.",
      "entityDef: \n\nThe new entity definition in fwEntityDef format."
    ],
    "returns": [],
    "description": "Parameters:\n\nmapdata: \n\nA fwMapData index from GET_MAPDATA_FROM_HASH_KEY.\n\nentity: \n\nAn entity index from GET_ENTITY_INDEX_FROM_MAPDATA.\n\nentityDef: \n\nThe new entity definition in fwEntityDef format.\n\nTransiently updates the entity with the specified mapdata index and entity index. This function supports SDK infrastructure and is not intended to be used directly from your code."
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: server",
    "name": "VerifyPasswordHash",
    "hash": "0x2E310ACD",
    "code": "-- VERIFY_PASSWORD_HASH\nlocal retval --[[ boolean ]] =\n\tVerifyPasswordHash(\n\t\tpassword --[[ string ]], \n\t\thash --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CFX",
    "apiset": "API set: shared",
    "name": "WasEventCanceled",
    "hash": "0x58382A19",
    "code": "-- WAS_EVENT_CANCELED\nlocal retval --[[ boolean ]] =\n\tWasEventCanceled()",
    "parameters": [],
    "returns": [
      "A boolean."
    ],
    "description": "Returns:\n\nA boolean.\n\nReturns whether or not the currently executing event was canceled."
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppClearBlock",
    "hash": "0x5FE1DF3342DB7DBA",
    "code": "-- APP_CLEAR_BLOCK\nAppClearBlock()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppCloseApp",
    "hash": "0xE41C65E07A5F05FC",
    "code": "-- APP_CLOSE_APP\nAppCloseApp()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppCloseBlock",
    "hash": "0xE8E3FCF72EAC0EF8",
    "code": "-- APP_CLOSE_BLOCK\nAppCloseBlock()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppDataValid",
    "hash": "0x846AA8E7D55EE5B6",
    "code": "-- APP_DATA_VALID\nlocal retval --[[ boolean ]] =\n\tAppDataValid()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppDeleteAppData",
    "hash": "0x44151AEA95C8A003",
    "code": "-- APP_DELETE_APP_DATA\nlocal retval --[[ boolean ]] =\n\tAppDeleteAppData(\n\t\tappName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppGetDeletedFileStatus",
    "hash": "0xC9853A2BE3DED1A6",
    "code": "-- APP_GET_DELETED_FILE_STATUS\nlocal retval --[[ integer ]] =\n\tAppGetDeletedFileStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppGetFloat",
    "hash": "0x1514FB24C02C2322",
    "code": "-- APP_GET_FLOAT\nlocal retval --[[ number ]] =\n\tAppGetFloat(\n\t\tproperty --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppGetInt",
    "hash": "0xD3A58A12C77D9D4B",
    "code": "-- APP_GET_INT\nlocal retval --[[ integer ]] =\n\tAppGetInt(\n\t\tproperty --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppGetString",
    "hash": "0x749B023950D2311C",
    "code": "-- APP_GET_STRING\nlocal retval --[[ string ]] =\n\tAppGetString(\n\t\tproperty --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppHasLinkedSocialClubAccount",
    "hash": "0x71EEE69745088DA0",
    "code": "-- APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT\nlocal retval --[[ boolean ]] =\n\tAppHasLinkedSocialClubAccount()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppHasSyncedData",
    "hash": "0xCA52279A7271517F",
    "code": "-- APP_HAS_SYNCED_DATA\nlocal retval --[[ boolean ]] =\n\tAppHasSyncedData(\n\t\tappName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppSaveData",
    "hash": "0x95C5D356CDA6E85F",
    "code": "-- APP_SAVE_DATA\nAppSaveData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppSetApp",
    "hash": "0xCFD0406ADAF90D2B",
    "code": "-- APP_SET_APP\nAppSetApp(\n\tappName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Called in the gamescripts like:  \nAPP::APP_SET_APP(\"car\");  \nAPP::APP_SET_APP(\"dog\");"
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppSetBlock",
    "hash": "0x262AB456A3D21F93",
    "code": "-- APP_SET_BLOCK\nAppSetBlock(\n\tblockName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppSetFloat",
    "hash": "0x25D7687C68E0DAA4",
    "code": "-- APP_SET_FLOAT\nAppSetFloat(\n\tproperty --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppSetInt",
    "hash": "0x607E8E3D3E4F9611",
    "code": "-- APP_SET_INT\nAppSetInt(\n\tproperty --[[ string ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: APP",
    "apiset": "API set: client",
    "name": "AppSetString",
    "hash": "0x3FF2FCEC4B7721B4",
    "code": "-- APP_SET_STRING\nAppSetString(\n\tproperty --[[ string ]], \n\tvalue --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ActivateAudioSlowmoMode",
    "hash": "0xD01005D2BA2EB778",
    "code": "-- ACTIVATE_AUDIO_SLOWMO_MODE\nActivateAudioSlowmoMode(\n\tmode --[[ string ]]\n)",
    "parameters": [
      "mode: \n\nA string indicating the audio slow motion mode to use, see the table."
    ],
    "returns": [],
    "description": "Parameters:\n\nmode: \n\nA string indicating the audio slow motion mode to use, see the table.\n\nBelow is a list of modes and their respective hashes.\n\nMode (string)\tHash\nSLOWMO_BIG_SCORE_JUMP\t0x2B981B0C\nJSH_EXIT_TUNNEL_SLOWMO\t0x2562AA6\nSLOW_MO_METH_HOUSE_RAYFIRE\t0xDB9E1909\nSLOWMO_FIB4_TRUCK_SMASH\t0x9E144347\nSLOWMO_PROLOGUE_VAULT\t0xEA2E68E1\nSLOWMO_T1_RAYFIRE_EXPLOSION\t0xD6D358F3\nSLOWMO_T1_TRAILER_SMASH\t0xBE607345\nBARRY_01_SLOWMO\t0xD59540D4\nBARRY_02_SLOWMO\t0x12F140B3\nSLOWMO_EXTREME_04\t0xF562EA50\nNIGEL_02_SLOWMO_SETTING\t0x384689B0"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "AddEntityToAudioMixGroup",
    "hash": "0x153973AB99FE8980",
    "code": "-- ADD_ENTITY_TO_AUDIO_MIX_GROUP\nAddEntityToAudioMixGroup(\n\tentity --[[ Entity ]], \n\tgroupName --[[ string ]], \n\tfadeIn --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All found occurrences in b678d:\npastebin.com/ceu67jz8"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "AddLineToConversation",
    "hash": "0xC5EF963405593646",
    "code": "-- ADD_LINE_TO_CONVERSATION\nAddLineToConversation(\n\tspeakerConversationIndex --[[ integer ]], \n\tcontext --[[ string ]], \n\tsubtitle --[[ string ]], \n\tlistenerNumber --[[ integer ]], \n\tvolumeType --[[ integer ]], \n\tisRandom --[[ boolean ]], \n\tinterruptible --[[ boolean ]], \n\tducksRadio --[[ boolean ]], \n\tducksScore --[[ boolean ]], \n\taudibility --[[ integer ]], \n\theadset --[[ boolean ]], \n\tdontInterruptForSpecialAbility --[[ boolean ]], \n\tisPadSpeakerRoute --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eAudibility {\n\tAUD_AUDIBILITY_NORMAL = 0,\n\tAUD_AUDIBILITY_CLEAR = 1,\n\tAUD_AUDIBILITY_CRITICAL = 2,\n\tAUD_AUDIBILITY_LEAD_IN = 3\n}"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "AddPedToConversation",
    "hash": "0x95D9F4BC443956E7",
    "code": "-- ADD_PED_TO_CONVERSATION\nAddPedToConversation(\n\tspeakerConversationIndex --[[ integer ]], \n\tped --[[ Ped ]], \n\tvoiceName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "AudioIsScriptedMusicPlaying",
    "hash": "0x845FFC3A4FEEFA3E",
    "code": "-- AUDIO_IS_SCRIPTED_MUSIC_PLAYING\nlocal retval --[[ boolean ]] =\n\tAudioIsScriptedMusicPlaying()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "BlipSiren",
    "hash": "0x1B9025BDA76822B6",
    "code": "-- BLIP_SIREN\nBlipSiren(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Plays a siren blip from the vehicle when you double press the horn key.\n\nThis only works on vehicles with sirens."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "BlockAllSpeechFromPed",
    "hash": "0xF8AD2EED7C47E8FE",
    "code": "-- BLOCK_ALL_SPEECH_FROM_PED\nBlockAllSpeechFromPed(\n\tped --[[ Ped ]], \n\tshouldBlock --[[ boolean ]], \n\tsuppressOutgoingNetworkSpeech --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Blocks all speech playing on the given ped, including speech triggered by natives such as PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE\n\nThe flag itself is not synced, it must be called on each machine that wishes to suppress the speech.\n\nThe SuppressOutgoingNetworkSpeech flag can be set to false if you want speech triggered locally through PLAY_PED_AMBIENT_SPEECH_* related native calls to still be audible on remote machines, even though it was blocked on the local one."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "BlockDeathJingle",
    "hash": "0xF154B8D1775B2DEC",
    "code": "-- BLOCK_DEATH_JINGLE\nBlockDeathJingle(\n\tblocked --[[ boolean ]]\n)",
    "parameters": [
      "blocked: \n\nSets if the death jingle can play when a player dies or not"
    ],
    "returns": [],
    "description": "Parameters:\n\nblocked: \n\nSets if the death jingle can play when a player dies or not"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "BlockSpeechContextGroup",
    "hash": "0xA8A7D434AFB4B97B",
    "code": "-- BLOCK_SPEECH_CONTEXT_GROUP\nBlockSpeechContextGroup(\n\tgroupName --[[ string ]], \n\tcontextBlockTarget --[[ integer ]]\n)",
    "parameters": [
      "groupName: \n\nthe name of the context group to be blocked",
      "contextBlockTarget: \n\nthe group of peds that should be used (refer to eAudContextBlockTarget)"
    ],
    "returns": [],
    "description": "Parameters:\n\ngroupName: \n\nthe name of the context group to be blocked\n\ncontextBlockTarget: \n\nthe group of peds that should be used (refer to eAudContextBlockTarget)\n\nenum eAudContextBlockTarget {\n\tAUD_CONTEXT_BLOCK_PLAYER = 0,\n\tAUD_CONTEXT_BLOCK_NPCS = 1,\n\tAUD_CONTEXT_BLOCK_BUDDYS = 2,\n\tAUD_CONTEXT_BLOCK_EVERYONE = 3,\n\n\tAUD_CONTEXT_BLOCK_TARGETS_TOTAL\n}\n\n\nStop a certain group of peds from using a certain group of speech contexts.\n\nNote that the block will be automatically removed when the calling script finishes"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "CanVehicleReceiveCbRadio",
    "hash": "0x032A116663A4D5AC",
    "code": "-- CAN_VEHICLE_RECEIVE_CB_RADIO\nlocal retval --[[ boolean ]] =\n\tCanVehicleReceiveCbRadio(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the vehicle can currently receive CB radio (ie. it has a capable radio and is in range of a transmitter)"
    ],
    "description": "Returns:\n\nReturns true if the vehicle can currently receive CB radio (ie. it has a capable radio and is in range of a transmitter)"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "CancelAllPoliceReports",
    "hash": "0xB4F90FAF7670B16F",
    "code": "-- CANCEL_ALL_POLICE_REPORTS\nCancelAllPoliceReports()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "CancelMusicEvent",
    "hash": "0x5B17A90291133DA5",
    "code": "-- CANCEL_MUSIC_EVENT\nlocal retval --[[ boolean ]] =\n\tCancelMusicEvent(\n\t\teventName --[[ string ]]\n\t)",
    "parameters": [
      "eventName: \n\nthe name of the event to cancel"
    ],
    "returns": [
      "True of the event was cancelled, false otherwise."
    ],
    "description": "Parameters:\n\neventName: \n\nthe name of the event to cancel\n\nReturns:\n\nTrue of the event was cancelled, false otherwise.\n\nAll music event names found in the b617d scripts: pastebin.com/GnYt0R3P"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ClearAllBrokenGlass",
    "hash": "0xB32209EFFDC04913",
    "code": "-- CLEAR_ALL_BROKEN_GLASS\nClearAllBrokenGlass()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ClearAmbientZoneListState",
    "hash": "0x120C48C614909FA4",
    "code": "-- CLEAR_AMBIENT_ZONE_LIST_STATE\nClearAmbientZoneListState(\n\tzoneListName --[[ string ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [
      "zoneListName: \n\nThe zone name to clear",
      "forceUpdate: \n\nWhether ot not to force a zone to become disabled even if its currently active"
    ],
    "returns": [],
    "description": "Parameters:\n\nzoneListName: \n\nThe zone name to clear\n\nforceUpdate: \n\nWhether ot not to force a zone to become disabled even if its currently active\n\nResets the list of ambients zones enabled/disabled status to its value before it was modified by this script.\n\nDefault behaviour is that any state change only gets applied once the player leaves the zone."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ClearAmbientZoneState",
    "hash": "0x218DD44AAAC964FF",
    "code": "-- CLEAR_AMBIENT_ZONE_STATE\nClearAmbientZoneState(\n\tzoneName --[[ string ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [
      "zoneName: \n\nthe zone name to clear",
      "forceUpdate: \n\nWhether ot not to force a zone to become disabled even if its currently active"
    ],
    "returns": [],
    "description": "Parameters:\n\nzoneName: \n\nthe zone name to clear\n\nforceUpdate: \n\nWhether ot not to force a zone to become disabled even if its currently active\n\nResets the ambient zone enabled/disabled status to its value before it was modified by this script\n\nDefault behaviour is that any state change only gets applied once the player leaves the zone."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ClearCustomRadioTrackList",
    "hash": "0x1654F24A88A8E3FE",
    "code": "-- CLEAR_CUSTOM_RADIO_TRACK_LIST\nClearCustomRadioTrackList(\n\tradioStation --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Clears the previously queued custom track lost for the given radio station."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "CreateNewScriptedConversation",
    "hash": "0xD2C91A0B572AAE56",
    "code": "-- CREATE_NEW_SCRIPTED_CONVERSATION\nCreateNewScriptedConversation()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "DeactivateAudioSlowmoMode",
    "hash": "0xDDC635D5B3262C56",
    "code": "-- DEACTIVATE_AUDIO_SLOWMO_MODE\nDeactivateAudioSlowmoMode(\n\tmode --[[ string ]]\n)",
    "parameters": [
      "mode: \n\nname of the mode to deactivate"
    ],
    "returns": [],
    "description": "Parameters:\n\nmode: \n\nname of the mode to deactivate\n\nDeactivates the named slowmo mode."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "DisablePedPainAudio",
    "hash": "0xA9A41C1E940FB0E8",
    "code": "-- DISABLE_PED_PAIN_AUDIO\nDisablePedPainAudio(\n\tped --[[ Ped ]], \n\tshouldDisable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "DistantCopCarSirens",
    "hash": "0x552369F549563AD5",
    "code": "-- DISTANT_COP_CAR_SIRENS\nDistantCopCarSirens(\n\tshouldPlay --[[ boolean ]]\n)",
    "parameters": [
      "shouldPlay: \n\nTrue will play distand sounds, false will disable them."
    ],
    "returns": [],
    "description": "Parameters:\n\nshouldPlay: \n\nTrue will play distand sounds, false will disable them.\n\nToggles fake distant siren sounds"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "DoesContextExistForThisPed",
    "hash": "0x49B99BF3FDA89A7A",
    "code": "-- DOES_CONTEXT_EXIST_FOR_THIS_PED\nlocal retval --[[ boolean ]] =\n\tDoesContextExistForThisPed(\n\t\tped --[[ Ped ]], \n\t\tspeechName --[[ string ]], \n\t\tallowBackupPVGs --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [
      "True of the PedVoiceGroup exists, false otherwise."
    ],
    "description": "Returns:\n\nTrue of the PedVoiceGroup exists, false otherwise.\n\nChecks if the context exists for the ped, searching through the voices in its PedVoiceGroup.\n\nThe final argument can be set to true to allow searching in backup PVGs"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "DoesPlayerVehHaveRadio",
    "hash": "0x109697E2FFBAC8A1",
    "code": "-- DOES_PLAYER_VEH_HAVE_RADIO\nlocal retval --[[ boolean ]] =\n\tDoesPlayerVehHaveRadio()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "EnableStallWarningSounds",
    "hash": "0xC15907D667F7CFB2",
    "code": "-- ENABLE_STALL_WARNING_SOUNDS\nEnableStallWarningSounds(\n\tvehicle --[[ Vehicle ]], \n\tenable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enable or disable the plane stall warning sounds"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "EnableStuntJumpAudio",
    "hash": "0xB81CF134AEB56FFB",
    "code": "-- ENABLE_STUNT_JUMP_AUDIO\nEnableStuntJumpAudio()",
    "parameters": [],
    "returns": [],
    "description": "Enable the stunt jump audio detection code\n\nThis native is meant to be called per-frame for as long as detection is wanted."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "EnableVehicleExhaustPops",
    "hash": "0x2BE4BC731D039D5A",
    "code": "-- ENABLE_VEHICLE_EXHAUST_POPS\nEnableVehicleExhaustPops(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enable or disable exhaust pops on the given vehicle."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "EnableVehicleFanbeltDamage",
    "hash": "0x1C073274E065C6D2",
    "code": "-- ENABLE_VEHICLE_FANBELT_DAMAGE\nEnableVehicleFanbeltDamage(\n\tvehicle --[[ Vehicle ]], \n\tenableFanbeltDamage --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "FindRadioStationIndex",
    "hash": "0x8D67489793FF428B",
    "code": "-- FIND_RADIO_STATION_INDEX\nlocal retval --[[ integer ]] =\n\tFindRadioStationIndex(\n\t\tstationNameHash --[[ integer ]]\n\t)",
    "parameters": [
      "stationNameHash: \n\nthe station name hash to search for"
    ],
    "returns": [
      "The station index for the specified hash, or 254 if the radio station did not exist."
    ],
    "description": "Parameters:\n\nstationNameHash: \n\nthe station name hash to search for\n\nReturns:\n\nThe station index for the specified hash, or 254 if the radio station did not exist."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ForceMusicTrackList",
    "hash": "0x4E0AF9114608257C",
    "code": "-- FORCE_MUSIC_TRACK_LIST\nForceMusicTrackList(\n\tradioStation --[[ string ]], \n\ttrackListName --[[ string ]], \n\ttimeOffsetMilliseconds --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces the chosen station to paly the given music track list. All other music track lists will be locked."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ForcePedPanicWalla",
    "hash": "0x062D5EAD4DA2FA6A",
    "code": "-- FORCE_PED_PANIC_WALLA\nForcePedPanicWalla()",
    "parameters": [],
    "returns": [],
    "description": "Forces the ambient peds into their panic walla state"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ForceUseAudioGameObject",
    "hash": "0x4F0C413926060B38",
    "code": "-- FORCE_USE_AUDIO_GAME_OBJECT\nForceUseAudioGameObject(\n\tvehicle --[[ Vehicle ]], \n\tgameObjectName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native sets the audio to the specific vehicle hash's audioNameHash."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ForceVehicleEngineSynth",
    "hash": "0xEB7D0E1FCC8FE17A",
    "code": "-- _FORCE_VEHICLE_ENGINE_SYNTH\nForceVehicleEngineSynth(\n\tvehicle --[[ Vehicle ]], \n\tforce --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native is used alongside with SET_VEHICLE_TYRE_BURST.\n\nNativeDB Introduced: v3258"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "FreezeMicrophone",
    "hash": "0xD57AAAE0E2214D11",
    "code": "-- FREEZE_MICROPHONE\nFreezeMicrophone()",
    "parameters": [],
    "returns": [],
    "description": "Allows script to freeze the microphone for a single frame, mantaining its current transform/settings. This native should be called every frame you want to keep the microphone frozen, when you stop calling it it will automatically unfreeze"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "FreezeRadioStation",
    "hash": "0x344F393B027E38C3",
    "code": "-- FREEZE_RADIO_STATION\nFreezeRadioStation(\n\tradioStation --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetAmbientVoiceNameHash",
    "hash": "0x5E203DA2BA15D436",
    "code": "-- GET_AMBIENT_VOICE_NAME_HASH\nlocal retval --[[ Hash ]] =\n\tGetAmbientVoiceNameHash(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "The hash of the voice name in use by the ped."
    ],
    "description": "Returns:\n\nThe hash of the voice name in use by the ped."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetAudibleMusicTrackTextId",
    "hash": "0x50B196FC9ED6545B",
    "code": "-- GET_AUDIBLE_MUSIC_TRACK_TEXT_ID\nlocal retval --[[ integer ]] =\n\tGetAudibleMusicTrackTextId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetCurrentRadioTrackPlaybackTime",
    "hash": "0x3E65CDE5215832C1",
    "code": "-- _GET_CURRENT_RADIO_TRACK_PLAYBACK_TIME\nlocal retval --[[ integer ]] =\n\tGetCurrentRadioTrackPlaybackTime(\n\t\tradioStationName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return the playback time (in milliseconds) of the radio stations current track. \n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetCurrentScriptedConversationLine",
    "hash": "0x480357EE890C295A",
    "code": "-- GET_CURRENT_SCRIPTED_CONVERSATION_LINE\nlocal retval --[[ integer ]] =\n\tGetCurrentScriptedConversationLine()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetCurrentTrackSoundName",
    "hash": "0x34D66BC058019CE0",
    "code": "-- GET_CURRENT_TRACK_SOUND_NAME\nlocal retval --[[ Hash ]] =\n\tGetCurrentTrackSoundName(\n\t\tradioStationName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "The current sound name as a hash for the currently playing track on the given station."
    ],
    "description": "Returns:\n\nThe current sound name as a hash for the currently playing track on the given station."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetIsPreloadedConversationReady",
    "hash": "0xE73364DB90778FFA",
    "code": "-- GET_IS_PRELOADED_CONVERSATION_READY\nlocal retval --[[ boolean ]] =\n\tGetIsPreloadedConversationReady()",
    "parameters": [],
    "returns": [
      "Returns true if the preloaded conversation has finished preparing."
    ],
    "description": "Returns:\n\nReturns true if the preloaded conversation has finished preparing."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetMusicPlaytime",
    "hash": "0xE7A0D23DC414507B",
    "code": "-- GET_MUSIC_PLAYTIME\nlocal retval --[[ integer ]] =\n\tGetMusicPlaytime()",
    "parameters": [],
    "returns": [
      "Returns the play time in milliseconds of the current score track."
    ],
    "description": "Returns:\n\nReturns the play time in milliseconds of the current score track."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetMusicVolSlider",
    "hash": "0x3A48AB4445D499BE",
    "code": "-- GET_MUSIC_VOL_SLIDER\nlocal retval --[[ integer ]] =\n\tGetMusicVolSlider()",
    "parameters": [],
    "returns": [
      "Returns the current volume slider position from 0 to 10"
    ],
    "description": "Returns:\n\nReturns the current volume slider position from 0 to 10"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetNetworkIdFromSoundId",
    "hash": "0x2DE3F0A134FFBC0D",
    "code": "-- GET_NETWORK_ID_FROM_SOUND_ID\nlocal retval --[[ integer ]] =\n\tGetNetworkIdFromSoundId(\n\t\tsoundId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the network id for the specific sound"
    ],
    "description": "Returns:\n\nReturns the network id for the specific sound"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetNextAudibleBeat",
    "hash": "0xC64A06D939F826F5",
    "code": "-- GET_NEXT_AUDIBLE_BEAT\nlocal retval --[[ boolean ]], timeInSeconds --[[ number ]], bpm --[[ number ]], beatNum --[[ integer ]] =\n\tGetNextAudibleBeat()",
    "parameters": [
      "timeInSeconds: \n\ntime in seconds until the start of the next beat",
      "bpm: \n\ncurrent tempo in beats per minute,",
      "beatNum: \n\ninteger beat within the bar"
    ],
    "returns": [
      "Returns information on beat information for any audible music."
    ],
    "description": "Parameters:\n\ntimeInSeconds: \n\ntime in seconds until the start of the next beat\n\nbpm: \n\ncurrent tempo in beats per minute,\n\nbeatNum: \n\ninteger beat within the bar\n\nReturns:\n\nReturns information on beat information for any audible music."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetNumUnlockedRadioStations",
    "hash": "0xF1620ECB50E01DE7",
    "code": "-- GET_NUM_UNLOCKED_RADIO_STATIONS\nlocal retval --[[ integer ]] =\n\tGetNumUnlockedRadioStations()",
    "parameters": [],
    "returns": [
      "Returns the number of radio stations currently unlocked in the game. This can change as a result of DLC and/or script calls."
    ],
    "description": "Returns:\n\nReturns the number of radio stations currently unlocked in the game. This can change as a result of DLC and/or script calls."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetPlayerRadioStationGenre",
    "hash": "0xA571991A7FE6CCEB",
    "code": "-- GET_PLAYER_RADIO_STATION_GENRE\nlocal retval --[[ integer ]] =\n\tGetPlayerRadioStationGenre()",
    "parameters": [],
    "returns": [
      "Returns the genre of the players current radio station"
    ],
    "description": "Returns:\n\nReturns the genre of the players current radio station"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetPlayerRadioStationIndex",
    "hash": "0xE8AF77C4C06ADC93",
    "code": "-- GET_PLAYER_RADIO_STATION_INDEX\nlocal retval --[[ integer ]] =\n\tGetPlayerRadioStationIndex()",
    "parameters": [],
    "returns": [
      "Returns the index of the current players radio station, or 255 if the radio is off"
    ],
    "description": "Returns:\n\nReturns the index of the current players radio station, or 255 if the radio is off"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetPlayerRadioStationName",
    "hash": "0xF6D733C32076AD03",
    "code": "-- GET_PLAYER_RADIO_STATION_NAME\nlocal retval --[[ string ]] =\n\tGetPlayerRadioStationName()",
    "parameters": [],
    "returns": [
      "Returns the name of the players radio station. This serves as the text label."
    ],
    "description": "Returns:\n\nReturns the name of the players radio station. This serves as the text label."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetRadioStationName",
    "hash": "0xB28ECA15046CA8B9",
    "code": "-- GET_RADIO_STATION_NAME\nlocal retval --[[ string ]] =\n\tGetRadioStationName(\n\t\tstationIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the name of the radio station with the specified index. This serves as the text label."
    ],
    "description": "Returns:\n\nReturns the name of the radio station with the specified index. This serves as the text label."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetSoundId",
    "hash": "0x430386FE9BF80B45",
    "code": "-- GET_SOUND_ID\nlocal retval --[[ integer ]] =\n\tGetSoundId()",
    "parameters": [],
    "returns": [
      "Returns a sound id which can be used to control the sound after its has started playing."
    ],
    "description": "Returns:\n\nReturns a sound id which can be used to control the sound after its has started playing.\n\nIf a playback function has a soundId field but the sound doesn't need to be altered after triggering then pass a value of -1 for fire-and-forget playback, rather than getting a soundId.\n\nSoundId's can be reused, without needing to release them and grab a new one.\n\nIf a sound's finished playing, you can reuse its SoundId to kick off another one.\n\nIf the sound's not finished playing, it'll be stopped first (fading out or whatever is set up in RAVE by the sound designer), and the new one kicked off; usually it is safer to just get a new SoundId.\n\nSoundId's are not automatically cleaned up, you must use RELEASE_SOUND_ID after you've finished using them to allow the engine to recycle the sound id."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetSoundIdFromNetworkId",
    "hash": "0x75262FD12D0A1C84",
    "code": "-- GET_SOUND_ID_FROM_NETWORK_ID\nlocal retval --[[ integer ]] =\n\tGetSoundIdFromNetworkId(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [
      "netId: \n\nNetwork ID of sound."
    ],
    "returns": [
      "Integer representing a sound id, -1 on failure."
    ],
    "description": "Parameters:\n\nnetId: \n\nNetwork ID of sound.\n\nReturns:\n\nInteger representing a sound id, -1 on failure.\n\nCounterpart: GET_NETWORK_ID_FROM_SOUND_ID."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetStreamPlayTime",
    "hash": "0x4E72BBDBCA58A3DB",
    "code": "-- GET_STREAM_PLAY_TIME\nlocal retval --[[ integer ]] =\n\tGetStreamPlayTime()",
    "parameters": [],
    "returns": [
      "Returns the currently playing stream's play time"
    ],
    "description": "Returns:\n\nReturns the currently playing stream's play time"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetVariationChosenForScriptedLine",
    "hash": "0xAA19F5572C38B564",
    "code": "-- GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE\nlocal retval --[[ integer ]] =\n\tGetVariationChosenForScriptedLine(\n\t\ttextLabel --[[ string ]]\n\t)",
    "parameters": [
      "textLabel: \n\nall the text labels for filenames in AmericanDialogueFiles.txt appear to end with the letter 'A', it is the script's responsibility to add this 'A' before calling GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE."
    ],
    "returns": [
      "Returns the variation chosen for a given script speech line, or 0 if it hasn't been chosen yet.Returns -1 if there is no conversation active or if the active conversation doesn't contain this line or if the text label can't be found in the currently loaded text blocks"
    ],
    "description": "Parameters:\n\ntextLabel: \n\nall the text labels for filenames in AmericanDialogueFiles.txt appear to end with the letter 'A', it is the script's responsibility to add this 'A' before calling GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE.\n\nReturns:\n\nReturns the variation chosen for a given script speech line, or 0 if it hasn't been chosen yet.Returns -1 if there is no conversation active or if the active conversation doesn't contain this line or if the text label can't be found in the currently loaded text blocks"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetVehicleDefaultHorn",
    "hash": "0x02165D55000219AC",
    "code": "-- GET_VEHICLE_DEFAULT_HORN\nlocal retval --[[ Hash ]] =\n\tGetVehicleDefaultHorn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the horn sound hash"
    ],
    "description": "Returns:\n\nReturns the horn sound hash"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetVehicleDefaultHornIgnoreMods",
    "hash": "0xACB5DCCA1EC76840",
    "code": "-- GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS\nlocal retval --[[ Hash ]] =\n\tGetVehicleDefaultHornIgnoreMods(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the horn sound hash ignoring any horn mods applied to the car"
    ],
    "description": "Returns:\n\nReturns the horn sound hash ignoring any horn mods applied to the car"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "GetVehicleHornSoundIndex",
    "hash": "0xD53F3A29BCE2580E",
    "code": "-- GET_VEHICLE_HORN_SOUND_INDEX\nlocal retval --[[ integer ]] =\n\tGetVehicleHornSoundIndex(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "The current horn sound index being used by the given vehicle"
    ],
    "description": "Returns:\n\nThe current horn sound index being used by the given vehicle\n\nNativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "HasLoadedMpDataSet",
    "hash": "0x544810ED9DB6BBE6",
    "code": "-- HAS_LOADED_MP_DATA_SET\nlocal retval --[[ boolean ]] =\n\tHasLoadedMpDataSet()",
    "parameters": [],
    "returns": [
      "Returns true if the audio for the Multiplayer data set has loaded"
    ],
    "description": "Returns:\n\nReturns true if the audio for the Multiplayer data set has loaded"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "HasLoadedSpDataSet",
    "hash": "0x5B50ABB1FE3746F4",
    "code": "-- HAS_LOADED_SP_DATA_SET\nlocal retval --[[ boolean ]] =\n\tHasLoadedSpDataSet()",
    "parameters": [],
    "returns": [
      "Returns true if the audio for the Single Player data set has loaded"
    ],
    "description": "Returns:\n\nReturns true if the audio for the Single Player data set has loaded"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "HasSoundFinished",
    "hash": "0xFCBDCE714A7C88E5",
    "code": "-- HAS_SOUND_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasSoundFinished(\n\t\tsoundId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the sound has finished playing, false otherwise."
    ],
    "description": "Returns:\n\nReturns true if the sound has finished playing, false otherwise."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "HintAmbientAudioBank",
    "hash": "0x8F8C0E370AE62F5C",
    "code": "-- HINT_AMBIENT_AUDIO_BANK\nlocal retval --[[ boolean ]] =\n\tHintAmbientAudioBank(\n\t\tbankName --[[ string ]], \n\t\tbOverNetwork --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native is marked as a deprecated native internally, use HINT_SCRIPT_AUDIO_BANK instead"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "HintMissionAudioBank",
    "hash": "0x40763EA7B9B783E7",
    "code": "-- HINT_MISSION_AUDIO_BANK\nlocal retval --[[ boolean ]] =\n\tHintMissionAudioBank(\n\t\tbankName --[[ string ]], \n\t\tbOverNetwork --[[ boolean ]], \n\t\tplayerBits --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This is marked as a deprecated function internally, please use HINT_SCRIPT_AUDIO_BANK instead."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "HintScriptAudioBank",
    "hash": "0xFB380A29641EC31A",
    "code": "-- HINT_SCRIPT_AUDIO_BANK\nlocal retval --[[ boolean ]] =\n\tHintScriptAudioBank(\n\t\tbankName --[[ string ]], \n\t\tbOverNetwork --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Hints that this bank would be good to load if there are free slots. Does not guarentee loading of the bank, REQUEST_SCRIPT_AUDIO_BANK MUST be used as normal before triggering sounds\"\n\nThis native has a new argument on newer game builds:\n\nplayerBits: likely used to specifiy players to sync to as a bit mask (1 << (0-128))"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "InitSynchSceneAudioWithEntity",
    "hash": "0x950A154B8DAB6185",
    "code": "-- INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY\nInitSynchSceneAudioWithEntity(\n\taudioName --[[ string ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "InitSynchSceneAudioWithPosition",
    "hash": "0xC8EDE9BDBCCBA6D4",
    "code": "-- INIT_SYNCH_SCENE_AUDIO_WITH_POSITION\nInitSynchSceneAudioWithPosition(\n\taudioName --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "InterruptConversation",
    "hash": "0xA018A12E5C5C2FA6",
    "code": "-- INTERRUPT_CONVERSATION\nInterruptConversation(\n\tinterrupterPed --[[ Ped ]], \n\tcontext --[[ string ]], \n\tvoiceName --[[ string ]]\n)",
    "parameters": [
      "interrupterPed: \n\nthe ped speaking",
      "context: \n\nthe line to use",
      "voiceName: \n\nthe voicename for the audio asset"
    ],
    "returns": [],
    "description": "Parameters:\n\ninterrupterPed: \n\nthe ped speaking\n\ncontext: \n\nthe line to use\n\nvoiceName: \n\nthe voicename for the audio asset\n\nHandles conversation interrupts, using the code-side system for improved timing and to minimize unfriendly logic interactions."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "InterruptConversationAndPause",
    "hash": "0x8A694D7A68F8DC38",
    "code": "-- INTERRUPT_CONVERSATION_AND_PAUSE\nInterruptConversationAndPause(\n\tinterrupterPed --[[ Ped ]], \n\tcontext --[[ string ]], \n\tvoiceName --[[ string ]]\n)",
    "parameters": [
      "interrupterPed: \n\nthe ped speaking",
      "context: \n\nthe line to use",
      "voiceName: \n\nthe voicename for the audio asset"
    ],
    "returns": [],
    "description": "Parameters:\n\ninterrupterPed: \n\nthe ped speaking\n\ncontext: \n\nthe line to use\n\nvoiceName: \n\nthe voicename for the audio asset\n\nHandles conversation interrupts and pauses, using the code-side system for improved timing and to minimize unfriendly logic interactions."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAlarmPlaying",
    "hash": "0x226435CB96CCFC8C",
    "code": "-- IS_ALARM_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsAlarmPlaying(\n\t\talarmName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if an alarm is currently playing with the specified name"
    ],
    "description": "Returns:\n\nReturns true if an alarm is currently playing with the specified name"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAmbientSpeechDisabled",
    "hash": "0x932C2D096A2C3FFF",
    "code": "-- IS_AMBIENT_SPEECH_DISABLED\nlocal retval --[[ boolean ]] =\n\tIsAmbientSpeechDisabled(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if ambient speech for the ped has been disabled"
    ],
    "description": "Returns:\n\nReturns true if ambient speech for the ped has been disabled"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAmbientSpeechPlaying",
    "hash": "0x9072C8B49907BFAD",
    "code": "-- IS_AMBIENT_SPEECH_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsAmbientSpeechPlaying(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the ped is currently playing ambient speech"
    ],
    "description": "Returns:\n\nReturns true if the ped is currently playing ambient speech"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAmbientZoneEnabled",
    "hash": "0x01E2817A479A7F9B",
    "code": "-- IS_AMBIENT_ZONE_ENABLED\nlocal retval --[[ boolean ]] =\n\tIsAmbientZoneEnabled(\n\t\tambientZone --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the given ambient zone is allowed to be active"
    ],
    "description": "Returns:\n\nReturns true if the given ambient zone is allowed to be active"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAnimalVocalizationPlaying",
    "hash": "0xC265DF9FB44A9FBD",
    "code": "-- IS_ANIMAL_VOCALIZATION_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsAnimalVocalizationPlaying(\n\t\tpedHandle --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true of the ped is currently playing animal sounds"
    ],
    "description": "Returns:\n\nReturns true of the ped is currently playing animal sounds"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAnyPositionalSpeechPlaying",
    "hash": "0x30CA2EF91D15ADF8",
    "code": "-- IS_ANY_POSITIONAL_SPEECH_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsAnyPositionalSpeechPlaying()",
    "parameters": [],
    "returns": [
      "Returns true if any ped-independent positional scripted speech (i.e. triggered using PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE) is currently playing, false otherwise."
    ],
    "description": "Returns:\n\nReturns true if any ped-independent positional scripted speech (i.e. triggered using PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE) is currently playing, false otherwise.\n\nDetermines if any ped-independent, positionally-based scripted speech is currently active. This typically includes speech events triggered using PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAnySpeechPlaying",
    "hash": "0x729072355FA39EC9",
    "code": "-- IS_ANY_SPEECH_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsAnySpeechPlaying(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the specified ped is playing any speech"
    ],
    "description": "Returns:\n\nReturns true if the specified ped is playing any speech"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsAudioSceneActive",
    "hash": "0xB65B60556E2A9225",
    "code": "-- IS_AUDIO_SCENE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsAudioSceneActive(\n\t\tscene --[[ string ]]\n\t)",
    "parameters": [
      "scene: \n\nthe name of the scene"
    ],
    "returns": [
      "Returns true if the script is already running the named scene, false otherwise"
    ],
    "description": "Parameters:\n\nscene: \n\nthe name of the scene\n\nReturns:\n\nReturns true if the script is already running the named scene, false otherwise"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsGameInControlOfMusic",
    "hash": "0x6D28DC1671E334FD",
    "code": "-- IS_GAME_IN_CONTROL_OF_MUSIC\nlocal retval --[[ boolean ]] =\n\tIsGameInControlOfMusic()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to return 1"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsHornActive",
    "hash": "0x9D6BFC12B05C6121",
    "code": "-- IS_HORN_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsHornActive(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the vehicle is currently playing a horn sound"
    ],
    "description": "Returns:\n\nReturns true if the vehicle is currently playing a horn sound"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsMissionCompletePlaying",
    "hash": "0x19A30C23F5827F8A",
    "code": "-- IS_MISSION_COMPLETE_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsMissionCompletePlaying()",
    "parameters": [],
    "returns": [
      "Returns true if the mission complete audio is playing"
    ],
    "description": "Returns:\n\nReturns true if the mission complete audio is playing"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsMissionCompleteReadyForUi",
    "hash": "0x6F259F82D873B8B8",
    "code": "-- IS_MISSION_COMPLETE_READY_FOR_UI\nlocal retval --[[ boolean ]] =\n\tIsMissionCompleteReadyForUi()",
    "parameters": [],
    "returns": [
      "Returns true if the script should draw the mission complete UI to be in sync with audio."
    ],
    "description": "Returns:\n\nReturns true if the script should draw the mission complete UI to be in sync with audio."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsMissionNewsStoryUnlocked",
    "hash": "0x66E49BF55B4B1874",
    "code": "-- IS_MISSION_NEWS_STORY_UNLOCKED\nlocal retval --[[ boolean ]] =\n\tIsMissionNewsStoryUnlocked(\n\t\tnewsStory --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true of the specific story is available to be played back"
    ],
    "description": "Returns:\n\nReturns true of the specific story is available to be played back"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsMobileInterferenceActive",
    "hash": "0xC8B1B2425604CDD0",
    "code": "-- IS_MOBILE_INTERFERENCE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsMobileInterferenceActive()",
    "parameters": [],
    "returns": [
      "Returns true of mobile phone interference is currently happening"
    ],
    "description": "Returns:\n\nReturns true of mobile phone interference is currently happening"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsMobilePhoneCallOngoing",
    "hash": "0x7497D2CE2C30D24C",
    "code": "-- IS_MOBILE_PHONE_CALL_ONGOING\nlocal retval --[[ boolean ]] =\n\tIsMobilePhoneCallOngoing()",
    "parameters": [],
    "returns": [
      "Returns true of a mobile phone call is currently happening."
    ],
    "description": "Returns:\n\nReturns true of a mobile phone call is currently happening."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsMobilePhoneRadioActive",
    "hash": "0xB35CE999E8EF317E",
    "code": "-- IS_MOBILE_PHONE_RADIO_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsMobilePhoneRadioActive()",
    "parameters": [],
    "returns": [
      "Returns true if the mobile phone radio is active"
    ],
    "description": "Returns:\n\nReturns true if the mobile phone radio is active"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsMusicOneshotPlaying",
    "hash": "0xA097AB275061FB21",
    "code": "-- IS_MUSIC_ONESHOT_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsMusicOneshotPlaying()",
    "parameters": [],
    "returns": [
      "Returns true if a one shot is currently playing or prepared"
    ],
    "description": "Returns:\n\nReturns true if a one shot is currently playing or prepared"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsPedInCurrentConversation",
    "hash": "0x049E937F18F4020C",
    "code": "-- IS_PED_IN_CURRENT_CONVERSATION\nlocal retval --[[ boolean ]] =\n\tIsPedInCurrentConversation(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the ped is in the currently playing conversation"
    ],
    "description": "Returns:\n\nReturns true if the ped is in the currently playing conversation"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsPedRingtonePlaying",
    "hash": "0x1E8E5E20937E3137",
    "code": "-- IS_PED_RINGTONE_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsPedRingtonePlaying(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the peds ringtone is currently playing"
    ],
    "description": "Returns:\n\nReturns true if the peds ringtone is currently playing"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsPlayerVehRadioEnable",
    "hash": "0x5F43D83FD6738741",
    "code": "-- IS_PLAYER_VEH_RADIO_ENABLE\nlocal retval --[[ boolean ]] =\n\tIsPlayerVehRadioEnable()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsRadioFadedOut",
    "hash": "0x0626A247D2405330",
    "code": "-- IS_RADIO_FADED_OUT\nlocal retval --[[ boolean ]] =\n\tIsRadioFadedOut()",
    "parameters": [],
    "returns": [
      "Returns true if the radio is currently faded out"
    ],
    "description": "Returns:\n\nReturns true if the radio is currently faded out"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsRadioRetuning",
    "hash": "0xA151A7394A214E65",
    "code": "-- IS_RADIO_RETUNING\nlocal retval --[[ boolean ]] =\n\tIsRadioRetuning()",
    "parameters": [],
    "returns": [
      "Returns true if the radio is tuning to a station"
    ],
    "description": "Returns:\n\nReturns true if the radio is tuning to a station"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsRadioStationFavourited",
    "hash": "0x2B1784DB08AFEA79",
    "code": "-- IS_RADIO_STATION_FAVOURITED\nlocal retval --[[ boolean ]] =\n\tIsRadioStationFavourited(\n\t\tradioStation --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns whether a radio station is a favourite."
    ],
    "description": "Returns:\n\nReturns whether a radio station is a favourite."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsScriptedConversationLoaded",
    "hash": "0xDF0D54BE7A776737",
    "code": "-- IS_SCRIPTED_CONVERSATION_LOADED\nlocal retval --[[ boolean ]] =\n\tIsScriptedConversationLoaded()",
    "parameters": [],
    "returns": [
      "Returns true if the first batch of lines for the currently requested conversation have loaded successfully."
    ],
    "description": "Returns:\n\nReturns true if the first batch of lines for the currently requested conversation have loaded successfully."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsScriptedConversationOngoing",
    "hash": "0x16754C556D2EDE3D",
    "code": "-- IS_SCRIPTED_CONVERSATION_ONGOING\nlocal retval --[[ boolean ]] =\n\tIsScriptedConversationOngoing()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsScriptedSpeechPlaying",
    "hash": "0xCC9AA18DCC7084F4",
    "code": "-- IS_SCRIPTED_SPEECH_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsScriptedSpeechPlaying(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if scripted speech is currently playing from the given ped."
    ],
    "description": "Returns:\n\nReturns true if scripted speech is currently playing from the given ped."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsStreamPlaying",
    "hash": "0xD11FA52EB849D978",
    "code": "-- IS_STREAM_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsStreamPlaying()",
    "parameters": [],
    "returns": [
      "Returns true if the script is currently playing a stream."
    ],
    "description": "Returns:\n\nReturns true if the script is currently playing a stream."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsVehicleAudiblyDamaged",
    "hash": "0x5DB8010EE71FDEF2",
    "code": "-- IS_VEHICLE_AUDIBLY_DAMAGED\nlocal retval --[[ boolean ]] =\n\tIsVehicleAudiblyDamaged(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the vehicle has any audible damage effects applied to it."
    ],
    "description": "Returns:\n\nReturns true if the vehicle has any audible damage effects applied to it."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "IsVehicleRadioOn",
    "hash": "0x0BE4BE946463F917",
    "code": "-- IS_VEHICLE_RADIO_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleRadioOn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check"
    ],
    "returns": [
      "Returns true if the given vehicle's radio on"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check\n\nReturns:\n\nReturns true if the given vehicle's radio on"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "LinkStaticEmitterToEntity",
    "hash": "0x651D3228960D08AF",
    "code": "-- LINK_STATIC_EMITTER_TO_ENTITY\nLinkStaticEmitterToEntity(\n\temitterName --[[ string ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Links a static emitter to the given entity"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "LoadStream",
    "hash": "0x1F1F957154EC51DF",
    "code": "-- LOAD_STREAM\nlocal retval --[[ boolean ]] =\n\tLoadStream(\n\t\tstreamName --[[ string ]], \n\t\tsoundSet --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Load in named stream. Optionally can specify a sound set which contains the sound specified by name.\n\nNames for the streams can be found here, the list will be updated as more are found."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "LoadStreamWithStartOffset",
    "hash": "0x59C16B79F53B3712",
    "code": "-- LOAD_STREAM_WITH_START_OFFSET\nlocal retval --[[ boolean ]] =\n\tLoadStreamWithStartOffset(\n\t\tstreamName --[[ string ]], \n\t\tstartOffset --[[ integer ]], \n\t\tsoundSet --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Load in named stream. Optionally can specify a sound set which contains the sound specified by name."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "LockRadioStation",
    "hash": "0x477D9DB48F889591",
    "code": "-- LOCK_RADIO_STATION\nLockRadioStation(\n\tradioStationName --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This disables the radio station completely - it won't be selectable on the radio wheel or ever be heard coming from a vehicle/ambient emitter\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "LockRadioStationTrackList",
    "hash": "0xFF5E5EA2DCEEACF3",
    "code": "-- LOCK_RADIO_STATION_TRACK_LIST\nLockRadioStationTrackList(\n\tradioStation --[[ string ]], \n\ttrackListName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "OverrideMicrophoneSettings",
    "hash": "0x75773E11BA459E90",
    "code": "-- OVERRIDE_MICROPHONE_SETTINGS\nOverrideMicrophoneSettings(\n\thash --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets audio flag \"OverrideMicrophoneSettings\"\n\nAllows the script to ovverride the current microphone settings"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "OverridePlayerGroundMaterial",
    "hash": "0xD2CC78CD3D0B50F9",
    "code": "-- OVERRIDE_PLAYER_GROUND_MATERIAL\nOverridePlayerGroundMaterial(\n\toverriddenMaterialHash --[[ Hash ]], \n\tscriptOverrides --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the footstep tuning modes"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "OverrideTrevorRage",
    "hash": "0x13AD665062541A7E",
    "code": "-- OVERRIDE_TREVOR_RAGE\nOverrideTrevorRage(\n\tvoiceEffect --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native enables the audio flag \"TrevorRageIsOverridden\" and sets the voice effect to voiceEffect\n\nTo clear the override use RESET_TREVOR_RAGE"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "OverrideUnderwaterStream",
    "hash": "0xF2A9CDABCEA04BD6",
    "code": "-- OVERRIDE_UNDERWATER_STREAM\nOverrideUnderwaterStream(\n\tstreamName --[[ string ]], \n\toverride --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native allows a scripter to override the current underwater stream. It needs to be called before going into the water\n\nIt needs to also be called with OVERRIDE_UNDERWATER_STREAM(\"\", false) in order to stop overriding."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "OverrideVehHorn",
    "hash": "0x3CDC1E622CCE0356",
    "code": "-- OVERRIDE_VEH_HORN\nOverrideVehHorn(\n\tvehicle --[[ Vehicle ]], \n\toverride --[[ boolean ]], \n\thornHash --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle you want to change the horn on.",
      "override: \n\nMust be set to true. If set to false, the default horn hash will be restored.",
      "hornHash: \n\nA horn hash."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle you want to change the horn on.\n\noverride: \n\nMust be set to true. If set to false, the default horn hash will be restored.\n\nhornHash: \n\nA horn hash.\n\nOverrides the vehicle's horn hash.\n\nWhen changing this hash on a vehicle, _GET_VEHICLE_HORN_HASH will not return the 'overwritten' hash. It will still always return the default horn hash (same as GET_VEHICLE_DEFAULT_HORN).\n\nList of possible hashes (found in decompiled scripts):\n\nsigned\tunsigned\thex\n1604822495\t1604822495\t0x5FA7A5DF\n-1262465009\t3032502287\t0xB4C0500F\n-889553789\t3405413507\t0xCAFA7C83\n-1557943086\t2737024210\t0xA323ACD2\n-1318696617\t2976270679\t0xB1664957\n-7740003\t4287227293\t0xFF89E59D\n-1815146967\t2479820329\t0x93CF0E29\n-339919356\t3955047940\t0xEBBD3E04"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PauseScriptedConversation",
    "hash": "0x8530AD776CD72B12",
    "code": "-- PAUSE_SCRIPTED_CONVERSATION\nPauseScriptedConversation(\n\tfinishCurrentLine --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "To resume the conversation use RESTART_SCRIPTED_CONVERSATION"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayAmbientSpeechFromPositionNative",
    "hash": "0xED640017ED337E45",
    "code": "-- PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE\nPlayAmbientSpeechFromPositionNative(\n\tspeechName --[[ string ]], \n\tvoiceName --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeechParam --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayAnimalVocalization",
    "hash": "0xEE066C7006C49C0A",
    "code": "-- PLAY_ANIMAL_VOCALIZATION\nPlayAnimalVocalization(\n\tpedHandle --[[ Ped ]], \n\tanimalType --[[ integer ]], \n\tspeechName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eAudAnimalType {\n\tAUD_ANIMAL_NONE = -1,\n\tAUD_ANIMAL_BOAR = 0,\n\tAUD_ANIMAL_CHICKEN = 1,\n\tAUD_ANIMAL_DOG = 2,\n\tAUD_ANIMAL_DOG_ROTTWEILER = 3,\n\tAUD_ANIMAL_HORSE = 4,\n\tAUD_NUM_ANIMALS = 5\n}"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayDeferredSoundFrontend",
    "hash": "0xCADA5A0D0702381E",
    "code": "-- PLAY_DEFERRED_SOUND_FRONTEND\nPlayDeferredSoundFrontend(\n\tsoundName --[[ string ]], \n\tsoundsetName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayEndCreditsMusic",
    "hash": "0xCD536C4D33DCC900",
    "code": "-- PLAY_END_CREDITS_MUSIC\nPlayEndCreditsMusic(\n\tbActive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayMissionCompleteAudio",
    "hash": "0xB138AAB8A70D3C69",
    "code": "-- PLAY_MISSION_COMPLETE_AUDIO\nPlayMissionCompleteAudio(\n\taudioName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Called 38 times in the scripts. There are 5 different audioNames used.\n One unknown removed below.\nAUDIO::PLAY_MISSION_COMPLETE_AUDIO(\"DEAD\");\nAUDIO::PLAY_MISSION_COMPLETE_AUDIO(\"FRANKLIN_BIG_01\");\nAUDIO::PLAY_MISSION_COMPLETE_AUDIO(\"GENERIC_FAILED\");\nAUDIO::PLAY_MISSION_COMPLETE_AUDIO(\"TREVOR_SMALL_01\");"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayPain",
    "hash": "0xBC9AE166038A5CEC",
    "code": "-- PLAY_PAIN\nPlayPain(\n\tped --[[ Ped ]], \n\tdamageReason --[[ integer ]], \n\trawDamage --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity.",
      "damageReason: \n\nThe damage reason/type, refer to eAudDamageReason",
      "rawDamage: \n\nDamage value, defaults to 0.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity.\n\ndamageReason: \n\nThe damage reason/type, refer to eAudDamageReason\n\nrawDamage: \n\nDamage value, defaults to 0.0\n\nThis native had a 4th parameter added in newer game builds syncOverNetwork creates a CPedPlayPainEvent when set to true, by default this variable is false.\n\nYou won't be able to use this for clones (remote pedestrians that are not owned by you) or migrating peds if syncOverNetwork is set to true; it simply won't execute.\n\nThe ped should also have speech for this to work.\n\nenum eAudDamageReason {\n\tAUD_DAMAGE_REASON_DEFAULT = 0,\n\tAUD_DAMAGE_REASON_FALLING = 1,\n\tAUD_DAMAGE_REASON_SUPER_FALLING = 2,\n\tAUD_DAMAGE_REASON_SCREAM_PANIC = 3,\n\tAUD_DAMAGE_REASON_SCREAM_PANIC_SHORT = 4,\n\tAUD_DAMAGE_REASON_SCREAM_SCARED = 5,\n\tAUD_DAMAGE_REASON_SCREAM_SHOCKED = 6,\n\tAUD_DAMAGE_REASON_SCREAM_TERROR = 7,\n\tAUD_DAMAGE_REASON_ON_FIRE = 8,\n\tAUD_DAMAGE_REASON_DROWNING = 9,\n\t// drowning on the surface of water, after we time out\n\tAUD_DAMAGE_REASON_SURFACE_DROWNING = 10,\n\tAUD_DAMAGE_REASON_INHALE = 11,\n\tAUD_DAMAGE_REASON_EXHALE = 12,\n\tAUD_DAMAGE_REASON_POST_FALL_GRUNT = 13,\n\tAUD_DAMAGE_REASON_ENTERING_RAGDOLL_DEATH = 14,\n\tAUD_DAMAGE_REASON_EXPLOSION = 15,\n\tAUD_DAMAGE_REASON_MELEE = 16,\n\tAUD_DAMAGE_REASON_SHOVE = 17,\n\tAUD_DAMAGE_REASON_WHEEZE = 18,\n\tAUD_DAMAGE_REASON_COUGH = 19,\n\tAUD_DAMAGE_REASON_TAZER = 20,\n\tAUD_DAMAGE_REASON_EXHAUSTION = 21,\n\tAUD_DAMAGE_REASON_CLIMB_LARGE = 22,\n\tAUD_DAMAGE_REASON_CLIMB_SMALL = 23,\n\tAUD_DAMAGE_REASON_JUMP = 24,\n\tAUD_DAMAGE_REASON_COWER = 25,\n\tAUD_DAMAGE_REASON_WHIMPER = 26,\n\tAUD_DAMAGE_REASON_DYING_MOAN = 27,\n\tAUD_DAMAGE_REASON_CYCLING_EXHALE = 28,\n\tAUD_DAMAGE_REASON_PAIN_RAPIDS = 29,\n\tAUD_DAMAGE_REASON_SNEEZE = 30,\n\tAUD_DAMAGE_REASON_MELEE_SMALL_GRUNT = 31,\n\tAUD_DAMAGE_REASON_MELEE_LARGE_GRUNT = 32,\n\tAUD_DAMAGE_REASON_POST_FALL_GRUNT_LOW = 33\n}"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayPedAmbientSpeechAndCloneNative",
    "hash": "0xC6941B4A3A8FBBB9",
    "code": "-- PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE\nPlayPedAmbientSpeechAndCloneNative(\n\tped --[[ Ped ]], \n\tspeechName --[[ string ]], \n\tspeechParam --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See PLAY_PED_AMBIENT_SPEECH_NATIVE for parameter specifications.\n\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayPedAmbientSpeechNative",
    "hash": "0x8E04FEDD28D42462",
    "code": "-- PLAY_PED_AMBIENT_SPEECH_NATIVE\nPlayPedAmbientSpeechNative(\n\tped --[[ Ped ]], \n\tspeechName --[[ string ]], \n\tspeechParam --[[ string ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to play the ambient speech.",
      "speechName: \n\nName of the speech to play, eg. \"GENERIC_HI\".",
      "speechParam:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to play the ambient speech.\n\nspeechName: \n\nName of the speech to play, eg. \"GENERIC_HI\".\n\nspeechParam:\n\nPlays ambient speech; see also PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE.\n\nspeechParam: Can be one of the following:\nSPEECH_PARAMS_STANDARD\nSPEECH_PARAMS_ALLOW_REPEAT\nSPEECH_PARAMS_BEAT\nSPEECH_PARAMS_FORCE\nSPEECH_PARAMS_FORCE_FRONTEND\nSPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND\nSPEECH_PARAMS_FORCE_NORMAL\nSPEECH_PARAMS_FORCE_NORMAL_CLEAR\nSPEECH_PARAMS_FORCE_NORMAL_CRITICAL\nSPEECH_PARAMS_FORCE_SHOUTED\nSPEECH_PARAMS_FORCE_SHOUTED_CLEAR\nSPEECH_PARAMS_FORCE_SHOUTED_CRITICAL\nSPEECH_PARAMS_FORCE_PRELOAD_ONLY\nSPEECH_PARAMS_MEGAPHONE\nSPEECH_PARAMS_HELI\nSPEECH_PARAMS_FORCE_MEGAPHONE\nSPEECH_PARAMS_FORCE_HELI\nSPEECH_PARAMS_INTERRUPT\nSPEECH_PARAMS_INTERRUPT_SHOUTED\nSPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR\nSPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL\nSPEECH_PARAMS_INTERRUPT_NO_FORCE\nSPEECH_PARAMS_INTERRUPT_FRONTEND\nSPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND\nSPEECH_PARAMS_ADD_BLIP\nSPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT\nSPEECH_PARAMS_ADD_BLIP_FORCE\nSPEECH_PARAMS_ADD_BLIP_SHOUTED\nSPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE\nSPEECH_PARAMS_ADD_BLIP_INTERRUPT\nSPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE\nSPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED\nSPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR\nSPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL\nSPEECH_PARAMS_SHOUTED\nSPEECH_PARAMS_SHOUTED_CLEAR\nSPEECH_PARAMS_SHOUTED_CRITICAL\nNote: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL\n\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayPedAmbientSpeechWithVoiceNative",
    "hash": "0x3523634255FC3318",
    "code": "-- PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE\nPlayPedAmbientSpeechWithVoiceNative(\n\tped --[[ Ped ]], \n\tspeechName --[[ string ]], \n\tvoiceName --[[ string ]], \n\tspeechParam --[[ string ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.\nEX (C#):\nGTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, \"GENERIC_INSULT_HIGH\", \"s_m_y_sheriff_01_white_full_01\", \"SPEECH_PARAMS_FORCE_SHOUTED\", 0);\nThe first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayPedRingtone",
    "hash": "0xF9E56683CA8E11A5",
    "code": "-- PLAY_PED_RINGTONE\nPlayPedRingtone(\n\tringtoneName --[[ string ]], \n\tped --[[ Ped ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny  \nAUDIO::PLAY_PED_RINGTONE(\"Remote_Ring\", PLAYER::PLAYER_PED_ID(), 1);  \nAUDIO::PLAY_PED_RINGTONE(\"Dial_and_Remote_Ring\", PLAYER::PLAYER_PED_ID(), 1);"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayPoliceReport",
    "hash": "0xDFEBD56D9BD1EB16",
    "code": "-- PLAY_POLICE_REPORT\nlocal retval --[[ integer ]] =\n\tPlayPoliceReport(\n\t\tname --[[ string ]], \n\t\tp1 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Plays the given police radio message.\nAll found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlaySound",
    "hash": "0x7FF4944CC209192D",
    "code": "-- PLAY_SOUND\nPlaySound(\n\tsoundId --[[ integer ]], \n\taudioName --[[ string ]], \n\taudioRef --[[ string ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlaySoundFromCoord",
    "hash": "0x8D8686B622B88120",
    "code": "-- PLAY_SOUND_FROM_COORD\nPlaySoundFromCoord(\n\tsoundId --[[ integer ]], \n\taudioName --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\taudioRef --[[ string ]], \n\tisNetwork --[[ boolean ]], \n\trange --[[ integer ]], \n\tp8 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW  \ngtaforums.com/topic/795622-audio-for-mods"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlaySoundFromEntity",
    "hash": "0xE65F427EB70AB1ED",
    "code": "-- PLAY_SOUND_FROM_ENTITY\nPlaySoundFromEntity(\n\tsoundId --[[ integer ]], \n\taudioName --[[ string ]], \n\tentity --[[ Entity ]], \n\taudioRef --[[ string ]], \n\tisNetwork --[[ boolean ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0   \nNo changes made in b678d.  \ngtaforums.com/topic/795622-audio-for-mods"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlaySoundFrontend",
    "hash": "0x67C540AA08E4A6F5",
    "code": "-- PLAY_SOUND_FRONTEND\nPlaySoundFrontend(\n\tsoundId --[[ integer ]], \n\taudioName --[[ string ]], \n\taudioRef --[[ string ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "List: https://pastebin.com/DCeRiaLJ\nAll occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayStreamFromObject",
    "hash": "0xEBAA9B64D76356FD",
    "code": "-- PLAY_STREAM_FROM_OBJECT\nPlayStreamFromObject(\n\tobject --[[ Object ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Plays a preloaded stream back from the specified object."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayStreamFromPed",
    "hash": "0x89049DD63C08B5D1",
    "code": "-- PLAY_STREAM_FROM_PED\nPlayStreamFromPed(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Plays a preloaded stream back from the specified ped."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayStreamFromPosition",
    "hash": "0x21442F412E8DE56B",
    "code": "-- PLAY_STREAM_FROM_POSITION\nPlayStreamFromPosition(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Plays a preloaded stream back from the specified Vector3."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayStreamFromVehicle",
    "hash": "0xB70374A758007DFA",
    "code": "-- PLAY_STREAM_FROM_VEHICLE\nPlayStreamFromVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Plays a preloaded stream back from the specified ped vehicle"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayStreamFrontend",
    "hash": "0x58FCE43488F9F5F4",
    "code": "-- PLAY_STREAM_FRONTEND\nPlayStreamFrontend()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlaySynchronizedAudioEvent",
    "hash": "0x8B2FD4560E55DD2D",
    "code": "-- PLAY_SYNCHRONIZED_AUDIO_EVENT\nlocal retval --[[ boolean ]] =\n\tPlaySynchronizedAudioEvent(\n\t\tsceneId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayVehicleDoorCloseSound",
    "hash": "0x62A456AA4769EF34",
    "code": "-- PLAY_VEHICLE_DOOR_CLOSE_SOUND\nPlayVehicleDoorCloseSound(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PlayVehicleDoorOpenSound",
    "hash": "0x3A539D52857EA82D",
    "code": "-- PLAY_VEHICLE_DOOR_OPEN_SOUND\nPlayVehicleDoorOpenSound(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PreloadScriptConversation",
    "hash": "0x3B3CAD6166916D87",
    "code": "-- PRELOAD_SCRIPT_CONVERSATION\nPreloadScriptConversation(\n\tdisplaySubtitles --[[ boolean ]], \n\taddToBriefScreen --[[ boolean ]], \n\tcloneConversation --[[ boolean ]], \n\tinterruptible --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Similar to START_SCRIPT_CONVERSATION, except that is starts the conversation off paused.\n\nA scripter can then kick off the conversation by calling START_PRELOADED_CONVERSATION.\n\nIf they want to check that the conversation is done preloading, they can use GET_IS_PRELOADED_CONVERSATION_READY"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PreloadScriptPhoneConversation",
    "hash": "0x6004BCB0E226AAEA",
    "code": "-- PRELOAD_SCRIPT_PHONE_CONVERSATION\nPreloadScriptPhoneConversation(\n\tdisplaySubtitles --[[ boolean ]], \n\taddToBriefScreen --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PreloadVehicleAudioBank",
    "hash": "0xCA4CEA6AE0000A7E",
    "code": "-- PRELOAD_VEHICLE_AUDIO_BANK\nPreloadVehicleAudioBank(\n\tmodel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Request that we preload the required audio bank for a given vehicle model.\n\nNativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PrepareAlarm",
    "hash": "0x9D74AE343DB65533",
    "code": "-- PREPARE_ALARM\nlocal retval --[[ boolean ]] =\n\tPrepareAlarm(\n\t\talarmName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the alarm was successfully prepared"
    ],
    "description": "Returns:\n\nReturns true if the alarm was successfully prepared\n\nPrepares any banks required to play the given alarm"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PrepareMusicEvent",
    "hash": "0x1E5185B72EF5158A",
    "code": "-- PREPARE_MUSIC_EVENT\nlocal retval --[[ boolean ]] =\n\tPrepareMusicEvent(\n\t\teventName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the event is prepared, false otherwise"
    ],
    "description": "Returns:\n\nReturns true if the event is prepared, false otherwise\n\nPrepares the specified music event. Preparing it in advance will preload any required data so that it's ready to play immediately."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PrepareSynchronizedAudioEvent",
    "hash": "0xC7ABCACA4985A766",
    "code": "-- PREPARE_SYNCHRONIZED_AUDIO_EVENT\nlocal retval --[[ boolean ]] =\n\tPrepareSynchronizedAudioEvent(\n\t\taudioEvent --[[ string ]], \n\t\tstartOffsetMs --[[ integer ]]\n\t)",
    "parameters": [
      "audioEvent: \n\nThe audio event name.",
      "startOffsetMs: \n\nUnused parameter (since v323)"
    ],
    "returns": [],
    "description": "Parameters:\n\naudioEvent: \n\nThe audio event name.\n\nstartOffsetMs: \n\nUnused parameter (since v323)"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "PrepareSynchronizedAudioEventForScene",
    "hash": "0x029FE7CD1B7E2E75",
    "code": "-- PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE\nlocal retval --[[ boolean ]] =\n\tPrepareSynchronizedAudioEventForScene(\n\t\tsceneId --[[ integer ]], \n\t\taudioEvent --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if prepared, false otherwise"
    ],
    "description": "Returns:\n\nReturns true if prepared, false otherwise"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RecordBrokenGlass",
    "hash": "0xFBE20329593DEC9D",
    "code": "-- RECORD_BROKEN_GLASS\nRecordBrokenGlass(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Creates a broken glass area"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RefreshClosestOceanShoreline",
    "hash": "0x5D2BFAAB8D956E0E",
    "code": "-- REFRESH_CLOSEST_OCEAN_SHORELINE\nRefreshClosestOceanShoreline()",
    "parameters": [],
    "returns": [],
    "description": "Refreshes the closest shoreline using the nearest road position."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RegisterScriptWithAudio",
    "hash": "0xC6ED9D5092438D91",
    "code": "-- REGISTER_SCRIPT_WITH_AUDIO\nRegisterScriptWithAudio(\n\tinChargeOfAudio --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ReleaseAmbientAudioBank",
    "hash": "0x65475A218FFAA93D",
    "code": "-- RELEASE_AMBIENT_AUDIO_BANK\nReleaseAmbientAudioBank()",
    "parameters": [],
    "returns": [],
    "description": "This native has been marked as deprecated internally, please use RELEASE_SCRIPT_AUDIO_BANK instead."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ReleaseMissionAudioBank",
    "hash": "0x0EC92A1BF0857187",
    "code": "-- RELEASE_MISSION_AUDIO_BANK\nReleaseMissionAudioBank()",
    "parameters": [],
    "returns": [],
    "description": "This native has been marked as deprecated internally, please use RELEASE_SCRIPT_AUDIO_BANK instead."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ReleaseNamedScriptAudioBank",
    "hash": "0x77ED170667F50170",
    "code": "-- RELEASE_NAMED_SCRIPT_AUDIO_BANK\nReleaseNamedScriptAudioBank(\n\taudioBank --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Unloads the specified audioBank"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ReleaseScriptAudioBank",
    "hash": "0x7A2D8AD0A9EB9C3F",
    "code": "-- RELEASE_SCRIPT_AUDIO_BANK\nReleaseScriptAudioBank()",
    "parameters": [],
    "returns": [],
    "description": "Unloads all audio banks requested by this script."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ReleaseSoundId",
    "hash": "0x353FC880830B88FA",
    "code": "-- RELEASE_SOUND_ID\nReleaseSoundId(\n\tsoundId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This should be called once a sound has finished being manipulated by the script so that its SoundId can be released and re-used."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ReleaseWeaponAudio",
    "hash": "0xCE4AC0439F607045",
    "code": "-- RELEASE_WEAPON_AUDIO\nReleaseWeaponAudio()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RemoveEntityFromAudioMixGroup",
    "hash": "0x18EB48CFC41F2EA0",
    "code": "-- REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP\nRemoveEntityFromAudioMixGroup(\n\tentity --[[ Entity ]], \n\tfadeOut --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Removes an entity from its current mix group."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RemovePortalSettingsOverride",
    "hash": "0xB4BBFD9CD8B3922B",
    "code": "-- REMOVE_PORTAL_SETTINGS_OVERRIDE\nRemovePortalSettingsOverride(\n\tportalSettingsName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Found in the b617d scripts, duplicates removed:\n AUDIO::_B4BBFD9CD8B3922B(\"V_CARSHOWROOM_PS_WINDOW_UNBROKEN\");\n AUDIO::_B4BBFD9CD8B3922B(\"V_CIA_PS_WINDOW_UNBROKEN\");\n AUDIO::_B4BBFD9CD8B3922B(\"V_DLC_HEIST_APARTMENT_DOOR_CLOSED\");\n AUDIO::_B4BBFD9CD8B3922B(\"V_FINALEBANK_PS_VAULT_INTACT\");\n AUDIO::_B4BBFD9CD8B3922B(\"V_MICHAEL_PS_BATHROOM_WITH_WINDOW\");\n\n\nFor events like cars driving through windows, allows script to unocclude that window"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RequestAmbientAudioBank",
    "hash": "0xFE02FFBED8CA9D99",
    "code": "-- REQUEST_AMBIENT_AUDIO_BANK\nlocal retval --[[ boolean ]] =\n\tRequestAmbientAudioBank(\n\t\tbankName --[[ string ]], \n\t\tbOverNetwork --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native is marked as deprecated internally, please use REQUEST_SCRIPT_AUDIO_BANK\n\nThis native has a new argument on newer game builds:\n\nplayerBits:"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RequestMissionAudioBank",
    "hash": "0x7345BDD95E62E0F2",
    "code": "-- REQUEST_MISSION_AUDIO_BANK\nlocal retval --[[ boolean ]] =\n\tRequestMissionAudioBank(\n\t\tbankName --[[ string ]], \n\t\tbOverNetwork --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native is marked as deprecated internally, please use REQUEST_SCRIPT_AUDIO_BANK\n\nThis native has a new argument on newer game builds:\n\nplayerBits:"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RequestScriptAudioBank",
    "hash": "0x2F844A8B08D76685",
    "code": "-- REQUEST_SCRIPT_AUDIO_BANK\nlocal retval --[[ boolean ]] =\n\tRequestScriptAudioBank(\n\t\tbankName --[[ string ]], \n\t\tbOverNetwork --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [
      "Requests and returns true/false if the script audio bank has laoded"
    ],
    "description": "Returns:\n\nRequests and returns true/false if the script audio bank has laoded\n\nThis native has a new argument on newer game builds:\n\nplayerBits:"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RequestTennisBanks",
    "hash": "0x4ADA3F19BE4A6047",
    "code": "-- REQUEST_TENNIS_BANKS\nRequestTennisBanks(\n\topponentPed --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Loads the tennis vocalization banks into a couple animal slots."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ResetPedAudioFlags",
    "hash": "0xF54BB7B61036F335",
    "code": "-- RESET_PED_AUDIO_FLAGS\nResetPedAudioFlags(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ResetTrevorRage",
    "hash": "0xE78503B10C4314E0",
    "code": "-- RESET_TREVOR_RAGE\nResetTrevorRage()",
    "parameters": [],
    "returns": [],
    "description": "Clears the override set by OVERRIDE_TREVOR_RAGE"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ResetVehicleStartupRevSound",
    "hash": "0xD2DCCD8E16E20997",
    "code": "-- RESET_VEHICLE_STARTUP_REV_SOUND\nResetVehicleStartupRevSound(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Resets the override for SET_VEHICLE_STARTUP_REV_SOUND"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "RestartScriptedConversation",
    "hash": "0x9AEB285D1818C9AC",
    "code": "-- RESTART_SCRIPTED_CONVERSATION\nRestartScriptedConversation()",
    "parameters": [],
    "returns": [],
    "description": "Restarts a conversation that was previously paused with PAUSE_SCRIPTED_CONVERSATION"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "ScriptOverridesWindElevation",
    "hash": "0x70B8EC8FC108A634",
    "code": "-- SCRIPT_OVERRIDES_WIND_ELEVATION\nScriptOverridesWindElevation(\n\toverride --[[ boolean ]], \n\twindElevationHashName --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Overrides wind elevation sounds"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAggressiveHorns",
    "hash": "0x395BF71085D1B1D9",
    "code": "-- SET_AGGRESSIVE_HORNS\nSetAggressiveHorns(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes pedestrians sound their horn longer, faster and more agressive when they use their horn."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAmbientVoiceName",
    "hash": "0x6C8065A3B780185B",
    "code": "-- SET_AMBIENT_VOICE_NAME\nSetAmbientVoiceName(\n\tped --[[ Ped ]], \n\tvoiceName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the specified ped to use a specific voice different to the one associated with their model."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAmbientVoiceNameHash",
    "hash": "0x9A53DED9921DE990",
    "code": "-- SET_AMBIENT_VOICE_NAME_HASH\nSetAmbientVoiceNameHash(\n\tped --[[ Ped ]], \n\thash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the specified ped to use a specific voice different to the one associated with their model."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAmbientZoneListState",
    "hash": "0x9748FA4DE50CCE3E",
    "code": "-- SET_AMBIENT_ZONE_LIST_STATE\nSetAmbientZoneListState(\n\tzoneListName --[[ string ]], \n\tenabled --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAmbientZoneListStatePersistent",
    "hash": "0xF3638DAE8C4045E1",
    "code": "-- SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT\nSetAmbientZoneListStatePersistent(\n\tambientZone --[[ string ]], \n\tenabled --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAmbientZoneState",
    "hash": "0xBDA07E5950085E46",
    "code": "-- SET_AMBIENT_ZONE_STATE\nSetAmbientZoneState(\n\tzoneName --[[ string ]], \n\tenabled --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAmbientZoneStatePersistent",
    "hash": "0x1D6650420CEC9D3B",
    "code": "-- SET_AMBIENT_ZONE_STATE_PERSISTENT\nSetAmbientZoneStatePersistent(\n\tzoneName --[[ string ]], \n\tenabled --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAnimalMood",
    "hash": "0xCC97B29285B1DC3B",
    "code": "-- SET_ANIMAL_MOOD\nSetAnimalMood(\n\tanimal --[[ Ped ]], \n\tmood --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eAudAnimalMood {\n\tAUD_ANIMAL_MOOD_ANGRY = 0,\n\tAUD_ANIMAL_MOOD_PLAYFUL = 1,\n\n\tAUD_ANIMAL_MOOD_NUM_MOODS = 2\n}"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAudioFlag",
    "hash": "0xB9EFD5C25018725A",
    "code": "-- SET_AUDIO_FLAG\nSetAudioFlag(\n\tflagName --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Generic interface to toggle audio functionality, with auto-reset on script termination and support for multiple script threads\n\nFlags used in game scripts: | Flag Name | Description of Usage | | ----- | -------- | | ActivateSwitchWheelAudio | | | AllowAmbientSpeechInSlowMo | | | AllowCutsceneOverScreenFade | | | AllowForceRadioAfterRetune | | | AllowPainAndAmbientSpeechToPlayDuringCutscene | | | AllowPlayerAIOnMission | | | AllowPoliceScannerWhenPlayerHasNoControl | | | AllowRadioDuringSwitch | | | AllowRadioOverScreenFade | | | AllowScoreAndRadio | | | AllowScriptedSpeechInSlowMo | | | AvoidMissionCompleteDelay | | | DisableAbortConversationForDeathAndInjury | | | DisableAbortConversationForRagdoll | | | DisableBarks | | | DisableFlightMusic | | | DisableNPCHeadsetSpeechAttenuation | | | DisableReplayScriptStreamRecording | | | EnableHeadsetBeep | | | EnableMissileLockWarningForAllVehicles | | | ForceConversationInterrupt | | | ForceSeamlessRadioSwitch | | | ForceSniperAudio | | | FrontendRadioDisabled | | | HoldMissionCompleteWhenPrepared | | | IsDirectorModeActive | Allows you to play speech infinitely without any pauses like in Director Mode. | | IsPlayerOnMissionForSpeech | | | ListenerReverbDisabled | | | LoadMPData | | | MobileRadioInGame | | | OnlyAllowScriptTriggerPoliceScanner | | | PlayerOnDLCHeist4Island | | | PlayMenuMusic | | | PoliceScannerDisabled | | | ScriptedConvListenerMaySpeak | | | SpeechDucksScore | | | SuppressPlayerScubaBreathing | | | UseQuietSceneSoftVersion | | | WantedMusicDisabled | | | WantedMusicOnMission | |\n\nAll flag IDs and hashes:\nID: 01 | Hash: 0x20A7858F\nID: 02 | Hash: 0xA11C2259\nID: 03 | Hash: 0x08DE4700\nID: 04 | Hash: 0x989F652F\nID: 05 | Hash: 0x3C9E76BA\nID: 06 | Hash: 0xA805FEB0\nID: 07 | Hash: 0x4B94EA26\nID: 08 | Hash: 0x803ACD34\nID: 09 | Hash: 0x7C741226\nID: 10 | Hash: 0x31DB9EBD\nID: 11 | Hash: 0xDF386F18\nID: 12 | Hash: 0x669CED42\nID: 13 | Hash: 0x51F22743\nID: 14 | Hash: 0x2052B35C\nID: 15 | Hash: 0x071472DC\nID: 16 | Hash: 0xF9928BCC\nID: 17 | Hash: 0x7ADBDD48\nID: 18 | Hash: 0xA959BA1A\nID: 19 | Hash: 0xBBE89B60\nID: 20 | Hash: 0x87A08871\nID: 21 | Hash: 0xED1057CE\nID: 22 | Hash: 0x1584AD7A\nID: 23 | Hash: 0x8582CFCB\nID: 24 | Hash: 0x7E5E2FB0\nID: 25 | Hash: 0xAE4F72DB\nID: 26 | Hash: 0x5D16D1FA\nID: 27 | Hash: 0x06B2F4B8\nID: 28 | Hash: 0x5D4CDC96\nID: 29 | Hash: 0x8B5A48BA\nID: 30 | Hash: 0x98FBD539\nID: 31 | Hash: 0xD8CB0473\nID: 32 | Hash: 0x5CBB4874\nID: 33 | Hash: 0x2E9F93A9\nID: 34 | Hash: 0xD93BEA86\nID: 35 | Hash: 0x92109B7D\nID: 36 | Hash: 0xB7EC9E4D\nID: 37 | Hash: 0xCABDBB1D\nID: 38 | Hash: 0xB3FD4A52\nID: 39 | Hash: 0x370D94E5\nID: 40 | Hash: 0xA0F7938F\nID: 41 | Hash: 0xCBE1CE81\nID: 42 | Hash: 0xC27F1271\nID: 43 | Hash: 0x9E3258EB\nID: 44 | Hash: 0x551CDA5B\nID: 45 | Hash: 0xCB6D663C\nID: 46 | Hash: 0x7DACE87F\nID: 47 | Hash: 0xF9DE416F\nID: 48 | Hash: 0x882E6E9E\nID: 49 | Hash: 0x16B447E7\nID: 50 | Hash: 0xBD867739\nID: 51 | Hash: 0xA3A58604\nID: 52 | Hash: 0x7E046BBC\nID: 53 | Hash: 0xD95FDB98\nID: 54 | Hash: 0x5842C0ED\nID: 55 | Hash: 0x285FECC6\nID: 56 | Hash: 0x9351AC43\nID: 57 | Hash: 0x50032E75\nID: 58 | Hash: 0xAE6D0D59\nID: 59 | Hash: 0xD6351785\nID: 60 | Hash: 0xD25D71BC\nID: 61 | Hash: 0x1F7F6423\nID: 62 | Hash: 0xE24C3AA6\nID: 63 | Hash: 0xBFFDD2B7"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAudioSceneVariable",
    "hash": "0xEF21A9EF089A2668",
    "code": "-- SET_AUDIO_SCENE_VARIABLE\nSetAudioSceneVariable(\n\tscene --[[ string ]], \n\tvariableName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "scene: \n\nname of the scene",
      "variableName: \n\nname of the variable to add/change",
      "value: \n\nvalue to set the variable to"
    ],
    "returns": [],
    "description": "Parameters:\n\nscene: \n\nname of the scene\n\nvariableName: \n\nname of the variable to add/change\n\nvalue: \n\nvalue to set the variable to"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAudioScriptCleanupTime",
    "hash": "0xA5F377B175A699C5",
    "code": "-- SET_AUDIO_SCRIPT_CLEANUP_TIME\nSetAudioScriptCleanupTime(\n\ttimeMs --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Set a delay in milliseconds for the audio to be cleaned up when the script finishes."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAudioSpecialEffectMode",
    "hash": "0x12561FCBB62D5B9C",
    "code": "-- SET_AUDIO_SPECIAL_EFFECT_MODE\nSetAudioSpecialEffectMode(\n\tmode --[[ integer ]]\n)",
    "parameters": [
      "mode: \n\nAudio mode to apply this frame"
    ],
    "returns": [],
    "description": "Parameters:\n\nmode: \n\nAudio mode to apply this frame\n\nNeeds to be called every frame.\n\nenum eAudSpecialEffectMode\n{\n\tkSpecialEffectModeNormal = 0,\n\tkSpecialEffectModeUnderwater = 1,\n\tkSpecialEffectModeStoned = 2,\n\tkSpecialEffectModePauseMenu = 3,\n\tkSpecialEffectModeSlowMotion = 4,\n\tkSpecialEffectModeDrunkStage01 = 5,\n\tkSpecialEffectModeDrunkStage02 = 6,\n\tkSpecialEffectModeDrunkStage03 = 7,\n\tNUM_AUDSPECIALEFFECTMODE\n};"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetAudioVehiclePriority",
    "hash": "0xE5564483E407F914",
    "code": "-- SET_AUDIO_VEHICLE_PRIORITY\nSetAudioVehiclePriority(\n\tvehicle --[[ Vehicle ]], \n\tpriority --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the priority for the given vehicle. This is a hint for the audio system as to what LOD the vehicle should use.\n\n'High' priority will bump up the activation range significantly and prevent it from dropping when the vehicle is not within the view frustrum.\n\n'Max' will attempt to keep the vehicle at maximum LOD regardless of how far it is from the listener or what it is currently doing. Be careful with this!\n\nThere is a hard limit of 5 simulataneous granular cars (including the player) so we are quite limited on the number we can play at once, so setting vehicles to max priority will reduce the number of engines availble for regular NPC vehicles\n\nenum eAudVehiclePriority {\n\tAUDIO_VEHICLE_PRIORITY_NORMAL = 0,\n\tAUDIO_VEHICLE_PRIORITY_MEDIUM = 1,\n\tAUDIO_VEHICLE_PRIORITY_MAX = 2,\n\tAUDIO_VEHICLE_PRIORITY_HIGH = 3,\n}"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetConversationAudioControlledByAnim",
    "hash": "0x0B568201DD99F0EB",
    "code": "-- SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM\nSetConversationAudioControlledByAnim(\n\tenable --[[ boolean ]]\n)",
    "parameters": [
      "enable: \n\nPass in true to set conversation flow to be controlled by animation triggers."
    ],
    "returns": [],
    "description": "Parameters:\n\nenable: \n\nPass in true to set conversation flow to be controlled by animation triggers.\n\nSets whether or not scripted conversation flow should be controlled by anim triggers"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetConversationAudioPlaceholder",
    "hash": "0x61631F5DF50D1C34",
    "code": "-- SET_CONVERSATION_AUDIO_PLACEHOLDER\nSetConversationAudioPlaceholder(\n\tisPlaceHolder --[[ boolean ]]\n)",
    "parameters": [
      "isPlaceHolder: \n\nWhether or not the conversation should use robot speech or not"
    ],
    "returns": [],
    "description": "Parameters:\n\nisPlaceHolder: \n\nWhether or not the conversation should use robot speech or not\n\nUsed to determine whether conversation should use robot speech or not"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetCustomRadioTrackList",
    "hash": "0x4E404A9361F75BB2",
    "code": "-- SET_CUSTOM_RADIO_TRACK_LIST\nSetCustomRadioTrackList(\n\tradioStation --[[ string ]], \n\ttrackListName --[[ string ]], \n\tforceNow --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Queues up a custom track list on the specified radio station. The content in the track list will be played as soon as possible. The station does not have to be frozen."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetCutsceneAudioOverride",
    "hash": "0x3B4BF5F0859204D9",
    "code": "-- SET_CUTSCENE_AUDIO_OVERRIDE\nSetCutsceneAudioOverride(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All occurrences found in b617d, sorted alphabetically and identical lines removed:\nAUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(\"_AK\");\nAUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(\"_CUSTOM\");\nAUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(\"_TOOTHLESS\");\n\n\nAdd a suffix to the cutscene audio name. Call before loading the cutscene."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetEmitterRadioStation",
    "hash": "0xACF57305B12AF907",
    "code": "-- SET_EMITTER_RADIO_STATION\nSetEmitterRadioStation(\n\temitterName --[[ string ]], \n\tradioStation --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Retunes a named static emitter to the specified station"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetEntityForNullConvPed",
    "hash": "0x892B6AB8F33606F5",
    "code": "-- SET_ENTITY_FOR_NULL_CONV_PED\nSetEntityForNullConvPed(\n\tspeakerConversationIndex --[[ integer ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetFrontendRadioActive",
    "hash": "0xF7F26C6E9CC9EBB8",
    "code": "-- SET_FRONTEND_RADIO_ACTIVE\nSetFrontendRadioActive(\n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Allows the radio to be played in the frontend."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetGlobalRadioSignalLevel",
    "hash": "0x159B7318403A1CD8",
    "code": "-- SET_GLOBAL_RADIO_SIGNAL_LEVEL\nSetGlobalRadioSignalLevel(\n\tsignalLevel --[[ number ]]\n)",
    "parameters": [
      "signalLevel: \n\nRadio signal level."
    ],
    "returns": [],
    "description": "Parameters:\n\nsignalLevel: \n\nRadio signal level.\n\nSets the global radio signal level, lower value will cause radio static. Used only a handful of times in scripts."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetGpsActive",
    "hash": "0x3BD3F52BA9B1E4E8",
    "code": "-- SET_GPS_ACTIVE\nSetGpsActive(\n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetHornEnabled",
    "hash": "0x76D683C108594D0E",
    "code": "-- SET_HORN_ENABLED\nSetHornEnabled(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetInitialPlayerStation",
    "hash": "0x88795F13FACDA88D",
    "code": "-- SET_INITIAL_PLAYER_STATION\nSetInitialPlayerStation(\n\tradioStation --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetMicrophonePosition",
    "hash": "0xB6AE90EDDE95C762",
    "code": "-- SET_MICROPHONE_POSITION\nSetMicrophonePosition(\n\tp0 --[[ boolean ]], \n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tx3 --[[ number ]], \n\ty3 --[[ number ]], \n\tz3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If this is the correct name, what microphone? I know your TV isn't going to reach out and adjust your headset so.."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetMobilePhoneRadioState",
    "hash": "0xBF286C554784F3DF",
    "code": "-- SET_MOBILE_PHONE_RADIO_STATE\nSetMobilePhoneRadioState(\n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetMobileRadioEnabledDuringGameplay",
    "hash": "0x1098355A16064BB3",
    "code": "-- SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY\nSetMobileRadioEnabledDuringGameplay(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedAudioFootstepLoud",
    "hash": "0x0653B735BFBDFE87",
    "code": "-- _SET_PED_AUDIO_FOOTSTEP_LOUD\nSetPedAudioFootstepLoud(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enables/disables ped's \"loud\" footstep sound.\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedAudioGender",
    "hash": "0xA5342D390CDA41D6",
    "code": "-- _SET_PED_AUDIO_GENDER\nSetPedAudioGender(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedClothEventsEnabled",
    "hash": "0x29DA3CA8D8B2692D",
    "code": "-- SET_PED_CLOTH_EVENTS_ENABLED\nSetPedClothEventsEnabled(\n\tped --[[ Ped ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedIsDrunk",
    "hash": "0x95D2D383D5396B8A",
    "code": "-- SET_PED_IS_DRUNK\nSetPedIsDrunk(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the ped so they sound drunk"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedRaceAndVoiceGroup",
    "hash": "0x1B7ABE26CBCBF8C7",
    "code": "-- SET_PED_RACE_AND_VOICE_GROUP\nSetPedRaceAndVoiceGroup(\n\tped --[[ Ped ]], \n\tpedRace --[[ integer ]], \n\tpvgHash --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedVoiceFull",
    "hash": "0x40CF0D12D142A9E8",
    "code": "-- SET_PED_VOICE_FULL\nSetPedVoiceFull(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Calls the same internal function _SET_PED_VOICE_GROUP calls, but passes voiceGroupHash (defined as a parameter in the referenced native) as 0."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedVoiceGroup",
    "hash": "0x7CDC8C3B89F661B3",
    "code": "-- _SET_PED_VOICE_GROUP\nSetPedVoiceGroup(\n\tped --[[ Ped ]], \n\tvoiceGroupHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the scripts:\nAUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"PAIGE_PVG\"));\nAUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"TALINA_PVG\"));\nAUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"FEMALE_LOST_BLACK_PVG\"));\nAUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"FEMALE_LOST_WHITE_PVG\"));"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedVoiceGroupRace",
    "hash": "0x0BABC1345ABBFB16",
    "code": "-- _SET_PED_VOICE_GROUP_RACE\nSetPedVoiceGroupRace(\n\tped --[[ Ped ]], \n\tvoiceGroupHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Dat151RelType == 29\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPedWallaDensity",
    "hash": "0x149AEE66F0CB3A99",
    "code": "-- SET_PED_WALLA_DENSITY\nSetPedWallaDensity(\n\tdensity --[[ number ]], \n\tapplyValue --[[ number ]]\n)",
    "parameters": [
      "density: \n\ndesired walla density",
      "applyValue: \n\nhow much the desired density affects the actual one"
    ],
    "returns": [],
    "description": "Parameters:\n\ndensity: \n\ndesired walla density\n\napplyValue: \n\nhow much the desired density affects the actual one\n\nOverrides the calculated ped density that is used to modulate the ambient ped walla sounds (in exteriors only)\n\nIf you want to use this for interiors, use SET_PED_INTERIOR_WALLA_DENSITY"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPlayerAngry",
    "hash": "0xEA241BB04110F091",
    "code": "-- SET_PLAYER_ANGRY\nSetPlayerAngry(\n\tped --[[ Ped ]], \n\tisAngry --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a player ped to use his ANGRY speech contexts"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPlayerVehicleAlarmAudioActive",
    "hash": "0x6FDDAD856E36988A",
    "code": "-- SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE\nSetPlayerVehicleAlarmAudioActive(\n\tvehicle --[[ Vehicle ]], \n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enable player vehicle specific alarm disarm/arm sound triggering"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPortalSettingsOverride",
    "hash": "0x044DBAD7A7FA2BE5",
    "code": "-- SET_PORTAL_SETTINGS_OVERRIDE\nSetPortalSettingsOverride(\n\toldPortalSettingsName --[[ string ]], \n\tnewPortalSettingsName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPositionForNullConvPed",
    "hash": "0x33E3C6C6F2F0B506",
    "code": "-- SET_POSITION_FOR_NULL_CONV_PED\nSetPositionForNullConvPed(\n\tspeakerConversationIndex --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetPositionedPlayerVehicleRadioEmitterEnabled",
    "hash": "0xDA07819E452FFE8F",
    "code": "-- SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED\nSetPositionedPlayerVehicleRadioEmitterEnabled(\n\tenabled --[[ boolean ]]\n)",
    "parameters": [
      "enabled: \n\nenables/disables a positioned emitter for the player vehicle radio"
    ],
    "returns": [],
    "description": "Parameters:\n\nenabled: \n\nenables/disables a positioned emitter for the player vehicle radio"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioAutoUnfreeze",
    "hash": "0xC1AA9F53CE982990",
    "code": "-- SET_RADIO_AUTO_UNFREEZE\nSetRadioAutoUnfreeze(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nif true the radio will automatically unfreeze as soon as the player gets in a vehicle"
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nif true the radio will automatically unfreeze as soon as the player gets in a vehicle"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioFrontendFadeTime",
    "hash": "0x2C96CDB04FCA358E",
    "code": "-- SET_RADIO_FRONTEND_FADE_TIME\nSetRadioFrontendFadeTime(\n\tfadeTime --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioRetuneDown",
    "hash": "0xDD6BCF9E94425DF9",
    "code": "-- SET_RADIO_RETUNE_DOWN\nSetRadioRetuneDown()",
    "parameters": [],
    "returns": [],
    "description": "Sets radio to tune down. (Changes radio station)"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioRetuneUp",
    "hash": "0xFF266D1D0EB1195D",
    "code": "-- SET_RADIO_RETUNE_UP\nSetRadioRetuneUp()",
    "parameters": [],
    "returns": [],
    "description": "Sets the radio to tune up. (changes radio station)"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioStationIsVisible",
    "hash": "0x4CAFEBFA21EC188D",
    "code": "-- _SET_RADIO_STATION_IS_VISIBLE\nSetRadioStationIsVisible(\n\tradioStation --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Doesn't have an effect in Story Mode.\n\nNativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioStationMusicOnly",
    "hash": "0x774BD811F656A122",
    "code": "-- SET_RADIO_STATION_MUSIC_ONLY\nSetRadioStationMusicOnly(\n\tradioStation --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "6 calls in the b617d scripts, removed identical lines:\nAUDIO::SET_RADIO_STATION_MUSIC_ONLY(\"RADIO_01_CLASS_ROCK\", 1);\nAUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);\nAUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioToStationIndex",
    "hash": "0xA619B168B8A8570F",
    "code": "-- SET_RADIO_TO_STATION_INDEX\nSetRadioToStationIndex(\n\tradioStation --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets radio station by index."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioToStationName",
    "hash": "0xC69EDA28699D5107",
    "code": "-- SET_RADIO_TO_STATION_NAME\nSetRadioToStationName(\n\tstationName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Find the radio station list here"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioTrack",
    "hash": "0xB39786F201FEE30B",
    "code": "-- SET_RADIO_TRACK\nSetRadioTrack(\n\tradioStation --[[ string ]], \n\tradioTrack --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only found this one in the decompiled scripts:  \nAUDIO::SET_RADIO_TRACK(\"RADIO_03_HIPHOP_NEW\", \"ARM1_RADIO_STARTS\");"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetRadioTrackMix",
    "hash": "0x2CB0075110BE1E56",
    "code": "-- _SET_RADIO_TRACK_MIX\nSetRadioTrackMix(\n\tradioStationName --[[ string ]], \n\tmixName --[[ string ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetScriptUpdateDoorAudio",
    "hash": "0x06C0023BED16DD6B",
    "code": "-- SET_SCRIPT_UPDATE_DOOR_AUDIO\nSetScriptUpdateDoorAudio(\n\tdoorHash --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetSirenKeepOn",
    "hash": "0xF584CF8529B51434",
    "code": "-- _SET_SIREN_KEEP_ON\nSetSirenKeepOn(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetSirenWithNoDriver",
    "hash": "0x1FEF0683B96EBCF2",
    "code": "-- SET_SIREN_WITH_NO_DRIVER\nSetSirenWithNoDriver(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetStaticEmitterEnabled",
    "hash": "0x399D2D3B33F1B8EB",
    "code": "-- SET_STATIC_EMITTER_ENABLED\nSetStaticEmitterEnabled(\n\temitterName --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nAUDIO::SET_STATIC_EMITTER_ENABLED((Any*)\"LOS_SANTOS_VANILLA_UNICORN_01_STAGE\", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)\"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM\", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)\"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM\", false);\nThis turns off surrounding sounds not connected directly to peds."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetUserRadioControlEnabled",
    "hash": "0x19F21E63AE6EAE4E",
    "code": "-- SET_USER_RADIO_CONTROL_ENABLED\nSetUserRadioControlEnabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVariableOnCutsceneAudio",
    "hash": "0xBCC29F935ED07688",
    "code": "-- _SET_VARIABLE_ON_CUTSCENE_AUDIO\nSetVariableOnCutsceneAudio(\n\tvariableName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VARIABLE_ON_*"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVariableOnSound",
    "hash": "0xAD6B3148A78AE9B6",
    "code": "-- SET_VARIABLE_ON_SOUND\nSetVariableOnSound(\n\tsoundId --[[ integer ]], \n\tvariableName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVariableOnStream",
    "hash": "0x2F9D3834AEB9EF79",
    "code": "-- SET_VARIABLE_ON_STREAM\nSetVariableOnStream(\n\tp0 --[[ string ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the scripts, p0:  \n\"ArmWrestlingIntensity\",  \n\"INOUT\",  \n\"Monkey_Stream\",  \n\"ZoomLevel\""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVariableOnUnderWaterStream",
    "hash": "0x733ADF241531E5C2",
    "code": "-- SET_VARIABLE_ON_UNDER_WATER_STREAM\nSetVariableOnUnderWaterStream(\n\tvariableName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM(\"inTunnel\", 1.0);\nAUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM(\"inTunnel\", 0.0);"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehHasRadioOverride",
    "hash": "0x3E45765F3FBB582F",
    "code": "-- _SET_VEH_HAS_RADIO_OVERRIDE\nSetVehHasRadioOverride(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehRadioStation",
    "hash": "0x1B9C0099CB942AC6",
    "code": "-- SET_VEH_RADIO_STATION\nSetVehRadioStation(\n\tvehicle --[[ Vehicle ]], \n\tradioStation --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Find the radio station list here"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleAudioBodyDamageFactor",
    "hash": "0x01BB4D577D38BD9E",
    "code": "-- SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR\nSetVehicleAudioBodyDamageFactor(\n\tvehicle --[[ Vehicle ]], \n\tintensity --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nVehicle to modify",
      "intensity: \n\nA value 0.0 - 1.0. Higher the value, the more likely the vehicle is to make the sound while decelerating"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nVehicle to modify\n\nintensity: \n\nA value 0.0 - 1.0. Higher the value, the more likely the vehicle is to make the sound while decelerating\n\nVehicle will make a 'rattling' noise when decelerating"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleAudioEngineDamageFactor",
    "hash": "0x59E7B488451F4D3A",
    "code": "-- SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR\nSetVehicleAudioEngineDamageFactor(\n\tvehicle --[[ Vehicle ]], \n\tdamageFactor --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleBoostActive",
    "hash": "0x4A04DE7CAB2739A1",
    "code": "-- SET_VEHICLE_BOOST_ACTIVE\nSetVehicleBoostActive(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);  \nSET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);   \nWill give a boost-soundeffect."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleHornVariation",
    "hash": "0x0350E7E17BA767D0",
    "code": "-- _SET_VEHICLE_HORN_VARIATION\nSetVehicleHornVariation(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleMissileWarningEnabled",
    "hash": "0xF3365489E0DD50F9",
    "code": "-- SET_VEHICLE_MISSILE_WARNING_ENABLED\nSetVehicleMissileWarningEnabled(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nVehicle to toggle warning system for.",
      "toggle: \n\ntrue to enable, false to disable."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nVehicle to toggle warning system for.\n\ntoggle: \n\ntrue to enable, false to disable.\n\nToggles the incoming missile warning system for specified vehicle."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleRadioEnabled",
    "hash": "0x3B988190C0AA6C0B",
    "code": "-- SET_VEHICLE_RADIO_ENABLED\nSetVehicleRadioEnabled(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "can't seem to enable radio on cop cars etc"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleRadioLoud",
    "hash": "0xBB6F1CAEC68B0BCE",
    "code": "-- SET_VEHICLE_RADIO_LOUD\nSetVehicleRadioLoud(\n\tvehicle --[[ Vehicle ]], \n\tloud --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SetVehicleStartupRevSound",
    "hash": "0xF1F8157B8C3F171C",
    "code": "-- SET_VEHICLE_STARTUP_REV_SOUND\nSetVehicleStartupRevSound(\n\tvehicle --[[ Vehicle ]], \n\tsoundName --[[ string ]], \n\tsetName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Overrides the vehicle's startup engine rev sound.\n\nYou can reset this with RESET_VEHICLE_STARTUP_REV_SOUND"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SkipRadioForward",
    "hash": "0x6DDBBDD98E2E9C25",
    "code": "-- SKIP_RADIO_FORWARD\nSkipRadioForward()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SkipToNextScriptedConversationLine",
    "hash": "0x9663FE6B7A61EB00",
    "code": "-- SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE\nSkipToNextScriptedConversationLine()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "SoundVehicleHornThisFrame",
    "hash": "0x9C11908013EA4715",
    "code": "-- _SOUND_VEHICLE_HORN_THIS_FRAME\nSoundVehicleHornThisFrame(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_*"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StartAlarm",
    "hash": "0x0355EF116C4C97B2",
    "code": "-- START_ALARM\nStartAlarm(\n\talarmName --[[ string ]], \n\tskipStartup --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "You should call PREPARE_ALARM and wait for its value to be true before using this"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StartAudioScene",
    "hash": "0x013A80FC08F6E4F2",
    "code": "-- START_AUDIO_SCENE\nlocal retval --[[ boolean ]] =\n\tStartAudioScene(\n\t\tscene --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.  \nList of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StartPreloadedConversation",
    "hash": "0x23641AFE870AF385",
    "code": "-- START_PRELOADED_CONVERSATION\nStartPreloadedConversation()",
    "parameters": [],
    "returns": [],
    "description": "For use with PRELOAD_SCRIPT_CONVERSATION and GET_IS_PRELOADED_CONVERSATION_READY"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StartScriptConversation",
    "hash": "0x6B17C62C9635D2DC",
    "code": "-- START_SCRIPT_CONVERSATION\nStartScriptConversation(\n\tdisplaySubtitles --[[ boolean ]], \n\taddToBriefScreen --[[ boolean ]], \n\tcloneConversation --[[ boolean ]], \n\tinterruptible --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StartScriptPhoneConversation",
    "hash": "0x252E5F915EABB675",
    "code": "-- START_SCRIPT_PHONE_CONVERSATION\nStartScriptPhoneConversation(\n\tdisplaySubtitles --[[ boolean ]], \n\taddToBriefScreen --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopAlarm",
    "hash": "0xA1CADDCD98415A41",
    "code": "-- STOP_ALARM\nStopAlarm(\n\talarmName --[[ string ]], \n\tinstantStop --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopAllAlarms",
    "hash": "0x2F794A877ADD4C92",
    "code": "-- STOP_ALL_ALARMS\nStopAllAlarms(\n\tinstantStop --[[ boolean ]]\n)",
    "parameters": [
      "instantStop: \n\nWhether to kill the alarm instantly, or to let the audio system turn it off when it becomes inaudible"
    ],
    "returns": [],
    "description": "Parameters:\n\ninstantStop: \n\nWhether to kill the alarm instantly, or to let the audio system turn it off when it becomes inaudible"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopAudioScene",
    "hash": "0xDFE8422B3B94E688",
    "code": "-- STOP_AUDIO_SCENE\nStopAudioScene(\n\tsceneName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops the named mixing scene (which was previously started by this script)"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopAudioScenes",
    "hash": "0xBAC7FC81A75EC1A1",
    "code": "-- STOP_AUDIO_SCENES\nStopAudioScenes()",
    "parameters": [],
    "returns": [],
    "description": "Stops all mixed scenes which were previously started by this script"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopCurrentPlayingAmbientSpeech",
    "hash": "0xB8BEC0CA6F0EDB0F",
    "code": "-- STOP_CURRENT_PLAYING_AMBIENT_SPEECH\nStopCurrentPlayingAmbientSpeech(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops currently playing ambient speech."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopCurrentPlayingSpeech",
    "hash": "0x7A73D05A607734C7",
    "code": "-- STOP_CURRENT_PLAYING_SPEECH\nStopCurrentPlayingSpeech(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops currently playing speech (Pain, ambient, scripted, breathing)."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopCutsceneAudio",
    "hash": "0x806058BBDC136E06",
    "code": "-- STOP_CUTSCENE_AUDIO\nStopCutsceneAudio()",
    "parameters": [],
    "returns": [],
    "description": "Stops audio for the current cutscene."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopPedRingtone",
    "hash": "0x6C5AE23EFA885092",
    "code": "-- STOP_PED_RINGTONE\nStopPedRingtone(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops a ped's ringtone from playing"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopPedSpeaking",
    "hash": "0x9D64D7405520E3D3",
    "code": "-- STOP_PED_SPEAKING\nStopPedSpeaking(\n\tped --[[ Ped ]], \n\tshouldDisable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This doesn't stop a piece of dialogue that has been triggered.\n\nThis stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.\n\nNb. This does not sync over the network, it will only affect peds locally. Use STOP_PED_SPEAKING_SYNCED if you need to affect peds on other machines too."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopPedSpeakingSynced",
    "hash": "0xAB6781A5F3101470",
    "code": "-- STOP_PED_SPEAKING_SYNCED\nStopPedSpeakingSynced(\n\tped --[[ Ped ]], \n\tshouldDisable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This doesn't stop a piece of dialogue that has been triggered.\n\nThis stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.\n\nThe ped will also be prevented from speaking on remote machines. Use STOP_PED_SPEAKING if you just want to affect the local machine."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopScriptedConversation",
    "hash": "0xD79DEEFB53455EBA",
    "code": "-- STOP_SCRIPTED_CONVERSATION\nlocal retval --[[ integer ]] =\n\tStopScriptedConversation(\n\t\tfinishCurrentLine --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopSmokeGrenadeExplosionSounds",
    "hash": "0xE4E6DD5566D28C82",
    "code": "-- STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS\nStopSmokeGrenadeExplosionSounds()",
    "parameters": [],
    "returns": [],
    "description": "Stops all smoke grenade sounds"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopSound",
    "hash": "0xA3B0C41BA5CC0BB5",
    "code": "-- STOP_SOUND\nStopSound(\n\tsoundId --[[ integer ]]\n)",
    "parameters": [
      "soundId: \n\nThe sound id to stop"
    ],
    "returns": [],
    "description": "Parameters:\n\nsoundId: \n\nThe sound id to stop\n\nStops the sound from currently playing, there isn't a way to resume a sound after stopping it."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopStream",
    "hash": "0xA4718A1419D18151",
    "code": "-- STOP_STREAM\nStopStream()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "StopSynchronizedAudioEvent",
    "hash": "0x92D6A88E64A94430",
    "code": "-- STOP_SYNCHRONIZED_AUDIO_EVENT\nlocal retval --[[ boolean ]] =\n\tStopSynchronizedAudioEvent(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "TriggerMusicEvent",
    "hash": "0x706D57B0F50DA710",
    "code": "-- TRIGGER_MUSIC_EVENT\nlocal retval --[[ boolean ]] =\n\tTriggerMusicEvent(\n\t\teventName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W  \nAll music event names found in the b617d scripts: pastebin.com/GnYt0R3P"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "TriggerSiren",
    "hash": "0x66C3FB05206041BA",
    "code": "-- _TRIGGER_SIREN\nTriggerSiren(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "... When not in a vehicle\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UnblockSpeechContextGroup",
    "hash": "0x2ACABED337622DF2",
    "code": "-- UNBLOCK_SPEECH_CONTEXT_GROUP\nUnblockSpeechContextGroup(\n\tgroupName --[[ string ]]\n)",
    "parameters": [
      "groupName: \n\nContext group name to unblock."
    ],
    "returns": [],
    "description": "Parameters:\n\ngroupName: \n\nContext group name to unblock.\n\nNativeDB Introduced: v1493\n\nRemoves all instances of a given context block."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UnfreezeRadioStation",
    "hash": "0xFC00454CF60B91DD",
    "code": "-- UNFREEZE_RADIO_STATION\nUnfreezeRadioStation(\n\tradioStation --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UnlockMissionNewsStory",
    "hash": "0xB165AB7C248B2DC1",
    "code": "-- UNLOCK_MISSION_NEWS_STORY\nUnlockMissionNewsStory(\n\tnewsStory --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UnlockRadioStationTrackList",
    "hash": "0x031ACB6ABA18C729",
    "code": "-- UNLOCK_RADIO_STATION_TRACK_LIST\nUnlockRadioStationTrackList(\n\tradioStation --[[ string ]], \n\ttrackListName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST(\"RADIO_16_SILVERLAKE\", \"MIRRORPARK_LOCKED\");"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UnregisterScriptWithAudio",
    "hash": "0xA8638BE228D4751A",
    "code": "-- UNREGISTER_SCRIPT_WITH_AUDIO\nUnregisterScriptWithAudio()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub\n\nOn last-gen this just runs blr and this func is called by several other functions other then the native's table."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UnrequestTennisBanks",
    "hash": "0x0150B6FF25A9E2E5",
    "code": "-- UNREQUEST_TENNIS_BANKS\nUnrequestTennisBanks()",
    "parameters": [],
    "returns": [],
    "description": "Unloads tennis vocalization banks loaded with REQUEST_TENNIS_BANKS."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UpdateSoundCoord",
    "hash": "0x7EC3C679D0E7E46B",
    "code": "-- UPDATE_SOUND_COORD\nUpdateSoundCoord(\n\tsoundId --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Updates a playing sounds absolute position."
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UpdateUnlockableDjRadioTracks",
    "hash": "0x47AED84213A47510",
    "code": "-- UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS\nUpdateUnlockableDjRadioTracks(\n\tallowTrackReprioritization --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Unlocks any available DJ radio tracks based on the tuneable status\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UseFootstepScriptSweeteners",
    "hash": "0xBF4DC1784BE94DFA",
    "code": "-- USE_FOOTSTEP_SCRIPT_SWEETENERS\nUseFootstepScriptSweeteners(\n\tped --[[ Ped ]], \n\tuseSweetner --[[ boolean ]], \n\tsoundSetHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Allows script to trigger a sweetener footstep sound"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "UseSirenAsHorn",
    "hash": "0xFA932DE350266EF8",
    "code": "-- USE_SIREN_AS_HORN\nUseSirenAsHorn(\n\tvehicle --[[ Vehicle ]], \n\tsirenAsHorn --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x02e93c796abd3a97",
    "hash": "0x02E93C796ABD3A97",
    "code": "-- 0x02E93C796ABD3A97\nN_0x02e93c796abd3a97(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x11579d940949c49e",
    "hash": "0x11579D940949C49E",
    "code": "-- 0x11579D940949C49E\nN_0x11579d940949c49e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x19af7ed9b9d23058",
    "hash": "0x19AF7ED9B9D23058",
    "code": "-- 0x19AF7ED9B9D23058\nN_0x19af7ed9b9d23058()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x2dd39bf3e2f9c47f",
    "hash": "0x2DD39BF3E2F9C47F",
    "code": "-- 0x2DD39BF3E2F9C47F\nlocal retval --[[ Any ]] =\n\tN_0x2dd39bf3e2f9c47f()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v463"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x43fa0dfc5df87815",
    "hash": "0x43FA0DFC5DF87815",
    "code": "-- 0x43FA0DFC5DF87815\nN_0x43fa0dfc5df87815(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x55ecf4d13d9903b0",
    "hash": "0x55ECF4D13D9903B0",
    "code": "-- 0x55ECF4D13D9903B0\nN_0x55ecf4d13d9903b0(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x58bb377bec7cd5f4",
    "hash": "0x58BB377BEC7CD5F4",
    "code": "-- 0x58BB377BEC7CD5F4\nN_0x58bb377bec7cd5f4(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x5b9853296731e88d",
    "hash": "0x5B9853296731E88D",
    "code": "-- 0x5B9853296731E88D\nN_0x5b9853296731e88d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x8bf907833be275de",
    "hash": "0x8BF907833BE275DE",
    "code": "-- 0x8BF907833BE275DE\nN_0x8bf907833be275de(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x97ffb4adeed08066",
    "hash": "0x97FFB4ADEED08066",
    "code": "-- 0x97FFB4ADEED08066\nN_0x97ffb4adeed08066(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x9ac92eed5e4793ab",
    "hash": "0x9AC92EED5E4793AB",
    "code": "-- 0x9AC92EED5E4793AB\nN_0x9ac92eed5e4793ab()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x9bd7bd55e4533183",
    "hash": "0x9BD7BD55E4533183",
    "code": "-- 0x9BD7BD55E4533183\nN_0x9bd7bd55e4533183(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0x9d3af56e94c9ae98",
    "hash": "0x9D3AF56E94C9AE98",
    "code": "-- 0x9D3AF56E94C9AE98\nN_0x9d3af56e94c9ae98(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_H*"
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0xb542de8c3d1cb210",
    "hash": "0xB542DE8C3D1CB210",
    "code": "-- 0xB542DE8C3D1CB210\nN_0xb542de8c3d1cb210(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0xbef34b1d9624d5dd",
    "hash": "0xBEF34B1D9624D5DD",
    "code": "-- 0xBEF34B1D9624D5DD\nN_0xbef34b1d9624d5dd(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: AUDIO",
    "apiset": "API set: client",
    "name": "N_0xc1805d05e6d4fe10",
    "hash": "0xC1805D05E6D4FE10",
    "code": "-- 0xC1805D05E6D4FE10\nN_0xc1805d05e6d4fe10(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEH*"
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "AddScriptToRandomPed",
    "hash": "0x4EE5367468A65CCC",
    "code": "-- ADD_SCRIPT_TO_RANDOM_PED\nAddScriptToRandomPed(\n\tname --[[ string ]], \n\tmodel --[[ Hash ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "BRAIN::ADD_SCRIPT_TO_RANDOM_PED(\"pb_prostitute\", ${s_f_y_hooker_01}, 100, 0);\n- Nacorpio\n-----\nHardcoded to not work in Multiplayer."
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "DisableScriptBrainSet",
    "hash": "0x14D8518E9760F08F",
    "code": "-- DISABLE_SCRIPT_BRAIN_SET\nDisableScriptBrainSet(\n\tbrainSet --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "EnableScriptBrainSet",
    "hash": "0x67AA4D73F0CFA86B",
    "code": "-- ENABLE_SCRIPT_BRAIN_SET\nEnableScriptBrainSet(\n\tbrainSet --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "IsObjectWithinBrainActivationRange",
    "hash": "0xCCBA154209823057",
    "code": "-- IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE\nlocal retval --[[ boolean ]] =\n\tIsObjectWithinBrainActivationRange(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "IsWorldPointWithinBrainActivationRange",
    "hash": "0xC5042CC6F5E3D450",
    "code": "-- IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE\nlocal retval --[[ boolean ]] =\n\tIsWorldPointWithinBrainActivationRange()",
    "parameters": [],
    "returns": [],
    "description": "Gets whether the world point the calling script is registered to is within desired range of the player."
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "RegisterObjectScriptBrain",
    "hash": "0x0BE84C318BA6EC22",
    "code": "-- REGISTER_OBJECT_SCRIPT_BRAIN\nRegisterObjectScriptBrain(\n\tscriptName --[[ string ]], \n\tmodelHash --[[ Hash ]], \n\tp2 --[[ integer ]], \n\tactivationRange --[[ number ]], \n\tp4 --[[ integer ]], \n\tp5 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Registers a script for any object with a specific model hash.\nBRAIN::REGISTER_OBJECT_SCRIPT_BRAIN(\"ob_telescope\", ${prop_telescope_01}, 100, 4.0, -1, 9);"
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "RegisterWorldPointScriptBrain",
    "hash": "0x3CDC7136613284BD",
    "code": "-- REGISTER_WORLD_POINT_SCRIPT_BRAIN\nRegisterWorldPointScriptBrain(\n\tscriptName --[[ string ]], \n\tactivationRange --[[ number ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "N_0x0b40ed49d7d6ff84",
    "hash": "0x0B40ED49D7D6FF84",
    "code": "-- 0x0B40ED49D7D6FF84\nN_0x0b40ed49d7d6ff84()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "N_0x4d953df78ebf8158",
    "hash": "0x4D953DF78EBF8158",
    "code": "-- 0x4D953DF78EBF8158\nN_0x4d953df78ebf8158()",
    "parameters": [],
    "returns": [],
    "description": "Something like flush_all_scripts   \nMost of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()"
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "N_0x6d6840cee8845831",
    "hash": "0x6D6840CEE8845831",
    "code": "-- 0x6D6840CEE8845831\nN_0x6d6840cee8845831(\n\taction --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Possible values:  \nact_cinema  \nam_mp_carwash_launch  \nam_mp_carwash_control  \nam_mp_property_ext  \nchop  \nfairgroundHub  \nlauncher_BasejumpHeli  \nlauncher_BasejumpPack  \nlauncher_CarWash  \nlauncher_golf  \nlauncher_Hunting_Ambient  \nlauncher_MrsPhilips  \nlauncher_OffroadRacing  \nlauncher_pilotschool  \nlauncher_Racing  \nlauncher_rampage  \nlauncher_rampage  \nlauncher_range  \nlauncher_stunts  \nlauncher_stunts  \nlauncher_tennis  \nlauncher_Tonya  \nlauncher_Triathlon  \nlauncher_Yoga  \nob_mp_bed_low  \nob_mp_bed_med"
  },
  {
    "namespace": "Namespace: BRAIN",
    "apiset": "API set: client",
    "name": "N_0x6e91b04e08773030",
    "hash": "0x6E91B04E08773030",
    "code": "-- 0x6E91B04E08773030\nN_0x6e91b04e08773030(\n\taction --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar  \nHere are possible values of argument -   \n\"ob_tv\"  \n\"launcher_Darts\""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ActivateCamWithInterpAndFovCurve",
    "hash": "0x34CFC4C2A38E83E3",
    "code": "-- _ACTIVATE_CAM_WITH_INTERP_AND_FOV_CURVE\nActivateCamWithInterpAndFovCurve(\n\tcamTo --[[ Cam ]], \n\tcamFrom --[[ Cam ]], \n\tduration --[[ integer ]], \n\teaseLocation --[[ integer ]], \n\teaseRotation --[[ integer ]], \n\teaseFove --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3258"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AddCamSplineNode",
    "hash": "0x8609C75EC438FB3B",
    "code": "-- ADD_CAM_SPLINE_NODE\nAddCamSplineNode(\n\tcamera --[[ Cam ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\txRot --[[ number ]], \n\tyRot --[[ number ]], \n\tzRot --[[ number ]], \n\tlength --[[ integer ]], \n\tp8 --[[ integer ]], \n\ttransitionType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.  \np7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one  \np8 big values ~100 will slow down the camera movement before reaching this node  \np9 != 0 seems to override the rotation/pitch (bool?)"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AddCamSplineNodeUsingCamera",
    "hash": "0x0FB82563989CF4FB",
    "code": "-- ADD_CAM_SPLINE_NODE_USING_CAMERA\nAddCamSplineNodeUsingCamera(\n\tcam --[[ Cam ]], \n\tcam2 --[[ Cam ]], \n\tlength --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [
      "cam: \n\nCamera to add cam2 as a node to",
      "cam2: \n\nCamera used for reference",
      "length: \n\nDuration used for transition, has no effect for the first node.",
      "p3:"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nCamera to add cam2 as a node to\n\ncam2: \n\nCamera used for reference\n\nlength: \n\nDuration used for transition, has no effect for the first node.\n\np3:\n\nTakes a camera and uses the information from it as a camera spline node."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AddCamSplineNodeUsingCameraFrame",
    "hash": "0x0A9F2A468B328E74",
    "code": "-- ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME\nAddCamSplineNodeUsingCameraFrame(\n\tcam --[[ Cam ]], \n\tcam2 --[[ Cam ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AddCamSplineNodeUsingGameplayFrame",
    "hash": "0x609278246A29CA34",
    "code": "-- ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME\nAddCamSplineNodeUsingGameplayFrame(\n\tcam --[[ Cam ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AnimateGameplayCamZoom",
    "hash": "0xDF2E1F7742402E81",
    "code": "-- _ANIMATE_GAMEPLAY_CAM_ZOOM\nAnimateGameplayCamZoom(\n\tp0 --[[ number ]], \n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Seems to animate the gameplay camera zoom.  \nEg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);  \nwill animate the camera zooming in from 1000 meters away.  \nGame scripts use it like this:  \n// Setting this to 1 prevents V key from changing zoom  \nPLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);  \n// These restrict how far you can move cam up/down left/right  \nCAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);  \nCAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);  \nCAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AnimatedShakeCam",
    "hash": "0xA2746EEAE3E577CD",
    "code": "-- ANIMATED_SHAKE_CAM\nAnimatedShakeCam(\n\tcam --[[ Cam ]], \n\tp1 --[[ string ]], \n\tp2 --[[ string ]], \n\tp3 --[[ string ]], \n\tamplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example from michael2 script.  \nCAM::ANIMATED_SHAKE_CAM(l_5069, \"shake_cam_all@\", \"light\", \"\", 1f);"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AnimatedShakeScriptGlobal",
    "hash": "0xC2EAE3FB8CDBED31",
    "code": "-- ANIMATED_SHAKE_SCRIPT_GLOBAL\nAnimatedShakeScriptGlobal(\n\tp0 --[[ string ]], \n\tp1 --[[ string ]], \n\tp2 --[[ string ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL(\"SHAKE_CAM_medium\", \"medium\", \"\", 0.5f);"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AttachCamToEntity",
    "hash": "0xFEDB7D269E8C60E3",
    "code": "-- ATTACH_CAM_TO_ENTITY\nAttachCamToEntity(\n\tcam --[[ Cam ]], \n\tentity --[[ Entity ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tisRelative --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle.",
      "entity: \n\nThe entity handle.",
      "xOffset: \n\nX-axis offset",
      "yOffset: \n\nY-axis offset",
      "zOffset: \n\nZ-axis offset",
      "isRelative: \n\nWhether or not the camera will be relative to the entity"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle.\n\nentity: \n\nThe entity handle.\n\nxOffset: \n\nX-axis offset\n\nyOffset: \n\nY-axis offset\n\nzOffset: \n\nZ-axis offset\n\nisRelative: \n\nWhether or not the camera will be relative to the entity\n\nLast param determines if its relative to the Entity"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AttachCamToPedBone",
    "hash": "0x61A3DBA14AB7F411",
    "code": "-- ATTACH_CAM_TO_PED_BONE\nAttachCamToPedBone(\n\tcam --[[ Cam ]], \n\tped --[[ Ped ]], \n\tboneIndex --[[ integer ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tisRelative --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle.",
      "ped: \n\nThe ped handle.",
      "boneIndex: \n\nThis is different to boneID, use 'GET_PED_BONE_INDEX' to get the index from the ID. use the index for attaching to specific bones. cam will be attached to the center of ped if bone index given doesn't correspond to bone indexes for that entity type.",
      "xOffset: \n\nX-axis offset",
      "yOffset: \n\nY-axis offset",
      "zOffset: \n\nZ-axis offset",
      "isRelative: \n\nWhether or not the camera will be relative to the bone"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle.\n\nped: \n\nThe ped handle.\n\nboneIndex: \n\nThis is different to boneID, use 'GET_PED_BONE_INDEX' to get the index from the ID. use the index for attaching to specific bones. cam will be attached to the center of ped if bone index given doesn't correspond to bone indexes for that entity type.\n\nxOffset: \n\nX-axis offset\n\nyOffset: \n\nY-axis offset\n\nzOffset: \n\nZ-axis offset\n\nisRelative: \n\nWhether or not the camera will be relative to the bone\n\nThis native works with peds only."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "AttachCamToVehicleBone",
    "hash": "0x8DB3F12A02CAEF72",
    "code": "-- _ATTACH_CAM_TO_VEHICLE_BONE\nAttachCamToVehicleBone(\n\tcam --[[ Cam ]], \n\tvehicle --[[ Vehicle ]], \n\tboneIndex --[[ integer ]], \n\trelativeRotation --[[ boolean ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\toffX --[[ number ]], \n\toffY --[[ number ]], \n\toffZ --[[ number ]], \n\tfixedDirection --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle.",
      "vehicle: \n\nThe vehicle handle.",
      "boneIndex:",
      "relativeRotation: \n\nWhether or not the camera rotation will relative the vehicle rotation.",
      "rotX: \n\nThe X rotation.",
      "rotY: \n\nThe Y rotation.",
      "rotZ: \n\nThe Z rotation.",
      "offX: \n\nThe X offset direction.",
      "offY: \n\nThe Y offset direction.",
      "offZ: \n\nThe Z offset direction.",
      "fixedDirection: \n\nWhether or not the camera direction will relative to the vehicle direction."
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle.\n\nvehicle: \n\nThe vehicle handle.\n\nboneIndex:\nrelativeRotation: \n\nWhether or not the camera rotation will relative the vehicle rotation.\n\nrotX: \n\nThe X rotation.\n\nrotY: \n\nThe Y rotation.\n\nrotZ: \n\nThe Z rotation.\n\noffX: \n\nThe X offset direction.\n\noffY: \n\nThe Y offset direction.\n\noffZ: \n\nThe Z offset direction.\n\nfixedDirection: \n\nWhether or not the camera direction will relative to the vehicle direction.\n\nThis native works with vehicles only. Bone indexes are usually given by this native GET_ENTITY_BONE_INDEX_BY_NAME."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ClampGameplayCamPitch",
    "hash": "0xA516C198B7DCA1E1",
    "code": "-- _CLAMP_GAMEPLAY_CAM_PITCH\nClampGameplayCamPitch(\n\tminimum --[[ number ]], \n\tmaximum --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "minimum: Degrees between -90f and 90f.\nmaximum: Degrees between -90f and 90f.\nClamps the gameplay camera's current pitch.\nEg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ClampGameplayCamYaw",
    "hash": "0x8F993D26E0CA5E8E",
    "code": "-- _CLAMP_GAMEPLAY_CAM_YAW\nClampGameplayCamYaw(\n\tminimum --[[ number ]], \n\tmaximum --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "minimum: Degrees between -180f and 180f.\nmaximum: Degrees between -180f and 180f.\nClamps the gameplay camera's current yaw.\nEg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "CreateCam",
    "hash": "0xC3981DCE61D9E13F",
    "code": "-- CREATE_CAM\nlocal retval --[[ Cam ]] =\n\tCreateCam(\n\t\tcamName --[[ string ]], \n\t\tactive --[[ boolean ]]\n\t)",
    "parameters": [
      "camName: \n\nA string representing the camera type, the game will convert the string into a joaat hash upon native execution.",
      "active: \n\nSet to true if you wish to make this new camera the active camera."
    ],
    "returns": [
      "A camera handle referencing the camera that was created."
    ],
    "description": "Parameters:\n\ncamName: \n\nA string representing the camera type, the game will convert the string into a joaat hash upon native execution.\n\nactive: \n\nSet to true if you wish to make this new camera the active camera.\n\nReturns:\n\nA camera handle referencing the camera that was created.\n\nCreates a camera with the specified cam name, You can use SET_CAM_ natives to manipulate the camera.\\ Make sure to call RENDER_SCRIPT_CAMS once the camera is created, or this won't have any visible effect.\n\nCamera names:\nDEFAULT_SCRIPTED_CAMERA\nDEFAULT_ANIMATED_CAMERA\nDEFAULT_SPLINE_CAMERA\nDEFAULT_SCRIPTED_FLY_CAMERA\nTIMED_SPLINE_CAMERA\nCUSTOM_TIMED_SPLINE_CAMERA\nROUNDED_SPLINE_CAMERA\nSMOOTHED_SPLINE_CAMERA"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "CreateCamWithParams",
    "hash": "0xB51194800B257161",
    "code": "-- CREATE_CAM_WITH_PARAMS\nlocal retval --[[ Cam ]] =\n\tCreateCamWithParams(\n\t\tcamName --[[ string ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tfov --[[ number ]], \n\t\tactive --[[ boolean ]], \n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [
      "camName: \n\nA string representing the camera type, the game will convert the string into a joaat hash upon native execution.",
      "posX: \n\nThe x position of the camera (you can also send a vector3 instead of the bulk coordinates)",
      "posY: \n\nThe y position of the camera (you can also send a vector3 instead of the bulk coordinates)",
      "posZ: \n\nThe z position of the camera (you can also send a vector3 instead of the bulk coordinates)",
      "rotX: \n\nThe x rotation of the camera",
      "rotY: \n\nThe y rotation of the camera",
      "rotZ: \n\nThe z rotation of the camera",
      "fov: \n\nThe Field Of View of the camera, is the observable world that is seen",
      "active: \n\nSet to true if you wish to make this new camera the active camera.",
      "rotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION"
    ],
    "returns": [
      "A camera handle."
    ],
    "description": "Parameters:\n\ncamName: \n\nA string representing the camera type, the game will convert the string into a joaat hash upon native execution.\n\nposX: \n\nThe x position of the camera (you can also send a vector3 instead of the bulk coordinates)\n\nposY: \n\nThe y position of the camera (you can also send a vector3 instead of the bulk coordinates)\n\nposZ: \n\nThe z position of the camera (you can also send a vector3 instead of the bulk coordinates)\n\nrotX: \n\nThe x rotation of the camera\n\nrotY: \n\nThe y rotation of the camera\n\nrotZ: \n\nThe z rotation of the camera\n\nfov: \n\nThe Field Of View of the camera, is the observable world that is seen\n\nactive: \n\nSet to true if you wish to make this new camera the active camera.\n\nrotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION\n\nReturns:\n\nA camera handle.\n\nCreate a camera with the specified cam name/type, You can use SET_CAM_ natives to manipulate the camera.\n\nTake a look at CREATE_CAM if you would like to see the available camera names."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "CreateCamera",
    "hash": "0x5E3CF89C6BCCA67D",
    "code": "-- CREATE_CAMERA\nlocal retval --[[ Cam ]] =\n\tCreateCamera(\n\t\tcamHash --[[ Hash ]], \n\t\tactive --[[ boolean ]]\n\t)",
    "parameters": [
      "camHash: \n\nThe hash of the camera type, use GET_HASH_KEY to get the camera hash from the name.",
      "active: \n\nSet to true if you wish to make this new camera the active camera."
    ],
    "returns": [
      "A camera handle referencing the camera that was created."
    ],
    "description": "Parameters:\n\ncamHash: \n\nThe hash of the camera type, use GET_HASH_KEY to get the camera hash from the name.\n\nactive: \n\nSet to true if you wish to make this new camera the active camera.\n\nReturns:\n\nA camera handle referencing the camera that was created.\n\nCreates a camera with the specified camera hash, You can use SET_CAM_ natives to manipulate the camera. Make sure to call RENDER_SCRIPT_CAMS once the camera is created, or this won't have any visible effect.\n\nTake a look at CREATE_CAM if you would like to see the available camera names.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "CreateCameraWithParams",
    "hash": "0x6ABFA3E16460F22D",
    "code": "-- CREATE_CAMERA_WITH_PARAMS\nlocal retval --[[ Cam ]] =\n\tCreateCameraWithParams(\n\t\tcamHash --[[ Hash ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tfov --[[ number ]], \n\t\tactive --[[ boolean ]], \n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [
      "camHash: \n\nThe hash of the camera type, use GET_HASH_KEY to get the camera hash from the name.",
      "posX: \n\nThe x position of the camera.",
      "posY: \n\nThe y position of the camera.",
      "posZ: \n\nThe z position of the camera.",
      "rotX: \n\nThe x rotation of the camera.",
      "rotY: \n\nThe y rotation of the camera.",
      "rotZ: \n\nThe z rotation of the camera.",
      "fov: \n\nThe Field Of View of the camera, is the observable world that is seen.",
      "active: \n\nSet to true if you wish to make this new camera the active camera.",
      "rotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION."
    ],
    "returns": [
      "A camera handle."
    ],
    "description": "Parameters:\n\ncamHash: \n\nThe hash of the camera type, use GET_HASH_KEY to get the camera hash from the name.\n\nposX: \n\nThe x position of the camera.\n\nposY: \n\nThe y position of the camera.\n\nposZ: \n\nThe z position of the camera.\n\nrotX: \n\nThe x rotation of the camera.\n\nrotY: \n\nThe y rotation of the camera.\n\nrotZ: \n\nThe z rotation of the camera.\n\nfov: \n\nThe Field Of View of the camera, is the observable world that is seen.\n\nactive: \n\nSet to true if you wish to make this new camera the active camera.\n\nrotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION.\n\nReturns:\n\nA camera handle.\n\nCreate a camera with the specified camera hash, You can use SET_CAM_ natives to manipulate the camera. Make sure to call RENDER_SCRIPT_CAMS once the camera is created, or this won't have any visible effect.\n\nTake a look at CREATE_CAM if you would like to see the available camera names.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "CreateCinematicShot",
    "hash": "0x741B0129D4560F31",
    "code": "-- CREATE_CINEMATIC_SHOT\nCreateCinematicShot(\n\tp0 --[[ Any ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ Any ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "CustomMenuCoordinates",
    "hash": "0x487A82C650EB7799",
    "code": "-- CUSTOM_MENU_COORDINATES\nCustomMenuCoordinates(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DestroyAllCams",
    "hash": "0x8E5FB15663F79120",
    "code": "-- DESTROY_ALL_CAMS\nDestroyAllCams(\n\tbScriptHostCam --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "BOOL param indicates whether the cam should be destroyed if it belongs to the calling script."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DestroyCam",
    "hash": "0x865908C81A2C22E9",
    "code": "-- DESTROY_CAM\nDestroyCam(\n\tcam --[[ Cam ]], \n\tbScriptHostCam --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "BOOL param indicates whether the cam should be destroyed if it belongs to the calling script."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DetachCam",
    "hash": "0xA2FABBE87F4BAD82",
    "code": "-- DETACH_CAM\nDetachCam(\n\tcam --[[ Cam ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DisableAimCamThisUpdate",
    "hash": "0x1A31FE0049E542F6",
    "code": "-- DISABLE_AIM_CAM_THIS_UPDATE\nDisableAimCamThisUpdate()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DisableCamCollisionForEntity",
    "hash": "0x2AED6301F67007D5",
    "code": "-- _DISABLE_CAM_COLLISION_FOR_ENTITY\nDisableCamCollisionForEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DisableCamCollisionForObject",
    "hash": "0x49482F9FCD825AAA",
    "code": "-- DISABLE_CAM_COLLISION_FOR_OBJECT\nDisableCamCollisionForObject(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DisableCinematicBonnetCameraThisUpdate",
    "hash": "0xADFF1B2A555F5FBA",
    "code": "-- DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE\nDisableCinematicBonnetCameraThisUpdate()",
    "parameters": [],
    "returns": [],
    "description": "Disables first person camera while in a vehicle for the current tick."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DisableOnFootFirstPersonViewThisUpdate",
    "hash": "0xDE2EF5DA284CC8DF",
    "code": "-- DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE\nDisableOnFootFirstPersonViewThisUpdate()",
    "parameters": [],
    "returns": [],
    "description": "Disables first person camera while on foot for the current tick."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DoScreenFadeIn",
    "hash": "0xD4E8E24955024033",
    "code": "-- DO_SCREEN_FADE_IN\nDoScreenFadeIn(\n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Fades the screen in.  \nduration: The time the fade should take, in milliseconds."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DoScreenFadeOut",
    "hash": "0x891B5B39AC6302AF",
    "code": "-- DO_SCREEN_FADE_OUT\nDoScreenFadeOut(\n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Fades the screen out.  \nduration: The time the fade should take, in milliseconds."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "DoesCamExist",
    "hash": "0xA7A932170592B50E",
    "code": "-- DOES_CAM_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesCamExist(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [
      "cam: \n\nThe camera handle to look for."
    ],
    "returns": [
      "A boolean value representing whether the camera exists or not."
    ],
    "description": "Parameters:\n\ncam: \n\nThe camera handle to look for.\n\nReturns:\n\nA boolean value representing whether the camera exists or not.\n\nLooks up a camera handle in the current camera pool and returns true if the handle is found, otherwise it returns false."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "EnableCrosshairThisFrame",
    "hash": "0xEA7F0AD7E9BA676F",
    "code": "-- _ENABLE_CROSSHAIR_THIS_FRAME\nEnableCrosshairThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ForceCinematicRenderingThisUpdate",
    "hash": "0xA41BCD7213805AAC",
    "code": "-- FORCE_CINEMATIC_RENDERING_THIS_UPDATE\nForceCinematicRenderingThisUpdate(\n\tenable --[[ boolean ]]\n)",
    "parameters": [
      "enable: \n\nWhether it should force the cinematic rendering or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nenable: \n\nWhether it should force the cinematic rendering or not.\n\nForces the camera to be in cinematic mode while the player is in a car. This has to be called every frame, e.g. in a Wait(0) loop."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamActiveViewModeContext",
    "hash": "0x19CAFA3C87F7C2FF",
    "code": "-- _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT\nlocal retval --[[ integer ]] =\n\tGetCamActiveViewModeContext()",
    "parameters": [],
    "returns": [
      "The active view mode context."
    ],
    "description": "Returns:\n\nThe active view mode context.\n\nEnumerated type defined in camControlHelperMetadataViewModes:\n\nenum eContext {\n    ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*\n    IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*\n    ON_BIKE = 2,\n    IN_BOAT = 3,\n    IN_AIRCRAFT = 4,\n    IN_SUBMARINE = 5,\n    IN_HELI = 6,\n    IN_TURRET = 7,\n}"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamAnimCurrentPhase",
    "hash": "0xA10B2DB49E92A6B0",
    "code": "-- GET_CAM_ANIM_CURRENT_PHASE\nlocal retval --[[ number ]] =\n\tGetCamAnimCurrentPhase(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamCoord",
    "hash": "0xBAC038F7459AE5AE",
    "code": "-- GET_CAM_COORD\nlocal retval --[[ vector3 ]] =\n\tGetCamCoord(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamDofStrength",
    "hash": "0x06D153C0B99B6128",
    "code": "-- _GET_CAM_DOF_STRENGTH\nlocal retval --[[ number ]] =\n\tGetCamDofStrength(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamFarClip",
    "hash": "0xB60A9CFEB21CA6AA",
    "code": "-- GET_CAM_FAR_CLIP\nlocal retval --[[ number ]] =\n\tGetCamFarClip(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamFarDof",
    "hash": "0x255F8DAFD540D397",
    "code": "-- GET_CAM_FAR_DOF\nlocal retval --[[ number ]] =\n\tGetCamFarDof(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamFov",
    "hash": "0xC3330A45CCCDB26A",
    "code": "-- GET_CAM_FOV\nlocal retval --[[ number ]] =\n\tGetCamFov(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamNearClip",
    "hash": "0xC520A34DAFBF24B1",
    "code": "-- GET_CAM_NEAR_CLIP\nlocal retval --[[ number ]] =\n\tGetCamNearClip(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamNearDof",
    "hash": "0xC2612D223D915A1C",
    "code": "-- _GET_CAM_NEAR_DOF\nlocal retval --[[ number ]] =\n\tGetCamNearDof(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamRot",
    "hash": "0x7D304C1C955E3E12",
    "code": "-- GET_CAM_ROT\nlocal retval --[[ vector3 ]] =\n\tGetCamRot(\n\t\tcam --[[ Cam ]], \n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [
      "cam: \n\nThe camera handle.",
      "rotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION"
    ],
    "returns": [
      "A Vector3 representing the camera rotation in degrees."
    ],
    "description": "Parameters:\n\ncam: \n\nThe camera handle.\n\nrotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION\n\nReturns:\n\nA Vector3 representing the camera rotation in degrees.\n\nGets a camera's rotation by handle (cam) lookup, outputs a Vector3 in degrees."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamSplineNodeIndex",
    "hash": "0xB22B17DF858716A6",
    "code": "-- GET_CAM_SPLINE_NODE_INDEX\nlocal retval --[[ integer ]] =\n\tGetCamSplineNodeIndex(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamSplineNodePhase",
    "hash": "0xD9D0E694C8282C96",
    "code": "-- GET_CAM_SPLINE_NODE_PHASE\nlocal retval --[[ number ]] =\n\tGetCamSplineNodePhase(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamSplinePhase",
    "hash": "0xB5349E36C546509A",
    "code": "-- GET_CAM_SPLINE_PHASE\nlocal retval --[[ number ]] =\n\tGetCamSplinePhase(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.  \n(returns 1.0f when no nodes has been added, reached end of non existing spline)"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetCamViewModeForContext",
    "hash": "0xEE778F8C7E1142E2",
    "code": "-- GET_CAM_VIEW_MODE_FOR_CONTEXT\nlocal retval --[[ integer ]] =\n\tGetCamViewModeForContext(\n\t\tcontext --[[ integer ]]\n\t)",
    "parameters": [
      "context: \n\nSee _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT."
    ],
    "returns": [],
    "description": "Parameters:\n\ncontext: \n\nSee _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT.\n\nSee GET_FOLLOW_PED_CAM_VIEW_MODE for the view mode enum."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetDebugCamera",
    "hash": "0x77C3CEC46BE286F6",
    "code": "-- _GET_DEBUG_CAMERA\nlocal retval --[[ Cam ]] =\n\tGetDebugCamera()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamCoord",
    "hash": "0xA200EB1EE790F448",
    "code": "-- GET_FINAL_RENDERED_CAM_COORD\nlocal retval --[[ vector3 ]] =\n\tGetFinalRenderedCamCoord()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamFarClip",
    "hash": "0xDFC8CBC606FDB0FC",
    "code": "-- GET_FINAL_RENDERED_CAM_FAR_CLIP\nlocal retval --[[ number ]] =\n\tGetFinalRenderedCamFarClip()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamFarDof",
    "hash": "0x9780F32BCAF72431",
    "code": "-- GET_FINAL_RENDERED_CAM_FAR_DOF\nlocal retval --[[ number ]] =\n\tGetFinalRenderedCamFarDof()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamFov",
    "hash": "0x80EC114669DAEFF4",
    "code": "-- GET_FINAL_RENDERED_CAM_FOV\nlocal retval --[[ number ]] =\n\tGetFinalRenderedCamFov()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamMotionBlurStrength",
    "hash": "0x162F9D995753DC19",
    "code": "-- GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH\nlocal retval --[[ number ]] =\n\tGetFinalRenderedCamMotionBlurStrength()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamNearClip",
    "hash": "0xD0082607100D7193",
    "code": "-- GET_FINAL_RENDERED_CAM_NEAR_CLIP\nlocal retval --[[ number ]] =\n\tGetFinalRenderedCamNearClip()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamNearDof",
    "hash": "0xA03502FC581F7D9B",
    "code": "-- GET_FINAL_RENDERED_CAM_NEAR_DOF\nlocal retval --[[ number ]] =\n\tGetFinalRenderedCamNearDof()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedCamRot",
    "hash": "0x5B4E4C817FCC2DFB",
    "code": "-- GET_FINAL_RENDERED_CAM_ROT\nlocal retval --[[ vector3 ]] =\n\tGetFinalRenderedCamRot(\n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedInWhenFriendlyFov",
    "hash": "0x5F35F6732C3FBBA0",
    "code": "-- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_FOV\nlocal retval --[[ number ]] =\n\tGetFinalRenderedInWhenFriendlyFov(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFinalRenderedInWhenFriendlyRot",
    "hash": "0x26903D9CD1175F2C",
    "code": "-- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_ROT\nlocal retval --[[ vector3 ]] =\n\tGetFinalRenderedInWhenFriendlyRot(\n\t\tplayer --[[ Player ]], \n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFirstPersonAimCamZoomFactor",
    "hash": "0x7EC52CC40597D170",
    "code": "-- GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR\nlocal retval --[[ number ]] =\n\tGetFirstPersonAimCamZoomFactor()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFocusPedOnScreen",
    "hash": "0x89215EC747DF244A",
    "code": "-- GET_FOCUS_PED_ON_SCREEN\nlocal retval --[[ Ped ]] =\n\tGetFocusPedOnScreen(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ number ]], \n\t\tp7 --[[ integer ]], \n\t\tp8 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFollowPedCamViewMode",
    "hash": "0x8D4D46230B2C353A",
    "code": "-- GET_FOLLOW_PED_CAM_VIEW_MODE\nlocal retval --[[ integer ]] =\n\tGetFollowPedCamViewMode()",
    "parameters": [],
    "returns": [
      "Returns a value from the view mode enumeration"
    ],
    "description": "Returns:\n\nReturns a value from the view mode enumeration\n\n// view mode enumeration\nenum eCamViewMode \n{\n\tTHIRD_PERSON_NEAR = 0,\n\tTHIRD_PERSON_MEDIUM = 1,\n\tTHIRD_PERSON_FAR = 2,\n\tCINEMATIC = 3,\n\tFIRST_PERSON = 4,\n};"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFollowPedCamZoomLevel",
    "hash": "0x33E6C8EFD0CD93E9",
    "code": "-- GET_FOLLOW_PED_CAM_ZOOM_LEVEL\nlocal retval --[[ integer ]] =\n\tGetFollowPedCamZoomLevel()",
    "parameters": [],
    "returns": [],
    "description": "See GET_FOLLOW_PED_CAM_VIEW_MODE for the follow mode enum."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFollowVehicleCamViewMode",
    "hash": "0xA4FF579AC0E3AAAE",
    "code": "-- GET_FOLLOW_VEHICLE_CAM_VIEW_MODE\nlocal retval --[[ integer ]] =\n\tGetFollowVehicleCamViewMode()",
    "parameters": [],
    "returns": [],
    "description": "See GET_FOLLOW_PED_CAM_VIEW_MODE for the follow mode enum."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetFollowVehicleCamZoomLevel",
    "hash": "0xEE82280AB767B690",
    "code": "-- GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL\nlocal retval --[[ integer ]] =\n\tGetFollowVehicleCamZoomLevel()",
    "parameters": [],
    "returns": [],
    "description": "See GET_FOLLOW_PED_CAM_VIEW_MODE for the follow mode enum."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetGameplayCamCoord",
    "hash": "0x14D6F5678D8F1B37",
    "code": "-- GET_GAMEPLAY_CAM_COORD\nlocal retval --[[ vector3 ]] =\n\tGetGameplayCamCoord()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetGameplayCamFov",
    "hash": "0x65019750A0324133",
    "code": "-- GET_GAMEPLAY_CAM_FOV\nlocal retval --[[ number ]] =\n\tGetGameplayCamFov()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetGameplayCamRelativeHeading",
    "hash": "0x743607648ADD4587",
    "code": "-- GET_GAMEPLAY_CAM_RELATIVE_HEADING\nlocal retval --[[ number ]] =\n\tGetGameplayCamRelativeHeading()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetGameplayCamRelativePitch",
    "hash": "0x3A6867B4845BEDA2",
    "code": "-- GET_GAMEPLAY_CAM_RELATIVE_PITCH\nlocal retval --[[ number ]] =\n\tGetGameplayCamRelativePitch()",
    "parameters": [],
    "returns": [
      "Returns the relative pitch of the gameplay camera"
    ],
    "description": "Returns:\n\nReturns the relative pitch of the gameplay camera"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetGameplayCamRot",
    "hash": "0x837765A25378F0BB",
    "code": "-- GET_GAMEPLAY_CAM_ROT\nlocal retval --[[ vector3 ]] =\n\tGetGameplayCamRot(\n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [
      "rotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION"
    ],
    "returns": [
      "A Vector3 representing the gameplay camera rotation in degrees."
    ],
    "description": "Parameters:\n\nrotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION\n\nReturns:\n\nA Vector3 representing the gameplay camera rotation in degrees.\n\nThis function takes a rotation order and outputs a Vector3 in degrees.\n\nIt first calls a game function to calculate these values given the rotation order and effectively multiplies those values by 180/PI, hence degrees since the function it calls outputs radians which are then converted to degrees."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "GetRenderingCam",
    "hash": "0x5234F9F10919EABA",
    "code": "-- GET_RENDERING_CAM\nlocal retval --[[ Cam ]] =\n\tGetRenderingCam()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "HardAttachCamToEntity",
    "hash": "0x202A5ED9CE01D6E7",
    "code": "-- HARD_ATTACH_CAM_TO_ENTITY\nHardAttachCamToEntity(\n\tcam --[[ Cam ]], \n\tentity --[[ Entity ]], \n\txRot --[[ number ]], \n\tyRot --[[ number ]], \n\tzRot --[[ number ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tisRelative --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle.",
      "entity: \n\nThe entity handle.",
      "xRot: \n\nX-axis rotation.",
      "yRot: \n\nY-axis rotation.",
      "zRot: \n\nZ-axis rotation.",
      "xOffset: \n\nX-axis offset",
      "yOffset: \n\nY-axis offset",
      "zOffset: \n\nZ-axis offset",
      "isRelative: \n\nWhether or not the camera position will be relative to the entity rotation"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle.\n\nentity: \n\nThe entity handle.\n\nxRot: \n\nX-axis rotation.\n\nyRot: \n\nY-axis rotation.\n\nzRot: \n\nZ-axis rotation.\n\nxOffset: \n\nX-axis offset\n\nyOffset: \n\nY-axis offset\n\nzOffset: \n\nZ-axis offset\n\nisRelative: \n\nWhether or not the camera position will be relative to the entity rotation\n\nAttaches a camera to an entity, including full matrix transformations for both rotation and position offsets.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "HardAttachCamToPedBone",
    "hash": "0x149916F50C34A40D",
    "code": "-- HARD_ATTACH_CAM_TO_PED_BONE\nHardAttachCamToPedBone(\n\tcam --[[ Cam ]], \n\tped --[[ Ped ]], \n\tboneIndex --[[ integer ]], \n\txRot --[[ number ]], \n\tyRot --[[ number ]], \n\tzRot --[[ number ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tisRelative --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle.",
      "ped: \n\nThe ped handle.",
      "boneIndex: \n\nThis is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. cam will be attached to the center of ped if bone index given doesn't correspond to bone indexes for that entity type.",
      "xRot: \n\nX-axis rotation.",
      "yRot: \n\nY-axis rotation.",
      "zRot: \n\nZ-axis rotation.",
      "xOffset: \n\nX-axis offset.",
      "yOffset: \n\nY-axis offset.",
      "zOffset: \n\nZ-axis offset.",
      "isRelative: \n\nWhether or not the camera position will be relative to the bone rotation."
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle.\n\nped: \n\nThe ped handle.\n\nboneIndex: \n\nThis is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. cam will be attached to the center of ped if bone index given doesn't correspond to bone indexes for that entity type.\n\nxRot: \n\nX-axis rotation.\n\nyRot: \n\nY-axis rotation.\n\nzRot: \n\nZ-axis rotation.\n\nxOffset: \n\nX-axis offset.\n\nyOffset: \n\nY-axis offset.\n\nzOffset: \n\nZ-axis offset.\n\nisRelative: \n\nWhether or not the camera position will be relative to the bone rotation.\n\nAttaches a camera to a specific bone of a Ped, including full matrix transformations for both rotation and position offsets. This native works with peds only.\n\nNativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IgnoreMenuPreferenceForBonnetCameraThisUpdate",
    "hash": "0x7B8A361C1813FBEF",
    "code": "-- IGNORE_MENU_PREFERENCE_FOR_BONNET_CAMERA_THIS_UPDATE\nIgnoreMenuPreferenceForBonnetCameraThisUpdate()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "InterpolateCamWithParams",
    "hash": "0xDDA77EE33C005AAF",
    "code": "-- _INTERPOLATE_CAM_WITH_PARAMS\nInterpolateCamWithParams(\n\tcamera --[[ Cam ]], \n\tcamPosX --[[ number ]], \n\tcamPosY --[[ number ]], \n\tcamPosZ --[[ number ]], \n\tcamRotX --[[ number ]], \n\tcamRotY --[[ number ]], \n\tcamRotZ --[[ number ]], \n\tfov --[[ number ]], \n\tduration --[[ integer ]], \n\tposCurveType --[[ integer ]], \n\trotCurveType --[[ integer ]], \n\trotOrder --[[ integer ]], \n\tfovCurveType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Interpolates the camera to specified parameters over a set duration using various curve types for position, rotation, and fov.\n\nNativeDB Introduced: v3258"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "InvalidateIdleCam",
    "hash": "0xF4F2C0D4EE209E20",
    "code": "-- INVALIDATE_IDLE_CAM\nInvalidateIdleCam()",
    "parameters": [],
    "returns": [],
    "description": "Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "InvalidateVehicleIdleCam",
    "hash": "0x9E4CFFF989258472",
    "code": "-- _INVALIDATE_VEHICLE_IDLE_CAM\nInvalidateVehicleIdleCam()",
    "parameters": [],
    "returns": [],
    "description": "Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsAimCamActive",
    "hash": "0x68EDDA28A5976D07",
    "code": "-- IS_AIM_CAM_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsAimCamActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsAimCamThirdPersonActive",
    "hash": "0x74BD83EA840F6BC9",
    "code": "-- _IS_AIM_CAM_THIRD_PERSON_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsAimCamThirdPersonActive()",
    "parameters": [],
    "returns": [],
    "description": "IS_A*"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsAllowedIndependentCameraModes",
    "hash": "0xEAF0FA793D05C592",
    "code": "-- IS_ALLOWED_INDEPENDENT_CAMERA_MODES\nlocal retval --[[ boolean ]] =\n\tIsAllowedIndependentCameraModes()",
    "parameters": [],
    "returns": [
      "Returns if the \"Allow Independent Camera Modes\" setting in Pause Menu is turned On or Off."
    ],
    "description": "Returns:\n\nReturns if the \"Allow Independent Camera Modes\" setting in Pause Menu is turned On or Off."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsBonnetCinematicCamRendering",
    "hash": "0xD7360051C885628B",
    "code": "-- IS_BONNET_CINEMATIC_CAM_RENDERING\nlocal retval --[[ boolean ]] =\n\tIsBonnetCinematicCamRendering()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCamActive",
    "hash": "0xDFB2B516207D3534",
    "code": "-- IS_CAM_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsCamActive(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether or not the passed camera handle is active."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCamInterpolating",
    "hash": "0x036F97C908C2B52C",
    "code": "-- IS_CAM_INTERPOLATING\nlocal retval --[[ boolean ]] =\n\tIsCamInterpolating(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCamPlayingAnim",
    "hash": "0xC90621D8A0CEECF2",
    "code": "-- IS_CAM_PLAYING_ANIM\nlocal retval --[[ boolean ]] =\n\tIsCamPlayingAnim(\n\t\tcam --[[ Cam ]], \n\t\tanimName --[[ string ]], \n\t\tanimDictionary --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCamRendering",
    "hash": "0x02EC0AF5C5A49B7A",
    "code": "-- IS_CAM_RENDERING\nlocal retval --[[ boolean ]] =\n\tIsCamRendering(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCamShaking",
    "hash": "0x6B24BFE83A2BE47B",
    "code": "-- IS_CAM_SHAKING\nlocal retval --[[ boolean ]] =\n\tIsCamShaking(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCamSplinePaused",
    "hash": "0x0290F35C0AD97864",
    "code": "-- IS_CAM_SPLINE_PAUSED\nlocal retval --[[ boolean ]] =\n\tIsCamSplinePaused(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCinematicCamInputActive",
    "hash": "0xF5F1E89A970B7796",
    "code": "-- IS_CINEMATIC_CAM_INPUT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsCinematicCamInputActive()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCinematicCamRendering",
    "hash": "0xB15162CB5826E9E8",
    "code": "-- IS_CINEMATIC_CAM_RENDERING\nlocal retval --[[ boolean ]] =\n\tIsCinematicCamRendering()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCinematicCamShaking",
    "hash": "0xBBC08F6B4CB8FF0A",
    "code": "-- IS_CINEMATIC_CAM_SHAKING\nlocal retval --[[ boolean ]] =\n\tIsCinematicCamShaking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCinematicIdleCamRendering",
    "hash": "0xCA9D2AA3E326D720",
    "code": "-- IS_CINEMATIC_IDLE_CAM_RENDERING\nlocal retval --[[ boolean ]] =\n\tIsCinematicIdleCamRendering()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsCinematicShotActive",
    "hash": "0xCC9F3371A7C28BC9",
    "code": "-- IS_CINEMATIC_SHOT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsCinematicShotActive(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsFirstPersonAimCamActive",
    "hash": "0x5E346D934122613F",
    "code": "-- IS_FIRST_PERSON_AIM_CAM_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsFirstPersonAimCamActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsFollowPedCamActive",
    "hash": "0xC6D3D26810C8E0F9",
    "code": "-- IS_FOLLOW_PED_CAM_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsFollowPedCamActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsFollowVehicleCamActive",
    "hash": "0xCBBDE6D335D6D496",
    "code": "-- IS_FOLLOW_VEHICLE_CAM_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsFollowVehicleCamActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsGameplayCamLookingBehind",
    "hash": "0x70FDA869F3317EA9",
    "code": "-- IS_GAMEPLAY_CAM_LOOKING_BEHIND\nlocal retval --[[ boolean ]] =\n\tIsGameplayCamLookingBehind()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsGameplayCamRendering",
    "hash": "0x39B5D1B10383F0C8",
    "code": "-- IS_GAMEPLAY_CAM_RENDERING\nlocal retval --[[ boolean ]] =\n\tIsGameplayCamRendering()",
    "parameters": [],
    "returns": [],
    "description": "Examples when this function will return 0 are:\n- During busted screen.\n- When player is coming out from a hospital.\n- When player is coming out from a police station.\n- When player is buying gun from AmmuNation."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsGameplayCamShaking",
    "hash": "0x016C090630DF1F89",
    "code": "-- IS_GAMEPLAY_CAM_SHAKING\nlocal retval --[[ boolean ]] =\n\tIsGameplayCamShaking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsGameplayHintActive",
    "hash": "0xE520FF1AD2785B40",
    "code": "-- IS_GAMEPLAY_HINT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsGameplayHintActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsInVehicleCamDisabled",
    "hash": "0x4F32C0D5A90A9B40",
    "code": "-- _IS_IN_VEHICLE_CAM_DISABLED\nlocal retval --[[ boolean ]] =\n\tIsInVehicleCamDisabled()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsScreenFadedIn",
    "hash": "0x5A859503B0C08678",
    "code": "-- IS_SCREEN_FADED_IN\nlocal retval --[[ boolean ]] =\n\tIsScreenFadedIn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsScreenFadedOut",
    "hash": "0xB16FCE9DDC7BA182",
    "code": "-- IS_SCREEN_FADED_OUT\nlocal retval --[[ boolean ]] =\n\tIsScreenFadedOut()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsScreenFadingIn",
    "hash": "0x5C544BC6C57AC575",
    "code": "-- IS_SCREEN_FADING_IN\nlocal retval --[[ boolean ]] =\n\tIsScreenFadingIn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsScreenFadingOut",
    "hash": "0x797AC7CB535BA28F",
    "code": "-- IS_SCREEN_FADING_OUT\nlocal retval --[[ boolean ]] =\n\tIsScreenFadingOut()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsScriptGlobalShaking",
    "hash": "0xC912AF078AF19212",
    "code": "-- IS_SCRIPT_GLOBAL_SHAKING\nlocal retval --[[ boolean ]] =\n\tIsScriptGlobalShaking()",
    "parameters": [],
    "returns": [
      "Returns true if a scripted global camera shake is currently in effect, otherwise false."
    ],
    "description": "Returns:\n\nReturns true if a scripted global camera shake is currently in effect, otherwise false.\n\nDetermines if a global camera shake is currently active. You can stop the currently active global camera shake using STOP_SCRIPT_GLOBAL_SHAKING.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "IsSphereVisible",
    "hash": "0xE33D59DA70B58FDF",
    "code": "-- IS_SPHERE_VISIBLE\nlocal retval --[[ boolean ]] =\n\tIsSphereVisible(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "OverrideCamSplineMotionBlur",
    "hash": "0x7DCF7C708D292D55",
    "code": "-- OVERRIDE_CAM_SPLINE_MOTION_BLUR\nOverrideCamSplineMotionBlur(\n\tcam --[[ Cam ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Max value for p1 is 15."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "OverrideCamSplineVelocity",
    "hash": "0x40B62FA033EB0346",
    "code": "-- OVERRIDE_CAM_SPLINE_VELOCITY\nOverrideCamSplineVelocity(\n\tcam --[[ Cam ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "PlayCamAnim",
    "hash": "0x9A2D0FB2E7852392",
    "code": "-- PLAY_CAM_ANIM\nlocal retval --[[ boolean ]] =\n\tPlayCamAnim(\n\t\tcam --[[ Cam ]], \n\t\tanimName --[[ string ]], \n\t\tanimDictionary --[[ string ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tp9 --[[ boolean ]], \n\t\tp10 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.  \np9 is unknown at this time.  \np10 throughout all the X360 Scripts is always 2.  \n\n\nAnimations list"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "PlaySynchronizedCamAnim",
    "hash": "0xE32EFE9AB4A9AA0C",
    "code": "-- PLAY_SYNCHRONIZED_CAM_ANIM\nlocal retval --[[ boolean ]] =\n\tPlaySynchronizedCamAnim(\n\t\tcamera --[[ Cam ]], \n\t\tscene --[[ integer ]], \n\t\tanimName --[[ string ]], \n\t\tanimDictionary --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Examples:  \nCAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), \"PLAYER_EXIT_L_CAM\", \"mp_doorbell\");  \nCAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], \"ah3b_attackheli_cam2\", \"missheistfbi3b_helicrash\");  \n\n\nAnimations list"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "PointCamAtCoord",
    "hash": "0xF75497BB865F0803",
    "code": "-- POINT_CAM_AT_COORD\nPointCamAtCoord(\n\tcam --[[ Cam ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "PointCamAtEntity",
    "hash": "0x5640BFF86B16E8DC",
    "code": "-- POINT_CAM_AT_ENTITY\nPointCamAtEntity(\n\tcam --[[ Cam ]], \n\tentity --[[ Entity ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]], \n\toffsetZ --[[ number ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nCam (Return value of CREATE_CAM or CREATE_CAM_WITH_PARAMS).",
      "entity: \n\nEntity for the camera to point at.",
      "offsetX: \n\nX offset for the camera (left/right).",
      "offsetY: \n\nY offset for the camera (forward/backward).",
      "offsetZ: \n\nZ offset for the camera (up/down).",
      "p5: \n\nAlways seems to be 1 (true)."
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nCam (Return value of CREATE_CAM or CREATE_CAM_WITH_PARAMS).\n\nentity: \n\nEntity for the camera to point at.\n\noffsetX: \n\nX offset for the camera (left/right).\n\noffsetY: \n\nY offset for the camera (forward/backward).\n\noffsetZ: \n\nZ offset for the camera (up/down).\n\np5: \n\nAlways seems to be 1 (true).\n\nPoints the camera at the specified entity.\n\nOffset works like GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "PointCamAtPedBone",
    "hash": "0x68B2B5F33BA63C41",
    "code": "-- POINT_CAM_AT_PED_BONE\nPointCamAtPedBone(\n\tcam --[[ Cam ]], \n\tped --[[ Ped ]], \n\tboneIndex --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp6 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "RenderScriptCams",
    "hash": "0x07E5B515DB0636FC",
    "code": "-- RENDER_SCRIPT_CAMS\nRenderScriptCams(\n\trender --[[ boolean ]], \n\tease --[[ boolean ]], \n\teaseTime --[[ integer ]], \n\teaseCoordsAnim --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [
      "render: \n\nWhether to render the cams or not.",
      "ease: \n\nIf true it will make a smooth transition between the current camera and the new rendered camera.",
      "easeTime: \n\nThe in milliseconds for the transition to happen.",
      "easeCoordsAnim: \n\nIf false it will only do the smooth transition to the rotation and the coords will be set instantly.",
      "p4: \n\nDoesn't seem to change anything."
    ],
    "returns": [],
    "description": "Parameters:\n\nrender: \n\nWhether to render the cams or not.\n\nease: \n\nIf true it will make a smooth transition between the current camera and the new rendered camera.\n\neaseTime: \n\nThe in milliseconds for the transition to happen.\n\neaseCoordsAnim: \n\nIf false it will only do the smooth transition to the rotation and the coords will be set instantly.\n\np4: \n\nDoesn't seem to change anything.\n\nRenders the camera previously created with CREATE_CAM or CREATE_CAMERA\n\nNativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ReplayFreeCamGetMaxRange",
    "hash": "0x8BFCEB5EA1B161B6",
    "code": "-- _REPLAY_FREE_CAM_GET_MAX_RANGE\nlocal retval --[[ number ]] =\n\tReplayFreeCamGetMaxRange()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamActive",
    "hash": "0x026FB97D0A425F84",
    "code": "-- SET_CAM_ACTIVE\nSetCamActive(\n\tcam --[[ Cam ]], \n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Set camera as active/inactive."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamActiveWithInterp",
    "hash": "0x9FBDA379383A52A4",
    "code": "-- SET_CAM_ACTIVE_WITH_INTERP\nSetCamActiveWithInterp(\n\tcamTo --[[ Cam ]], \n\tcamFrom --[[ Cam ]], \n\tduration --[[ integer ]], \n\teaseLocation --[[ integer ]], \n\teaseRotation --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs..."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamAffectsAiming",
    "hash": "0x8C1DC7770C51DC8D",
    "code": "-- SET_CAM_AFFECTS_AIMING\nSetCamAffectsAiming(\n\tcam --[[ Cam ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Allows you to aim and shoot at the direction the camera is facing."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamAnimCurrentPhase",
    "hash": "0x4145A4C44FF3B5A6",
    "code": "-- SET_CAM_ANIM_CURRENT_PHASE\nSetCamAnimCurrentPhase(\n\tcam --[[ Cam ]], \n\tphase --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamControlsMiniMapHeading",
    "hash": "0x661B5C8654ADD825",
    "code": "-- SET_CAM_CONTROLS_MINI_MAP_HEADING\nSetCamControlsMiniMapHeading(\n\tcam --[[ Cam ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nCam handle returned by CREATE_CAM",
      "toggle: \n\nWhether or not this camera should control the minimap heading."
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nCam handle returned by CREATE_CAM\n\ntoggle: \n\nWhether or not this camera should control the minimap heading.\n\nMakes the minimap follow a scripted camera's rotation instead of the gameplay cam."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamCoord",
    "hash": "0x4D41783FB745E42E",
    "code": "-- SET_CAM_COORD\nSetCamCoord(\n\tcam --[[ Cam ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the position of the cam."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDebugName",
    "hash": "0x1B93E0107865DD40",
    "code": "-- SET_CAM_DEBUG_NAME\nSetCamDebugName(\n\tcamera --[[ Cam ]], \n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDofFnumberOfLens",
    "hash": "0x7DD234D6F3914C5B",
    "code": "-- _SET_CAM_DOF_FNUMBER_OF_LENS\nSetCamDofFnumberOfLens(\n\tcamera --[[ Cam ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native has its name defined inside its codE"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDofFocalLengthMultiplier",
    "hash": "0x47B595D60664CFFA",
    "code": "-- _SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER\nSetCamDofFocalLengthMultiplier(\n\tcamera --[[ Cam ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Native name labeled within its code"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDofFocusDistanceBias",
    "hash": "0xC669EEA5D031B7DE",
    "code": "-- _SET_CAM_DOF_FOCUS_DISTANCE_BIAS\nSetCamDofFocusDistanceBias(\n\tcamera --[[ Cam ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native has a name defined inside its code"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDofMaxNearInFocusDistance",
    "hash": "0xC3654A441402562D",
    "code": "-- _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE\nSetCamDofMaxNearInFocusDistance(\n\tcamera --[[ Cam ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native has a name defined inside its code"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDofMaxNearInFocusDistanceBlendLevel",
    "hash": "0x2C654B4943BDDF7C",
    "code": "-- _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL\nSetCamDofMaxNearInFocusDistanceBlendLevel(\n\tcamera --[[ Cam ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native has a name defined inside its code"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDofPlanes",
    "hash": "0x3CF48F6F96E749DC",
    "code": "-- SET_CAM_DOF_PLANES\nSetCamDofPlanes(\n\tcam --[[ Cam ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamDofStrength",
    "hash": "0x5EE29B4D7D5DF897",
    "code": "-- SET_CAM_DOF_STRENGTH\nSetCamDofStrength(\n\tcam --[[ Cam ]], \n\tdofStrength --[[ number ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle",
      "dofStrength: \n\nDepth of Field strength (between 0.0 and 1.0)"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle\n\ndofStrength: \n\nDepth of Field strength (between 0.0 and 1.0)\n\nSpecifies how much the DoF effect should be applied (Set using SET_CAM_NEAR_DOF, SET_CAM_FAR_DOF, etc.)"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamEffect",
    "hash": "0x80C8B1846639BB19",
    "code": "-- _SET_CAM_EFFECT\nSetCamEffect(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "if p0 is 0, effect is cancelled  \nif p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.  \nif p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamFarClip",
    "hash": "0xAE306F2A904BF86E",
    "code": "-- SET_CAM_FAR_CLIP\nSetCamFarClip(\n\tcam --[[ Cam ]], \n\tfarClip --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamFarDof",
    "hash": "0xEDD91296CD01AEE0",
    "code": "-- SET_CAM_FAR_DOF\nSetCamFarDof(\n\tcam --[[ Cam ]], \n\tfarDOF --[[ number ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle",
      "farDOF: \n\nDistance in in standard units"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle\n\nfarDOF: \n\nDistance in in standard units\n\nSpecifies when the camera should stop being in focus. Can be used together with SET_USE_HI_DOF, SET_CAM_NEAR_DOF, SET_CAM_USE_SHALLOW_DOF_MODE, SET_CAM_DOF_STRENGTH and other DoF related natives.\n\nUsage Example\n\nA usage example for this native can be found in the following native documentation: SET_CAM_DOF_STRENGTH."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamFov",
    "hash": "0xB13C14F66A00D047",
    "code": "-- SET_CAM_FOV\nSetCamFov(\n\tcam --[[ Cam ]], \n\tfieldOfView --[[ number ]]\n)",
    "parameters": [
      "cam: \n\nThe camera whose FOV is being set.",
      "fieldOfView: \n\nThe new FOV value, in degrees. Valid range is from 1.0f (minimum FOV, for a very narrow view) to 130.0f (maximum FOV, for a very wide view)."
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera whose FOV is being set.\n\nfieldOfView: \n\nThe new FOV value, in degrees. Valid range is from 1.0f (minimum FOV, for a very narrow view) to 130.0f (maximum FOV, for a very wide view).\n\nAdjusts the field of view (FOV) for a specified camera, allowing for a wider or narrower perspective of the game world. The field of view is measured in degrees and affects how much of the game world is visible at any given moment through the camera.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamInheritRollVehicle",
    "hash": "0x45F1DE9C34B93AE6",
    "code": "-- SET_CAM_INHERIT_ROLL_VEHICLE\nSetCamInheritRollVehicle(\n\tcam --[[ Cam ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The native seems to only be called once.  \nThe native is used as so,  \nCAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));  \nIn the exile1 script."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamMotionBlurStrength",
    "hash": "0x6F0F77FBA9A8F2E6",
    "code": "-- SET_CAM_MOTION_BLUR_STRENGTH\nSetCamMotionBlurStrength(\n\tcam --[[ Cam ]], \n\tstrength --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamNearClip",
    "hash": "0xC7848EFCCC545182",
    "code": "-- SET_CAM_NEAR_CLIP\nSetCamNearClip(\n\tcam --[[ Cam ]], \n\tnearClip --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamNearDof",
    "hash": "0x3FA4BF0A7AB7DE2C",
    "code": "-- SET_CAM_NEAR_DOF\nSetCamNearDof(\n\tcam --[[ Cam ]], \n\tnearDOF --[[ number ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle",
      "nearDOF: \n\nDistance in in standard units"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle\n\nnearDOF: \n\nDistance in in standard units\n\nSpecifies when the camera should start being in focus. Can be used together with SET_USE_HI_DOF, SET_CAM_FAR_DOF, SET_CAM_USE_SHALLOW_DOF_MODE, SET_CAM_DOF_STRENGTH and other DoF related natives.\n\nUsage Example\n\nA usage example for this native can be found in the following native documentation: SET_CAM_DOF_STRENGTH."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamParams",
    "hash": "0xBFD8727AEA3CCEBA",
    "code": "-- SET_CAM_PARAMS\nSetCamParams(\n\tcam --[[ Cam ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tfieldOfView --[[ number ]], \n\ttransitionSpeed --[[ integer ]], \n\tp9 --[[ integer ]], \n\tp10 --[[ integer ]], \n\trotationOrder --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamRot",
    "hash": "0x85973643155D0B07",
    "code": "-- SET_CAM_ROT\nSetCamRot(\n\tcam --[[ Cam ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\trotationOrder --[[ integer ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle to use, in order to change the rotation",
      "rotX: \n\nRotation on X",
      "rotY: \n\nRotation on Y",
      "rotZ: \n\nRotation on Z",
      "rotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle to use, in order to change the rotation\n\nrotX: \n\nRotation on X\n\nrotY: \n\nRotation on Y\n\nrotZ: \n\nRotation on Z\n\nrotationOrder: \n\nThe order of rotation, see GET_ENTITY_ROTATION\n\nSets the rotation of the camera."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamShakeAmplitude",
    "hash": "0xD93DB43B82BC0D00",
    "code": "-- SET_CAM_SHAKE_AMPLITUDE\nSetCamShakeAmplitude(\n\tcam --[[ Cam ]], \n\tamplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamSplineDuration",
    "hash": "0x1381539FEE034CDA",
    "code": "-- SET_CAM_SPLINE_DURATION\nSetCamSplineDuration(\n\tcam --[[ Cam ]], \n\ttimeDuration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamSplineNodeEase",
    "hash": "0x83B8201ED82A9A2D",
    "code": "-- SET_CAM_SPLINE_NODE_EASE\nSetCamSplineNodeEase(\n\tcam --[[ Cam ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamSplineNodeExtraFlags",
    "hash": "0x7BF1A54AE67AC070",
    "code": "-- SET_CAM_SPLINE_NODE_EXTRA_FLAGS\nSetCamSplineNodeExtraFlags(\n\tcam --[[ Cam ]], \n\tp1 --[[ integer ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamSplineNodeVelocityScale",
    "hash": "0xA6385DEB180F319F",
    "code": "-- SET_CAM_SPLINE_NODE_VELOCITY_SCALE\nSetCamSplineNodeVelocityScale(\n\tcam --[[ Cam ]], \n\tp1 --[[ integer ]], \n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamSplinePhase",
    "hash": "0x242B5874F0A4E052",
    "code": "-- SET_CAM_SPLINE_PHASE\nSetCamSplinePhase(\n\tcam --[[ Cam ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamSplineSmoothingStyle",
    "hash": "0xD1B0F412F109EA5D",
    "code": "-- SET_CAM_SPLINE_SMOOTHING_STYLE\nSetCamSplineSmoothingStyle(\n\tcam --[[ Cam ]], \n\tsmoothingStyle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the smoothing style for a DEFAULT_SPLINE_CAMERA Ranges from 0 to 3 in rockstar scripts although there are actually 26\n\n0: No lead-in or lead-out smoothing\n1: Smooth lead-in\n2: Smooth lead-out\n3: Both lead-in and lead-out are smoothed\n4-6: Longer speed up, lead-in, lead-out, and both in order as above. \n6: see above, but missed a node in testing(?)\n7: Smoothed lead-in, longer smoothed lead-out\n8: Longer lead-in and lead-out than 6, didn't drop node\n9: Constant acceleration\n10: Constant deceleration. Dropped 2 nodes in testing.\n11: Same as 0\n12: 10 but slower lead-in, reaches end node less early\n13: Extremely close to 3, slightly longer lead-in/lead-out\n14: Constant acceleration, dropped last 2 nodes in testing and halted (?)\n15: Very similar to 10, did not drop any nodes.\n16: Long lead-in, dropped 2 nodes in testing, very long leadout.\n17: Constant acceleration, slower speed-up than 9\n18: Same as 17 is to 9, slightly longer lead-out, lingers at end node\n19: Very long lead in and out\n20: Very long, gradual lead-in acceleration at start, gets extremely fast\n21: Same as 20 but for constant deceleration\n22: 20 and 21 combined, long linger at end node. Dropped 2 nodes in testing\n23: Constant acceleration, doesn't complete path before it stops\n24: Same as 23 but with constant deceleration, but completes path\n25: 23 and 24 combined, insanely fast at middle.\n26: No noticable lead-in, misses last 2 nodes in testing\n27+: Alternates between 0 and 26\n\n\nThe above is documented and graphed at Spline Cam Interp Graphs\n\nUsing 1-3 will result in misalignment from the passed durations for the spline nodes, the overall duration will remain but other nodes will be shortened if smoothing anything.\n\nGraph below demonstrates interpolation between 0-1000 and back 10 times.\n\n![](https://i.imgur.com/cixWh7m.png)\n\n## Parameters\n* **cam**: The DEFAULT_SPLINE_CAMERA to apply the smoothing to\n* **smoothingStyle**: 0 to 3, 0 no additional smoothing, 1 smooth lead-in, 2 smooth lead-out, 3 smooth lead-in & lead-out"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamUseShallowDofMode",
    "hash": "0x16A96863A17552BB",
    "code": "-- SET_CAM_USE_SHALLOW_DOF_MODE\nSetCamUseShallowDofMode(\n\tcam --[[ Cam ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle",
      "toggle: \n\nBoolean if the camera should use a shallow depth of field or not"
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle\n\ntoggle: \n\nBoolean if the camera should use a shallow depth of field or not\n\nEnables or disables the usage of a shallow DOF. Needs to be set to true to use SET_CAM_NEAR_DOF, SET_CAM_FAR_DOF, etc. Doesn't need to be called every tick.\n\nUsage Example\n\nA usage example for this native can be found in the following native documentation: SET_CAM_DOF_STRENGTH."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCamViewModeForContext",
    "hash": "0x2A2173E46DAECD12",
    "code": "-- SET_CAM_VIEW_MODE_FOR_CONTEXT\nSetCamViewModeForContext(\n\tcontext --[[ integer ]], \n\tviewMode --[[ integer ]]\n)",
    "parameters": [
      "context: \n\nThe view context; see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT.",
      "viewMode: \n\nThe view mode; see GET_FOLLOW_PED_CAM_VIEW_MODE."
    ],
    "returns": [],
    "description": "Parameters:\n\ncontext: \n\nThe view context; see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT.\n\nviewMode: \n\nThe view mode; see GET_FOLLOW_PED_CAM_VIEW_MODE."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCinematicButtonActive",
    "hash": "0x51669F7D1FB53D9F",
    "code": "-- SET_CINEMATIC_BUTTON_ACTIVE\nSetCinematicButtonActive(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCinematicCamShakeAmplitude",
    "hash": "0xC724C701C30B2FE7",
    "code": "-- SET_CINEMATIC_CAM_SHAKE_AMPLITUDE\nSetCinematicCamShakeAmplitude(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCinematicModeActive",
    "hash": "0xDCF0754AC3D6FD4E",
    "code": "-- SET_CINEMATIC_MODE_ACTIVE\nSetCinematicModeActive(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetCinematicNewsChannelActiveThisUpdate",
    "hash": "0xDC9DA9E8789F5246",
    "code": "-- SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE\nSetCinematicNewsChannelActiveThisUpdate()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFirstPersonAimCamNearClipThisUpdate",
    "hash": "0x0AF7B437918103B3",
    "code": "-- SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE\nSetFirstPersonAimCamNearClipThisUpdate(\n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFirstPersonAimCamZoomFactor",
    "hash": "0x70894BD0915C5BCA",
    "code": "-- SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR\nSetFirstPersonAimCamZoomFactor(\n\tzoomFactor --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFirstPersonCamPitchRange",
    "hash": "0xBCFC632DB7673BF0",
    "code": "-- _SET_FIRST_PERSON_CAM_PITCH_RANGE\nSetFirstPersonCamPitchRange(\n\tminAngle --[[ number ]], \n\tmaxAngle --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFlyCamCoordAndConstrain",
    "hash": "0xC91C6C55199308CA",
    "code": "-- SET_FLY_CAM_COORD_AND_CONSTRAIN\nSetFlyCamCoordAndConstrain(\n\tcam --[[ Cam ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFlyCamHorizontalResponse",
    "hash": "0x503F5920162365B2",
    "code": "-- SET_FLY_CAM_HORIZONTAL_RESPONSE\nSetFlyCamHorizontalResponse(\n\tcam --[[ Cam ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFlyCamMaxHeight",
    "hash": "0xF9D02130ECDD1D77",
    "code": "-- SET_FLY_CAM_MAX_HEIGHT\nSetFlyCamMaxHeight(\n\tcam --[[ Cam ]], \n\theight --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFlyCamVerticalSpeedMultiplier",
    "hash": "0xE827B9382CFB41BA",
    "code": "-- _SET_FLY_CAM_VERTICAL_SPEED_MULTIPLIER\nSetFlyCamVerticalSpeedMultiplier(\n\tcam --[[ Cam ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFollowPedCamThisUpdate",
    "hash": "0x44A113DD6FFC48D1",
    "code": "-- SET_FOLLOW_PED_CAM_THIS_UPDATE\nlocal retval --[[ boolean ]] =\n\tSetFollowPedCamThisUpdate(\n\t\tcamName --[[ string ]], \n\t\teaseTime --[[ integer ]]\n\t)",
    "parameters": [
      "camName: \n\nThe name of the camera to use this update",
      "easeTime: \n\nThe time in milliseconds to ease in the camera"
    ],
    "returns": [
      "Return true if the camera is set successfully and false otherwise."
    ],
    "description": "Parameters:\n\ncamName: \n\nThe name of the camera to use this update\n\neaseTime: \n\nThe time in milliseconds to ease in the camera\n\nReturns:\n\nReturn true if the camera is set successfully and false otherwise.\n\nOverrides the ped follow camera (not first person camera) with the specified camera. The game loads all camera metadata from update/update.rpf/x64/data/metadata/cameras.ymt and x64a.rpf/data/metadata/cameras.ymt with the ped follow cameras being of type camFollowPedCameraMetadata.\n\nFollow Camera Names\nDEFAULT_FOLLOW_PED_CAMERA\nFOLLOW_PED_ATTACHED_TO_ROPE_CAMERA\nFOLLOW_PED_ON_EXILE1_LADDER_CAMERA\nFOLLOW_PED_SKY_DIVING_CAMERA\nFOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA\nNIGHTCLUB_FOLLOW_PED_CAMERA\nFOLLOW_PED_INTIMIDATION_CAMERA\nFOLLOW_PED_IN_WATER_CAMERA\nFOLLOW_PED_PRONE_CAMERA\nFOLLOW_PED_ON_SEAT_CAMERA\nFOLLOW_PED_HANGING_UPSIDE_DOWN_CAMERA\nFOLLOW_PED_ATTACHED_TO_ROPE_CAMERA\nCUSTOM_TRANSITION_AFTER_WARP_SKY_DIVE_CAMERA\nFOLLOW_PED_ON_HORSE_CAMERA\nFOLLOW_PED_ON_LOUNGER_CAMERA\n\nOther camera hashes (names not found yet)\n\n// 0x5DBBFB6E\n// 0xA38DB056\n// 0x16B702A3\n// 0x41D72A2E"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFollowPedCamViewMode",
    "hash": "0x5A4F9EDF1673F704",
    "code": "-- SET_FOLLOW_PED_CAM_VIEW_MODE\nSetFollowPedCamViewMode(\n\tviewMode --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See GET_FOLLOW_PED_CAM_VIEW_MODE for the follow mode enum."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFollowTurretSeatCam",
    "hash": "0x5C90CAB09951A12F",
    "code": "-- _SET_FOLLOW_TURRET_SEAT_CAM\nSetFollowTurretSeatCam(\n\tseatIndex --[[ integer ]]\n)",
    "parameters": [
      "seatIndex: \n\nSee IS_TURRET_SEAT"
    ],
    "returns": [],
    "description": "Parameters:\n\nseatIndex: \n\nSee IS_TURRET_SEAT\n\nNativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFollowVehicleCamViewMode",
    "hash": "0xAC253D7842768F48",
    "code": "-- SET_FOLLOW_VEHICLE_CAM_VIEW_MODE\nSetFollowVehicleCamViewMode(\n\tviewMode --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See GET_FOLLOW_PED_CAM_VIEW_MODE for the follow mode enum."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetFollowVehicleCamZoomLevel",
    "hash": "0x19464CB6E4078C8A",
    "code": "-- SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL\nSetFollowVehicleCamZoomLevel(\n\tzoomLevel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See GET_FOLLOW_PED_CAM_VIEW_MODE for the follow mode enum."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamFollowPedThisUpdate",
    "hash": "0x8BBACBF51DA047A8",
    "code": "-- SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE\nSetGameplayCamFollowPedThisUpdate(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamHash",
    "hash": "0x425A920FDB9A0DDA",
    "code": "-- _SET_GAMEPLAY_CAM_HASH\nSetGameplayCamHash(\n\tcamName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets gameplay camera to hash\nNativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamRawPitch",
    "hash": "0x759E13EBC1C15C5A",
    "code": "-- _SET_GAMEPLAY_CAM_RAW_PITCH\nSetGameplayCamRawPitch(\n\tpitch --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamRawYaw",
    "hash": "0x103991D4A307D472",
    "code": "-- _SET_GAMEPLAY_CAM_RAW_YAW\nSetGameplayCamRawYaw(\n\tyaw --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing  \nNativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamRelativeHeading",
    "hash": "0xB4EC2312F4E5B1F1",
    "code": "-- SET_GAMEPLAY_CAM_RELATIVE_HEADING\nSetGameplayCamRelativeHeading(\n\theading --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the camera position relative to heading in float from -360 to +360.  \nHeading is alwyas 0 in aiming camera."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamRelativePitch",
    "hash": "0x6D0858B8EDFD2B7D",
    "code": "-- SET_GAMEPLAY_CAM_RELATIVE_PITCH\nSetGameplayCamRelativePitch(\n\tangle --[[ number ]], \n\tscalingFactor --[[ number ]]\n)",
    "parameters": [
      "angle: \n\nthe angle to rotate the camera by",
      "scalingFactor: \n\nalways seems to be set to 1.0 in native calls"
    ],
    "returns": [],
    "description": "Parameters:\n\nangle: \n\nthe angle to rotate the camera by\n\nscalingFactor: \n\nalways seems to be set to 1.0 in native calls\n\nThis native sets the camera's pitch (rotation on the x-axis)."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamRelativeRotation",
    "hash": "0x48608C3464F58AB4",
    "code": "-- _SET_GAMEPLAY_CAM_RELATIVE_ROTATION\nSetGameplayCamRelativeRotation(\n\troll --[[ number ]], \n\tpitch --[[ number ]], \n\tyaw --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamShakeAmplitude",
    "hash": "0xA87E00932DB4D85D",
    "code": "-- SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE\nSetGameplayCamShakeAmplitude(\n\tamplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script \"drunk_controller.ysc.c4\" to simulate making the player drunk."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamVehicleCamera",
    "hash": "0x21E253A7F8DA5DFB",
    "code": "-- _SET_GAMEPLAY_CAM_VEHICLE_CAMERA\nSetGameplayCamVehicleCamera(\n\tvehicleName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From b617 scripts:\nCAM::_21E253A7F8DA5DFB(\"DINGHY\");\nCAM::_21E253A7F8DA5DFB(\"ISSI2\");\nCAM::_21E253A7F8DA5DFB(\"SPEEDO\");"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCamVehicleCameraName",
    "hash": "0x11FA5D3479C7DD47",
    "code": "-- _SET_GAMEPLAY_CAM_VEHICLE_CAMERA_NAME\nSetGameplayCamVehicleCameraName(\n\tvehicleModel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayCoordHint",
    "hash": "0xD51ADCD2D8BC0FB3",
    "code": "-- SET_GAMEPLAY_COORD_HINT\nSetGameplayCoordHint(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tduration --[[ integer ]], \n\tblendOutDuration --[[ integer ]], \n\tblendInDuration --[[ integer ]], \n\tunk --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayEntityHint",
    "hash": "0x189E955A8313E298",
    "code": "-- SET_GAMEPLAY_ENTITY_HINT\nSetGameplayEntityHint(\n\tentity --[[ Entity ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ integer ]], \n\tp6 --[[ integer ]], \n\tp7 --[[ integer ]], \n\tp8 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p6 & p7 - possibly length or time"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayHintAnimCloseup",
    "hash": "0xE3433EADAAF7EE40",
    "code": "-- _SET_GAMEPLAY_HINT_ANIM_CLOSEUP\nSetGameplayHintAnimCloseup(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayHintAnimOffsetx",
    "hash": "0x5D7B620DAE436138",
    "code": "-- _SET_GAMEPLAY_HINT_ANIM_OFFSETX\nSetGameplayHintAnimOffsetx(\n\txOffset --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayHintAnimOffsety",
    "hash": "0xC92717EF615B6704",
    "code": "-- _SET_GAMEPLAY_HINT_ANIM_OFFSETY\nSetGameplayHintAnimOffsety(\n\tyOffset --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayHintBaseOrbitPitchOffset",
    "hash": "0xD1F8363DFAD03848",
    "code": "-- SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET\nSetGameplayHintBaseOrbitPitchOffset(\n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayHintFollowDistanceScalar",
    "hash": "0xF8BDBF3D573049A1",
    "code": "-- SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR\nSetGameplayHintFollowDistanceScalar(\n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayHintFov",
    "hash": "0x513403FB9C56211F",
    "code": "-- SET_GAMEPLAY_HINT_FOV\nSetGameplayHintFov(\n\tFOV --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayObjectHint",
    "hash": "0x83E87508A2CA2AC6",
    "code": "-- SET_GAMEPLAY_OBJECT_HINT\nSetGameplayObjectHint(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayPedHint",
    "hash": "0x2B486269ACD548D3",
    "code": "-- SET_GAMEPLAY_PED_HINT\nSetGameplayPedHint(\n\tp0 --[[ Ped ]], \n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tp4 --[[ boolean ]], \n\tduration --[[ integer ]], \n\tblendOutDuration --[[ integer ]], \n\tblendInDuration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetGameplayVehicleHint",
    "hash": "0xA2297E18F3E71C2E",
    "code": "-- SET_GAMEPLAY_VEHICLE_HINT\nSetGameplayVehicleHint(\n\tvehicle --[[ Vehicle ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]], \n\toffsetZ --[[ number ]], \n\tp4 --[[ boolean ]], \n\ttime --[[ integer ]], \n\teaseInTime --[[ integer ]], \n\teaseOutTime --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to focus on.",
      "offsetX: \n\nPosition offset X",
      "offsetY: \n\nPosition offset Y",
      "offsetZ: \n\nPosition offset Z",
      "p4:",
      "time: \n\nEffect duration",
      "easeInTime: \n\nEffect fade in duration",
      "easeOutTime: \n\nEFfect fade out duration"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to focus on.\n\noffsetX: \n\nPosition offset X\n\noffsetY: \n\nPosition offset Y\n\noffsetZ: \n\nPosition offset Z\n\np4:\ntime: \n\nEffect duration\n\neaseInTime: \n\nEffect fade in duration\n\neaseOutTime: \n\nEFfect fade out duration\n\nFocuses the camera on the specified vehicle."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetInVehicleCamStateThisUpdate",
    "hash": "0xE9EA16D6E54CDCA4",
    "code": "-- SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE\nSetInVehicleCamStateThisUpdate(\n\tp0 --[[ Vehicle ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetTableGamesCameraThisUpdate",
    "hash": "0x79C0E43EB9B944E2",
    "code": "-- SET_TABLE_GAMES_CAMERA_THIS_UPDATE\nlocal retval --[[ boolean ]] =\n\tSetTableGamesCameraThisUpdate(\n\t\thash --[[ Hash ]]\n\t)",
    "parameters": [
      "hash: \n\nHash for table game"
    ],
    "returns": [
      "Returns a boolean value indicating if the camera settings were successfully overriden for this current frame."
    ],
    "description": "Parameters:\n\nhash: \n\nHash for table game\n\nReturns:\n\nReturns a boolean value indicating if the camera settings were successfully overriden for this current frame.\n\nOverride the camera work of the third-person camera to table game for current frame only.\n\nHashKey\tHash\tGame\nCASINO_LUCKY_WHEEL_CAMERA\t5891389\tLucky Wheel\nCASINO_SLOT_MACHINE_CAMERA\t518572876\tSlots\nCASINO_ROULETTE_CAMERA\t71681063\tRoulette\nCASINO_BLACKJACK_CAMERA\t-2124244681\tBlackjack\nCASINO_POKER_CAMERA\t-1938411241\tThree Cards\nCASINO_INSIDE_TRACK_CAMERA\t1929822423\tInside Track\nARCADE_LOVE_PROFESSOR_P1_CAMERA\t545868034\tLoveProfessorP1\nARCADE_LOVE_PROFESSOR_P2_CAMERA\t935304251\tLoveProfessorP2"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetThirdPersonAimCamNearClipThisUpdate",
    "hash": "0x42156508606DE65E",
    "code": "-- SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE\nSetThirdPersonAimCamNearClipThisUpdate(\n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetUseHiDof",
    "hash": "0xA13B0222F3D94A94",
    "code": "-- SET_USE_HI_DOF\nSetUseHiDof()",
    "parameters": [],
    "returns": [],
    "description": "Needs to be called every tick to make the active camera use a high depth of field.\\ The DoF can be customized using SET_CAM_NEAR_DOF, SET_CAM_FAR_DOF, SET_CAM_USE_SHALLOW_DOF_MODE, SET_CAM_DOF_STRENGTH and other DoF related natives.\n\nUsage Example\n\nA usage example for this native can be found in the following native documentation: SET_CAM_DOF_STRENGTH."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetUseHiDofInCutscene",
    "hash": "0x731A880555DA3647",
    "code": "-- _SET_USE_HI_DOF_IN_CUTSCENE\nSetUseHiDofInCutscene()",
    "parameters": [],
    "returns": [],
    "description": "Only used in R* Script fm_mission_controller_2020\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "SetWidescreenBorders",
    "hash": "0xDCD4EA924F42D01A",
    "code": "-- SET_WIDESCREEN_BORDERS\nSetWidescreenBorders(\n\tp0 --[[ boolean ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ShakeCam",
    "hash": "0x6A25241C340D3822",
    "code": "-- SHAKE_CAM\nShakeCam(\n\tcam --[[ Cam ]], \n\tshakeName --[[ string ]], \n\tintensity --[[ number ]]\n)",
    "parameters": [
      "cam: \n\nThe camera handle.",
      "shakeName: \n\nThe name of the shake.",
      "intensity: \n\nThe intensity of the shake."
    ],
    "returns": [],
    "description": "Parameters:\n\ncam: \n\nThe camera handle.\n\nshakeName: \n\nThe name of the shake.\n\nintensity: \n\nThe intensity of the shake.\n\nSee SHAKE_GAMEPLAY_CAM for a full list of camera shakes."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ShakeCinematicCam",
    "hash": "0xDCE214D9ED58F3CF",
    "code": "-- SHAKE_CINEMATIC_CAM\nShakeCinematicCam(\n\tshakeName --[[ string ]], \n\tintensity --[[ number ]]\n)",
    "parameters": [
      "shakeName: \n\nThe name of the shake.",
      "intensity: \n\nThe intensity of the shake."
    ],
    "returns": [],
    "description": "Parameters:\n\nshakeName: \n\nThe name of the shake.\n\nintensity: \n\nThe intensity of the shake.\n\nSee SHAKE_GAMEPLAY_CAM for a full list of camera shakes."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ShakeGameplayCam",
    "hash": "0xFD55E49555E017CF",
    "code": "-- SHAKE_GAMEPLAY_CAM\nShakeGameplayCam(\n\tshakeName --[[ string ]], \n\tintensity --[[ number ]]\n)",
    "parameters": [
      "shakeName: \n\nThe name of the shake.",
      "intensity: \n\nThe intensity of the shake."
    ],
    "returns": [],
    "description": "Parameters:\n\nshakeName: \n\nThe name of the shake.\n\nintensity: \n\nThe intensity of the shake.\n\nShakes the gameplay cam with the specified shake name and intensity.\n\nList of camera shake names:\n\nASSAULT_RIFLE_RECOIL_SHAKE\nBOAT_WATER_ENTRY_SHAKE\nCAMERA_OPERATOR_SHAKE_X\nCAMERA_OPERATOR_SHAKE_Z\nCAMERA_OPERATOR_TURBULENCE_SHAKE\nCARBINE_RIFLE_ACCURACY_OFFSET_SHAKE\nCARBINE_RIFLE_RECOIL_SHAKE\nCINEMATIC_SHOOTING_RUN_SHAKE\nDAMPED_HAND_SHAKE\nDEATH_FAIL_IN_EFFECT_SHAKE\nDEATH_FAIL_OUT_EFFECT_SHAKE\nDEFAULT_DEPLOY_PARACHUTE_SHAKE\nDEFAULT_FIRST_PERSON_RECOIL_SHAKE\nDEFAULT_KILL_EFFECT_SHAKE\nDEFAULT_THIRD_PERSON_ACCURACY_OFFSET_SHAKE\nDEFAULT_THIRD_PERSON_RECOIL_SHAKE\nDRUNK_SHAKE\nFAMILY5_DRUG_TRIP_SHAKE\nFIRST_PERSON_AIM_SHAKE\nFIRST_PERSON_DEPLOY_PARACHUTE_SHAKE\nFOLLOW_RUN_SHAKE\nFOLLOW_SWIM_SHAKE\nFPS_ASSAULT_RIFLE_RECOIL_SHAKE\nFPS_BOLT_RELOAD_SHAKE\nFPS_BULLET_HIT_SHAKE\nFPS_DEATH_SHAKE\nFPS_GRENADE_LAUNCHER_RECOIL_SHAKE\nFPS_MAG_DROP_SHAKE\nFPS_MAG_RELOAD_SHAKE\nFPS_MELEE_HIT_SHAKE\nFPS_MG_RECOIL_SHAKE\nFPS_MINIGUN_RECOIL_SHAKE\nFPS_PISTOL_RECOIL_SHAKE\nFPS_RPG_RECOIL_SHAKE\nFPS_SHOTGUN_PUMP_SHAKE\nFPS_SHOTGUN_RECOIL_SHAKE\nFPS_SMG_RECOIL_SHAKE\nFPS_STEERING_WHEEL_HIT_SHAKE\nFPS_TANK_RECOIL_SHAKE\nFPS_THROW_SHAKE\nFPS_VEHICLE_HIT_SHAKE\nFPS_ZOOM_IN_SHAKE\nGAMEPLAY_EXPLOSION_SHAKE\nGRENADE_EXPLOSION_SHAKE\nGRENADE_LAUNCHER_RECOIL_SHAKE\nHAND_SHAKE\nHAND_SHAKE_ROLL\nHIGH_DIVE_SHAKE\nHIGH_FALL_SHAKE\nHIGH_SPEED_BOAT_SHAKE\nHIGH_SPEED_POV_SHAKE\nHIGH_SPEED_VEHICLE_SHAKE\nHIGH_SPEED_VIBRATION_POV_SHAKE\nIDLE_HAND_SHAKE\nJOLT_SHAKE\nKILL_SHOT_SHAKE\nLARGE_EXPLOSION_SHAKE\nLOW_ORBIT_HIGH_SPEED_CAMERA_SHAKE\nLOW_ORBIT_INACCURACY_CAMERA_SHAKE\nMEDIUM_EXPLOSION_SHAKE\nMG_RECOIL_SHAKE\nMINIGUN_RECOIL_SHAKE\nPARACHUTING_SHAKE\nPISTOL_RECOIL_SHAKE\nPLANE_PART_SPEED_SHAKE\nPOV_IDLE_SHAKE\nREPLAY_DRUNK_SHAKE\nREPLAY_EXPLOSION_SHAKE\nREPLAY_HAND_SHAKE\nREPLAY_HIGH_SPEED_VEHICLE_SHAKE\nREPLAY_SKY_DIVING_SHAKE\nROAD_VIBRATION_SHAKE\nRPG_RECOIL_SHAKE\nSHOTGUN_RECOIL_SHAKE\nSKY_DIVING_SHAKE\nSMALL_EXPLOSION_SHAKE\nSMG_RECOIL_SHAKE\nSTUNT_HAND_SHAKE\nSWITCH_HAND_SHAKE\nTANK_RECOIL_SHAKE\nVEH_IMPACT_HEADING_SHAKE\nVEH_IMPACT_PITCH_HEADING_SHAKE_FPS\nVEH_IMPACT_PITCH_SHAKE\nVIBRATE_SHAKE\nWATER_BOB_SHAKE\nWOBBLY_SHAKE"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "ShakeScriptGlobal",
    "hash": "0xF4C8CF9E353AFECA",
    "code": "-- SHAKE_SCRIPT_GLOBAL\nShakeScriptGlobal(\n\tp0 --[[ string ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "CAM::SHAKE_SCRIPT_GLOBAL(\"HAND_SHAKE\", 0.2);"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopCamPointing",
    "hash": "0xF33AB75780BA57DE",
    "code": "-- STOP_CAM_POINTING\nStopCamPointing(\n\tcam --[[ Cam ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopCamShaking",
    "hash": "0xBDECF64367884AC3",
    "code": "-- STOP_CAM_SHAKING\nStopCamShaking(\n\tcam --[[ Cam ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopCinematicCamShaking",
    "hash": "0x2238E588E588A6D7",
    "code": "-- STOP_CINEMATIC_CAM_SHAKING\nStopCinematicCamShaking(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopCinematicShot",
    "hash": "0x7660C6E75D3A078E",
    "code": "-- STOP_CINEMATIC_SHOT\nStopCinematicShot(\n\tp0 --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopCutsceneCamShaking",
    "hash": "0xDB629FFD9285FA06",
    "code": "-- STOP_CUTSCENE_CAM_SHAKING\nStopCutsceneCamShaking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopGameplayCamShaking",
    "hash": "0x0EF93E9F3D08C178",
    "code": "-- STOP_GAMEPLAY_CAM_SHAKING\nStopGameplayCamShaking(\n\tbStopImmediately --[[ boolean ]]\n)",
    "parameters": [
      "bStopImmediately: \n\nShould the shake stop this frame."
    ],
    "returns": [],
    "description": "Parameters:\n\nbStopImmediately: \n\nShould the shake stop this frame."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopGameplayHint",
    "hash": "0xF46C581C61718916",
    "code": "-- STOP_GAMEPLAY_HINT\nStopGameplayHint(\n\tbStopImmediately --[[ boolean ]]\n)",
    "parameters": [
      "bStopImmediately: \n\nSpecifies whether the gameplay hint camera should stop instantly true or gradually transition out false."
    ],
    "returns": [],
    "description": "Parameters:\n\nbStopImmediately: \n\nSpecifies whether the gameplay hint camera should stop instantly true or gradually transition out false.\n\nTerminates the current gameplay hint camera, with an option for immediate cessation or a gradual fade out.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopRenderingScriptCamsUsingCatchUp",
    "hash": "0xC819F3CBB62BF692",
    "code": "-- STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP\nStopRenderingScriptCamsUsingCatchUp(\n\tbShouldApplyAcrossAllThreads --[[ boolean ]], \n\tdistanceToBlend --[[ number ]], \n\tblendType --[[ integer ]]\n)",
    "parameters": [
      "bShouldApplyAcrossAllThreads: \n\nIf true, ensures that the rendering stop request is enforced regardless of other script threads that might still expect rendering to be active. Use with caution to avoid conflicts.",
      "distanceToBlend: \n\nSpecifies the distance over which the camera should blend from the scripted camera back to the gameplay camera. A value of 0.0 uses the game's default blending distance.",
      "blendType: \n\nAn integer representing eCamSplineSmoothingFlags to determine the smoothness of the camera transition. Common values include CAM_SPLINE_SLOW_IN_OUT_SMOOTH among others, defining the easing of the blend."
    ],
    "returns": [],
    "description": "Parameters:\n\nbShouldApplyAcrossAllThreads: \n\nIf true, ensures that the rendering stop request is enforced regardless of other script threads that might still expect rendering to be active. Use with caution to avoid conflicts.\n\ndistanceToBlend: \n\nSpecifies the distance over which the camera should blend from the scripted camera back to the gameplay camera. A value of 0.0 uses the game's default blending distance.\n\nblendType: \n\nAn integer representing eCamSplineSmoothingFlags to determine the smoothness of the camera transition. Common values include CAM_SPLINE_SLOW_IN_OUT_SMOOTH among others, defining the easing of the blend.\n\nInstructs the game engine to stop rendering scripted cameras and transition back to the gameplay camera, optionally applying custom blending and rendering options.\n\nenum eRenderingOptionFlags {\n    RO_NO_OPTIONS = 0,\n    RO_STOP_RENDERING_OPTION_WHEN_PLAYER_EXITS_INTO_COVER = 1\n};\n\nenum eCamSplineSmoothingFlags {\n\t// No smoothing just moves at a constant rate\n\tCAM_SPLINE_NO_SMOOTH = 0,\n\t// Decelerates when approaching a node\n\tCAM_SPLINE_SLOW_IN_SMOOTH = 1, \n\t// Accelerates slowly when leaving a node\n\tCAM_SPLINE_SLOW_OUT_SMOOTH = 2,    \n\t// Decelerates when approaching a node and accelerates slowly when leaving a node\n\tCAM_SPLINE_SLOW_IN_OUT_SMOOTH = 3,\n\tCAM_SPLINE_VERY_SLOW_IN = 4,\n\tCAM_SPLINE_VERY_SLOW_OUT = 5,\n\tCAM_SPLINE_VERY_SLOW_IN_SLOW_OUT = 6,\n\tCAM_SPLINE_SLOW_IN_VERY_SLOW_OUT = 7,\n\tCAM_SPLINE_VERY_SLOW_IN_VERY_SLOW_OUT = 8,\n\tCAM_SPLINE_EASE_IN = 9,\n\tCAM_SPLINE_EASE_OUT = 10,\n\tCAM_SPLINE_QUADRATIC_EASE_IN = 11,\n\tCAM_SPLINE_QUADRATIC_EASE_OUT = 12,\n\tCAM_SPLINE_QUADRATIC_EASE_IN_OUT = 13,\n\tCAM_SPLINE_CUBIC_EASE_IN = 14,\n\tCAM_SPLINE_CUBIC_EASE_OUT = 15,\n\tCAM_SPLINE_CUBIC_EASE_IN_OUT = 16,\n\tCAM_SPLINE_QUARTIC_EASE_IN = 17,\n\tCAM_SPLINE_QUARTIC_EASE_OUT = 18,\n\tCAM_SPLINE_QUARTIC_EASE_IN_OUT = 19,\n\tCAM_SPLINE_QUINTIC_EASE_IN = 20,\n\tCAM_SPLINE_QUINTIC_EASE_OUT = 21,\n\tCAM_SPLINE_QUINTIC_EASE_IN_OUT = 22,\n\tCAM_SPLINE_CIRCULAR_EASE_IN = 23,\n\tCAM_SPLINE_CIRCULAR_EASE_OUT = 24,\n\tCAM_SPLINE_CIRCULAR_EASE_IN_OUT = 25 \n};\n\nNativeDB Added Parameter 4: int renderingOptions : An integer bitmask of eRenderingOptionFlags to apply specific rendering behaviors during the transition. RO_NO_OPTIONS signifies no special options are applied.\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "StopScriptGlobalShaking",
    "hash": "0x1C9D7949FA533490",
    "code": "-- STOP_SCRIPT_GLOBAL_SHAKING\nStopScriptGlobalShaking(\n\tbStopImmediately --[[ boolean ]]\n)",
    "parameters": [
      "bStopImmediately: \n\nA boolean indicating whether the camera shake should stop instantly (TRUE) or gradually fade out (FALSE)."
    ],
    "returns": [],
    "description": "Parameters:\n\nbStopImmediately: \n\nA boolean indicating whether the camera shake should stop instantly (TRUE) or gradually fade out (FALSE).\n\nStops the currently active global camera shake that was initiated by a script. You can check if a global camera shake is active using IS_SCRIPT_GLOBAL_SHAKING.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "UseScriptCamForAmbientPopulationOriginThisFrame",
    "hash": "0x271401846BD26E92",
    "code": "-- USE_SCRIPT_CAM_FOR_AMBIENT_POPULATION_ORIGIN_THIS_FRAME\nUseScriptCamForAmbientPopulationOriginThisFrame(\n\tvehicles --[[ boolean ]], \n\tpeds --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the ambient ped & vehicle population spawning origin to be based around the active scripted camera for this frame This will prevent vehicles from being created close to the camera and/or on-screen"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "UseVehicleCamStuntSettingsThisUpdate",
    "hash": "0x6493CF69859B116A",
    "code": "-- USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE\nUseVehicleCamStuntSettingsThisUpdate()",
    "parameters": [],
    "returns": [],
    "description": "Applies a predefined set of vehicle camera settings optimized for capturing stunts, effective for the current game update/frame.\n\nNativeDB Introduced: v791"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x0225778816fdc28c",
    "hash": "0x0225778816FDC28C",
    "code": "-- 0x0225778816FDC28C\nN_0x0225778816fdc28c(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x0aa27680a0bd43fa",
    "hash": "0x0AA27680A0BD43FA",
    "code": "-- 0x0AA27680A0BD43FA\nN_0x0aa27680a0bd43fa()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x12ded8ca53d47ea5",
    "hash": "0x12DED8CA53D47EA5",
    "code": "-- 0x12DED8CA53D47EA5\nN_0x12ded8ca53d47ea5(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to only work in multiplayer."
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x17fca7199a530203",
    "hash": "0x17FCA7199A530203",
    "code": "-- 0x17FCA7199A530203\nN_0x17fca7199a530203()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x1f2300cb7fa7b7f6",
    "hash": "0x1F2300CB7FA7B7F6",
    "code": "-- 0x1F2300CB7FA7B7F6\nlocal retval --[[ Any ]] =\n\tN_0x1f2300cb7fa7b7f6()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x247acbc4abbc9d1c",
    "hash": "0x247ACBC4ABBC9D1C",
    "code": "-- 0x247ACBC4ABBC9D1C\nN_0x247acbc4abbc9d1c(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x271017b9ba825366",
    "hash": "0x271017B9BA825366",
    "code": "-- 0x271017B9BA825366\nN_0x271017b9ba825366(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x28b022a17b068a3a",
    "hash": "0x28B022A17B068A3A",
    "code": "-- 0x28B022A17B068A3A\nN_0x28b022a17b068a3a(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "F*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x2f7f2b26dd3f18ee",
    "hash": "0x2F7F2B26DD3F18EE",
    "code": "-- 0x2F7F2B26DD3F18EE\nN_0x2f7f2b26dd3f18ee(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x3044240d2e0fa842",
    "hash": "0x3044240D2E0FA842",
    "code": "-- 0x3044240D2E0FA842\nlocal retval --[[ boolean ]] =\n\tN_0x3044240d2e0fa842()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x324c5aa411da7737",
    "hash": "0x324C5AA411DA7737",
    "code": "-- 0x324C5AA411DA7737\nN_0x324c5aa411da7737(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x380b4968d1e09e55",
    "hash": "0x380B4968D1E09E55",
    "code": "-- 0x380B4968D1E09E55\nN_0x380b4968d1e09e55()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x4008edf7d6e48175",
    "hash": "0x4008EDF7D6E48175",
    "code": "-- 0x4008EDF7D6E48175\nN_0x4008edf7d6e48175(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x469f2ecdec046337",
    "hash": "0x469F2ECDEC046337",
    "code": "-- 0x469F2ECDEC046337\nN_0x469f2ecdec046337(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x4879e4fe39074cdf",
    "hash": "0x4879E4FE39074CDF",
    "code": "-- 0x4879E4FE39074CDF\nlocal retval --[[ boolean ]] =\n\tN_0x4879e4fe39074cdf()",
    "parameters": [],
    "returns": [],
    "description": "A*"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x59424bd75174c9b1",
    "hash": "0x59424BD75174C9B1",
    "code": "-- 0x59424BD75174C9B1\nN_0x59424bd75174c9b1()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x5a43c76f7fc7ba5f",
    "hash": "0x5A43C76F7FC7BA5F",
    "code": "-- 0x5A43C76F7FC7BA5F\nN_0x5a43c76f7fc7ba5f()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x5c41e6babc9e2112",
    "hash": "0x5C41E6BABC9E2112",
    "code": "-- 0x5C41E6BABC9E2112\nN_0x5c41e6babc9e2112(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x5c48a1d6e3b33179",
    "hash": "0x5C48A1D6E3B33179",
    "code": "-- 0x5C48A1D6E3B33179\nlocal retval --[[ boolean ]] =\n\tN_0x5c48a1d6e3b33179(\n\t\tcam --[[ Cam ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "W*"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x5d96cfb59da076a0",
    "hash": "0x5D96CFB59DA076A0",
    "code": "-- 0x5D96CFB59DA076A0\nN_0x5d96cfb59da076a0(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1: 0..16\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x62374889a4d59f72",
    "hash": "0x62374889A4D59F72",
    "code": "-- 0x62374889A4D59F72\nN_0x62374889a4d59f72()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x62ecfcfdee7885d6",
    "hash": "0x62ECFCFDEE7885D6",
    "code": "-- 0x62ECFCFDEE7885D6\nN_0x62ecfcfdee7885d6()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x705a276ebff3133d",
    "hash": "0x705A276EBFF3133D",
    "code": "-- 0x705A276EBFF3133D\nlocal retval --[[ boolean ]] =\n\tN_0x705a276ebff3133d()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x7295c203dd659dfe",
    "hash": "0x7295C203DD659DFE",
    "code": "-- 0x7295C203DD659DFE\nN_0x7295c203dd659dfe()",
    "parameters": [],
    "returns": [],
    "description": "_RESET_*\n\n_RESET_GAMEPLAY_CAM_RELATIVE_ORBIT_HOLD_TIME?\n\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x91ef6ee6419e5b97",
    "hash": "0x91EF6EE6419E5B97",
    "code": "-- 0x91EF6EE6419E5B97\nN_0x91ef6ee6419e5b97(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x9dfe13ecdc1ec196",
    "hash": "0x9DFE13ECDC1EC196",
    "code": "-- 0x9DFE13ECDC1EC196\nN_0x9dfe13ecdc1ec196(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_FOLLOW_*"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0x9f97da93681f87ea",
    "hash": "0x9F97DA93681F87EA",
    "code": "-- 0x9F97DA93681F87EA\nN_0x9f97da93681f87ea()",
    "parameters": [],
    "returns": [],
    "description": "B*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xa2767257a320fc82",
    "hash": "0xA2767257A320FC82",
    "code": "-- 0xA2767257A320FC82\nN_0xa2767257a320fc82(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xa7092afe81944852",
    "hash": "0xA7092AFE81944852",
    "code": "-- 0xA7092AFE81944852\nN_0xa7092afe81944852()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xaabd62873ffb1a33",
    "hash": "0xAABD62873FFB1A33",
    "code": "-- 0xAABD62873FFB1A33\nN_0xaabd62873ffb1a33(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xb1381b97f70c7b30",
    "hash": "0xB1381B97F70C7B30",
    "code": "-- 0xB1381B97F70C7B30\nN_0xb1381b97f70c7b30()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xbf72910d0f26f025",
    "hash": "0xBF72910D0F26F025",
    "code": "-- 0xBF72910D0F26F025\nlocal retval --[[ Any ]] =\n\tN_0xbf72910d0f26f025()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xc8391c309684595a",
    "hash": "0xC8391C309684595A",
    "code": "-- 0xC8391C309684595A\nN_0xc8391c309684595a()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xc8b5c4a79cc18b94",
    "hash": "0xC8B5C4A79CC18B94",
    "code": "-- 0xC8B5C4A79CC18B94\nN_0xc8b5c4a79cc18b94(\n\tcam --[[ Cam ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xccd078c2665d2973",
    "hash": "0xCCD078C2665D2973",
    "code": "-- 0xCCD078C2665D2973\nN_0xccd078c2665d2973(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xced08cbe8ebb97c7",
    "hash": "0xCED08CBE8EBB97C7",
    "code": "-- 0xCED08CBE8EBB97C7\nN_0xced08cbe8ebb97c7(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xdb90c6cca48940f1",
    "hash": "0xDB90C6CCA48940F1",
    "code": "-- 0xDB90C6CCA48940F1\nN_0xdb90c6cca48940f1(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xdd79df9f4d26e1c9",
    "hash": "0xDD79DF9F4D26E1C9",
    "code": "-- 0xDD79DF9F4D26E1C9\nN_0xdd79df9f4d26e1c9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xe111a7c0d200cbc5",
    "hash": "0xE111A7C0D200CBC5",
    "code": "-- 0xE111A7C0D200CBC5\nN_0xe111a7c0d200cbc5(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xf55e4046f6f831dc",
    "hash": "0xF55E4046F6F831DC",
    "code": "-- 0xF55E4046F6F831DC\nN_0xf55e4046f6f831dc(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CAM",
    "apiset": "API set: client",
    "name": "N_0xfd3151cd37ea2245",
    "hash": "0xFD3151CD37EA2245",
    "code": "-- 0xFD3151CD37EA2245\nN_0xfd3151cd37ea2245(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "AddToClockTime",
    "hash": "0xD716F30D8C8980E2",
    "code": "-- ADD_TO_CLOCK_TIME\nAddToClockTime(\n\thours --[[ integer ]], \n\tminutes --[[ integer ]], \n\tseconds --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "AdvanceClockTimeTo",
    "hash": "0xC8CA9670B9D83B3B",
    "code": "-- ADVANCE_CLOCK_TIME_TO\nAdvanceClockTimeTo(\n\thour --[[ integer ]], \n\tminute --[[ integer ]], \n\tsecond --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetClockDayOfMonth",
    "hash": "0x3D10BC92A4DB1D35",
    "code": "-- GET_CLOCK_DAY_OF_MONTH\nlocal retval --[[ integer ]] =\n\tGetClockDayOfMonth()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetClockDayOfWeek",
    "hash": "0xD972E4BD7AEB235F",
    "code": "-- GET_CLOCK_DAY_OF_WEEK\nlocal retval --[[ integer ]] =\n\tGetClockDayOfWeek()",
    "parameters": [],
    "returns": [],
    "description": "Gets the current day of the week.  \n0: Sunday  \n1: Monday  \n2: Tuesday  \n3: Wednesday  \n4: Thursday  \n5: Friday  \n6: Saturday"
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetClockHours",
    "hash": "0x25223CA6B4D20B7F",
    "code": "-- GET_CLOCK_HOURS\nlocal retval --[[ integer ]] =\n\tGetClockHours()",
    "parameters": [],
    "returns": [],
    "description": "Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)"
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetClockMinutes",
    "hash": "0x13D2B8ADD79640F2",
    "code": "-- GET_CLOCK_MINUTES\nlocal retval --[[ integer ]] =\n\tGetClockMinutes()",
    "parameters": [],
    "returns": [],
    "description": "Gets the current ingame clock minute."
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetClockMonth",
    "hash": "0xBBC72712E80257A1",
    "code": "-- GET_CLOCK_MONTH\nlocal retval --[[ integer ]] =\n\tGetClockMonth()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetClockSeconds",
    "hash": "0x494E97C2EF27C470",
    "code": "-- GET_CLOCK_SECONDS\nlocal retval --[[ integer ]] =\n\tGetClockSeconds()",
    "parameters": [],
    "returns": [],
    "description": "Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life."
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetClockYear",
    "hash": "0x961777E64BDAF717",
    "code": "-- GET_CLOCK_YEAR\nlocal retval --[[ integer ]] =\n\tGetClockYear()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetLocalTime",
    "hash": "0x50C7A99057A69748",
    "code": "-- GET_LOCAL_TIME\nlocal year --[[ integer ]], month --[[ integer ]], day --[[ integer ]], hour --[[ integer ]], minute --[[ integer ]], second --[[ integer ]] =\n\tGetLocalTime()",
    "parameters": [],
    "returns": [],
    "description": "Gets local system time as year, month, day, hour, minute and second.  \nExample usage:  \nint year;  \nint month;  \nint day;  \nint hour;  \nint minute;  \nint second;  \nor use std::tm struct  \nTIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);"
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetMillisecondsPerGameMinute",
    "hash": "0x2F8B4D1C595B11DB",
    "code": "-- GET_MILLISECONDS_PER_GAME_MINUTE\nlocal retval --[[ integer ]] =\n\tGetMillisecondsPerGameMinute()",
    "parameters": [],
    "returns": [
      "A number of milliseconds that equals to one game minute."
    ],
    "description": "Returns:\n\nA number of milliseconds that equals to one game minute.\n\nReturns how many real ms are equal to one game minute. A getter for SetMillisecondsPerGameMinute."
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetPosixTime",
    "hash": "0xDA488F299A5B164E",
    "code": "-- GET_POSIX_TIME\nlocal year --[[ integer ]], month --[[ integer ]], day --[[ integer ]], hour --[[ integer ]], minute --[[ integer ]], second --[[ integer ]] =\n\tGetPosixTime()",
    "parameters": [],
    "returns": [],
    "description": "Gets system time as year, month, day, hour, minute and second.  \nExample usage:  \n\tint year;  \n\tint month;  \n\tint day;  \n\tint hour;  \n\tint minute;  \n\tint second;  \n\tTIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);"
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "GetUtcTime",
    "hash": "0x8117E09A19EEF4D3",
    "code": "-- GET_UTC_TIME\nlocal year --[[ integer ]], month --[[ integer ]], day --[[ integer ]], hour --[[ integer ]], minute --[[ integer ]], second --[[ integer ]] =\n\tGetUtcTime()",
    "parameters": [],
    "returns": [],
    "description": "Gets current UTC time"
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "PauseClock",
    "hash": "0x4055E40BD2DBEC1D",
    "code": "-- PAUSE_CLOCK\nPauseClock(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "SetClockDate",
    "hash": "0xB096419DF0D06CE7",
    "code": "-- SET_CLOCK_DATE\nSetClockDate(\n\tday --[[ integer ]], \n\tmonth --[[ integer ]], \n\tyear --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CLOCK",
    "apiset": "API set: client",
    "name": "SetClockTime",
    "hash": "0x47C3B5848C3E45D8",
    "code": "-- SET_CLOCK_TIME\nSetClockTime(\n\thour --[[ integer ]], \n\tminute --[[ integer ]], \n\tsecond --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_CLOCK_TIME(12, 34, 56);"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "CanRequestAssetsForCutsceneEntity",
    "hash": "0xB56BBBCC2955D9CB",
    "code": "-- CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY\nlocal retval --[[ boolean ]] =\n\tCanRequestAssetsForCutsceneEntity()",
    "parameters": [],
    "returns": [
      "Whether you can request assets for cutscene entities, like components."
    ],
    "description": "Returns:\n\nWhether you can request assets for cutscene entities, like components.\n\nReturns when it is safe to start applying changes to cutscene entities.\n\nShould always be used for applying components.\n\nSee SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED and REGISTER_ENTITY_FOR_CUTSCENE for an example.\n\nThis will be true before the cutscene is considered loaded"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "CanSetEnterStateForRegisteredEntity",
    "hash": "0x645D0B458D8E17B5",
    "code": "-- CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY\nlocal retval --[[ boolean ]] =\n\tCanSetEnterStateForRegisteredEntity(\n\t\tcutsceneEntName --[[ string ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "modelHash (p1) was always 0 in R* scripts"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "CanSetExitStateForCamera",
    "hash": "0xB2CBCD0930DFB420",
    "code": "-- CAN_SET_EXIT_STATE_FOR_CAMERA\nlocal retval --[[ boolean ]] =\n\tCanSetExitStateForCamera(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Whether or not it is safe to run functions on the camera, as the camera is now no longer being used by the cutscene."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "CanSetExitStateForRegisteredEntity",
    "hash": "0x4C6A6451C79E4662",
    "code": "-- CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY\nlocal retval --[[ boolean ]] =\n\tCanSetExitStateForRegisteredEntity(\n\t\tcutsceneEntName --[[ string ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "cutsceneEntName: \n\nName of the entity cHandle in the cutscene",
      "modelHash: \n\nCan be 0"
    ],
    "returns": [
      "Whether or not it is safe to begin interacting with the entity"
    ],
    "description": "Parameters:\n\ncutsceneEntName: \n\nName of the entity cHandle in the cutscene\n\nmodelHash: \n\nCan be 0\n\nReturns:\n\nWhether or not it is safe to begin interacting with the entity\n\nReturns if the script can begin interacting with the registered entity. Primarly used for lead-outs of cutscenes. Returns on frame after cutscene ends, so you cannot get is while using IsCutsceneActive()\n\nWhether it is safe to start doing scripted actions on the entity, like simulating walking out of a cutscene."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "DoesCutsceneEntityExist",
    "hash": "0x499EF20C5DB25C59",
    "code": "-- DOES_CUTSCENE_ENTITY_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesCutsceneEntityExist(\n\t\tcutsceneEntName --[[ string ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetCutFileNumSections",
    "hash": "0x0ABC54DE641DC0FC",
    "code": "-- _GET_CUT_FILE_NUM_SECTIONS\nlocal retval --[[ integer ]] =\n\tGetCutFileNumSections(\n\t\tcutsceneName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetCutsceneEndTime",
    "hash": "0x971D7B15BCDBEF99",
    "code": "-- GET_CUTSCENE_END_TIME\nlocal retval --[[ integer ]] =\n\tGetCutsceneEndTime()",
    "parameters": [],
    "returns": [],
    "description": "Returns the time of the cutscene's end accounting for REQUEST_CUTSCENE_WITH_PLAYBACK_LIST\n\nIf a cutscene is laid out with 10 second sections, and section 0 and 1 are enabled then it would be 20000ms.\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetCutscenePlayTime",
    "hash": "0x710286BC5EF4D6E1",
    "code": "-- GET_CUTSCENE_PLAY_TIME\nlocal retval --[[ integer ]] =\n\tGetCutscenePlayTime()",
    "parameters": [],
    "returns": [
      "Returns the current play time of the cutscene in milliseconds."
    ],
    "description": "Returns:\n\nReturns the current play time of the cutscene in milliseconds.\n\nGets the current time of the cutscene.\n\nNativeDB Introduced: v3258"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetCutsceneSectionPlaying",
    "hash": "0x49010A6A396553D8",
    "code": "-- GET_CUTSCENE_SECTION_PLAYING\nlocal retval --[[ integer ]] =\n\tGetCutsceneSectionPlaying()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetCutsceneTime",
    "hash": "0xE625BEABBAFFDAB9",
    "code": "-- GET_CUTSCENE_TIME\nlocal retval --[[ integer ]] =\n\tGetCutsceneTime()",
    "parameters": [],
    "returns": [
      "Elapsed time in milliseconds"
    ],
    "description": "Returns:\n\nElapsed time in milliseconds\n\nGets the elapsed time of the current cutscene in"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetCutsceneTotalDuration",
    "hash": "0xEE53B14A19E480D4",
    "code": "-- GET_CUTSCENE_TOTAL_DURATION\nlocal retval --[[ integer ]] =\n\tGetCutsceneTotalDuration()",
    "parameters": [],
    "returns": [
      "Cutscene total length in milliseconds"
    ],
    "description": "Returns:\n\nCutscene total length in milliseconds\n\nGets the total length of the cutscene irrespective of playback list in milliseconds To account for sections, see GET_CUTSCENE_END_TIME"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetEntityIndexOfCutsceneEntity",
    "hash": "0x0A2E9FDB9A8C62F6",
    "code": "-- GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY\nlocal retval --[[ Entity ]] =\n\tGetEntityIndexOfCutsceneEntity(\n\t\tcutsceneEntName --[[ string ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "cutsceneEntName: \n\nI.E MP_1, MP_4, Michael, Trevor",
      "modelHash: \n\nNot strictly neccasary, can get 0"
    ],
    "returns": [
      "Returns entity handle"
    ],
    "description": "Parameters:\n\ncutsceneEntName: \n\nI.E MP_1, MP_4, Michael, Trevor\n\nmodelHash: \n\nNot strictly neccasary, can get 0\n\nReturns:\n\nReturns entity handle\n\nReturns the handle of a cutscene entity, can be ped"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "GetEntityIndexOfRegisteredEntity",
    "hash": "0xC0741A26499654CD",
    "code": "-- GET_ENTITY_INDEX_OF_REGISTERED_ENTITY\nlocal retval --[[ Entity ]] =\n\tGetEntityIndexOfRegisteredEntity(\n\t\tcutsceneEntName --[[ string ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "HasCutFileLoaded",
    "hash": "0xA1C996C2A744262E",
    "code": "-- HAS_CUT_FILE_LOADED\nlocal retval --[[ boolean ]] =\n\tHasCutFileLoaded(\n\t\tcutsceneName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "HasCutsceneCutThisFrame",
    "hash": "0x708BDD8CD795B043",
    "code": "-- HAS_CUTSCENE_CUT_THIS_FRAME\nlocal retval --[[ boolean ]] =\n\tHasCutsceneCutThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "HasCutsceneFinished",
    "hash": "0x7C0A893088881D57",
    "code": "-- HAS_CUTSCENE_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasCutsceneFinished()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "HasCutsceneLoaded",
    "hash": "0xC59F528E9AB9F339",
    "code": "-- HAS_CUTSCENE_LOADED\nlocal retval --[[ boolean ]] =\n\tHasCutsceneLoaded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "HasThisCutsceneLoaded",
    "hash": "0x228D3D94F8A11C3C",
    "code": "-- HAS_THIS_CUTSCENE_LOADED\nlocal retval --[[ boolean ]] =\n\tHasThisCutsceneLoaded(\n\t\tcutsceneName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "IsCutsceneActive",
    "hash": "0x991251AFC3981F84",
    "code": "-- IS_CUTSCENE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsCutsceneActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "IsCutscenePlaybackFlagSet",
    "hash": "0x71B74D2AE19338D0",
    "code": "-- IS_CUTSCENE_PLAYBACK_FLAG_SET\nlocal retval --[[ boolean ]] =\n\tIsCutscenePlaybackFlagSet(\n\t\tflag --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "IsCutscenePlaying",
    "hash": "0xD3C2E180A40F031E",
    "code": "-- IS_CUTSCENE_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsCutscenePlaying()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "RegisterEntityForCutscene",
    "hash": "0xE40C1C56DF95C2E8",
    "code": "-- REGISTER_ENTITY_FOR_CUTSCENE\nRegisterEntityForCutscene(\n\tcutsceneEntity --[[ Entity ]], \n\tcutsceneEntName --[[ string ]], \n\tp2 --[[ integer ]], \n\tmodelHash --[[ Hash ]], \n\tp4 --[[ integer ]]\n)",
    "parameters": [
      "cutsceneEntity: \n\nEntity to put into the cutscene.",
      "cutsceneEntName: \n\ncHandle of cutscene entity, i.e Michael, MP_1, MP_4, Lamar",
      "p2:",
      "modelHash: \n\nNot strictly neccasary, often 0 in R* scripts",
      "p4: \n\n0 for SP, 64 for MP seemingly"
    ],
    "returns": [],
    "description": "Parameters:\n\ncutsceneEntity: \n\nEntity to put into the cutscene.\n\ncutsceneEntName: \n\ncHandle of cutscene entity, i.e Michael, MP_1, MP_4, Lamar\n\np2:\nmodelHash: \n\nNot strictly neccasary, often 0 in R* scripts\n\np4: \n\n0 for SP, 64 for MP seemingly\n\nThis can only be run once CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY is true, but can be run before HAS_CUTSCENE_LOADED"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "RegisterSynchronisedScriptSpeech",
    "hash": "0x2131046957F31B04",
    "code": "-- REGISTER_SYNCHRONISED_SCRIPT_SPEECH\nRegisterSynchronisedScriptSpeech()",
    "parameters": [],
    "returns": [],
    "description": "Only used twice in armenian1.c"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "RemoveCutFile",
    "hash": "0xD00D76A7DFC9D852",
    "code": "-- REMOVE_CUT_FILE\nRemoveCutFile(\n\tcutsceneName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "RemoveCutscene",
    "hash": "0x440AF51A3462B86F",
    "code": "-- REMOVE_CUTSCENE\nRemoveCutscene()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "RequestCutFile",
    "hash": "0x06A3524161C502BA",
    "code": "-- REQUEST_CUT_FILE\nRequestCutFile(\n\tcutsceneName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "RequestCutscene",
    "hash": "0x7A86743F475D9E09",
    "code": "-- REQUEST_CUTSCENE\nRequestCutscene(\n\tcutsceneName --[[ string ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [
      "cutsceneName: \n\nCase insensitive name of the .cut file",
      "flags: \n\nUsually 8"
    ],
    "returns": [],
    "description": "Parameters:\n\ncutsceneName: \n\nCase insensitive name of the .cut file\n\nflags: \n\nUsually 8"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "RequestCutsceneWithPlaybackList",
    "hash": "0xC23DE0E91C30B58C",
    "code": "-- REQUEST_CUTSCENE_WITH_PLAYBACK_LIST\nRequestCutsceneWithPlaybackList(\n\tcutsceneName --[[ string ]], \n\tplaybackFlags --[[ integer ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "playbackFlags: Which scenes should be played.\nExample: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutsceneCanBeSkipped",
    "hash": "0x41FAA8FB2ECE8720",
    "code": "-- SET_CUTSCENE_CAN_BE_SKIPPED\nSetCutsceneCanBeSkipped(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutsceneEntityStreamingFlags",
    "hash": "0x4C61C75BEE8184C2",
    "code": "-- SET_CUTSCENE_ENTITY_STREAMING_FLAGS\nSetCutsceneEntityStreamingFlags(\n\tcutsceneEntName --[[ string ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [
      "cutsceneEntName: \n\nMP_1, MP_2, etc",
      "p1: \n\nAlways 0 in R* scripts",
      "p2: \n\nAlways 1 in R* scripts"
    ],
    "returns": [],
    "description": "Parameters:\n\ncutsceneEntName: \n\nMP_1, MP_2, etc\n\np1: \n\nAlways 0 in R* scripts\n\np2: \n\nAlways 1 in R* scripts\n\nOnly used in networked environment with MP cutscenes"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutsceneFadeValues",
    "hash": "0x8093F23ABACCC7D4",
    "code": "-- SET_CUTSCENE_FADE_VALUES\nSetCutsceneFadeValues(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutsceneOrigin",
    "hash": "0xB812B3FD1C01CF27",
    "code": "-- SET_CUTSCENE_ORIGIN\nSetCutsceneOrigin(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\tp4 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets cutscene location, used for multiplayer apartments/businesses."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutsceneOriginAndOrientation",
    "hash": "0x011883F41211432A",
    "code": "-- SET_CUTSCENE_ORIGIN_AND_ORIENTATION\nSetCutsceneOriginAndOrientation(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tp6 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutscenePedComponentVariation",
    "hash": "0xBA01E7B6DEEFBBC9",
    "code": "-- SET_CUTSCENE_PED_COMPONENT_VARIATION\nSetCutscenePedComponentVariation(\n\tcutsceneEntName --[[ string ]], \n\tcomponentId --[[ integer ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See SET_PED_COMPONENT_VARIATION"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutscenePedComponentVariationFromPed",
    "hash": "0x2A56C06EBEF2B0D9",
    "code": "-- SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED\nSetCutscenePedComponentVariationFromPed(\n\tcutsceneEntName --[[ string ]], \n\tped --[[ Ped ]], \n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [
      "cutsceneEntName: \n\nCutscene file cHandle, i.e Michael, Lamar, Franklin, MP_1-MP_4",
      "ped: \n\nPed to copy components from",
      "modelHash: \n\nNot strictly neccasary, can be 0"
    ],
    "returns": [],
    "description": "Parameters:\n\ncutsceneEntName: \n\nCutscene file cHandle, i.e Michael, Lamar, Franklin, MP_1-MP_4\n\nped: \n\nPed to copy components from\n\nmodelHash: \n\nNot strictly neccasary, can be 0\n\nSets the components for a cutscene ped, this will take precendence over the cutscene's component overrides. This does not require the entity be registered.\n\nSee REGISTER_ENTITY_FOR_CUTSCENE for an example."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutscenePedPropVariation",
    "hash": "0x0546524ADE2E9723",
    "code": "-- SET_CUTSCENE_PED_PROP_VARIATION\nSetCutscenePedPropVariation(\n\tcutsceneEntName --[[ string ]], \n\tcomponentId --[[ integer ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [
      "cutsceneEntName: \n\ni.e Michael, Trevor, MP_1, MP_4",
      "componentId:",
      "drawableId:",
      "textureId:",
      "modelHash:"
    ],
    "returns": [],
    "description": "Parameters:\n\ncutsceneEntName: \n\ni.e Michael, Trevor, MP_1, MP_4\n\ncomponentId:\ndrawableId:\ntextureId:\nmodelHash:\n\nSee SET_PED_PROP_INDEX"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "SetCutsceneTriggerArea",
    "hash": "0x9896CE4721BE84BA",
    "code": "-- SET_CUTSCENE_TRIGGER_AREA\nSetCutsceneTriggerArea(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only used twice in R* scripts"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "StartCutscene",
    "hash": "0x186D5CB5E7B0FF7B",
    "code": "-- START_CUTSCENE\nStartCutscene(\n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "flags: Usually 0."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "StartCutsceneAtCoords",
    "hash": "0x1C9ADDA3244A1FBF",
    "code": "-- START_CUTSCENE_AT_COORDS\nStartCutsceneAtCoords(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Similar to SET_CUTSCENE_ORIGIN but without heading and doesn't need START_CUTSCENE"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "StopCutscene",
    "hash": "0xC7272775B4DC786E",
    "code": "-- STOP_CUTSCENE\nStopCutscene(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [
      "p0: \n\nAlways false"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nAlways false"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "StopCutsceneImmediately",
    "hash": "0xD220BDD222AC4A1E",
    "code": "-- STOP_CUTSCENE_IMMEDIATELY\nStopCutsceneImmediately()",
    "parameters": [],
    "returns": [],
    "description": "Stop cutscene instantly, will dump registered entities right where they were when ran."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "WasCutsceneSkipped",
    "hash": "0x40C8656EDAEDD569",
    "code": "-- WAS_CUTSCENE_SKIPPED\nlocal retval --[[ boolean ]] =\n\tWasCutsceneSkipped()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x06ee9048fd080382",
    "hash": "0x06EE9048FD080382",
    "code": "-- 0x06EE9048FD080382\nN_0x06ee9048fd080382(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x20746f7b1032a3c7",
    "hash": "0x20746F7B1032A3C7",
    "code": "-- 0x20746F7B1032A3C7\nN_0x20746f7b1032a3c7(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x2f137b508de238f2",
    "hash": "0x2F137B508DE238F2",
    "code": "-- 0x2F137B508DE238F2\nN_0x2f137b508de238f2(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x4cebc1ed31e8925e",
    "hash": "0x4CEBC1ED31E8925E",
    "code": "-- 0x4CEBC1ED31E8925E\nlocal retval --[[ boolean ]] =\n\tN_0x4cebc1ed31e8925e(\n\t\tcutsceneName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 1."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x4fcd976da686580c",
    "hash": "0x4FCD976DA686580C",
    "code": "-- 0x4FCD976DA686580C\nlocal retval --[[ Any ]] =\n\tN_0x4fcd976da686580c(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x583df8e3d4afbd98",
    "hash": "0x583DF8E3D4AFBD98",
    "code": "-- 0x583DF8E3D4AFBD98\nlocal retval --[[ integer ]] =\n\tN_0x583df8e3d4afbd98()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x5edef0cf8c1dab3c",
    "hash": "0x5EDEF0CF8C1DAB3C",
    "code": "-- 0x5EDEF0CF8C1DAB3C\nlocal retval --[[ boolean ]] =\n\tN_0x5edef0cf8c1dab3c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x7f96f23fa9b73327",
    "hash": "0x7F96F23FA9B73327",
    "code": "-- 0x7F96F23FA9B73327\nN_0x7f96f23fa9b73327(\n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_*"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0x8d9df6eca8768583",
    "hash": "0x8D9DF6ECA8768583",
    "code": "-- 0x8D9DF6ECA8768583\nN_0x8d9df6eca8768583(\n\tthreadId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_SCRIPT_*\nSets the cutscene's owning thread ID."
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0xa0fe76168a189ddb",
    "hash": "0xA0FE76168A189DDB",
    "code": "-- 0xA0FE76168A189DDB\nlocal retval --[[ integer ]] =\n\tN_0xa0fe76168a189ddb()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0xc61b86c9f61eb404",
    "hash": "0xC61B86C9F61EB404",
    "code": "-- 0xC61B86C9F61EB404\nN_0xc61b86c9f61eb404(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles a value (bool) for cutscenes.\nSET_*"
  },
  {
    "namespace": "Namespace: CUTSCENE",
    "apiset": "API set: client",
    "name": "N_0xe36a98d8ab3d3c66",
    "hash": "0xE36A98D8AB3D3C66",
    "code": "-- 0xE36A98D8AB3D3C66\nN_0xe36a98d8ab3d3c66(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayAddBool",
    "hash": "0xF8B0F5A43E928C76",
    "code": "-- DATAARRAY_ADD_BOOL\nlocal arrayData --[[ Any ]] =\n\tDataarrayAddBool(\n\t\tvalue --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayAddDict",
    "hash": "0x6889498B3E19C797",
    "code": "-- DATAARRAY_ADD_DICT\nlocal retval --[[ Any* ]], arrayData --[[ Any ]] =\n\tDataarrayAddDict()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayAddFloat",
    "hash": "0x57A995FD75D37F56",
    "code": "-- DATAARRAY_ADD_FLOAT\nlocal arrayData --[[ Any ]] =\n\tDataarrayAddFloat(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayAddInt",
    "hash": "0xCABDB751D86FE93B",
    "code": "-- DATAARRAY_ADD_INT\nlocal arrayData --[[ Any ]] =\n\tDataarrayAddInt(\n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayAddString",
    "hash": "0x2F0661C155AEEEAA",
    "code": "-- DATAARRAY_ADD_STRING\nlocal arrayData --[[ Any ]] =\n\tDataarrayAddString(\n\t\tvalue --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayAddVector",
    "hash": "0x407F8D034F70F0C2",
    "code": "-- DATAARRAY_ADD_VECTOR\nlocal arrayData --[[ Any ]] =\n\tDataarrayAddVector(\n\t\tvalueX --[[ number ]], \n\t\tvalueY --[[ number ]], \n\t\tvalueZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetBool",
    "hash": "0x50C1B2874E50C114",
    "code": "-- DATAARRAY_GET_BOOL\nlocal retval --[[ boolean ]], arrayData --[[ Any ]] =\n\tDataarrayGetBool(\n\t\tarrayIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetCount",
    "hash": "0x065DB281590CEA2D",
    "code": "-- DATAARRAY_GET_COUNT\nlocal retval --[[ integer ]], arrayData --[[ Any ]] =\n\tDataarrayGetCount()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetDict",
    "hash": "0x8B5FADCC4E3A145F",
    "code": "-- DATAARRAY_GET_DICT\nlocal retval --[[ Any* ]], arrayData --[[ Any ]] =\n\tDataarrayGetDict(\n\t\tarrayIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetFloat",
    "hash": "0xC0C527B525D7CFB5",
    "code": "-- DATAARRAY_GET_FLOAT\nlocal retval --[[ number ]], arrayData --[[ Any ]] =\n\tDataarrayGetFloat(\n\t\tarrayIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetInt",
    "hash": "0x3E5AE19425CD74BE",
    "code": "-- DATAARRAY_GET_INT\nlocal retval --[[ integer ]], arrayData --[[ Any ]] =\n\tDataarrayGetInt(\n\t\tarrayIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetString",
    "hash": "0xD3F2FFEB8D836F52",
    "code": "-- DATAARRAY_GET_STRING\nlocal retval --[[ string ]], arrayData --[[ Any ]] =\n\tDataarrayGetString(\n\t\tarrayIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetType",
    "hash": "0x3A0014ADB172A3C5",
    "code": "-- DATAARRAY_GET_TYPE\nlocal retval --[[ integer ]], arrayData --[[ Any ]] =\n\tDataarrayGetType(\n\t\tarrayIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Types:  \n1 = Boolean  \n2 = Integer  \n3 = Float  \n4 = String  \n5 = Vector3  \n6 = Object  \n7 = Array"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DataarrayGetVector",
    "hash": "0x8D2064E5B64A628A",
    "code": "-- DATAARRAY_GET_VECTOR\nlocal retval --[[ vector3 ]], arrayData --[[ Any ]] =\n\tDataarrayGetVector(\n\t\tarrayIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictCreateArray",
    "hash": "0x5B11728527CA6E5F",
    "code": "-- DATADICT_CREATE_ARRAY\nlocal retval --[[ Any* ]], objectData --[[ Any ]] =\n\tDatadictCreateArray(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictCreateDict",
    "hash": "0xA358F56F10732EE1",
    "code": "-- DATADICT_CREATE_DICT\nlocal retval --[[ Any* ]], objectData --[[ Any ]] =\n\tDatadictCreateDict(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetArray",
    "hash": "0x7A983AA9DA2659ED",
    "code": "-- DATADICT_GET_ARRAY\nlocal retval --[[ Any* ]], objectData --[[ Any ]] =\n\tDatadictGetArray(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetBool",
    "hash": "0x1186940ED72FFEEC",
    "code": "-- DATADICT_GET_BOOL\nlocal retval --[[ boolean ]], objectData --[[ Any ]] =\n\tDatadictGetBool(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetDict",
    "hash": "0xB6B9DDC412FCEEE2",
    "code": "-- DATADICT_GET_DICT\nlocal retval --[[ Any* ]], objectData --[[ Any ]] =\n\tDatadictGetDict(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetFloat",
    "hash": "0x06610343E73B9727",
    "code": "-- DATADICT_GET_FLOAT\nlocal retval --[[ number ]], objectData --[[ Any ]] =\n\tDatadictGetFloat(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetInt",
    "hash": "0x78F06F6B1FB5A80C",
    "code": "-- DATADICT_GET_INT\nlocal retval --[[ integer ]], objectData --[[ Any ]] =\n\tDatadictGetInt(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetString",
    "hash": "0x3D2FD9E763B24472",
    "code": "-- DATADICT_GET_STRING\nlocal retval --[[ string ]], objectData --[[ Any ]] =\n\tDatadictGetString(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetType",
    "hash": "0x031C55ED33227371",
    "code": "-- DATADICT_GET_TYPE\nlocal retval --[[ integer ]], objectData --[[ Any ]] =\n\tDatadictGetType(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Types:  \n1 = Boolean  \n2 = Integer  \n3 = Float  \n4 = String  \n5 = Vector3  \n6 = Object  \n7 = Array"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictGetVector",
    "hash": "0x46CD3CB66E0825CC",
    "code": "-- DATADICT_GET_VECTOR\nlocal retval --[[ vector3 ]], objectData --[[ Any ]] =\n\tDatadictGetVector(\n\t\tkey --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictSetBool",
    "hash": "0x35124302A556A325",
    "code": "-- DATADICT_SET_BOOL\nlocal objectData --[[ Any ]] =\n\tDatadictSetBool(\n\t\tkey --[[ string ]], \n\t\tvalue --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictSetFloat",
    "hash": "0xC27E1CC2D795105E",
    "code": "-- DATADICT_SET_FLOAT\nlocal objectData --[[ Any ]] =\n\tDatadictSetFloat(\n\t\tkey --[[ string ]], \n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictSetInt",
    "hash": "0xE7E035450A7948D5",
    "code": "-- DATADICT_SET_INT\nlocal objectData --[[ Any ]] =\n\tDatadictSetInt(\n\t\tkey --[[ string ]], \n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictSetString",
    "hash": "0x8FF3847DADD8E30C",
    "code": "-- DATADICT_SET_STRING\nlocal objectData --[[ Any ]] =\n\tDatadictSetString(\n\t\tkey --[[ string ]], \n\t\tvalue --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatadictSetVector",
    "hash": "0x4CD49B76338C7DEE",
    "code": "-- DATADICT_SET_VECTOR\nlocal objectData --[[ Any ]] =\n\tDatadictSetVector(\n\t\tkey --[[ string ]], \n\t\tvalueX --[[ number ]], \n\t\tvalueY --[[ number ]], \n\t\tvalueZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileClearWatchList",
    "hash": "0x6CC86E78358D5119",
    "code": "-- DATAFILE_CLEAR_WATCH_LIST\nDatafileClearWatchList()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileCreate",
    "hash": "0xD27058A1CA2B13EE",
    "code": "-- DATAFILE_CREATE\nDatafileCreate()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileDelete",
    "hash": "0x9AB9C1CFC8862DFB",
    "code": "-- DATAFILE_DELETE\nDatafileDelete()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileDeleteRequestedFile",
    "hash": "0x8F5EA1C01D65A100",
    "code": "-- DATAFILE_DELETE_REQUESTED_FILE\nlocal retval --[[ boolean ]] =\n\tDatafileDeleteRequestedFile(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileFlushMissionHeader",
    "hash": "0xC55854C7D7274882",
    "code": "-- DATAFILE_FLUSH_MISSION_HEADER\nDatafileFlushMissionHeader()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileGetFileDict",
    "hash": "0x906B778CA1DC72B6",
    "code": "-- DATAFILE_GET_FILE_DICT\nlocal retval --[[ string ]] =\n\tDatafileGetFileDict()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileHasLoadedFileData",
    "hash": "0x15FF52B809DB2353",
    "code": "-- DATAFILE_HAS_LOADED_FILE_DATA\nlocal retval --[[ boolean ]] =\n\tDatafileHasLoadedFileData(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileHasValidFileData",
    "hash": "0xF8CC1EBE0B62E29F",
    "code": "-- DATAFILE_HAS_VALID_FILE_DATA\nlocal retval --[[ boolean ]] =\n\tDatafileHasValidFileData(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileIsSavePending",
    "hash": "0xBEDB96A7584AA8CF",
    "code": "-- DATAFILE_IS_SAVE_PENDING\nlocal retval --[[ boolean ]] =\n\tDatafileIsSavePending()",
    "parameters": [],
    "returns": [],
    "description": "Example:  \nif (!DATAFILE::_BEDB96A7584AA8CF())  \n{  \n    if (!g_109E3)  \n\t{  \n        if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))  \n{  \n            if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())  \n\t{  \n                g_17A8B = 0;  \n            }  \n            if (!g_D52C)  \n\t{  \n                sub_730();  \n            }  \n        }  \n    }  \n}"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileIsValidRequestId",
    "hash": "0xFCCAE5B92A830878",
    "code": "-- DATAFILE_IS_VALID_REQUEST_ID\nlocal retval --[[ boolean ]] =\n\tDatafileIsValidRequestId(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileLoadOfflineUgc",
    "hash": "0xC5238C011AF405E4",
    "code": "-- DATAFILE_LOAD_OFFLINE_UGC\nlocal retval --[[ boolean ]] =\n\tDatafileLoadOfflineUgc(\n\t\tfilename --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Loads a User-Generated Content (UGC) file. These files can be found in \"[GTA5]\\data\\ugc\" and \"[GTA5]\\common\\patch\\ugc\". They seem to follow a naming convention, most likely of \"[name]_[part].ugc\". See example below for usage.\nReturns whether or not the file was successfully loaded.\nExample:\nDATAFILE::_LOAD_UGC_FILE(\"RockstarPlaylists\") // loads \"rockstarplaylists_00.ugc\"\n\nNativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileSelectActiveFile",
    "hash": "0x22DA66936E0FFF37",
    "code": "-- DATAFILE_SELECT_ACTIVE_FILE\nlocal retval --[[ boolean ]] =\n\tDatafileSelectActiveFile(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileSelectCreatorStats",
    "hash": "0x01095C95CD46B624",
    "code": "-- DATAFILE_SELECT_CREATOR_STATS\nlocal retval --[[ boolean ]] =\n\tDatafileSelectCreatorStats(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileSelectUgcData",
    "hash": "0xA69AC4ADE82B57A4",
    "code": "-- DATAFILE_SELECT_UGC_DATA\nlocal retval --[[ boolean ]] =\n\tDatafileSelectUgcData(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileSelectUgcPlayerData",
    "hash": "0x52818819057F2B40",
    "code": "-- DATAFILE_SELECT_UGC_PLAYER_DATA\nlocal retval --[[ boolean ]] =\n\tDatafileSelectUgcPlayerData(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileSelectUgcStats",
    "hash": "0x9CB0BFA7A9342C3D",
    "code": "-- DATAFILE_SELECT_UGC_STATS\nlocal retval --[[ boolean ]] =\n\tDatafileSelectUgcStats(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileStartSaveToCloud",
    "hash": "0x83BCCE3224735F05",
    "code": "-- DATAFILE_START_SAVE_TO_CLOUD\nlocal retval --[[ boolean ]] =\n\tDatafileStartSaveToCloud(\n\t\tfilename --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileStoreMissionHeader",
    "hash": "0x2ED61456317B8178",
    "code": "-- DATAFILE_STORE_MISSION_HEADER\nDatafileStoreMissionHeader()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileUpdateSaveToCloud",
    "hash": "0x4DFDD9EB705F8140",
    "code": "-- DATAFILE_UPDATE_SAVE_TO_CLOUD\nlocal retval --[[ boolean ]], p0 --[[ boolean ]] =\n\tDatafileUpdateSaveToCloud()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "DatafileWatchRequestId",
    "hash": "0xAD6875BBC0FC899C",
    "code": "-- DATAFILE_WATCH_REQUEST_ID\nDatafileWatchRequestId(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds the given request ID to the watch list."
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "UgcCreateContent",
    "hash": "0xC84527E235FCA219",
    "code": "-- UGC_CREATE_CONTENT\nlocal retval --[[ boolean ]] =\n\tUgcCreateContent(\n\t\tdata --[[ string ]], \n\t\tdataCount --[[ integer ]], \n\t\tcontentName --[[ string ]], \n\t\tdescription --[[ string ]], \n\t\ttagsCsv --[[ string ]], \n\t\tcontentTypeName --[[ string ]], \n\t\tpublish --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 8: Any p7"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "UgcCreateMission",
    "hash": "0xA5EFC3E847D60507",
    "code": "-- UGC_CREATE_MISSION\nlocal retval --[[ boolean ]] =\n\tUgcCreateMission(\n\t\tcontentName --[[ string ]], \n\t\tdescription --[[ string ]], \n\t\ttagsCsv --[[ string ]], \n\t\tcontentTypeName --[[ string ]], \n\t\tpublish --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "UgcSetPlayerData",
    "hash": "0x692D808C34A82143",
    "code": "-- UGC_SET_PLAYER_DATA\nlocal retval --[[ boolean ]] =\n\tUgcSetPlayerData(\n\t\tcontentId --[[ string ]], \n\t\trating --[[ number ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "UgcUpdateContent",
    "hash": "0x648E7A5434AF7969",
    "code": "-- UGC_UPDATE_CONTENT\nlocal retval --[[ boolean ]], data --[[ Any ]] =\n\tUgcUpdateContent(\n\t\tcontentId --[[ string ]], \n\t\tdataCount --[[ integer ]], \n\t\tcontentName --[[ string ]], \n\t\tdescription --[[ string ]], \n\t\ttagsCsv --[[ string ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 8: Any p7"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "UgcUpdateMission",
    "hash": "0x4645DE9980999E93",
    "code": "-- UGC_UPDATE_MISSION\nlocal retval --[[ boolean ]] =\n\tUgcUpdateMission(\n\t\tcontentId --[[ string ]], \n\t\tcontentName --[[ string ]], \n\t\tdescription --[[ string ]], \n\t\ttagsCsv --[[ string ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "N_0x6ad0bd5e087866cb",
    "hash": "0x6AD0BD5E087866CB",
    "code": "-- 0x6AD0BD5E087866CB\nN_0x6ad0bd5e087866cb(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "N_0xa6eef01087181edd",
    "hash": "0xA6EEF01087181EDD",
    "code": "-- 0xA6EEF01087181EDD\nlocal retval --[[ Any ]] =\n\tN_0xa6eef01087181edd(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: DATAFILE",
    "apiset": "API set: client",
    "name": "N_0xdbf860cf1db8e599",
    "hash": "0xDBF860CF1DB8E599",
    "code": "-- 0xDBF860CF1DB8E599\nlocal retval --[[ Any ]] =\n\tN_0xdbf860cf1db8e599(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorExistOn",
    "hash": "0x05661B80A8C9165F",
    "code": "-- DECOR_EXIST_ON\nlocal retval --[[ boolean ]] =\n\tDecorExistOn(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether or not the specified property is set for the entity."
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorGetBool",
    "hash": "0xDACE671663F2F5DB",
    "code": "-- DECOR_GET_BOOL\nlocal retval --[[ boolean ]] =\n\tDecorGetBool(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorGetFloat",
    "hash": "0x6524A2F114706F43",
    "code": "-- DECOR_GET_FLOAT\nlocal retval --[[ number ]] =\n\tDecorGetFloat(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorGetInt",
    "hash": "0xA06C969B02A97298",
    "code": "-- DECOR_GET_INT\nlocal retval --[[ integer ]] =\n\tDecorGetInt(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorIsRegisteredAsType",
    "hash": "0x4F14F9F870D6FBC8",
    "code": "-- DECOR_IS_REGISTERED_AS_TYPE\nlocal retval --[[ boolean ]] =\n\tDecorIsRegisteredAsType(\n\t\tpropertyName --[[ string ]], \n\t\ttype --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorRegister",
    "hash": "0x9FD90732F56403CE",
    "code": "-- DECOR_REGISTER\nDecorRegister(\n\tpropertyName --[[ string ]], \n\ttype --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eDecorType\n{\n    DECOR_TYPE_FLOAT = 1,\n    DECOR_TYPE_BOOL = 2,\n    DECOR_TYPE_INT = 3,\n    DECOR_TYPE_STRING = 4,\n    DECOR_TYPE_TIME = 5\n};"
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorRegisterLock",
    "hash": "0xA9D14EEA259F9248",
    "code": "-- DECOR_REGISTER_LOCK\nDecorRegisterLock()",
    "parameters": [],
    "returns": [],
    "description": "Called after all decorator type initializations."
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorRemove",
    "hash": "0x00EE9F297C738720",
    "code": "-- DECOR_REMOVE\nlocal retval --[[ boolean ]] =\n\tDecorRemove(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorSetBool",
    "hash": "0x6B1E8E2ED1335B71",
    "code": "-- DECOR_SET_BOOL\nlocal retval --[[ boolean ]] =\n\tDecorSetBool(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]], \n\t\tvalue --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function sets metadata of type bool to specified entity."
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorSetFloat",
    "hash": "0x211AB1DD8D0F363A",
    "code": "-- DECOR_SET_FLOAT\nlocal retval --[[ boolean ]] =\n\tDecorSetFloat(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]], \n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorSetInt",
    "hash": "0x0CE3AA5E1CA19E10",
    "code": "-- DECOR_SET_INT\nlocal retval --[[ boolean ]] =\n\tDecorSetInt(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]], \n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Sets property to int."
  },
  {
    "namespace": "Namespace: DECORATOR",
    "apiset": "API set: client",
    "name": "DecorSetTime",
    "hash": "0x95AED7B8E39ECAA4",
    "code": "-- DECOR_SET_TIME\nlocal retval --[[ boolean ]] =\n\tDecorSetTime(\n\t\tentity --[[ Entity ]], \n\t\tpropertyName --[[ string ]], \n\t\ttimestamp --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "GetExtraContentPackHasBeenInstalled",
    "hash": "0x8D30F648014A92B5",
    "code": "-- _GET_EXTRA_CONTENT_PACK_HAS_BEEN_INSTALLED\nlocal retval --[[ boolean ]] =\n\tGetExtraContentPackHasBeenInstalled()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "GetIsLoadingScreenActive",
    "hash": "0x10D0A8F259E93EC9",
    "code": "-- GET_IS_LOADING_SCREEN_ACTIVE\nlocal retval --[[ boolean ]] =\n\tGetIsLoadingScreenActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "HasCloudRequestsFinished",
    "hash": "0x46E2B844905BC5F0",
    "code": "-- HAS_CLOUD_REQUESTS_FINISHED\nlocal retval --[[ boolean ]], variable --[[ boolean ]] =\n\tHasCloudRequestsFinished(\n\t\tunused --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Sets the value of the specified variable to 0.\nAlways returns true."
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "IsDlcPresent",
    "hash": "0x812595A0644CE1DE",
    "code": "-- IS_DLC_PRESENT\nlocal retval --[[ boolean ]] =\n\tIsDlcPresent(\n\t\tdlcHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nDLC::IS_DLC_PRESENT($\\mpbusiness2\\);\n($ = gethashkey)\nbruteforce these:\n0xB119F6D\n0x96F02EE6"
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "OnEnterMp",
    "hash": "0x0888C3502DBBEEF5",
    "code": "-- ON_ENTER_MP\nOnEnterMp()",
    "parameters": [],
    "returns": [],
    "description": "This loads the GTA:O dlc map parts (high end garages, apartments).\nWorks in singleplayer.\nIn order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);"
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "OnEnterSp",
    "hash": "0xD7C10C4A637992C9",
    "code": "-- ON_ENTER_SP\nOnEnterSp()",
    "parameters": [],
    "returns": [],
    "description": "Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).\nThe original (and wrong) definition is below:\nThis unload the GTA:O DLC map parts (like high end garages/apartments).\nWorks in singleplayer."
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "N_0x241fca5b1aa14f75",
    "hash": "0x241FCA5B1AA14F75",
    "code": "-- 0x241FCA5B1AA14F75\nlocal retval --[[ boolean ]] =\n\tN_0x241fca5b1aa14f75()",
    "parameters": [],
    "returns": [],
    "description": "Only used once in scripts, in maintransition.\nmaintransition.c4, line ~82432:\nif (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {\n    g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?\n    return 1;\n}\nLikely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include \"HUD_JOINING\", \"HUD_QUITTING\".\nMost likely ARE_*"
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "N_0x9489659372a81585",
    "hash": "0x9489659372A81585",
    "code": "-- 0x9489659372A81585\nlocal retval --[[ boolean ]] =\n\tN_0x9489659372a81585()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "N_0xa213b11dff526300",
    "hash": "0xA213B11DFF526300",
    "code": "-- 0xA213B11DFF526300\nlocal retval --[[ boolean ]] =\n\tN_0xa213b11dff526300()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 1."
    ],
    "description": "Returns:\n\nHard-coded to always return 1."
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "N_0xc4637a6d03c24cc3",
    "hash": "0xC4637A6D03C24CC3",
    "code": "-- 0xC4637A6D03C24CC3\nlocal retval --[[ boolean ]] =\n\tN_0xc4637a6d03c24cc3()",
    "parameters": [],
    "returns": [],
    "description": "GETIS_LOADING*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: DLC",
    "apiset": "API set: client",
    "name": "N_0xf2e07819ef1a5289",
    "hash": "0xF2E07819EF1A5289",
    "code": "-- 0xF2E07819EF1A5289\nlocal retval --[[ boolean ]] =\n\tN_0xf2e07819ef1a5289()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 1."
    ],
    "description": "Returns:\n\nHard-coded to always return 1."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "ApplyForceToEntity",
    "hash": "0xC5F68BE9613E2D18",
    "code": "-- APPLY_FORCE_TO_ENTITY\nApplyForceToEntity(\n\tentity --[[ Entity ]], \n\tforceType --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\toffX --[[ number ]], \n\toffY --[[ number ]], \n\toffZ --[[ number ]], \n\tnComponent --[[ integer ]], \n\tbLocalForce --[[ boolean ]], \n\tbLocalOffset --[[ boolean ]], \n\tbScaleByMass --[[ boolean ]], \n\tbPlayAudio --[[ boolean ]], \n\tbScaleByTimeWarp --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity handle",
      "forceType: \n\nThe force type",
      "x: \n\nThe x component of the force to apply",
      "y: \n\nThe y component of the force to apply",
      "z: \n\nThe z component of the force to apply",
      "offX: \n\nOffset from center of entity (X)",
      "offY: \n\nOffset from center of entity (Y)",
      "offZ: \n\nOffset from center of entity (Z)",
      "nComponent: \n\nComponent of the entity to apply the force too. Only matters for breakable or articulated (ragdoll) physics. 0 means the root or parent component",
      "bLocalForce: \n\nSpecifies whether the force vector passed in is in local or world coordinates. true means the force will get automatically transformed into world space before being applied",
      "bLocalOffset: \n\nSpecifies whether the offset passed in is in local or world coordinates",
      "bScaleByMass: \n\nSpecifies whether to scale the force by mass",
      "bPlayAudio: \n\nSpecifies whether to play audio events related to the force being applied. The audio will depend on the entity type. Currently vehicles are the only entity types supported, and will play a suspension squeal depending on the magnitude of the force",
      "bScaleByTimeWarp: \n\nSpecifies whether to scale the force by time warp. Default is true"
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle\n\nforceType: \n\nThe force type\n\nx: \n\nThe x component of the force to apply\n\ny: \n\nThe y component of the force to apply\n\nz: \n\nThe z component of the force to apply\n\noffX: \n\nOffset from center of entity (X)\n\noffY: \n\nOffset from center of entity (Y)\n\noffZ: \n\nOffset from center of entity (Z)\n\nnComponent: \n\nComponent of the entity to apply the force too. Only matters for breakable or articulated (ragdoll) physics. 0 means the root or parent component\n\nbLocalForce: \n\nSpecifies whether the force vector passed in is in local or world coordinates. true means the force will get automatically transformed into world space before being applied\n\nbLocalOffset: \n\nSpecifies whether the offset passed in is in local or world coordinates\n\nbScaleByMass: \n\nSpecifies whether to scale the force by mass\n\nbPlayAudio: \n\nSpecifies whether to play audio events related to the force being applied. The audio will depend on the entity type. Currently vehicles are the only entity types supported, and will play a suspension squeal depending on the magnitude of the force\n\nbScaleByTimeWarp: \n\nSpecifies whether to scale the force by time warp. Default is true\n\nenum eApplyForceTypes {\n    APPLY_TYPE_FORCE = 0,\n    APPLY_TYPE_IMPULSE = 1,\n    APPLY_TYPE_EXTERNAL_FORCE = 2,\n    APPLY_TYPE_EXTERNAL_IMPULSE = 3,\n    APPLY_TYPE_TORQUE = 4,\n    APPLY_TYPE_ANGULAR_IMPULSE = 5\n}"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "ApplyForceToEntityCenterOfMass",
    "hash": "0x18FF00FC7EFF559E",
    "code": "-- APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS\nApplyForceToEntityCenterOfMass(\n\tentity --[[ Entity ]], \n\tforceType --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tnComponent --[[ integer ]], \n\tbLocalForce --[[ boolean ]], \n\tbScaleByMass --[[ boolean ]], \n\tbApplyToChildren --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity handle",
      "forceType: \n\nThe force type, see APPLY_FORCE_TO_ENTITY",
      "x: \n\nThe x component of the force to apply",
      "y: \n\nThe y component of the force to apply",
      "z: \n\nThe z component of the force to apply",
      "nComponent: \n\nComponent of the entity to apply the force too. Only matters for breakable or articulated (ragdoll) physics. 0 means the root or parent component",
      "bLocalForce: \n\nSpecifies whether the force vector passed in is in local or world coordinates. true means the force will get automatically transformed into world space before being applied",
      "bScaleByMass: \n\nSpecifies whether to scale the force by mass",
      "bApplyToChildren: \n\nDefault false. If the force should be applied to any attached children"
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle\n\nforceType: \n\nThe force type, see APPLY_FORCE_TO_ENTITY\n\nx: \n\nThe x component of the force to apply\n\ny: \n\nThe y component of the force to apply\n\nz: \n\nThe z component of the force to apply\n\nnComponent: \n\nComponent of the entity to apply the force too. Only matters for breakable or articulated (ragdoll) physics. 0 means the root or parent component\n\nbLocalForce: \n\nSpecifies whether the force vector passed in is in local or world coordinates. true means the force will get automatically transformed into world space before being applied\n\nbScaleByMass: \n\nSpecifies whether to scale the force by mass\n\nbApplyToChildren: \n\nDefault false. If the force should be applied to any attached children\n\nApply a force to an entities center of mass."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "AttachEntityBoneToEntityBone",
    "hash": "0x5C48B75732C8456C",
    "code": "-- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE\nAttachEntityBoneToEntityBone(\n\tentity1 --[[ Entity ]], \n\tentity2 --[[ Entity ]], \n\tentityBone --[[ integer ]], \n\tentityBone2 --[[ integer ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "AttachEntityBoneToEntityBonePhysically",
    "hash": "0xFD1695C5D3B05439",
    "code": "-- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE_PHYSICALLY\nAttachEntityBoneToEntityBonePhysically(\n\tentity1 --[[ Entity ]], \n\tentity2 --[[ Entity ]], \n\tentityBone --[[ integer ]], \n\tentityBone2 --[[ integer ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "AttachEntityToEntity",
    "hash": "0x6B9BBD38AB0796DF",
    "code": "-- ATTACH_ENTITY_TO_ENTITY\nAttachEntityToEntity(\n\tentity1 --[[ Entity ]], \n\tentity2 --[[ Entity ]], \n\tboneIndex --[[ integer ]], \n\txPos --[[ number ]], \n\tyPos --[[ number ]], \n\tzPos --[[ number ]], \n\txRot --[[ number ]], \n\tyRot --[[ number ]], \n\tzRot --[[ number ]], \n\tp9 --[[ boolean ]], \n\tuseSoftPinning --[[ boolean ]], \n\tcollision --[[ boolean ]], \n\tisPed --[[ boolean ]], \n\trotationOrder --[[ integer ]], \n\tsyncRot --[[ boolean ]]\n)",
    "parameters": [
      "entity1: \n\nEntity to attach.",
      "entity2: \n\nEntity to attach entity1 with.",
      "boneIndex: \n\nThis is different to boneID, use 'GET_PED_BONE_INDEX' to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to the center of entity2 if bone index given doesn't correspond to bone indexes for that entity type.",
      "xPos: \n\nX-axis offset from the center of entity2.",
      "yPos: \n\nY-axis offset from the center of entity2.",
      "zPos: \n\nZ-axis offset from the center of entity2.",
      "xRot: \n\nX-axis rotation.",
      "yRot: \n\nY-axis rotation.",
      "zRot: \n\nZ-axis rotation.",
      "p9: \n\nUnknown. Does not seem to have any effect.",
      "useSoftPinning: \n\nIf set to false attached entity will not detach when fixed.",
      "collision: \n\nControls collision between the two entities (FALSE disables collision).",
      "isPed: \n\nPitch doesnt work when false and roll will only work on negative numbers (only peds)",
      "rotationOrder: \n\nThe order in which the rotation is applied. See GET_ENTITY_ROTATION",
      "syncRot: \n\nIf false it ignores entity rotation."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity1: \n\nEntity to attach.\n\nentity2: \n\nEntity to attach entity1 with.\n\nboneIndex: \n\nThis is different to boneID, use 'GET_PED_BONE_INDEX' to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to the center of entity2 if bone index given doesn't correspond to bone indexes for that entity type.\n\nxPos: \n\nX-axis offset from the center of entity2.\n\nyPos: \n\nY-axis offset from the center of entity2.\n\nzPos: \n\nZ-axis offset from the center of entity2.\n\nxRot: \n\nX-axis rotation.\n\nyRot: \n\nY-axis rotation.\n\nzRot: \n\nZ-axis rotation.\n\np9: \n\nUnknown. Does not seem to have any effect.\n\nuseSoftPinning: \n\nIf set to false attached entity will not detach when fixed.\n\ncollision: \n\nControls collision between the two entities (FALSE disables collision).\n\nisPed: \n\nPitch doesnt work when false and roll will only work on negative numbers (only peds)\n\nrotationOrder: \n\nThe order in which the rotation is applied. See GET_ENTITY_ROTATION\n\nsyncRot: \n\nIf false it ignores entity rotation.\n\nAttach an entity to the specified entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "AttachEntityToEntityPhysically",
    "hash": "0xC3675780C92F90F9",
    "code": "-- ATTACH_ENTITY_TO_ENTITY_PHYSICALLY\nAttachEntityToEntityPhysically(\n\tentity1 --[[ Entity ]], \n\tentity2 --[[ Entity ]], \n\tboneIndex1 --[[ integer ]], \n\tboneIndex2 --[[ integer ]], \n\txPos1 --[[ number ]], \n\tyPos1 --[[ number ]], \n\tzPos1 --[[ number ]], \n\txPos2 --[[ number ]], \n\tyPos2 --[[ number ]], \n\tzPos2 --[[ number ]], \n\txRot --[[ number ]], \n\tyRot --[[ number ]], \n\tzRot --[[ number ]], \n\tbreakForce --[[ number ]], \n\tfixedRot --[[ boolean ]], \n\tp15 --[[ boolean ]], \n\tcollision --[[ boolean ]], \n\tteleport --[[ boolean ]], \n\tp18 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "breakForce is the amount of force required to break the bond.\np14 - is always 1 in scripts\np15 - is 1 or 0 in scripts - unknown what it does\np16 - controls collision between the two entities (FALSE disables collision).\np17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)\np18 - is always 2 in scripts."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "ClearEntityLastDamageEntity",
    "hash": "0xA72CD9CA74A5ECBA",
    "code": "-- CLEAR_ENTITY_LAST_DAMAGE_ENTITY\nClearEntityLastDamageEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to clear the last damaging entity from."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to clear the last damaging entity from.\n\nThis native could affect the arguments of the CEventNetworkEntityDamage game event, by clearing the damaging entity before the event is fired."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "CreateForcedObject",
    "hash": "0x150E808B375A385A",
    "code": "-- CREATE_FORCED_OBJECT\nCreateForcedObject(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp3 --[[ Any ]], \n\tmodelHash --[[ Hash ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "CreateModelHide",
    "hash": "0x8A97BCA30A0CE478",
    "code": "-- CREATE_MODEL_HIDE\nCreateModelHide(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tmodel --[[ Hash ]], \n\tsurviveMapReload --[[ boolean ]]\n)",
    "parameters": [
      "x: \n\nX Coordinate of the hiding sphere center.",
      "y: \n\nY Coordinate of the hiding sphere center.",
      "z: \n\nZ Coordinate of the hiding sphere center.",
      "radius: \n\nRadius of the hiding sphere.",
      "model: \n\nThe object's model hash to hide.",
      "surviveMapReload: \n\nIf false, only currently loaded objects are hidden. If their map unloads (e.g. by moving away) and reloads, the objects will reappear."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nX Coordinate of the hiding sphere center.\n\ny: \n\nY Coordinate of the hiding sphere center.\n\nz: \n\nZ Coordinate of the hiding sphere center.\n\nradius: \n\nRadius of the hiding sphere.\n\nmodel: \n\nThe object's model hash to hide.\n\nsurviveMapReload: \n\nIf false, only currently loaded objects are hidden. If their map unloads (e.g. by moving away) and reloads, the objects will reappear.\n\nHides all objects of the specified model intersecting a sphere centered at (x, y, z) with the given radius. Network players do not see changes done with this. Use CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS if you only want to hide map objects and exclude those created by scripts. Use REMOVE_MODEL_HIDE to make hidden objects visible again."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "CreateModelHideExcludingScriptObjects",
    "hash": "0x3A52AE588830BF7F",
    "code": "-- CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS\nCreateModelHideExcludingScriptObjects(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tmodel --[[ Hash ]], \n\tsurviveMapReload --[[ boolean ]]\n)",
    "parameters": [
      "x: \n\nX Coordinate of the hiding sphere center.",
      "y: \n\nY Coordinate of the hiding sphere center.",
      "z: \n\nZ Coordinate of the hiding sphere center.",
      "radius: \n\nRadius of the hiding sphere.",
      "model: \n\nThe object's model hash to hide.",
      "surviveMapReload: \n\nIf false, only currently loaded objects are hidden. If their map unloads (e.g. by moving away) and reloads, the objects will reappear."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nX Coordinate of the hiding sphere center.\n\ny: \n\nY Coordinate of the hiding sphere center.\n\nz: \n\nZ Coordinate of the hiding sphere center.\n\nradius: \n\nRadius of the hiding sphere.\n\nmodel: \n\nThe object's model hash to hide.\n\nsurviveMapReload: \n\nIf false, only currently loaded objects are hidden. If their map unloads (e.g. by moving away) and reloads, the objects will reappear.\n\nHides all objects of the specified model intersecting a sphere centered at (x, y, z) with the given radius, excluding objects created by scripts. Network players do not see changes done with this. Use REMOVE_MODEL_HIDE to make hidden objects visible again."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "CreateModelSwap",
    "hash": "0x92C47782FDA8B2A3",
    "code": "-- CREATE_MODEL_SWAP\nCreateModelSwap(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\toriginalModel --[[ Hash ]], \n\tnewModel --[[ Hash ]], \n\tbSurviveMapReload --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only works with objects!  \nNetwork players do not see changes done with this."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DeleteEntity",
    "hash": "0xAE3CBE5BF394C9C9",
    "code": "-- DELETE_ENTITY\nlocal entity --[[ Entity ]] =\n\tDeleteEntity()",
    "parameters": [
      "entity: \n\nThe entity to delete."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to delete.\n\nDelete the specified entity, and invalidate the passed handle (i.e., the in/out argument). You might want to check if the entity exists before with DOES_ENTITY_EXIST."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DetachEntity",
    "hash": "0x961AC54BF0613F5D",
    "code": "-- DETACH_ENTITY\nDetachEntity(\n\tentity --[[ Entity ]], \n\tdynamic --[[ boolean ]], \n\tcollision --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DoesEntityBelongToThisScript",
    "hash": "0xDDE6DF5AE89981D2",
    "code": "-- DOES_ENTITY_BELONG_TO_THIS_SCRIPT\nlocal retval --[[ boolean ]] =\n\tDoesEntityBelongToThisScript(\n\t\tentity --[[ Entity ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DoesEntityExist",
    "hash": "0x7239B21A38F536BA",
    "code": "-- DOES_ENTITY_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesEntityExist(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check if it exists."
    ],
    "returns": [
      "Whether the entity exists or not."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check if it exists.\n\nReturns:\n\nWhether the entity exists or not.\n\nChecks whether an entity exists in the game world."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DoesEntityHaveAnimDirector",
    "hash": "0x2158E81A6AF65EA9",
    "code": "-- _DOES_ENTITY_HAVE_ANIM_DIRECTOR\nlocal retval --[[ boolean ]] =\n\tDoesEntityHaveAnimDirector(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DoesEntityHaveDrawable",
    "hash": "0x060D6E96F8B8E48D",
    "code": "-- DOES_ENTITY_HAVE_DRAWABLE\nlocal retval --[[ boolean ]] =\n\tDoesEntityHaveDrawable(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DoesEntityHavePhysics",
    "hash": "0xDA95EA3317CC5064",
    "code": "-- DOES_ENTITY_HAVE_PHYSICS\nlocal retval --[[ boolean ]] =\n\tDoesEntityHavePhysics(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "DoesEntityHaveSkeletonData",
    "hash": "0x764EB96874EFFDC1",
    "code": "-- _DOES_ENTITY_HAVE_SKELETON_DATA\nlocal retval --[[ boolean ]] =\n\tDoesEntityHaveSkeletonData(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "EnableEntityUnk",
    "hash": "0x6CE177D014502E8A",
    "code": "-- _ENABLE_ENTITY_UNK\nEnableEntityUnk(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "ENABLE_*"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "FindAnimEventPhase",
    "hash": "0x07F1BE2BCCAA27A7",
    "code": "-- FIND_ANIM_EVENT_PHASE\nlocal retval --[[ boolean ]], p3 --[[ Any ]], p4 --[[ Any ]] =\n\tFindAnimEventPhase(\n\t\tanimDictionary --[[ string ]], \n\t\tanimName --[[ string ]], \n\t\tp2 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "In the script \"player_scene_t_bbfight.c4\":  \n\"if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))\"  \n-- &l_16E (p0) is requested as an anim dictionary earlier in the script.  \n-- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the \"animation\" param.  \n-- v_9 (p2) is instantiated as \"victim_fall\"; I'm guessing that's another anim  \n--v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:   \n\"if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))\"  \nBoth v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though  \n-alphazolam  \n\n\nAnimations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "ForceEntityAiAndAnimationUpdate",
    "hash": "0x40FDEDB72F8293B2",
    "code": "-- FORCE_ENTITY_AI_AND_ANIMATION_UPDATE\nForceEntityAiAndAnimationUpdate(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "FreezeEntityPosition",
    "hash": "0x428CA6DBD1094446",
    "code": "-- FREEZE_ENTITY_POSITION\nFreezeEntityPosition(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to freeze/unfreeze.",
      "toggle: \n\nFreeze or unfreeze entity."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to freeze/unfreeze.\n\ntoggle: \n\nFreeze or unfreeze entity.\n\nFreezes or unfreezes an entity preventing its coordinates to change by the player if set to true. You can still change the entity position using SET_ENTITY_COORDS."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetAnimDuration",
    "hash": "0xFEDDF04D62B8D790",
    "code": "-- GET_ANIM_DURATION\nlocal retval --[[ number ]] =\n\tGetAnimDuration(\n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetCollisionNormalOfLastHitForEntity",
    "hash": "0xE465D4AB7CA6AE72",
    "code": "-- GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY\nlocal retval --[[ vector3 ]] =\n\tGetCollisionNormalOfLastHitForEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityAlpha",
    "hash": "0x5A47B3B5E63E94C6",
    "code": "-- GET_ENTITY_ALPHA\nlocal retval --[[ integer ]] =\n\tGetEntityAlpha(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityAnimCurrentTime",
    "hash": "0x346D81500D088F42",
    "code": "-- GET_ENTITY_ANIM_CURRENT_TIME\nlocal retval --[[ number ]] =\n\tGetEntityAnimCurrentTime(\n\t\tentity --[[ Entity ]], \n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.  \nExample:  \n0.000000 - mark the starting of animation.  \n0.500000 - mark the midpoint of the animation.  \n1.000000 - mark the end of animation.  \n\n\nAnimations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityAnimTotalTime",
    "hash": "0x50BD2730B191E360",
    "code": "-- GET_ENTITY_ANIM_TOTAL_TIME\nlocal retval --[[ number ]] =\n\tGetEntityAnimTotalTime(\n\t\tentity --[[ Entity ]], \n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a float value representing animation's total playtime in milliseconds.  \nExample:  \nGET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),\"amb@world_human_yoga@female@base\",\"base_b\")   \nreturn 20800.000000  \n\n\nAnimations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityAttachedTo",
    "hash": "0x48C2BED9180FE123",
    "code": "-- GET_ENTITY_ATTACHED_TO\nlocal retval --[[ Entity ]] =\n\tGetEntityAttachedTo(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityBoneCount",
    "hash": "0xB328DCC3A3AA401B",
    "code": "-- _GET_ENTITY_BONE_COUNT\nlocal retval --[[ integer ]] =\n\tGetEntityBoneCount(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityBoneIndexByName",
    "hash": "0xFB71170B7E76ACBA",
    "code": "-- GET_ENTITY_BONE_INDEX_BY_NAME\nlocal retval --[[ integer ]] =\n\tGetEntityBoneIndexByName(\n\t\tentity --[[ Entity ]], \n\t\tboneName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the index of the bone. If the bone was not found, -1 will be returned.   \nlist:  \npastebin.com/D7JMnX1g  \nBoneNames:  \n\tchassis,  \n\twindscreen,  \n\tseat_pside_r,  \n\tseat_dside_r,  \n\tbodyshell,  \n\tsuspension_lm,  \n\tsuspension_lr,  \n\tplatelight,  \n\tattach_female,  \n\tattach_male,  \n\tbonnet,  \n\tboot,  \n\tchassis_dummy,\t//Center of the dummy  \n\tchassis_Control,\t//Not found yet  \n\tdoor_dside_f,\t//Door left, front  \n\tdoor_dside_r,\t//Door left, back  \n\tdoor_pside_f,\t//Door right, front  \n\tdoor_pside_r,\t//Door right, back  \n\tGun_GripR,  \n\twindscreen_f,  \n\tplatelight,\t//Position where the light above the numberplate is located  \n\tVFX_Emitter,  \n\twindow_lf,\t//Window left, front  \n\twindow_lr,\t//Window left, back  \n\twindow_rf,\t//Window right, front  \n\twindow_rr,\t//Window right, back  \n\tengine,\t//Position of the engine  \n\tgun_ammo,  \n\tROPE_ATTATCH,\t//Not misspelled. In script \"finale_heist2b.c4\".  \n\twheel_lf,\t//Wheel left, front  \n\twheel_lr,\t//Wheel left, back  \n\twheel_rf,\t//Wheel right, front  \n\twheel_rr,\t//Wheel right, back  \n\texhaust,\t//Exhaust. shows only the position of the stock-exhaust  \n\toverheat,\t//A position on the engine(not exactly sure, how to name it)  \n\tmisc_e,\t//Not a car-bone.  \n\tseat_dside_f,\t//Driver-seat  \n\tseat_pside_f,\t//Seat next to driver  \n\tGun_Nuzzle,  \n\tseat_r  \nI doubt that the function is case-sensitive, since I found a \"Chassis\" and a \"chassis\". - Just tested: Definitely not case-sensitive."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityBonePosition_2",
    "hash": "0x46F8696933A63C9B",
    "code": "-- _GET_ENTITY_BONE_POSITION_2\nlocal retval --[[ vector3 ]] =\n\tGetEntityBonePosition_2(\n\t\tentity --[[ Entity ]], \n\t\tboneIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the world rotation of the specified bone of the specified entity.\nThis native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityBoneRotation",
    "hash": "0xCE6294A232D03786",
    "code": "-- _GET_ENTITY_BONE_ROTATION\nlocal retval --[[ vector3 ]] =\n\tGetEntityBoneRotation(\n\t\tentity --[[ Entity ]], \n\t\tboneIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the world rotation of the specified bone of the specified entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityBoneRotationLocal",
    "hash": "0xBD8D32550E5CEBFE",
    "code": "-- _GET_ENTITY_BONE_ROTATION_LOCAL\nlocal retval --[[ vector3 ]] =\n\tGetEntityBoneRotationLocal(\n\t\tentity --[[ Entity ]], \n\t\tboneIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the local rotation of the specified bone of the specified entity.\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityCanBeDamaged",
    "hash": "0xD95CC5D2AB15A09F",
    "code": "-- GET_ENTITY_CAN_BE_DAMAGED\nlocal retval --[[ boolean ]] =\n\tGetEntityCanBeDamaged(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityCollisionDisabled",
    "hash": "0xCCF1E97BEFDAE480",
    "code": "-- GET_ENTITY_COLLISION_DISABLED\nlocal retval --[[ boolean ]] =\n\tGetEntityCollisionDisabled(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityCoords",
    "hash": "0x3FEF770D40960D5A",
    "code": "-- GET_ENTITY_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetEntityCoords(\n\t\tentity --[[ Entity ]], \n\t\talive --[[ boolean ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the coordinates from.",
      "alive: \n\nUnused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive."
    ],
    "returns": [
      "The current entity coordinates."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the coordinates from.\n\nalive: \n\nUnused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.\n\nReturns:\n\nThe current entity coordinates.\n\nGets the current coordinates (world position) for a specified entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityForwardVector",
    "hash": "0x0A794A5A57F8DF91",
    "code": "-- GET_ENTITY_FORWARD_VECTOR\nlocal retval --[[ vector3 ]] =\n\tGetEntityForwardVector(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the forward vector for."
    ],
    "returns": [
      "The forward vector."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the forward vector for.\n\nReturns:\n\nThe forward vector.\n\nGets the entity's forward vector."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityForwardX",
    "hash": "0x8BB4EF4214E0E6D5",
    "code": "-- GET_ENTITY_FORWARD_X\nlocal retval --[[ number ]] =\n\tGetEntityForwardX(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the X-component of the entity's forward vector."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityForwardY",
    "hash": "0x866A4A5FAE349510",
    "code": "-- GET_ENTITY_FORWARD_Y\nlocal retval --[[ number ]] =\n\tGetEntityForwardY(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the Y-component of the entity's forward vector."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityHeading",
    "hash": "0xE83D4F9BA2A38914",
    "code": "-- GET_ENTITY_HEADING\nlocal retval --[[ number ]] =\n\tGetEntityHeading(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the heading from."
    ],
    "returns": [
      "The current entity heading."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the heading from.\n\nReturns:\n\nThe current entity heading.\n\nReturns the heading of the entity in degrees. Also know as the \"Yaw\" of an entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityHeadingFromEulers",
    "hash": "0x846BF6291198A71E",
    "code": "-- GET_ENTITY_HEADING_FROM_EULERS\nlocal retval --[[ number ]] =\n\tGetEntityHeadingFromEulers(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the heading from."
    ],
    "returns": [
      "Returns a float representing the entity's heading from eulers."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the heading from.\n\nReturns:\n\nReturns a float representing the entity's heading from eulers.\n\nGets the heading of the entity physics in degrees, which tends to be more accurate than just GET_ENTITY_HEADING. This can be clearly seen while, for example, ragdolling a ped/player."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityHealth",
    "hash": "0xEEF059FAD016D209",
    "code": "-- GET_ENTITY_HEALTH\nlocal retval --[[ integer ]] =\n\tGetEntityHealth(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the health from."
    ],
    "returns": [
      "The current entity health."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the health from.\n\nReturns:\n\nThe current entity health.\n\nReturns an integer value of entity's current health.\nExample of range for ped:\n- Player [0 to 200]\n- Ped [100 to 200]\n- Vehicle [0 to 1000]\n- Object [0 to 1000]\nHealth is actually a float value but this native casts it to int.\nIn order to get the actual value, do:\nfloat health = *(float *)(entityAddress + 0x280);"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityHeight",
    "hash": "0x5A504562485944DD",
    "code": "-- GET_ENTITY_HEIGHT\nlocal retval --[[ number ]] =\n\tGetEntityHeight(\n\t\tentity --[[ Entity ]], \n\t\tX --[[ number ]], \n\t\tY --[[ number ]], \n\t\tZ --[[ number ]], \n\t\tatTop --[[ boolean ]], \n\t\tinWorldCoords --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityHeightAboveGround",
    "hash": "0x1DD55701034110E5",
    "code": "-- GET_ENTITY_HEIGHT_ABOVE_GROUND\nlocal retval --[[ number ]] =\n\tGetEntityHeightAboveGround(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return height (z-dimension) above ground.   \nExample: The pilot in a titan plane is 1.844176 above ground.  \nHow can i convert it to meters?  \nEverything seems to be in meters, probably this too."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityLodDist",
    "hash": "0x4159C2762B5791D6",
    "code": "-- GET_ENTITY_LOD_DIST\nlocal retval --[[ integer ]] =\n\tGetEntityLodDist(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the LOD distance of an entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityMatrix",
    "hash": "0xECB2FC7235A7D137",
    "code": "-- GET_ENTITY_MATRIX\nlocal forwardVector --[[ vector3 ]], rightVector --[[ vector3 ]], upVector --[[ vector3 ]], position --[[ vector3 ]] =\n\tGetEntityMatrix(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityMaxHealth",
    "hash": "0x15D757606D170C3C",
    "code": "-- GET_ENTITY_MAX_HEALTH\nlocal retval --[[ integer ]] =\n\tGetEntityMaxHealth(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return an integer value of entity's maximum health.  \nExample:  \n- Player = 200"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityModel",
    "hash": "0x9F47B058362C84B5",
    "code": "-- GET_ENTITY_MODEL\nlocal retval --[[ Hash ]] =\n\tGetEntityModel(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the model for."
    ],
    "returns": [
      "The model hash of the entity."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the model for.\n\nReturns:\n\nThe model hash of the entity.\n\nReturns the model hash from an entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityPickup",
    "hash": "0x1F922734E259BD26",
    "code": "-- _GET_ENTITY_PICKUP\nlocal retval --[[ Entity ]] =\n\tGetEntityPickup(\n\t\tentity --[[ Entity ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_ENTITY_*\n\nSeems to return the handle of the entity's portable pickup.\n\nNativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityPitch",
    "hash": "0xD45DC2893621E1FE",
    "code": "-- GET_ENTITY_PITCH\nlocal retval --[[ number ]] =\n\tGetEntityPitch(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityPopulationType",
    "hash": "0xF6F5161F4534EDFF",
    "code": "-- GET_ENTITY_POPULATION_TYPE\nlocal retval --[[ integer ]] =\n\tGetEntityPopulationType(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to obtain the population type from."
    ],
    "returns": [
      "A population type, from the enumeration above."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to obtain the population type from.\n\nReturns:\n\nA population type, from the enumeration above.\n\nA population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityProofs",
    "hash": "0xBE8CD9BE829BBEBF",
    "code": "-- _GET_ENTITY_PROOFS\nlocal retval --[[ boolean ]], bulletProof --[[ boolean ]], fireProof --[[ boolean ]], explosionProof --[[ boolean ]], collisionProof --[[ boolean ]], meleeProof --[[ boolean ]], steamProof --[[ boolean ]], p7 --[[ boolean ]], drownProof --[[ boolean ]] =\n\tGetEntityProofs(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityQuaternion",
    "hash": "0x7B3703D2D32DFA18",
    "code": "-- GET_ENTITY_QUATERNION\nlocal x --[[ number ]], y --[[ number ]], z --[[ number ]], w --[[ number ]] =\n\tGetEntityQuaternion(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "w is the correct parameter name!"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityRoll",
    "hash": "0x831E0242595560DF",
    "code": "-- GET_ENTITY_ROLL\nlocal retval --[[ number ]] =\n\tGetEntityRoll(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Displays the current ROLL axis of the entity [-180.0000/180.0000+]  \n(Sideways Roll) such as a vehicle tipped on its side"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityRotation",
    "hash": "0xAFBD61CC738D9EB9",
    "code": "-- GET_ENTITY_ROTATION\nlocal retval --[[ vector3 ]] =\n\tGetEntityRotation(\n\t\tentity --[[ Entity ]], \n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to get the rotation for.",
      "rotationOrder: \n\nThe order yaw, pitch and roll is applied. Usually 2."
    ],
    "returns": [
      "A vector where the Z coordinate is the yaw."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to get the rotation for.\n\nrotationOrder: \n\nThe order yaw, pitch and roll is applied. Usually 2.\n\nReturns:\n\nA vector where the Z coordinate is the yaw.\n\nNOTE: What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.\n\nenum eRotationOrder {\n    // Rotate around the z-axis, then the y-axis and finally the x-axis.\n    ROT_ZYX = 0,\n    // Rotate around the y-axis, then the z-axis and finally the x-axis.\n    ROT_YZX = 1,\n    // Rotate around the z-axis, then the x-axis and finally the y-axis.\n    ROT_ZXY = 2,\n    // Rotate around the x-axis, then the z-axis and finally the y-axis.\n    ROT_XZY = 3,\n    // Rotate around the y-axis, then the x-axis and finally the z-axis.\n    ROT_YXZ = 4,\n    // Rotate around the x-axis, then the y-axis and finally the z-axis.\n    ROT_XYZ = 5,\n}"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityRotationVelocity",
    "hash": "0x213B91045D09B983",
    "code": "-- GET_ENTITY_ROTATION_VELOCITY\nlocal retval --[[ vector3 ]] =\n\tGetEntityRotationVelocity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityScript",
    "hash": "0xA6E9C38DB51D7748",
    "code": "-- GET_ENTITY_SCRIPT\nlocal retval --[[ string ]], script --[[ ScrHandle ]] =\n\tGetEntityScript(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntitySpeed",
    "hash": "0xD5037BA82E12416F",
    "code": "-- GET_ENTITY_SPEED\nlocal retval --[[ number ]] =\n\tGetEntitySpeed(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nEntity id you want to test for speed."
    ],
    "returns": [
      "Speed of a entity in m/s. You can convert to km/h using the value you get and multiply by 3.6, and miles/h by 2.236936. Also, the float returned is the length of GET_ENTITY_SPEED_VECTOR"
    ],
    "description": "Parameters:\n\nentity: \n\nEntity id you want to test for speed.\n\nReturns:\n\nSpeed of a entity in m/s. You can convert to km/h using the value you get and multiply by 3.6, and miles/h by 2.236936. Also, the float returned is the length of GET_ENTITY_SPEED_VECTOR\n\nGet the speed of a entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntitySpeedVector",
    "hash": "0x9A8D700A51CB7B0D",
    "code": "-- GET_ENTITY_SPEED_VECTOR\nlocal retval --[[ vector3 ]] =\n\tGetEntitySpeedVector(\n\t\tentity --[[ Entity ]], \n\t\trelative --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed)."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntitySubmergedLevel",
    "hash": "0xE81AFC1BC4CC41CE",
    "code": "-- GET_ENTITY_SUBMERGED_LEVEL\nlocal retval --[[ number ]] =\n\tGetEntitySubmergedLevel(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Get how much of the entity is submerged.  1.0f is whole entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityType",
    "hash": "0x8ACD366038D14505",
    "code": "-- GET_ENTITY_TYPE\nlocal retval --[[ integer ]] =\n\tGetEntityType(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns:\n0 = no entity\n1 = ped\n2 = vehicle\n3 = object"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityUprightValue",
    "hash": "0x95EED5A694951F9F",
    "code": "-- GET_ENTITY_UPRIGHT_VALUE\nlocal retval --[[ number ]] =\n\tGetEntityUprightValue(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetEntityVelocity",
    "hash": "0x4805D2B1D8CF94A9",
    "code": "-- GET_ENTITY_VELOCITY\nlocal retval --[[ vector3 ]] =\n\tGetEntityVelocity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetLastMaterialHitByEntity",
    "hash": "0x5C3D0A935F535C4C",
    "code": "-- GET_LAST_MATERIAL_HIT_BY_ENTITY\nlocal retval --[[ Hash ]] =\n\tGetLastMaterialHitByEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetNearestPlayerToEntity",
    "hash": "0x7196842CB375CDB3",
    "code": "-- GET_NEAREST_PLAYER_TO_ENTITY\nlocal retval --[[ Player ]] =\n\tGetNearestPlayerToEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetNearestPlayerToEntityOnTeam",
    "hash": "0x4DC9A62F844D9337",
    "code": "-- GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM\nlocal retval --[[ Player ]] =\n\tGetNearestPlayerToEntityOnTeam(\n\t\tentity --[[ Entity ]], \n\t\tteam --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetObjectIndexFromEntityIndex",
    "hash": "0xD7E3B9735C0F89D6",
    "code": "-- GET_OBJECT_INDEX_FROM_ENTITY_INDEX\nlocal retval --[[ Object ]] =\n\tGetObjectIndexFromEntityIndex(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Simply returns whatever is passed to it (Regardless of whether the handle is valid or not)."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetOffsetFromEntityGivenWorldCoords",
    "hash": "0x2274BC1C4885E333",
    "code": "-- GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetOffsetFromEntityGivenWorldCoords(\n\t\tentity --[[ Entity ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Converts world coords (posX - Z) to coords relative to the entity  \nExample:  \nposX = 50  \nposY = 1000  \nposZ = 60  \nEntity's coords are: x=30, y=1000, z=60.  \nAll three returned coords will then be in range of [-20,20] depending on rotation of the entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetOffsetFromEntityInWorldCoords",
    "hash": "0x1899F328B0E12848",
    "code": "-- GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetOffsetFromEntityInWorldCoords(\n\t\tentity --[[ Entity ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Offset values are relative to the entity.  \nx = left/right  \ny = forward/backward  \nz = up/down"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetPedIndexFromEntityIndex",
    "hash": "0x04A2A40C73395041",
    "code": "-- GET_PED_INDEX_FROM_ENTITY_INDEX\nlocal retval --[[ Ped ]] =\n\tGetPedIndexFromEntityIndex(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Simply returns whatever is passed to it (Regardless of whether the handle is valid or not)."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetVehicleIndexFromEntityIndex",
    "hash": "0x4B53F92932ADFAC0",
    "code": "-- GET_VEHICLE_INDEX_FROM_ENTITY_INDEX\nlocal retval --[[ Vehicle ]] =\n\tGetVehicleIndexFromEntityIndex(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Simply returns whatever is passed to it (Regardless of whether the handle is valid or not)."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "GetWorldPositionOfEntityBone",
    "hash": "0x44A8FCB8ED227738",
    "code": "-- GET_WORLD_POSITION_OF_ENTITY_BONE\nlocal retval --[[ vector3 ]] =\n\tGetWorldPositionOfEntityBone(\n\t\tentity --[[ Entity ]], \n\t\tboneIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the coordinates of an entity-bone."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasAnimEventFired",
    "hash": "0xEAF4CD9EA3E7E922",
    "code": "-- HAS_ANIM_EVENT_FIRED\nlocal retval --[[ boolean ]] =\n\tHasAnimEventFired(\n\t\tentity --[[ Entity ]], \n\t\tactionHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"CreateObject\")))"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasCollisionLoadedAroundEntity",
    "hash": "0xE9676F61BC0B3321",
    "code": "-- HAS_COLLISION_LOADED_AROUND_ENTITY\nlocal retval --[[ boolean ]] =\n\tHasCollisionLoadedAroundEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityAnimFinished",
    "hash": "0x20B711662962B472",
    "code": "-- HAS_ENTITY_ANIM_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasEntityAnimFinished(\n\t\tentity --[[ Entity ]], \n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "P3 is always 3 as far as i cant tell  \n\nAnimations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityBeenDamagedByAnyObject",
    "hash": "0x95EB9964FF5C5C65",
    "code": "-- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT\nlocal retval --[[ boolean ]] =\n\tHasEntityBeenDamagedByAnyObject(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityBeenDamagedByAnyPed",
    "hash": "0x605F5A140F202491",
    "code": "-- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED\nlocal retval --[[ boolean ]] =\n\tHasEntityBeenDamagedByAnyPed(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityBeenDamagedByAnyVehicle",
    "hash": "0xDFD5033FDBA0A9C8",
    "code": "-- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE\nlocal retval --[[ boolean ]] =\n\tHasEntityBeenDamagedByAnyVehicle(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityBeenDamagedByEntity",
    "hash": "0xC86D67D52A707CF8",
    "code": "-- HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY\nlocal retval --[[ boolean ]] =\n\tHasEntityBeenDamagedByEntity(\n\t\tentity --[[ Entity ]], \n\t\tdamager --[[ Entity ]], \n\t\tbCheckDamagerVehicle --[[ boolean ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check.",
      "damager: \n\nThe entity that caused the damage.",
      "bCheckDamagerVehicle: \n\nIf the damager is driving a vehicle then check to see if the entity was damaged by the vehicle."
    ],
    "returns": [
      "Returns true if the entity has been damaged by the specified entity."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check.\n\ndamager: \n\nThe entity that caused the damage.\n\nbCheckDamagerVehicle: \n\nIf the damager is driving a vehicle then check to see if the entity was damaged by the vehicle.\n\nReturns:\n\nReturns true if the entity has been damaged by the specified entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityClearLosToEntity",
    "hash": "0xFCDFF7B72D23A1AC",
    "code": "-- HAS_ENTITY_CLEAR_LOS_TO_ENTITY\nlocal retval --[[ boolean ]] =\n\tHasEntityClearLosToEntity(\n\t\tentity1 --[[ Entity ]], \n\t\tentity2 --[[ Entity ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [
      "entity1: \n\nEntity to start from",
      "entity2: \n\nEntity to check to",
      "flags: \n\nA bit mask with bits 1, 2, 4, etc, relating to collider types (see: START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE). 17 is most common in GTA scripts."
    ],
    "returns": [
      "Returns true if no collider of specified bitmask is hit."
    ],
    "description": "Parameters:\n\nentity1: \n\nEntity to start from\n\nentity2: \n\nEntity to check to\n\nflags: \n\nA bit mask with bits 1, 2, 4, etc, relating to collider types (see: START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE). 17 is most common in GTA scripts.\n\nReturns:\n\nReturns true if no collider of specified bitmask is hit.\n\nChecks if entity1 has a clear line of sight to entity2. So a simple raycast which if it collides with any of the given colliderTypes returns false.\n\nThe direction of the check matters with for example bushes, so checking from inside to outside a bush with traceType 256 returns true, but the other way around returns false."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityClearLosToEntity_2",
    "hash": "0x394BDE2A7BBA031E",
    "code": "-- _HAS_ENTITY_CLEAR_LOS_TO_ENTITY_2\nlocal retval --[[ Any ]] =\n\tHasEntityClearLosToEntity_2(\n\t\tentity1 --[[ Entity ]], \n\t\tentity2 --[[ Entity ]], \n\t\ttraceType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityClearLosToEntityInFront",
    "hash": "0x0267D00AF114F17A",
    "code": "-- HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT\nlocal retval --[[ boolean ]] =\n\tHasEntityClearLosToEntityInFront(\n\t\tentity1 --[[ Entity ]], \n\t\tentity2 --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.  \nThis is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "HasEntityCollidedWithAnything",
    "hash": "0x8BAD02F0368D9E14",
    "code": "-- HAS_ENTITY_COLLIDED_WITH_ANYTHING\nlocal retval --[[ boolean ]] =\n\tHasEntityCollidedWithAnything(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Called on tick.  \nTested with vehicles, returns true whenever the vehicle is touching any entity.  \nNote: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsAnEntity",
    "hash": "0x731EC8A916BD11A1",
    "code": "-- IS_AN_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsAnEntity(\n\t\thandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAMissionEntity",
    "hash": "0x0A7B270912999B3C",
    "code": "-- IS_ENTITY_A_MISSION_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsEntityAMissionEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAPed",
    "hash": "0x524AC5ECEA15343E",
    "code": "-- IS_ENTITY_A_PED\nlocal retval --[[ boolean ]] =\n\tIsEntityAPed(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check if it's a Ped."
    ],
    "returns": [
      "Whether the entity is a Ped."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check if it's a Ped.\n\nReturns:\n\nWhether the entity is a Ped."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAVehicle",
    "hash": "0x6AC7003FA6E5575E",
    "code": "-- IS_ENTITY_A_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsEntityAVehicle(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAnObject",
    "hash": "0x8D68C8FD0FACA94E",
    "code": "-- IS_ENTITY_AN_OBJECT\nlocal retval --[[ boolean ]] =\n\tIsEntityAnObject(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAtCoord",
    "hash": "0x20B60995556D004F",
    "code": "-- IS_ENTITY_AT_COORD\nlocal retval --[[ boolean ]] =\n\tIsEntityAtCoord(\n\t\tentity --[[ Entity ]], \n\t\txPos --[[ number ]], \n\t\tyPos --[[ number ]], \n\t\tzPos --[[ number ]], \n\t\txSize --[[ number ]], \n\t\tySize --[[ number ]], \n\t\tzSize --[[ number ]], \n\t\thighlightArea --[[ boolean ]], \n\t\tdo3dCheck --[[ boolean ]], \n\t\ttransportMode --[[ integer ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check the position of",
      "xPos: \n\nThe position of the square along the x-axis",
      "yPos: \n\nThe position of the square along the y-axis",
      "zPos: \n\nThe position of the square along the z-axis (only applicable if do3dCheck is true)",
      "xSize: \n\nThe apothem of the square along the x-axis",
      "ySize: \n\nThe apothem of the square along the y-axis",
      "zSize: \n\nThe apothem of the square along the z-axis (only applicable if do3dCheck is true)",
      "highlightArea: \n\nWhether to draw a marker (yellow cylindrical marker at the given coords)",
      "do3dCheck: \n\nWhether to check the z-axis",
      "transportMode: \n\nChecks the transport mode the ped is using, only does something if entity is a ped. Transport modes are: 0 (any), 1 (on foot), 2 (in vehicle)"
    ],
    "returns": [
      "A boolean value which represents if the entity is within the given square area."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check the position of\n\nxPos: \n\nThe position of the square along the x-axis\n\nyPos: \n\nThe position of the square along the y-axis\n\nzPos: \n\nThe position of the square along the z-axis (only applicable if do3dCheck is true)\n\nxSize: \n\nThe apothem of the square along the x-axis\n\nySize: \n\nThe apothem of the square along the y-axis\n\nzSize: \n\nThe apothem of the square along the z-axis (only applicable if do3dCheck is true)\n\nhighlightArea: \n\nWhether to draw a marker (yellow cylindrical marker at the given coords)\n\ndo3dCheck: \n\nWhether to check the z-axis\n\ntransportMode: \n\nChecks the transport mode the ped is using, only does something if entity is a ped. Transport modes are: 0 (any), 1 (on foot), 2 (in vehicle)\n\nReturns:\n\nA boolean value which represents if the entity is within the given square area.\n\nChecks if the entity is within the given square of size xSize, ySize, zSize centered around the given coordinates.\n\nThe sizes given are the apothem (half of side) of the square, so a size of 5 would result in a square of 10x10, not 5x5.\n\nFor the highlightArea, if do3dCheck is true, the marker will be drawn at the bottom of the target area. So if the square is centered on the ground with a zSize larger than 0, the marker will appear under the ground. The marker also doesn't scale, so it is always the same size (around half a meter). So unfortunately the marker isn't that useful as it doesn't convey the correct information about the area (the marker doesn't reflect when the player is actually in the marker or not)"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAtEntity",
    "hash": "0x751B70C3D034E187",
    "code": "-- IS_ENTITY_AT_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsEntityAtEntity(\n\t\tentity --[[ Entity ]], \n\t\ttarget --[[ Entity ]], \n\t\txSize --[[ number ]], \n\t\tySize --[[ number ]], \n\t\tzSize --[[ number ]], \n\t\thighlightArea --[[ boolean ]], \n\t\tdo3dCheck --[[ boolean ]], \n\t\ttransportMode --[[ integer ]]\n\t)",
    "parameters": [
      "entity: \n\nThe source entity handle.",
      "target: \n\nThe target entity handle.",
      "xSize: \n\nThe x size of the axis aligned box around the target entity to check.",
      "ySize: \n\nThe y size of the axis aligned box around the target entity to check.",
      "zSize: \n\nThe z size of the axis aligned box around the target entity to check.",
      "highlightArea:",
      "do3dCheck: \n\nIf the check should be 2d or 3d.",
      "transportMode: \n\nThe transport mode. Returns early if the entity is not in that mode of transportation."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe source entity handle.\n\ntarget: \n\nThe target entity handle.\n\nxSize: \n\nThe x size of the axis aligned box around the target entity to check.\n\nySize: \n\nThe y size of the axis aligned box around the target entity to check.\n\nzSize: \n\nThe z size of the axis aligned box around the target entity to check.\n\nhighlightArea:\ndo3dCheck: \n\nIf the check should be 2d or 3d.\n\ntransportMode: \n\nThe transport mode. Returns early if the entity is not in that mode of transportation.\n\nChecks if entity is within the specified axis aligned box around the target entity.\n\nenum eTransportMode {\n    SCRIPT_TM_ANY = 0,\n    SCRIPT_TM_ON_FOOT = 1,\n    SCRIPT_TM_IN_VEHICLE = 2\n};"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAttached",
    "hash": "0xB346476EF1A64897",
    "code": "-- IS_ENTITY_ATTACHED\nlocal retval --[[ boolean ]] =\n\tIsEntityAttached(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check if it is attached to another entity."
    ],
    "returns": [
      "Whether the entity is attached to another entity."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check if it is attached to another entity.\n\nReturns:\n\nWhether the entity is attached to another entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAttachedToAnyObject",
    "hash": "0xCF511840CEEDE0CC",
    "code": "-- IS_ENTITY_ATTACHED_TO_ANY_OBJECT\nlocal retval --[[ boolean ]] =\n\tIsEntityAttachedToAnyObject(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAttachedToAnyPed",
    "hash": "0xB1632E9A5F988D11",
    "code": "-- IS_ENTITY_ATTACHED_TO_ANY_PED\nlocal retval --[[ boolean ]] =\n\tIsEntityAttachedToAnyPed(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAttachedToAnyVehicle",
    "hash": "0x26AA915AD89BFB4B",
    "code": "-- IS_ENTITY_ATTACHED_TO_ANY_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsEntityAttachedToAnyVehicle(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityAttachedToEntity",
    "hash": "0xEFBE71898A993728",
    "code": "-- IS_ENTITY_ATTACHED_TO_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsEntityAttachedToEntity(\n\t\tfrom --[[ Entity ]], \n\t\tto --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityDead",
    "hash": "0x5F9532F3B5CC2551",
    "code": "-- IS_ENTITY_DEAD\nlocal retval --[[ boolean ]] =\n\tIsEntityDead(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: BOOL p1"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityInAir",
    "hash": "0x886E37EC497200B6",
    "code": "-- IS_ENTITY_IN_AIR\nlocal retval --[[ boolean ]] =\n\tIsEntityInAir(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityInAngledArea",
    "hash": "0x51210CED3DA1C78A",
    "code": "-- IS_ENTITY_IN_ANGLED_AREA\nlocal retval --[[ boolean ]] =\n\tIsEntityInAngledArea(\n\t\tentity --[[ Entity ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]], \n\t\tdebug --[[ boolean ]], \n\t\tincludez --[[ boolean ]], \n\t\tp10 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p10 is some entity flag check, also used in IS_ENTITY_AT_ENTITY, IS_ENTITY_IN_AREA and IS_ENTITY_AT_COORD.\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityInArea",
    "hash": "0x54736AA40E271165",
    "code": "-- IS_ENTITY_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsEntityInArea(\n\t\tentity --[[ Entity ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tp7 --[[ boolean ]], \n\t\tp8 --[[ boolean ]], \n\t\tp9 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityInWater",
    "hash": "0xCFB0A0D8EDD145A3",
    "code": "-- IS_ENTITY_IN_WATER\nlocal retval --[[ boolean ]] =\n\tIsEntityInWater(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityInZone",
    "hash": "0xB6463CF6AF527071",
    "code": "-- IS_ENTITY_IN_ZONE\nlocal retval --[[ boolean ]] =\n\tIsEntityInZone(\n\t\tentity --[[ Entity ]], \n\t\tzone --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityOccluded",
    "hash": "0xE31C2C72B8692B64",
    "code": "-- IS_ENTITY_OCCLUDED\nlocal retval --[[ boolean ]] =\n\tIsEntityOccluded(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityOnScreen",
    "hash": "0xE659E47AF827484B",
    "code": "-- IS_ENTITY_ON_SCREEN\nlocal retval --[[ boolean ]] =\n\tIsEntityOnScreen(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity to check."
    ],
    "returns": [
      "Returns true if the the entity is in between the minimum and maximum values for the 2D screen bound coords; otherwise, false."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity to check.\n\nReturns:\n\nReturns true if the the entity is in between the minimum and maximum values for the 2D screen bound coords; otherwise, false.\n\nDetermines whether the screen position of the specified entity is within the 2D bounds of the screen.\n\nThis native will not check if the entity is not visible due to being occluded (for example, behind a wall). To check if a entity is on screen and is not occluded, use IS_ENTITY_OCCLUDED."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityPlayingAnim",
    "hash": "0x1F0B79228E461EC9",
    "code": "-- IS_ENTITY_PLAYING_ANIM\nlocal retval --[[ boolean ]] =\n\tIsEntityPlayingAnim(\n\t\tentity --[[ Entity ]], \n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]], \n\t\ttaskFlag --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See also IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM\n\nTaken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), \"creatures@shark@move\", \"attack_player\", 3)  \np4 is always 3 in the scripts.  \ntaskFlag:  \n2 - Check synchronized scene  \n\n\nAnimations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityStatic",
    "hash": "0x1218E6886D3D8327",
    "code": "-- IS_ENTITY_STATIC\nlocal retval --[[ boolean ]] =\n\tIsEntityStatic(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "A static ped will not react to natives like \"APPLY_FORCE_TO_ENTITY\" or \"SET_ENTITY_VELOCITY\" and oftentimes will not react to task-natives like \"AI::TASK_COMBAT_PED\". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.  \n^ Attach a phCollider to the ped."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityTouchingEntity",
    "hash": "0x17FFC1B2BA35A494",
    "code": "-- IS_ENTITY_TOUCHING_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsEntityTouchingEntity(\n\t\tentity --[[ Entity ]], \n\t\ttargetEntity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityTouchingModel",
    "hash": "0x0F42323798A58C8C",
    "code": "-- IS_ENTITY_TOUCHING_MODEL\nlocal retval --[[ boolean ]] =\n\tIsEntityTouchingModel(\n\t\tentity --[[ Entity ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityUpright",
    "hash": "0x5333F526F6AB19AA",
    "code": "-- IS_ENTITY_UPRIGHT\nlocal retval --[[ boolean ]] =\n\tIsEntityUpright(\n\t\tentity --[[ Entity ]], \n\t\tangle --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityUpsidedown",
    "hash": "0x1DBD58820FA61D71",
    "code": "-- IS_ENTITY_UPSIDEDOWN\nlocal retval --[[ boolean ]] =\n\tIsEntityUpsidedown(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityVisible",
    "hash": "0x47D6F43D77935C75",
    "code": "-- IS_ENTITY_VISIBLE\nlocal retval --[[ boolean ]] =\n\tIsEntityVisible(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityVisibleToScript",
    "hash": "0xD796CB5BA8F20E32",
    "code": "-- IS_ENTITY_VISIBLE_TO_SCRIPT\nlocal retval --[[ boolean ]] =\n\tIsEntityVisibleToScript(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "IsEntityWaitingForWorldCollision",
    "hash": "0xD05BFF0C0A12C68F",
    "code": "-- IS_ENTITY_WAITING_FOR_WORLD_COLLISION\nlocal retval --[[ boolean ]] =\n\tIsEntityWaitingForWorldCollision(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "PlayEntityAnim",
    "hash": "0x7FB218262B810701",
    "code": "-- PLAY_ENTITY_ANIM\nlocal retval --[[ boolean ]] =\n\tPlayEntityAnim(\n\t\tentity --[[ Entity ]], \n\t\tanimName --[[ string ]], \n\t\tanimDict --[[ string ]], \n\t\tfBlendDelta --[[ number ]], \n\t\tbLoop --[[ boolean ]], \n\t\tbHoldLastFrame --[[ boolean ]], \n\t\tbDriveToPose --[[ boolean ]], \n\t\tfStartPhase --[[ number ]], \n\t\tiFlags --[[ integer ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity handle to play the animation on.",
      "animName: \n\nThe name of the animation to play.",
      "animDict: \n\nThe name of the animation dictionary to use.",
      "fBlendDelta: \n\nBlend in and out time.",
      "bLoop: \n\nSets AF_LOOPING in the flags.",
      "bHoldLastFrame: \n\nSets AF_HOLD_LAST_FRAME in the flags.",
      "bDriveToPose: \n\nunused",
      "fStartPhase: \n\nClamped between 0.0 and 1.0. Sets the start phase of the animation.",
      "iFlags: \n\nThe flags to use when playing the animation. See TASK_PLAY_ANIM."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle to play the animation on.\n\nanimName: \n\nThe name of the animation to play.\n\nanimDict: \n\nThe name of the animation dictionary to use.\n\nfBlendDelta: \n\nBlend in and out time.\n\nbLoop: \n\nSets AF_LOOPING in the flags.\n\nbHoldLastFrame: \n\nSets AF_HOLD_LAST_FRAME in the flags.\n\nbDriveToPose: \n\nunused\n\nfStartPhase: \n\nClamped between 0.0 and 1.0. Sets the start phase of the animation.\n\niFlags: \n\nThe flags to use when playing the animation. See TASK_PLAY_ANIM.\n\nAnimations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "PlaySynchronizedEntityAnim",
    "hash": "0xC77720A12FE14A86",
    "code": "-- PLAY_SYNCHRONIZED_ENTITY_ANIM\nlocal retval --[[ boolean ]] =\n\tPlaySynchronizedEntityAnim(\n\t\tentity --[[ Entity ]], \n\t\tsyncedScene --[[ integer ]], \n\t\tanimName --[[ string ]], \n\t\tanimDictName --[[ string ]], \n\t\tfBlendInDelta --[[ number ]], \n\t\tfBlendOutDelta --[[ number ]], \n\t\tiFlags --[[ integer ]], \n\t\tfMoverBlendInDelta --[[ number ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity handle to play the animation on.",
      "syncedScene:",
      "animName: \n\nThe name of the animation to play.",
      "animDictName: \n\nThe name of the animation dictionary to use.",
      "fBlendInDelta: \n\nBlend in time.",
      "fBlendOutDelta: \n\nBlend out time.",
      "iFlags: \n\nThe flags to use when playing the animation. See TASK_PLAY_ANIM.",
      "fMoverBlendInDelta:"
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle to play the animation on.\n\nsyncedScene:\nanimName: \n\nThe name of the animation to play.\n\nanimDictName: \n\nThe name of the animation dictionary to use.\n\nfBlendInDelta: \n\nBlend in time.\n\nfBlendOutDelta: \n\nBlend out time.\n\niFlags: \n\nThe flags to use when playing the animation. See TASK_PLAY_ANIM.\n\nfMoverBlendInDelta:\n\nAnimations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "PlaySynchronizedMapEntityAnim",
    "hash": "0xB9C54555ED30FBC4",
    "code": "-- PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM\nlocal retval --[[ boolean ]] =\n\tPlaySynchronizedMapEntityAnim(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tobjectModelHash --[[ Hash ]], \n\t\tsceneId --[[ integer ]], \n\t\tpAnimName --[[ string ]], \n\t\tpAnimDictName --[[ string ]], \n\t\tfBlendDelta --[[ number ]], \n\t\tfBlendOutDelta --[[ number ]], \n\t\tflags --[[ integer ]], \n\t\tfMoverBlendInDelta --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "ProcessEntityAttachments",
    "hash": "0xF4080490ADC51C6F",
    "code": "-- PROCESS_ENTITY_ATTACHMENTS\nProcessEntityAttachments(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Called to update entity attachments."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "RemoveForcedObject",
    "hash": "0x61B6775E83C0DB6F",
    "code": "-- REMOVE_FORCED_OBJECT\nRemoveForcedObject(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "RemoveModelHide",
    "hash": "0xD9E3006FB3CBD765",
    "code": "-- REMOVE_MODEL_HIDE\nRemoveModelHide(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tmodel --[[ Hash ]], \n\tlazy --[[ boolean ]]\n)",
    "parameters": [
      "x: \n\nX Coordinate of the sphere center.",
      "y: \n\nY Coordinate of the sphere center.",
      "z: \n\nZ Coordinate of the sphere center.",
      "radius: \n\nRadius of the sphere.",
      "model: \n\nThe model hash to make visible again.",
      "lazy: \n\nfalse to apply the change immediately."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nX Coordinate of the sphere center.\n\ny: \n\nY Coordinate of the sphere center.\n\nz: \n\nZ Coordinate of the sphere center.\n\nradius: \n\nRadius of the sphere.\n\nmodel: \n\nThe model hash to make visible again.\n\nlazy: \n\nfalse to apply the change immediately.\n\nMakes all objects of the specified model that were hidden using CREATE_MODEL_HIDE or CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS visible again.\n\nIf lazy is false, all matching objects currently in scope are restored immediately. If lazy is true, objects will only reappear when their map is reloaded."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "RemoveModelSwap",
    "hash": "0x033C0F9A64E229AE",
    "code": "-- REMOVE_MODEL_SWAP\nRemoveModelSwap(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\toldModelHash --[[ Hash ]], \n\tnewModelHash --[[ Hash ]], \n\tbLazy --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "ResetEntityAlpha",
    "hash": "0x9B1E824FFBB7027A",
    "code": "-- RESET_ENTITY_ALPHA\nResetEntityAlpha(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetCanAutoVaultOnEntity",
    "hash": "0xE12ABE5E3A389A6C",
    "code": "-- SET_CAN_AUTO_VAULT_ON_ENTITY\nSetCanAutoVaultOnEntity(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetCanClimbOnEntity",
    "hash": "0xA80AE305E0A3044F",
    "code": "-- SET_CAN_CLIMB_ON_ENTITY\nSetCanClimbOnEntity(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityAlpha",
    "hash": "0x44A0870B7E92D7C0",
    "code": "-- SET_ENTITY_ALPHA\nSetEntityAlpha(\n\tentity --[[ Entity ]], \n\talphaLevel --[[ integer ]], \n\tskin --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to change the alpha for.",
      "alphaLevel: \n\nThe alpha level ranges from 0 to 255, but changes occur every 20% (every 51).",
      "skin: \n\nWhether or not to change the alpha of the entity's skin."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to change the alpha for.\n\nalphaLevel: \n\nThe alpha level ranges from 0 to 255, but changes occur every 20% (every 51).\n\nskin: \n\nWhether or not to change the alpha of the entity's skin.\n\nThis native sets the entity's alpha level."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityAlwaysPrerender",
    "hash": "0xACAD101E1FB66689",
    "code": "-- SET_ENTITY_ALWAYS_PRERENDER\nSetEntityAlwaysPrerender(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityAngularVelocity",
    "hash": "0x8339643499D1222E",
    "code": "-- _SET_ENTITY_ANGULAR_VELOCITY\nSetEntityAngularVelocity(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityAnimCurrentTime",
    "hash": "0x4487C259F0F70977",
    "code": "-- SET_ENTITY_ANIM_CURRENT_TIME\nSetEntityAnimCurrentTime(\n\tentity --[[ Entity ]], \n\tanimDictionary --[[ string ]], \n\tanimName --[[ string ]], \n\ttime --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityAnimSpeed",
    "hash": "0x28D1A16553C51776",
    "code": "-- SET_ENTITY_ANIM_SPEED\nSetEntityAnimSpeed(\n\tentity --[[ Entity ]], \n\tanimDictionary --[[ string ]], \n\tanimName --[[ string ]], \n\tspeedMultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityAsMissionEntity",
    "hash": "0xAD738C3085FE7E11",
    "code": "-- SET_ENTITY_AS_MISSION_ENTITY\nSetEntityAsMissionEntity(\n\tentity --[[ Entity ]], \n\tscriptHostObject --[[ boolean ]], \n\tbGrabFromOtherScript --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nAn entity handle.",
      "scriptHostObject: \n\nWhether or not to assign script info to this entity, if set to false the entity will only be protected from despawning locally.",
      "bGrabFromOtherScript: \n\nChanges the entity so it's owned by the current script if the entity is already a mission entity. This will only work on entities the machine has control of (non-remote entities)."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nAn entity handle.\n\nscriptHostObject: \n\nWhether or not to assign script info to this entity, if set to false the entity will only be protected from despawning locally.\n\nbGrabFromOtherScript: \n\nChanges the entity so it's owned by the current script if the entity is already a mission entity. This will only work on entities the machine has control of (non-remote entities).\n\nAssigns an existing entity to be owned by the current script. If the entity was not owned by a script yet, this also means the entity will remain persistent until released.\n\nNote that this is not needed right after creating an entity as a script-created entity will automatically be assigned."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityAsNoLongerNeeded",
    "hash": "0xB736A491E64A32CF",
    "code": "-- SET_ENTITY_AS_NO_LONGER_NEEDED\nlocal entity --[[ Entity ]] =\n\tSetEntityAsNoLongerNeeded()",
    "parameters": [],
    "returns": [],
    "description": "Marks the specified entity (ped, vehicle or object) as no longer needed.  \nEntities marked as no longer needed, will be deleted as the engine sees fit."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCanBeDamaged",
    "hash": "0x1760FFA8AB074D66",
    "code": "-- SET_ENTITY_CAN_BE_DAMAGED\nSetEntityCanBeDamaged(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCanBeDamagedByRelationshipGroup",
    "hash": "0xE22D8FDE858B8119",
    "code": "-- SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP\nSetEntityCanBeDamagedByRelationshipGroup(\n\tentity --[[ Entity ]], \n\tbCanBeDamaged --[[ boolean ]], \n\trelGroup --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCanBeTargetedWithoutLos",
    "hash": "0xD3997889736FD899",
    "code": "-- SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS\nSetEntityCanBeTargetedWithoutLos(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets whether the entity can be targeted without being in line-of-sight."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCleanupByEngine",
    "hash": "0x3910051CCECDB00C",
    "code": "-- _SET_ENTITY_CLEANUP_BY_ENGINE\nSetEntityCleanupByEngine(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCollision",
    "hash": "0x1A9205C1B9EE827F",
    "code": "-- SET_ENTITY_COLLISION\nSetEntityCollision(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]], \n\tkeepPhysics --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCompletelyDisableCollision",
    "hash": "0x9EBC85ED0FFFE51C",
    "code": "-- SET_ENTITY_COMPLETELY_DISABLE_COLLISION\nSetEntityCompletelyDisableCollision(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]], \n\tkeepPhysics --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCoords",
    "hash": "0x06843DA7060A026B",
    "code": "-- SET_ENTITY_COORDS\nSetEntityCoords(\n\tentity --[[ Entity ]], \n\txPos --[[ number ]], \n\tyPos --[[ number ]], \n\tzPos --[[ number ]], \n\talive --[[ boolean ]], \n\tdeadFlag --[[ boolean ]], \n\tragdollFlag --[[ boolean ]], \n\tclearArea --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to change coordinates for.",
      "xPos: \n\nThe X coordinate.",
      "yPos: \n\nThe Y coordinate.",
      "zPos: \n\nThe Z coordinate, ground level.",
      "alive: \n\nUnused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.",
      "deadFlag: \n\nWhether to disable physics for dead peds, too, and not just living peds.",
      "ragdollFlag: \n\nA special flag used for ragdolling peds.",
      "clearArea: \n\nWhether to clear any entities in the target area."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to change coordinates for.\n\nxPos: \n\nThe X coordinate.\n\nyPos: \n\nThe Y coordinate.\n\nzPos: \n\nThe Z coordinate, ground level.\n\nalive: \n\nUnused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.\n\ndeadFlag: \n\nWhether to disable physics for dead peds, too, and not just living peds.\n\nragdollFlag: \n\nA special flag used for ragdolling peds.\n\nclearArea: \n\nWhether to clear any entities in the target area.\n\nSets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCoordsNoOffset",
    "hash": "0x239A3351AC1DA385",
    "code": "-- SET_ENTITY_COORDS_NO_OFFSET\nSetEntityCoordsNoOffset(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tkeepTasks --[[ boolean ]], \n\tkeepIK --[[ boolean ]], \n\tdoWarp --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to reposition.",
      "x: \n\nX coordinate for the new position.",
      "y: \n\nY coordinate for the new position.",
      "z: \n\nZ coordinate for the new position.",
      "keepTasks: \n\nIf true, the tasks currently assigned to the ped are not removed upon teleportation. Applies only to peds.",
      "keepIK: \n\nIf true, the Inverse Kinematics (IK) on the ped are not reset upon teleportation. Applies only to peds.",
      "doWarp: \n\nIf false, the entity will maintain continuous motion and will not clear contacts nor create space for itself upon teleportation."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to reposition.\n\nx: \n\nX coordinate for the new position.\n\ny: \n\nY coordinate for the new position.\n\nz: \n\nZ coordinate for the new position.\n\nkeepTasks: \n\nIf true, the tasks currently assigned to the ped are not removed upon teleportation. Applies only to peds.\n\nkeepIK: \n\nIf true, the Inverse Kinematics (IK) on the ped are not reset upon teleportation. Applies only to peds.\n\ndoWarp: \n\nIf false, the entity will maintain continuous motion and will not clear contacts nor create space for itself upon teleportation.\n\nTeleports an entity to specified coordinates directly, with options to maintain certain behaviors post-teleportation.\n\nNote:\n\nThis native allows precise placement of entities without the usual adjustments for collision or interaction with the environment that may occur with other teleportation natives.\nThe keepTasks and keepIK parameters are specifically useful for maintaining the current state of a ped, ensuring actions or animations are not abruptly stopped due to the teleportation.\nSetting doWarp to false is useful when simulating continuous movement or when the entity should interact with its immediate surroundings upon arrival."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityCoordsWithoutPlantsReset",
    "hash": "0x621873ECE1178967",
    "code": "-- SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET\nSetEntityCoordsWithoutPlantsReset(\n\tentity --[[ Entity ]], \n\txPos --[[ number ]], \n\tyPos --[[ number ]], \n\tzPos --[[ number ]], \n\talive --[[ boolean ]], \n\tdeadFlag --[[ boolean ]], \n\tragdollFlag --[[ boolean ]], \n\tclearArea --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityDecalsDisabled",
    "hash": "0x2C2E3DC128F44309",
    "code": "-- _SET_ENTITY_DECALS_DISABLED\nSetEntityDecalsDisabled(\n\tentity --[[ Entity ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_ENTITY_*"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityDynamic",
    "hash": "0x1718DE8E3F2823CA",
    "code": "-- SET_ENTITY_DYNAMIC\nSetEntityDynamic(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityHasGravity",
    "hash": "0x4A4722448F18EEF5",
    "code": "-- SET_ENTITY_HAS_GRAVITY\nSetEntityHasGravity(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityHeading",
    "hash": "0x8E2530AA8ADA980E",
    "code": "-- SET_ENTITY_HEADING\nSetEntityHeading(\n\tentity --[[ Entity ]], \n\theading --[[ number ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to set the heading for.",
      "heading: \n\nThe heading in degrees."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to set the heading for.\n\nheading: \n\nThe heading in degrees.\n\nSet the heading of an entity in degrees also known as \"Yaw\"."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityHealth",
    "hash": "0x6B76DC1F3AE6E6A3",
    "code": "-- SET_ENTITY_HEALTH\nSetEntityHealth(\n\tentity --[[ Entity ]], \n\thealth --[[ integer ]]\n)",
    "parameters": [
      "entity: \n\nThe entity handle.",
      "health: \n\nThe health we should set this entity to."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle.\n\nhealth: \n\nThe health we should set this entity to.\n\nWhen setting health for a player ped, the game will clamp the health value to ensure it does not exceed the maximum health. This maximum health can be retrieved by calling GET_PED_MAX_HEALTH. It can also be modified by calling SET_PED_MAX_HEALTH.\n\nWhen setting the health for non-player peds or entities, the maximum health will be increased if the new health value exceeds the current maximum.\n\nDefault health for male peds is 200, for female peds it is 175.\n\nAdded parameters\ninflictor: The handle for the entity that caused the damage."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityInvincible",
    "hash": "0x3882114BDE571AD4",
    "code": "-- SET_ENTITY_INVINCIBLE\nSetEntityInvincible(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.  \nIf you use this for a ped and you want Ragdoll to stay enabled, then do:  \n*(DWORD *)(pedAddress + 0x188) |= (1 << 9);  \nUse this if you want to get the invincibility status:  \n\tbool IsPedInvincible(Ped ped)  \n\t{  \nauto addr = getScriptHandleBaseAddress(ped);\t  \nif (addr)  \n{  \n\tDWORD flag = *(DWORD *)(addr + 0x188);  \n\treturn ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);  \n}  \nreturn false;  \n\t}"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityIsTargetPriority",
    "hash": "0xEA02E132F5C68722",
    "code": "-- SET_ENTITY_IS_TARGET_PRIORITY\nSetEntityIsTargetPriority(\n\tentity --[[ Entity ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityLights",
    "hash": "0x7CFBA6A80BDF3874",
    "code": "-- SET_ENTITY_LIGHTS\nSetEntityLights(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityLoadCollisionFlag",
    "hash": "0x0DC7CABAB1E9B67E",
    "code": "-- SET_ENTITY_LOAD_COLLISION_FLAG\nSetEntityLoadCollisionFlag(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.\n\nCertainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.\n\nNativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityLodDist",
    "hash": "0x5927F96A78577363",
    "code": "-- SET_ENTITY_LOD_DIST\nSetEntityLodDist(\n\tentity --[[ Entity ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t)."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityMaxHealth",
    "hash": "0x166E7CF68597D8B5",
    "code": "-- SET_ENTITY_MAX_HEALTH\nSetEntityMaxHealth(\n\tentity --[[ Entity ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityMaxSpeed",
    "hash": "0x0E46A3FCBDE2A1B1",
    "code": "-- SET_ENTITY_MAX_SPEED\nSetEntityMaxSpeed(\n\tentity --[[ Entity ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [
      "entity: \n\nEntity to apply a maximum speed on",
      "speed: \n\nSpeed in meters per second"
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nEntity to apply a maximum speed on\n\nspeed: \n\nSpeed in meters per second"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityMotionBlur",
    "hash": "0x295D82A8559F9150",
    "code": "-- SET_ENTITY_MOTION_BLUR\nSetEntityMotionBlur(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityNoCollisionEntity",
    "hash": "0xA53ED5520C07654A",
    "code": "-- SET_ENTITY_NO_COLLISION_ENTITY\nSetEntityNoCollisionEntity(\n\tentity1 --[[ Entity ]], \n\tentity2 --[[ Entity ]], \n\tthisFrameOnly --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Calling this function disables collision between two entities.\nThe importance of the order for entity1 and entity2 is unclear.\nThe third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityNoCollisionWithNetworkedEntity",
    "hash": "0x0A27A7827347B3B1",
    "code": "-- _SET_ENTITY_NO_COLLISION_WITH_NETWORKED_ENTITY\nSetEntityNoCollisionWithNetworkedEntity(\n\tentity1 --[[ Entity ]], \n\tentity2 --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityOnlyDamagedByPlayer",
    "hash": "0x79F020FF9EDC0748",
    "code": "-- SET_ENTITY_ONLY_DAMAGED_BY_PLAYER\nSetEntityOnlyDamagedByPlayer(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityOnlyDamagedByRelationshipGroup",
    "hash": "0x7022BD828FA0B082",
    "code": "-- SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP\nSetEntityOnlyDamagedByRelationshipGroup(\n\tentity --[[ Entity ]], \n\tp1 --[[ boolean ]], \n\trelationshipHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityProofs",
    "hash": "0xFAEE099C6F890BB8",
    "code": "-- SET_ENTITY_PROOFS\nSetEntityProofs(\n\tentity --[[ Entity ]], \n\tbulletProof --[[ boolean ]], \n\tfireProof --[[ boolean ]], \n\texplosionProof --[[ boolean ]], \n\tcollisionProof --[[ boolean ]], \n\tmeleeProof --[[ boolean ]], \n\tsteamProof --[[ boolean ]], \n\tp7 --[[ boolean ]], \n\tdrownProof --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enable / disable each type of damage.  \n--------------  \np7 is to to '1' in am_mp_property_ext/int: entity::set_entity_proofs(uParam0->f_19, true, true, true, true, true, true, 1, true);"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityQuaternion",
    "hash": "0x77B21BE7AC540F07",
    "code": "-- SET_ENTITY_QUATERNION\nSetEntityQuaternion(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tw --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "w is the correct parameter name!"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityRecordsCollisions",
    "hash": "0x0A50A1EEDAD01E65",
    "code": "-- SET_ENTITY_RECORDS_COLLISIONS\nSetEntityRecordsCollisions(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityRenderScorched",
    "hash": "0x730F5F8D3F0F2050",
    "code": "-- SET_ENTITY_RENDER_SCORCHED\nSetEntityRenderScorched(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityRequiresMoreExpensiveRiverCheck",
    "hash": "0x694E00132F2823ED",
    "code": "-- SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK\nSetEntityRequiresMoreExpensiveRiverCheck(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityRotation",
    "hash": "0x8524A8B0171D5E07",
    "code": "-- SET_ENTITY_ROTATION\nSetEntityRotation(\n\tentity --[[ Entity ]], \n\tpitch --[[ number ]], \n\troll --[[ number ]], \n\tyaw --[[ number ]], \n\trotationOrder --[[ integer ]], \n\tbDeadCheck --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to rotate.",
      "pitch: \n\nThe pitch (X-axis) rotation in degrees.",
      "roll: \n\nThe roll (Y-axis) rotation in degrees.",
      "yaw: \n\nThe yaw (Z-axis) rotation in degrees.",
      "rotationOrder: \n\nSpecifies the order in which yaw, pitch, and roll are applied, see GET_ENTITY_ROTATION for the available rotation orders.",
      "bDeadCheck: \n\nUsually set to true. Determines whether to check if the entity is dead before applying the rotation."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to rotate.\n\npitch: \n\nThe pitch (X-axis) rotation in degrees.\n\nroll: \n\nThe roll (Y-axis) rotation in degrees.\n\nyaw: \n\nThe yaw (Z-axis) rotation in degrees.\n\nrotationOrder: \n\nSpecifies the order in which yaw, pitch, and roll are applied, see GET_ENTITY_ROTATION for the available rotation orders.\n\nbDeadCheck: \n\nUsually set to true. Determines whether to check if the entity is dead before applying the rotation.\n\nSets the rotation of a specified entity in the game world.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityTrafficlightOverride",
    "hash": "0x57C5DB656185EAC4",
    "code": "-- SET_ENTITY_TRAFFICLIGHT_OVERRIDE\nSetEntityTrafficlightOverride(\n\tentity --[[ Entity ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Changing traffic-lights will not change the behavior of NPCs.\n\nExample: here\n\nenum eTrafficlightOverrideMode\n{\n    TLO_RED = 0,\n    TLO_AMBER = 1,\n    TLO_GREEN = 2,\n    TLO_NONE = 3\n}"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityVelocity",
    "hash": "0x1C99BB7B6E96D16F",
    "code": "-- SET_ENTITY_VELOCITY\nSetEntityVelocity(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Note that the third parameter(denoted as z) is \"up and down\" with positive numbers encouraging upwards movement."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetEntityVisible",
    "hash": "0xEA1C610A04DB6BBB",
    "code": "-- SET_ENTITY_VISIBLE\nSetEntityVisible(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]], \n\tunk --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to change the visibility of",
      "toggle: \n\nWhether or not the entity will be visible",
      "unk: \n\nAlways 0 in scripts"
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to change the visibility of\n\ntoggle: \n\nWhether or not the entity will be visible\n\nunk: \n\nAlways 0 in scripts\n\nToggle the visibility of a given entity."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetObjectAsNoLongerNeeded",
    "hash": "0x3AE22DEB5BA5A3E6",
    "code": "-- SET_OBJECT_AS_NO_LONGER_NEEDED\nlocal object --[[ Object ]] =\n\tSetObjectAsNoLongerNeeded()",
    "parameters": [],
    "returns": [],
    "description": "This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetPedAsNoLongerNeeded",
    "hash": "0x2595DD4236549CE3",
    "code": "-- SET_PED_AS_NO_LONGER_NEEDED\nlocal ped --[[ Ped ]] =\n\tSetPedAsNoLongerNeeded()",
    "parameters": [],
    "returns": [],
    "description": "This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetPickUpByCargobobDisabled",
    "hash": "0xD7B80E7C3BEFC396",
    "code": "-- SET_PICK_UP_BY_CARGOBOB_DISABLED\nSetPickUpByCargobobDisabled(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to be configured for pick up by Cargobob.",
      "toggle: \n\nA boolean value where true prevents the entity from being picked up by Cargobobs, and false allows it."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to be configured for pick up by Cargobob.\n\ntoggle: \n\nA boolean value where true prevents the entity from being picked up by Cargobobs, and false allows it.\n\nConfigures an entity to either allow or prevent it from being picked up by Cargobobs.\n\nNativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetVehicleAsNoLongerNeeded",
    "hash": "0x629BFA74418D6239",
    "code": "-- SET_VEHICLE_AS_NO_LONGER_NEEDED\nlocal vehicle --[[ Vehicle ]] =\n\tSetVehicleAsNoLongerNeeded()",
    "parameters": [],
    "returns": [],
    "description": "This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "SetWaitForCollisionsBeforeProbe",
    "hash": "0xDC6F8601FAF2E893",
    "code": "-- SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE\nSetWaitForCollisionsBeforeProbe(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_*\nOnly called within 1 script for x360. 'fm_mission_controller' and it used on an object.\nRan after these 2 natives,\nset_object_targettable(uParam0, 0);\nset_entity_invincible(uParam0, 1);"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "StopEntityAnim",
    "hash": "0x28004F88151E03E0",
    "code": "-- STOP_ENTITY_ANIM\nlocal retval --[[ Any ]] =\n\tStopEntityAnim(\n\t\tentity --[[ Entity ]], \n\t\tanimation --[[ string ]], \n\t\tanimGroup --[[ string ]], \n\t\tp3 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "StopSynchronizedEntityAnim",
    "hash": "0x43D3807C077261E3",
    "code": "-- STOP_SYNCHRONIZED_ENTITY_ANIM\nlocal retval --[[ boolean ]] =\n\tStopSynchronizedEntityAnim(\n\t\tentity --[[ Entity ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 sync task id?"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "StopSynchronizedMapEntityAnim",
    "hash": "0x11E79CAB7183B6F5",
    "code": "-- STOP_SYNCHRONIZED_MAP_ENTITY_ANIM\nlocal retval --[[ boolean ]] =\n\tStopSynchronizedMapEntityAnim(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "WouldEntityBeOccluded",
    "hash": "0xEE5D2A122E09EC42",
    "code": "-- WOULD_ENTITY_BE_OCCLUDED\nlocal retval --[[ boolean ]] =\n\tWouldEntityBeOccluded(\n\t\tentityModelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tp4 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0x1a092bb0c3808b96",
    "hash": "0x1A092BB0C3808B96",
    "code": "-- 0x1A092BB0C3808B96\nN_0x1a092bb0c3808b96(\n\tentity --[[ Entity ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_ENTITY_*"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0x352e2b5cf420bf3b",
    "hash": "0x352E2B5CF420BF3B",
    "code": "-- 0x352E2B5CF420BF3B\nN_0x352e2b5cf420bf3b(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0x36f32de87082343e",
    "hash": "0x36F32DE87082343E",
    "code": "-- 0x36F32DE87082343E\nN_0x36f32de87082343e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0x490861b88f4fd846",
    "hash": "0x490861B88F4FD846",
    "code": "-- 0x490861B88F4FD846\nN_0x490861b88f4fd846(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing (essentially a nullsub)."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0x5c3b791d580e0bc2",
    "hash": "0x5C3B791D580E0BC2",
    "code": "-- 0x5C3B791D580E0BC2\nN_0x5c3b791d580e0bc2(\n\tentity --[[ Entity ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only called once in the scripts.  \nRelated to weapon objects."
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0x68b562e124cc0aef",
    "hash": "0x68B562E124CC0AEF",
    "code": "-- 0x68B562E124CC0AEF\nN_0x68b562e124cc0aef(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0x78e8e3a640178255",
    "hash": "0x78E8E3A640178255",
    "code": "-- 0x78E8E3A640178255\nN_0x78e8e3a640178255(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Related to cutscene entities. Unsure about the use.\nSET_ENTITY_*"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0xb17bc6453f6cf5ac",
    "hash": "0xB17BC6453F6CF5AC",
    "code": "-- 0xB17BC6453F6CF5AC\nN_0xb17bc6453f6cf5ac(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0xc34bc448da29f5e9",
    "hash": "0xC34BC448DA29F5E9",
    "code": "-- 0xC34BC448DA29F5E9\nN_0xc34bc448da29f5e9(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_ENTITY_*"
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0xcea7c8e1b48ff68c",
    "hash": "0xCEA7C8E1B48FF68C",
    "code": "-- 0xCEA7C8E1B48FF68C\nN_0xcea7c8e1b48ff68c(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ENTITY",
    "apiset": "API set: client",
    "name": "N_0xe66377cddada4810",
    "hash": "0xE66377CDDADA4810",
    "code": "-- 0xE66377CDDADA4810\nN_0xe66377cddada4810(\n\tentity --[[ Entity ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_ENTITY_M*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "AddShockingEventAtPosition",
    "hash": "0xD9F8455409B525E9",
    "code": "-- ADD_SHOCKING_EVENT_AT_POSITION\nlocal retval --[[ ScrHandle ]] =\n\tAddShockingEventAtPosition(\n\t\teventType --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tduration --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt"
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "AddShockingEventForEntity",
    "hash": "0x7FD8F3BE76F89422",
    "code": "-- ADD_SHOCKING_EVENT_FOR_ENTITY\nlocal retval --[[ ScrHandle ]] =\n\tAddShockingEventForEntity(\n\t\teventType --[[ integer ]], \n\t\tentity --[[ Entity ]], \n\t\tduration --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt"
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "BlockDecisionMakerEvent",
    "hash": "0xE42FCDFD0E4196F7",
    "code": "-- BLOCK_DECISION_MAKER_EVENT\nBlockDecisionMakerEvent(\n\tname --[[ Hash ]], \n\teventType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt\nThis is limited to 4 blocked events at a time."
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "ClearDecisionMakerEventResponse",
    "hash": "0x4FC9381A7AEE8968",
    "code": "-- CLEAR_DECISION_MAKER_EVENT_RESPONSE\nClearDecisionMakerEventResponse(\n\tname --[[ Hash ]], \n\teventType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt"
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "IsShockingEventInSphere",
    "hash": "0x1374ABB7C15BAB92",
    "code": "-- IS_SHOCKING_EVENT_IN_SPHERE\nlocal retval --[[ boolean ]] =\n\tIsShockingEventInSphere(\n\t\teventType --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt"
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "RemoveAllShockingEvents",
    "hash": "0xEAABE8FDFA21274C",
    "code": "-- REMOVE_ALL_SHOCKING_EVENTS\nRemoveAllShockingEvents(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "RemoveShockingEvent",
    "hash": "0x2CDA538C44C6CCE5",
    "code": "-- REMOVE_SHOCKING_EVENT\nlocal retval --[[ boolean ]] =\n\tRemoveShockingEvent(\n\t\tevent --[[ ScrHandle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "RemoveShockingEventSpawnBlockingAreas",
    "hash": "0x340F1415B68AEADE",
    "code": "-- REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS\nRemoveShockingEventSpawnBlockingAreas()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "SetDecisionMaker",
    "hash": "0xB604A2942ADED0EE",
    "code": "-- SET_DECISION_MAKER\nSetDecisionMaker(\n\tped --[[ Ped ]], \n\tname --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "SuppressAgitationEventsNextFrame",
    "hash": "0x5F3B7749C112D552",
    "code": "-- SUPPRESS_AGITATION_EVENTS_NEXT_FRAME\nSuppressAgitationEventsNextFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "SuppressShockingEventTypeNextFrame",
    "hash": "0x3FD2EC8BF1F1CF30",
    "code": "-- SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME\nSuppressShockingEventTypeNextFrame(\n\teventType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt"
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "SuppressShockingEventsNextFrame",
    "hash": "0x2F9A292AD0A3BD89",
    "code": "-- SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME\nSuppressShockingEventsNextFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: EVENT",
    "apiset": "API set: client",
    "name": "UnblockDecisionMakerEvent",
    "hash": "0xD7CD9CF34F2C99E8",
    "code": "-- UNBLOCK_DECISION_MAKER_EVENT\nUnblockDecisionMakerEvent(\n\tname --[[ Hash ]], \n\teventType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "DoesShopPedApparelHaveRestrictionTag",
    "hash": "0x341DE7ED1D2A1BFD",
    "code": "-- DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG\nlocal retval --[[ boolean ]] =\n\tDoesShopPedApparelHaveRestrictionTag(\n\t\tcomponentHash --[[ Hash ]], \n\t\trestrictionTagHash --[[ Hash ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcVehicleData",
    "hash": "0x33468EDC08E371F6",
    "code": "-- GET_DLC_VEHICLE_DATA\nlocal retval --[[ boolean ]], outData --[[ Any ]] =\n\tGetDlcVehicleData(\n\t\tdlcVehicleIndex --[[ integer ]]\n\t)",
    "parameters": [
      "dlcVehicleIndex: \n\ntakes a number from 0 to GET_NUM_DLC_VEHICLES() - 1.",
      "outData: \n\na struct of 3 8-byte items."
    ],
    "returns": [
      "A boolean value return if find or not the dlcVehicleIndex."
    ],
    "description": "Parameters:\n\ndlcVehicleIndex: \n\ntakes a number from 0 to GET_NUM_DLC_VEHICLES() - 1.\n\noutData: \n\na struct of 3 8-byte items.\n\nReturns:\n\nA boolean value return if find or not the dlcVehicleIndex.\n\nThe Second item in the struct *(Hash *)(outData + 1) is the vehicle hash."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcVehicleFlags",
    "hash": "0x5549EE11FA22FCF2",
    "code": "-- GET_DLC_VEHICLE_FLAGS\nlocal retval --[[ integer ]] =\n\tGetDlcVehicleFlags(\n\t\tdlcVehicleIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcVehicleModLockHash",
    "hash": "0xC098810437312FFF",
    "code": "-- GET_DLC_VEHICLE_MOD_LOCK_HASH\nlocal retval --[[ Hash ]] =\n\tGetDlcVehicleModLockHash(\n\t\thash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcVehicleModel",
    "hash": "0xECC01B7C5763333C",
    "code": "-- GET_DLC_VEHICLE_MODEL\nlocal retval --[[ Hash ]] =\n\tGetDlcVehicleModel(\n\t\tdlcVehicleIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcWeaponComponentData",
    "hash": "0x6CF598A2957C2BF8",
    "code": "-- GET_DLC_WEAPON_COMPONENT_DATA\nlocal retval --[[ boolean ]], ComponentDataPtr --[[ integer ]] =\n\tGetDlcWeaponComponentData(\n\t\tdlcWeaponIndex --[[ integer ]], \n\t\tdlcWeapCompIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 seems to be the weapon index  \np1 seems to be the weapon component index  \nstruct DlcComponentData{  \nint attachBone;  \nint padding1;  \nint bActiveByDefault;  \nint padding2;  \nint unk;  \nint padding3;  \nint componentHash;  \nint padding4;  \nint unk2;  \nint padding5;  \nint componentCost;  \nint padding6;  \nchar nameLabel[64];  \nchar descLabel[64];  \n};"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcWeaponComponentDataSp",
    "hash": "0x31D5E073B6F93CDC",
    "code": "-- _GET_DLC_WEAPON_COMPONENT_DATA_SP\nlocal retval --[[ boolean ]], ComponentDataPtr --[[ integer ]] =\n\tGetDlcWeaponComponentDataSp(\n\t\tdlcWeaponIndex --[[ integer ]], \n\t\tdlcWeapCompIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcWeaponData",
    "hash": "0x79923CD21BECE14E",
    "code": "-- GET_DLC_WEAPON_DATA\nlocal retval --[[ boolean ]], outData --[[ integer ]] =\n\tGetDlcWeaponData(\n\t\tdlcWeaponIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.  \nstruct DlcWeaponData  \n{  \nint emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this  \nint padding1;  \nint weaponHash;  \nint padding2;  \nint unk;  \nint padding3;  \nint weaponCost;  \nint padding4;  \nint ammoCost;  \nint padding5;  \nint ammoType;  \nint padding6;  \nint defaultClipSize;  \nint padding7;  \nchar nameLabel[64];  \nchar descLabel[64];  \nchar desc2Label[64]; // usually \"the\" + name  \nchar upperCaseNameLabel[64];  \n};"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetDlcWeaponDataSp",
    "hash": "0x310836EE7129BA33",
    "code": "-- _GET_DLC_WEAPON_DATA_SP\nlocal retval --[[ boolean ]], outData --[[ integer ]] =\n\tGetDlcWeaponDataSp(\n\t\tdlcWeaponIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetForcedComponent",
    "hash": "0x6C93ED8C2F74859B",
    "code": "-- GET_FORCED_COMPONENT\nlocal nameHash --[[ Hash ]], enumValue --[[ integer ]], componentType --[[ integer ]] =\n\tGetForcedComponent(\n\t\tcomponentHash --[[ Hash ]], \n\t\tforcedComponentIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetForcedProp",
    "hash": "0xE1CA84EBF72E691D",
    "code": "-- GET_FORCED_PROP\nlocal nameHash --[[ Hash ]], enumValue --[[ integer ]], anchorPoint --[[ integer ]] =\n\tGetForcedProp(\n\t\tcomponentHash --[[ Hash ]], \n\t\tforcedPropIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetHashNameForComponent",
    "hash": "0x0368B3A838070348",
    "code": "-- GET_HASH_NAME_FOR_COMPONENT\nlocal retval --[[ Hash ]] =\n\tGetHashNameForComponent(\n\t\tentity --[[ Entity ]], \n\t\tcomponentId --[[ integer ]], \n\t\tdrawableVariant --[[ integer ]], \n\t\ttextureVariant --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetHashNameForProp",
    "hash": "0x5D6160275CAEC8DD",
    "code": "-- GET_HASH_NAME_FOR_PROP\nlocal retval --[[ Hash ]] =\n\tGetHashNameForProp(\n\t\tentity --[[ Entity ]], \n\t\tcomponentId --[[ integer ]], \n\t\tpropIndex --[[ integer ]], \n\t\tpropTextureIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetNumDlcVehicles",
    "hash": "0xA7A866D21CD2329B",
    "code": "-- GET_NUM_DLC_VEHICLES\nlocal retval --[[ integer ]] =\n\tGetNumDlcVehicles()",
    "parameters": [],
    "returns": [],
    "description": "Returns the total number of DLC vehicles."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetNumDlcWeaponComponents",
    "hash": "0x405425358A7D61FE",
    "code": "-- GET_NUM_DLC_WEAPON_COMPONENTS\nlocal retval --[[ integer ]] =\n\tGetNumDlcWeaponComponents(\n\t\tdlcWeaponIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the total number of DLC weapon components."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetNumDlcWeaponComponentsSp",
    "hash": "0xAD2A7A6DFF55841B",
    "code": "-- _GET_NUM_DLC_WEAPON_COMPONENTS_SP\nlocal retval --[[ integer ]] =\n\tGetNumDlcWeaponComponentsSp(\n\t\tdlcWeaponIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the total number of DLC weapon components that are available in SP.\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetNumDlcWeapons",
    "hash": "0xEE47635F352DA367",
    "code": "-- GET_NUM_DLC_WEAPONS\nlocal retval --[[ integer ]] =\n\tGetNumDlcWeapons()",
    "parameters": [],
    "returns": [],
    "description": "Returns the total number of DLC weapons."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetNumDlcWeaponsSp",
    "hash": "0x4160B65AE085B5A9",
    "code": "-- _GET_NUM_DLC_WEAPONS_SP\nlocal retval --[[ integer ]] =\n\tGetNumDlcWeaponsSp()",
    "parameters": [],
    "returns": [],
    "description": "Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetNumTattooShopDlcItems",
    "hash": "0x278F76C3B0A8F109",
    "code": "-- GET_NUM_TATTOO_SHOP_DLC_ITEMS\nlocal retval --[[ integer ]] =\n\tGetNumTattooShopDlcItems(\n\t\tcharacter --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Character types:\n0 = Michael,\n1 = Franklin,\n2 = Trevor,\n3 = MPMale,\n4 = MPFemale"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedApparelForcedComponentCount",
    "hash": "0xC6B9DB42C04DD8C3",
    "code": "-- GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT\nlocal retval --[[ integer ]] =\n\tGetShopPedApparelForcedComponentCount(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedApparelForcedPropCount",
    "hash": "0x017568A8182D98A6",
    "code": "-- GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT\nlocal retval --[[ integer ]] =\n\tGetShopPedApparelForcedPropCount(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedApparelVariantComponentCount",
    "hash": "0xC17AD0E5752BECDA",
    "code": "-- GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT\nlocal retval --[[ integer ]] =\n\tGetShopPedApparelVariantComponentCount(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedApparelVariantPropCount",
    "hash": "0xD40AAC51E8E4C663",
    "code": "-- _GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT\nlocal retval --[[ integer ]] =\n\tGetShopPedApparelVariantPropCount(\n\t\tpropHash --[[ Hash ]]\n\t)",
    "parameters": [
      "propHash: \n\nPed helmet prop hash"
    ],
    "returns": [
      "This native returns 1 when the player helmet has a visor (there is another prop index for the same helmet with closed/opened visor variant) that can be toggled. 0 if there's no alternative version with a visor for this helmet prop."
    ],
    "description": "Parameters:\n\npropHash: \n\nPed helmet prop hash\n\nReturns:\n\nThis native returns 1 when the player helmet has a visor (there is another prop index for the same helmet with closed/opened visor variant) that can be toggled. 0 if there's no alternative version with a visor for this helmet prop."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedComponent",
    "hash": "0x74C0E2A57EC66760",
    "code": "-- GET_SHOP_PED_COMPONENT\nlocal outComponent --[[ Any ]] =\n\tGetShopPedComponent(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedOutfit",
    "hash": "0xB7952076E444979D",
    "code": "-- GET_SHOP_PED_OUTFIT\nlocal p1 --[[ Any ]] =\n\tGetShopPedOutfit(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedOutfitComponentVariant",
    "hash": "0x19F2A026EDF0013F",
    "code": "-- GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT\nlocal retval --[[ boolean ]], outComponentVariant --[[ Any ]] =\n\tGetShopPedOutfitComponentVariant(\n\t\toutfit --[[ Hash ]], \n\t\tslot --[[ integer ]]\n\t)",
    "parameters": [
      "outfit: \n\nA structure, see GET_SHOP_PED_QUERY_OUTFIT.",
      "slot: \n\noutfit slot.",
      "outComponentVariant:"
    ],
    "returns": [],
    "description": "Parameters:\n\noutfit: \n\nA structure, see GET_SHOP_PED_QUERY_OUTFIT.\n\nslot: \n\noutfit slot.\n\noutComponentVariant:"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedOutfitLocate",
    "hash": "0x073CA26B079F956E",
    "code": "-- GET_SHOP_PED_OUTFIT_LOCATE\nlocal retval --[[ integer ]] =\n\tGetShopPedOutfitLocate(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedOutfitPropVariant",
    "hash": "0xA9F9C2E0FDE11CBB",
    "code": "-- GET_SHOP_PED_OUTFIT_PROP_VARIANT\nlocal retval --[[ boolean ]], outPropVariant --[[ Any ]] =\n\tGetShopPedOutfitPropVariant(\n\t\toutfitHash --[[ Hash ]], \n\t\tvariantIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedProp",
    "hash": "0x5D5CAFF661DDF6FC",
    "code": "-- GET_SHOP_PED_PROP\nlocal outProp --[[ Any ]] =\n\tGetShopPedProp(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedQueryComponent",
    "hash": "0x249E310B2D920699",
    "code": "-- GET_SHOP_PED_QUERY_COMPONENT\nlocal outComponent --[[ integer ]] =\n\tGetShopPedQueryComponent(\n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedQueryOutfit",
    "hash": "0x6D793F03A631FE56",
    "code": "-- GET_SHOP_PED_QUERY_OUTFIT\nlocal outfit --[[ Any ]] =\n\tGetShopPedQueryOutfit(\n\t\toutfitIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "struct Outfit_s  \n{  \n\tint mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;  \n\tint maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,   \n\t\tarmourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;  \n};"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetShopPedQueryProp",
    "hash": "0xDE44A00999B2837D",
    "code": "-- GET_SHOP_PED_QUERY_PROP\nlocal outProp --[[ Any ]] =\n\tGetShopPedQueryProp(\n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetTattooShopDlcItemData",
    "hash": "0xFF56381874F82086",
    "code": "-- GET_TATTOO_SHOP_DLC_ITEM_DATA\nlocal retval --[[ boolean ]], outComponent --[[ Any ]] =\n\tGetTattooShopDlcItemData(\n\t\tcharacterType --[[ integer ]], \n\t\tdecorationIndex --[[ integer ]]\n\t)",
    "parameters": [
      "characterType: \n\nWhich character to get the tattoo data for (Refer to eTattooFaction above).",
      "decorationIndex: \n\nTattoo index, value between 0 and GET_NUM_TATTOO_SHOP_DLC_ITEMS.",
      "outComponent: \n\nThe referenced struct."
    ],
    "returns": [
      "A bool indicating that the tattoo data exists in the files."
    ],
    "description": "Parameters:\n\ncharacterType: \n\nWhich character to get the tattoo data for (Refer to eTattooFaction above).\n\ndecorationIndex: \n\nTattoo index, value between 0 and GET_NUM_TATTOO_SHOP_DLC_ITEMS.\n\noutComponent: \n\nThe referenced struct.\n\nReturns:\n\nA bool indicating that the tattoo data exists in the files.\n\nReturns data that adheres to the tattoo shop item data that is used in shop_tattoo.meta\n\nCharacter types:\n\nenum eTattooFaction\n{\n\tTATTOO_SP_MICHAEL = 0,\n\tTATTOO_SP_FRANKLIN = 1,\n\tTATTOO_SP_TREVOR = 2,\n\tTATTOO_MP_FM = 3,\n\tTATTOO_MP_FM_F = 4\n}\n\n\nReturned struct properties:\n\nstruct sTattooShopItemValues\n{\n\t// Lock hash, used with IS_CONTENT_ITEM_LOCKED\n\tint LockHash;\n\t// Unique ID of this slot. It can also be 0.\n\tint Index;\n\t// Collection hash of this tattoo\n\tint CollectionHash;\n\t// Preset hash of this tattoo\n\tint PresetHash;\n\t// Cost of this tattoo in shops.\n\tint Cost;\n\t// Secondary placement of this tattoo.\n\tint eFacing;\n\t// Location of this tattoo on the body (for example, for torso there would be chest upper, stomach, etc)\n\tint UpdateGroup;\n\t// This tattoo's name in the form of a text label.\n\tconst char* NameTextLabel;\n};"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetTattooShopDlcItemIndex",
    "hash": "0x10144267DD22866C",
    "code": "-- GET_TATTOO_SHOP_DLC_ITEM_INDEX\nlocal retval --[[ integer ]] =\n\tGetTattooShopDlcItemIndex(\n\t\tcharacter --[[ integer ]], \n\t\tcollection --[[ integer ]], \n\t\tpreset --[[ integer ]]\n\t)",
    "parameters": [
      "character: \n\nAKA eFaction in shop_tattoo.meta. Which character this tattoo belongs to. See GET_NUM_TATTOO_SHOP_DLC_ITEMS.",
      "collection: \n\nWhich collection this tattoo belongs to. If you specify -1, it will check all collections.",
      "preset: \n\nWhich preset this tattoo belongs to."
    ],
    "returns": [
      "Returns the actual index (Not ID from shop_tattoo.meta) from 0 to GET_NUM_TATTOO_SHOP_DLC_ITEMS, or -1 (if it failed to find the tattoo) of a tattoo."
    ],
    "description": "Parameters:\n\ncharacter: \n\nAKA eFaction in shop_tattoo.meta. Which character this tattoo belongs to. See GET_NUM_TATTOO_SHOP_DLC_ITEMS.\n\ncollection: \n\nWhich collection this tattoo belongs to. If you specify -1, it will check all collections.\n\npreset: \n\nWhich preset this tattoo belongs to.\n\nReturns:\n\nReturns the actual index (Not ID from shop_tattoo.meta) from 0 to GET_NUM_TATTOO_SHOP_DLC_ITEMS, or -1 (if it failed to find the tattoo) of a tattoo.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetVariantComponent",
    "hash": "0x6E11F282F11863B6",
    "code": "-- GET_VARIANT_COMPONENT\nlocal nameHash --[[ Hash ]], enumValue --[[ integer ]], componentType --[[ integer ]] =\n\tGetVariantComponent(\n\t\tcomponentHash --[[ Hash ]], \n\t\tvariantComponentIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "GetVariantProp",
    "hash": "0xD81B7F27BC773E66",
    "code": "-- _GET_VARIANT_PROP\nlocal nameHash --[[ Hash ]], enumValue --[[ integer ]], anchorPoint --[[ integer ]] =\n\tGetVariantProp(\n\t\tcomponentHash --[[ Hash ]], \n\t\tvariantPropIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "InitShopPedComponent",
    "hash": "0x1E8C308FD312C036",
    "code": "-- INIT_SHOP_PED_COMPONENT\nlocal outComponent --[[ integer ]] =\n\tInitShopPedComponent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "InitShopPedProp",
    "hash": "0xEB0A2B758F7B850F",
    "code": "-- INIT_SHOP_PED_PROP\nlocal outProp --[[ integer ]] =\n\tInitShopPedProp()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "IsContentItemLocked",
    "hash": "0xD4D7B033C3AA243C",
    "code": "-- IS_CONTENT_ITEM_LOCKED\nlocal retval --[[ boolean ]] =\n\tIsContentItemLocked(\n\t\titemHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "IsDlcVehicleMod",
    "hash": "0x0564B9FF9631B82C",
    "code": "-- IS_DLC_VEHICLE_MOD\nlocal retval --[[ boolean ]] =\n\tIsDlcVehicleMod(\n\t\thash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "LoadContentChangeSetGroup",
    "hash": "0x6BEDF5769AC2DC07",
    "code": "-- _LOAD_CONTENT_CHANGE_SET_GROUP\nLoadContentChangeSetGroup(\n\thash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From fm_deathmatch_creator and fm_race_creator:\n\nFILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat(\"GROUP_MAP_SP\"));\nFILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat(\"GROUP_MAP\"));\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "SetupShopPedApparelQuery",
    "hash": "0x50F457823CE6EB5F",
    "code": "-- SETUP_SHOP_PED_APPAREL_QUERY\nlocal retval --[[ integer ]] =\n\tSetupShopPedApparelQuery(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ integer ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "SetupShopPedApparelQueryTu",
    "hash": "0x9BDF59818B1E38C1",
    "code": "-- SETUP_SHOP_PED_APPAREL_QUERY_TU\nlocal retval --[[ integer ]] =\n\tSetupShopPedApparelQueryTu(\n\t\tcharacter --[[ integer ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ integer ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ integer ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.\ncomponentId is between 0 and 11 and corresponds to the usual component slots.\np1 could be the outfit number; unsure.\np2 is usually -1; unknown function.\np3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.\np4 is usually -1; unknown function.\ncomponentId is -1 when p3 is true in decompiled scripts."
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "SetupShopPedOutfitQuery",
    "hash": "0xF3FBE2D50A6A8C28",
    "code": "-- SETUP_SHOP_PED_OUTFIT_QUERY\nlocal retval --[[ integer ]] =\n\tSetupShopPedOutfitQuery(\n\t\tcharacter --[[ integer ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "characters\n0: Michael\n1: Franklin\n2: Trevor\n3: MPMale\n4: MPFemale"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "UnloadContentChangeSetGroup",
    "hash": "0x3C1978285B036B25",
    "code": "-- _UNLOAD_CONTENT_CHANGE_SET_GROUP\nUnloadContentChangeSetGroup(\n\thash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From fm_deathmatch_creator and fm_race_creator:\n\nFILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat(\"GROUP_MAP_SP\"));\nFILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat(\"GROUP_MAP\"));\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "N_0x6cebe002e58dee97",
    "hash": "0x6CEBE002E58DEE97",
    "code": "-- 0x6CEBE002E58DEE97\nlocal retval --[[ integer ]] =\n\tN_0x6cebe002e58dee97(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns some sort of index/offset for props. Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: FILES",
    "apiset": "API set: client",
    "name": "N_0x96e2929292a4db77",
    "hash": "0x96E2929292A4DB77",
    "code": "-- 0x96E2929292A4DB77\nlocal retval --[[ integer ]] =\n\tN_0x96e2929292a4db77(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns some sort of index/offset for components. Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "AddExplosion",
    "hash": "0xE3AD2BDBAEE269AC",
    "code": "-- ADD_EXPLOSION\nAddExplosion(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\texplosionType --[[ integer ]], \n\tdamageScale --[[ number ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tcameraShake --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 9: BOOL noDamage\nBOOL isAudible = If explosion makes a sound.  \nBOOL isInvisible = If the explosion is invisible or not.\nBOOL noDamage = false: damage || nodamage = true: no damage\n\nenum eExplosionTag\n{\n\tDONTCARE = -1,\n\tGRENADE = 0,\n\tGRENADELAUNCHER = 1,\n\tSTICKYBOMB = 2,\n\tMOLOTOV = 3,\n\tROCKET = 4,\n\tTANKSHELL = 5,\n\tHI_OCTANE = 6,\n\tCAR = 7,\n\tPLANE = 8,\n\tPETROL_PUMP = 9,\n\tBIKE = 10,\n\tDIR_STEAM = 11,\n\tDIR_FLAME = 12,\n\tDIR_WATER_HYDRANT = 13,\n\tDIR_GAS_CANISTER = 14,\n\tBOAT = 15,\n\tSHIP_DESTROY = 16,\n\tTRUCK = 17,\n\tBULLET = 18,\n\tSMOKE_GRENADE_LAUNCHER = 19,\n\tSMOKE_GRENADE = 20,\n\tBZGAS = 21,\n\tFLARE = 22,\n\tGAS_CANISTER = 23,\n\tEXTINGUISHER = 24,\n\tPROGRAMMABLEAR = 25,\n\tTRAIN = 26,\n\tBARREL = 27,\n\tPROPANE = 28,\n\tBLIMP = 29,\n\tDIR_FLAME_EXPLODE = 30,\n\tTANKER = 31,\n\tPLANE_ROCKET = 32,\n\tVEHICLE_BULLET = 33,\n\tGAS_TANK = 34,\n\tBIRD_CRAP = 35,\n\tRAILGUN = 36,\n\tBLIMP2 = 37,\n\tFIREWORK = 38,\n\tSNOWBALL = 39,\n\tPROXMINE = 40,\n\tVALKYRIE_CANNON = 41,\n\tAIR_DEFENCE = 42,\n\tPIPEBOMB = 43,\n\tVEHICLEMINE = 44,\n\tEXPLOSIVEAMMO = 45,\n\tAPCSHELL = 46,\n\tBOMB_CLUSTER = 47,\n\tBOMB_GAS = 48,\n\tBOMB_INCENDIARY = 49,\n\tBOMB_STANDARD = 50,\n\tTORPEDO = 51,\n\tTORPEDO_UNDERWATER = 52,\n\tBOMBUSHKA_CANNON = 53,\n\tBOMB_CLUSTER_SECONDARY = 54,\n\tHUNTER_BARRAGE = 55,\n\tHUNTER_CANNON = 56,\n\tROGUE_CANNON = 57,\n\tMINE_UNDERWATER = 58,\n\tORBITAL_CANNON = 59,\n\tBOMB_STANDARD_WIDE = 60,\n\tEXPLOSIVEAMMO_SHOTGUN = 61,\n\tOPPRESSOR2_CANNON = 62,\n\tMORTAR_KINETIC = 63,\n\tVEHICLEMINE_KINETIC = 64,\n\tVEHICLEMINE_EMP = 65,\n\tVEHICLEMINE_SPIKE = 66,\n\tVEHICLEMINE_SLICK = 67,\n\tVEHICLEMINE_TAR = 68,\n\tSCRIPT_DRONE = 69,\n\tRAYGUN = 70,\n\tBURIEDMINE = 71,\n\tSCRIPT_MISSILE = 72,\n\tRCTANK_ROCKET = 73,\n\tBOMB_WATER = 74,\n\tBOMB_WATER_SECONDARY = 75,\n\tMINE_CNCSPIKE = 76,\n\tBZGAS_MK2 = 77,\n\tFLASHGRENADE = 78,\n\tSTUNGRENADE = 79,\n\tCNC_KINETICRAM = 80,\n\tSCRIPT_MISSILE_LARGE = 81,\n\tSUBMARINE_BIG = 82,\n\tEMPLAUNCHER_EMP = 83\n};"
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "AddExplosionWithUserVfx",
    "hash": "0x36DD3FE58B5E5212",
    "code": "-- ADD_EXPLOSION_WITH_USER_VFX\nAddExplosionWithUserVfx(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\texplosionType --[[ integer ]], \n\texplosionFx --[[ Hash ]], \n\tdamageScale --[[ number ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tcameraShake --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "AddOwnedExplosion",
    "hash": "0x172AA1B624FA1013",
    "code": "-- ADD_OWNED_EXPLOSION\nAddOwnedExplosion(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\texplosionType --[[ integer ]], \n\tdamageScale --[[ number ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tcameraShake --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "GetClosestFirePos",
    "hash": "0x352A9F6BCF90081F",
    "code": "-- GET_CLOSEST_FIRE_POS\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]] =\n\tGetClosestFirePos(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns TRUE if it found something. FALSE if not."
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "GetEntityInsideExplosionArea",
    "hash": "0x14BA4BA137AF6CEC",
    "code": "-- _GET_ENTITY_INSIDE_EXPLOSION_AREA\nlocal retval --[[ Entity ]] =\n\tGetEntityInsideExplosionArea(\n\t\texplosionType --[[ integer ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [
      "explosionType: \n\nSee ADD_EXPLOSION.",
      "x1:",
      "y1:",
      "z1:",
      "x2:",
      "y2:",
      "z2:",
      "radius:"
    ],
    "returns": [],
    "description": "Parameters:\n\nexplosionType: \n\nSee ADD_EXPLOSION.\n\nx1:\ny1:\nz1:\nx2:\ny2:\nz2:\nradius:\nReturns a handle to the first entity within the a circle spawned inside the 2 points from a radius."
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "GetEntityInsideExplosionSphere",
    "hash": "0xB3CD51E3DB86F176",
    "code": "-- _GET_ENTITY_INSIDE_EXPLOSION_SPHERE\nlocal retval --[[ Entity ]] =\n\tGetEntityInsideExplosionSphere(\n\t\texplosionType --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "GetNumberOfFiresInRange",
    "hash": "0x50CAD495A460B305",
    "code": "-- GET_NUMBER_OF_FIRES_IN_RANGE\nlocal retval --[[ integer ]] =\n\tGetNumberOfFiresInRange(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "IsEntityOnFire",
    "hash": "0x28D3FED7190D3A0B",
    "code": "-- IS_ENTITY_ON_FIRE\nlocal retval --[[ boolean ]] =\n\tIsEntityOnFire(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "IsExplosionActiveInArea",
    "hash": "0x6070104B699B2EF4",
    "code": "-- IS_EXPLOSION_ACTIVE_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsExplosionActiveInArea(\n\t\texplosionType --[[ integer ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [
      "explosionType: \n\nSee ADD_EXPLOSION.",
      "x1:",
      "y1:",
      "z1:",
      "x2:",
      "y2:",
      "z2:"
    ],
    "returns": [],
    "description": "Parameters:\n\nexplosionType: \n\nSee ADD_EXPLOSION.\n\nx1:\ny1:\nz1:\nx2:\ny2:\nz2:"
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "IsExplosionInAngledArea",
    "hash": "0xA079A6C51525DC4B",
    "code": "-- IS_EXPLOSION_IN_ANGLED_AREA\nlocal retval --[[ boolean ]] =\n\tIsExplosionInAngledArea(\n\t\texplosionType --[[ integer ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]]\n\t)",
    "parameters": [
      "explosionType: \n\nexplosion enum, -1 for any explosion type. See ADD_EXPLOSION.",
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area"
    ],
    "returns": [],
    "description": "Parameters:\n\nexplosionType: \n\nexplosion enum, -1 for any explosion type. See ADD_EXPLOSION.\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area."
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "IsExplosionInArea",
    "hash": "0x2E2EBA0EE7CED0E0",
    "code": "-- IS_EXPLOSION_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsExplosionInArea(\n\t\texplosionType --[[ integer ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [
      "explosionType: \n\nSee ADD_EXPLOSION.",
      "x1:",
      "y1:",
      "z1:",
      "x2:",
      "y2:",
      "z2:"
    ],
    "returns": [],
    "description": "Parameters:\n\nexplosionType: \n\nSee ADD_EXPLOSION.\n\nx1:\ny1:\nz1:\nx2:\ny2:\nz2:"
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "IsExplosionInSphere",
    "hash": "0xAB0F816885B0E483",
    "code": "-- IS_EXPLOSION_IN_SPHERE\nlocal retval --[[ boolean ]] =\n\tIsExplosionInSphere(\n\t\texplosionType --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [
      "explosionType: \n\nSee ADD_EXPLOSION.",
      "x:",
      "y:",
      "z:",
      "radius:"
    ],
    "returns": [],
    "description": "Parameters:\n\nexplosionType: \n\nSee ADD_EXPLOSION.\n\nx:\ny:\nz:\nradius:"
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "RemoveScriptFire",
    "hash": "0x7FF548385680673F",
    "code": "-- REMOVE_SCRIPT_FIRE\nRemoveScriptFire(\n\tfireHandle --[[ FireId ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "SetFireSpreadRate",
    "hash": "0x8F390AC4155099BA",
    "code": "-- _SET_FIRE_SPREAD_RATE\nSetFireSpreadRate(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SETFIRE*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "StartEntityFire",
    "hash": "0xF6A9D9708F6F23DF",
    "code": "-- START_ENTITY_FIRE\nlocal retval --[[ FireId ]] =\n\tStartEntityFire(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "StartScriptFire",
    "hash": "0x6B83617E04503888",
    "code": "-- START_SCRIPT_FIRE\nlocal retval --[[ FireId ]] =\n\tStartScriptFire(\n\t\tX --[[ number ]], \n\t\tY --[[ number ]], \n\t\tZ --[[ number ]], \n\t\tmaxChildren --[[ integer ]], \n\t\tisGasFire --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Starts a fire:  \nxyz: Location of fire  \nmaxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.  \nisGasFire: Whether or not the fire is powered by gasoline."
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "StopEntityFire",
    "hash": "0x7F0DD2EBBB651AFF",
    "code": "-- STOP_ENTITY_FIRE\nStopEntityFire(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: FIRE",
    "apiset": "API set: client",
    "name": "StopFireInRange",
    "hash": "0x056A8A219B8E829F",
    "code": "-- STOP_FIRE_IN_RANGE\nStopFireInRange(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AddDecal",
    "hash": "0xB302244A1839BDAD",
    "code": "-- ADD_DECAL\nlocal retval --[[ integer ]] =\n\tAddDecal(\n\t\tdecalType --[[ integer ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\tdirX --[[ number ]], \n\t\tdirY --[[ number ]], \n\t\tdirZ --[[ number ]], \n\t\tsideX --[[ number ]], \n\t\tsideY --[[ number ]], \n\t\tsideZ --[[ number ]], \n\t\twidth --[[ number ]], \n\t\theight --[[ number ]], \n\t\trCoef --[[ number ]], \n\t\tgCoef --[[ number ]], \n\t\tbCoef --[[ number ]], \n\t\topacity --[[ number ]], \n\t\ttimeout --[[ number ]], \n\t\tisLongRange --[[ boolean ]], \n\t\tisDynamic --[[ boolean ]], \n\t\tuseComplexColn --[[ boolean ]]\n\t)",
    "parameters": [
      "decalType: \n\nwhich type of decal to place, based on the ID, see DecalTypes enum.",
      "posX: \n\nX position coordinate.",
      "posY: \n\nY position coordinate.",
      "posZ: \n\nZ position coordinate.",
      "dirX: \n\nX Orientation.",
      "dirY: \n\nY Orientation.",
      "dirZ: \n\nZ Orientation.",
      "sideX: \n\nUsually set to 0.",
      "sideY: \n\nUsually set to 1.",
      "sideZ: \n\nUsually set to 0.",
      "width: \n\nWidth of the decal.",
      "height: \n\nHeight of the decal.",
      "rCoef: \n\nRed Color.",
      "gCoef: \n\nGreen Color.",
      "bCoef: \n\nBlue Color.",
      "opacity: \n\nAlpha Color.",
      "timeout: \n\nThe lifetime of the decal.",
      "isLongRange: \n\ntoggle further LOD draw distance.",
      "isDynamic: \n\ntoggle dynamics.",
      "useComplexColn: \n\nuse complex coloring."
    ],
    "returns": [
      "An integer value representing the added decal index, will return 0 if the decal cannot be added."
    ],
    "description": "Parameters:\n\ndecalType: \n\nwhich type of decal to place, based on the ID, see DecalTypes enum.\n\nposX: \n\nX position coordinate.\n\nposY: \n\nY position coordinate.\n\nposZ: \n\nZ position coordinate.\n\ndirX: \n\nX Orientation.\n\ndirY: \n\nY Orientation.\n\ndirZ: \n\nZ Orientation.\n\nsideX: \n\nUsually set to 0.\n\nsideY: \n\nUsually set to 1.\n\nsideZ: \n\nUsually set to 0.\n\nwidth: \n\nWidth of the decal.\n\nheight: \n\nHeight of the decal.\n\nrCoef: \n\nRed Color.\n\ngCoef: \n\nGreen Color.\n\nbCoef: \n\nBlue Color.\n\nopacity: \n\nAlpha Color.\n\ntimeout: \n\nThe lifetime of the decal.\n\nisLongRange: \n\ntoggle further LOD draw distance.\n\nisDynamic: \n\ntoggle dynamics.\n\nuseComplexColn: \n\nuse complex coloring.\n\nReturns:\n\nAn integer value representing the added decal index, will return 0 if the decal cannot be added.\n\nPlaces a decal into the world\n\npublic enum DecalTypes  \n{  \n    splatters_blood = 1010,  \n    splatters_blood_dir = 1015,  \n    splatters_blood_mist = 1017,  \n    splatters_mud = 1020,  \n    splatters_paint = 1030,  \n    splatters_water = 1040,  \n    splatters_water_hydrant = 1050,  \n    splatters_blood2 = 1110,  \n    weapImpact_metal = 4010,  \n    weapImpact_concrete = 4020,  \n    weapImpact_mattress = 4030,  \n    weapImpact_mud = 4032,  \n    weapImpact_wood = 4050,  \n    weapImpact_sand = 4053,  \n    weapImpact_cardboard = 4040,  \n    weapImpact_melee_glass = 4100,  \n    weapImpact_glass_blood = 4102,  \n    weapImpact_glass_blood2 = 4104,  \n    weapImpact_shotgun_paper = 4200,  \n    weapImpact_shotgun_mattress,  \n    weapImpact_shotgun_metal,  \n    weapImpact_shotgun_wood,  \n    weapImpact_shotgun_dirt,  \n    weapImpact_shotgun_tvscreen,  \n    weapImpact_shotgun_tvscreen2,  \n    weapImpact_shotgun_tvscreen3,  \n    weapImpact_melee_concrete = 4310,  \n    weapImpact_melee_wood = 4312,  \n    weapImpact_melee_metal = 4314,  \n    burn1 = 4421,  \n    burn2,  \n    burn3,  \n    burn4,  \n    burn5,  \n    bang_concrete_bang = 5000,  \n    bang_concrete_bang2,  \n    bang_bullet_bang,  \n    bang_bullet_bang2 = 5004,  \n    bang_glass = 5031,  \n    bang_glass2,  \n    solidPool_water = 9000,  \n    solidPool_blood,  \n    solidPool_oil,  \n    solidPool_petrol,  \n    solidPool_mud,  \n    porousPool_water,  \n    porousPool_blood,  \n    porousPool_oil,  \n    porousPool_petrol,  \n    porousPool_mud,  \n    porousPool_water_ped_drip,  \n    liquidTrail_water = 9050  \n}"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AddEntityIcon",
    "hash": "0x9CD43EEE12BF4DD0",
    "code": "-- ADD_ENTITY_ICON\nlocal retval --[[ Any ]] =\n\tAddEntityIcon(\n\t\tentity --[[ Entity ]], \n\t\ticon --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example:  \nGRAPHICS::ADD_ENTITY_ICON(a_0, \"MP_Arrow\");  \nI tried this and nothing happened..."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AddOilDecal",
    "hash": "0x126D7F89FE859A5E",
    "code": "-- _ADD_OIL_DECAL\nlocal retval --[[ integer ]] =\n\tAddOilDecal(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tgroundLvl --[[ number ]], \n\t\twidth --[[ number ]], \n\t\ttransparency --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AddPetrolDecal",
    "hash": "0x4F5212C7AD880DF8",
    "code": "-- ADD_PETROL_DECAL\nlocal retval --[[ integer ]] =\n\tAddPetrolDecal(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tgroundLvl --[[ number ]], \n\t\twidth --[[ number ]], \n\t\ttransparency --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AddPetrolTrailDecalInfo",
    "hash": "0x967278682CB6967A",
    "code": "-- ADD_PETROL_TRAIL_DECAL_INFO\nAddPetrolTrailDecalInfo(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AddTcmodifierOverride",
    "hash": "0x1A8E2C8B9CF4549C",
    "code": "-- ADD_TCMODIFIER_OVERRIDE\nAddTcmodifierOverride(\n\tmodifierName1 --[[ string ]], \n\tmodifierName2 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AddVehicleCrewEmblem",
    "hash": "0x428BDCB9DA58DA53",
    "code": "-- ADD_VEHICLE_CREW_EMBLEM\nlocal retval --[[ boolean ]] =\n\tAddVehicleCrewEmblem(\n\t\tvehicle --[[ Vehicle ]], \n\t\tped --[[ Ped ]], \n\t\tboneIndex --[[ integer ]], \n\t\tx1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\tx3 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\ty3 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tz3 --[[ number ]], \n\t\tscale --[[ number ]], \n\t\tp13 --[[ Any ]], \n\t\talpha --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AnimpostfxGetUnk",
    "hash": "0xE35B38A27E8E7179",
    "code": "-- _ANIMPOSTFX_GET_UNK\nlocal retval --[[ number ]] =\n\tAnimpostfxGetUnk(\n\t\teffectName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See ANIMPOSTFX_PLAY"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AnimpostfxIsRunning",
    "hash": "0x36AD3E690DA5ACEB",
    "code": "-- ANIMPOSTFX_IS_RUNNING\nlocal retval --[[ boolean ]] =\n\tAnimpostfxIsRunning(\n\t\teffectName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "Whether the specified effect is active"
    ],
    "description": "Returns:\n\nWhether the specified effect is active\n\nSee ANIMPOSTFX_PLAY."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AnimpostfxPlay",
    "hash": "0x2206BF9A37B7F724",
    "code": "-- ANIMPOSTFX_PLAY\nAnimpostfxPlay(\n\teffectName --[[ string ]], \n\tduration --[[ integer ]], \n\tlooped --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "duration - is how long to play the effect for in milliseconds. If 0, it plays the default length\nif loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AnimpostfxStop",
    "hash": "0x068E835A1D0DC0E3",
    "code": "-- ANIMPOSTFX_STOP\nAnimpostfxStop(\n\teffectName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See ANIMPOSTFX_PLAY."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AnimpostfxStopAll",
    "hash": "0xB4EDDC19532BFB85",
    "code": "-- ANIMPOSTFX_STOP_ALL\nAnimpostfxStopAll()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AnimpostfxStopAndDoUnk",
    "hash": "0xD2209BE128B5418C",
    "code": "-- _ANIMPOSTFX_STOP_AND_DO_UNK\nAnimpostfxStopAndDoUnk(\n\teffectName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops the effect and sets a value (bool) in its data (+0x199) to false; See ANIMPOSTFX_PLAY."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "AttachTvAudioToEntity",
    "hash": "0x845BAD77CC770633",
    "code": "-- ATTACH_TV_AUDIO_TO_ENTITY\nAttachTvAudioToEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Might be more appropriate in AUDIO?"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "BeginScaleformMovieMethod",
    "hash": "0xF6E48914C7A8694E",
    "code": "-- BEGIN_SCALEFORM_MOVIE_METHOD\nlocal retval --[[ boolean ]] =\n\tBeginScaleformMovieMethod(\n\t\tscaleform --[[ integer ]], \n\t\tmethodName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Push a function from the Scaleform onto the stack"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "BeginScaleformMovieMethodOnFrontend",
    "hash": "0xAB58C27C2E6123C6",
    "code": "-- BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND\nlocal retval --[[ boolean ]] =\n\tBeginScaleformMovieMethodOnFrontend(\n\t\tfunctionName --[[ string ]]\n\t)",
    "parameters": [
      "functionName: \n\nThe function name of the scaleform to call."
    ],
    "returns": [],
    "description": "Parameters:\n\nfunctionName: \n\nThe function name of the scaleform to call.\n\nStarts frontend (pause menu) scaleform movie methods. This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.\n\nUse BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER for header scaleform functions."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "BeginScaleformMovieMethodOnFrontendHeader",
    "hash": "0xB9449845F73F5E9C",
    "code": "-- BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER\nlocal retval --[[ boolean ]] =\n\tBeginScaleformMovieMethodOnFrontendHeader(\n\t\tfunctionName --[[ string ]]\n\t)",
    "parameters": [
      "functionName: \n\nScaleform function name."
    ],
    "returns": [],
    "description": "Parameters:\n\nfunctionName: \n\nScaleform function name.\n\nStarts frontend (pause menu) scaleform movie methods for header options.\n\nUse BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND to customize the content inside the frontend menus."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "BeginScaleformScriptHudMovieMethod",
    "hash": "0x98C494FD5BDFBFD5",
    "code": "-- BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD\nlocal retval --[[ boolean ]] =\n\tBeginScaleformScriptHudMovieMethod(\n\t\thudComponent --[[ integer ]], \n\t\tmethodName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.\nKnown components:\n19 - MP_RANK_BAR\n20 - HUD_DIRECTOR_MODE\nThis native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under \"scripts\\__Packages\\com\\rockstargames\\gtav\\hud\\hudComponents\" and \"scripts\\__Packages\\com\\rockstargames\\gtav\\Multiplayer\"."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "BeginTakeHighQualityPhoto",
    "hash": "0xA67C35C56EB1BD9D",
    "code": "-- BEGIN_TAKE_HIGH_QUALITY_PHOTO\nlocal retval --[[ boolean ]] =\n\tBeginTakeHighQualityPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "BeginTakeMissionCreatorPhoto",
    "hash": "0x1DD2139A9A20DCE8",
    "code": "-- BEGIN_TAKE_MISSION_CREATOR_PHOTO\nlocal retval --[[ boolean ]] =\n\tBeginTakeMissionCreatorPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "BeginTextCommandScaleformString",
    "hash": "0x80338406F3475E55",
    "code": "-- BEGIN_TEXT_COMMAND_SCALEFORM_STRING\nBeginTextCommandScaleformString(\n\ttextLabel --[[ string ]]\n)",
    "parameters": [
      "textLabel: \n\na GXT text label"
    ],
    "returns": [],
    "description": "Parameters:\n\ntextLabel: \n\na GXT text label\n\nCalled prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.\nExamples:\nGRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(\"NUMBER\");\nHUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));\nGRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();\nGRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(\"STRING\");\nHUD::_ADD_TEXT_COMPONENT_STRING(a_2);\nGRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();\nGRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(\"STRTNM2\");\nHUD::_0x17299B63C7683A2B(v_3);\nHUD::_0x17299B63C7683A2B(v_4);\nGRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();\nGRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(\"STRTNM1\");\nHUD::_0x17299B63C7683A2B(v_3);\nGRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CallScaleformMovieMethod",
    "hash": "0xFBD96D87AC96D533",
    "code": "-- CALL_SCALEFORM_MOVIE_METHOD\nCallScaleformMovieMethod(\n\tscaleform --[[ integer ]], \n\tmethod --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Calls the Scaleform function."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CallScaleformMovieMethodWithNumber",
    "hash": "0xD0837058AE2E4BEE",
    "code": "-- CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER\nCallScaleformMovieMethodWithNumber(\n\tscaleform --[[ integer ]], \n\tmethodName --[[ string ]], \n\tparam1 --[[ number ]], \n\tparam2 --[[ number ]], \n\tparam3 --[[ number ]], \n\tparam4 --[[ number ]], \n\tparam5 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Calls the Scaleform function and passes the parameters as floats.  \nThe number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CallScaleformMovieMethodWithNumberAndString",
    "hash": "0xEF662D8D57E290B1",
    "code": "-- CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING\nCallScaleformMovieMethodWithNumberAndString(\n\tscaleform --[[ integer ]], \n\tmethodName --[[ string ]], \n\tfloatParam1 --[[ number ]], \n\tfloatParam2 --[[ number ]], \n\tfloatParam3 --[[ number ]], \n\tfloatParam4 --[[ number ]], \n\tfloatParam5 --[[ number ]], \n\tstringParam1 --[[ string ]], \n\tstringParam2 --[[ string ]], \n\tstringParam3 --[[ string ]], \n\tstringParam4 --[[ string ]], \n\tstringParam5 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Calls the Scaleform function and passes both float and string parameters (in their respective order).  \nThe number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).  \nNOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.  \nExamples:  \n// function MY_FUNCTION(floatParam1, floatParam2, stringParam)  \nGRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, \"MY_FUNCTION\", 10.0, 20.0, -1.0, -1.0, -1.0, \"String param\", 0, 0, 0, 0);  \n// function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)  \nGRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, \"MY_FUNCTION_2\", 10.0, -1.0, -1.0, -1.0, -1.0, \"String param #1\", \"String param #2\", 0, 0, 0);"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CallScaleformMovieMethodWithString",
    "hash": "0x51BC1ED3CC44E8F7",
    "code": "-- CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING\nCallScaleformMovieMethodWithString(\n\tscaleform --[[ integer ]], \n\tmethodName --[[ string ]], \n\tparam1 --[[ string ]], \n\tparam2 --[[ string ]], \n\tparam3 --[[ string ]], \n\tparam4 --[[ string ]], \n\tparam5 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Calls the Scaleform function and passes the parameters as strings.  \nThe number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL)."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsClearShadowSampleType",
    "hash": "0x27CB772218215325",
    "code": "-- _CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE\nCascadeShadowsClearShadowSampleType()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsEnableEntityTracker",
    "hash": "0x80ECBC0C856D3B0B",
    "code": "-- CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER\nCascadeShadowsEnableEntityTracker(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "When this is set to ON, shadows only draw as you get nearer.\nWhen OFF, they draw from a further distance."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsInitSession",
    "hash": "0x03FC694AE06C5A20",
    "code": "-- CASCADE_SHADOWS_INIT_SESSION\nCascadeShadowsInitSession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsSetAircraftMode",
    "hash": "0x6DDBF9DFFC4AC080",
    "code": "-- CASCADE_SHADOWS_SET_AIRCRAFT_MODE\nCascadeShadowsSetAircraftMode(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsSetCascadeBounds",
    "hash": "0xD2936CAB8B58FCBD",
    "code": "-- CASCADE_SHADOWS_SET_CASCADE_BOUNDS\nCascadeShadowsSetCascadeBounds(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsSetCascadeBoundsScale",
    "hash": "0x5F0F3F56635809EF",
    "code": "-- CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE\nCascadeShadowsSetCascadeBoundsScale(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsSetDynamicDepthMode",
    "hash": "0xD39D13C9FEBF0511",
    "code": "-- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE\nCascadeShadowsSetDynamicDepthMode(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsSetDynamicDepthValue",
    "hash": "0x02AC28F3A01FA04A",
    "code": "-- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE\nCascadeShadowsSetDynamicDepthValue(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsSetEntityTrackerScale",
    "hash": "0x5E9DAF5A20F15908",
    "code": "-- CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE\nCascadeShadowsSetEntityTrackerScale(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CascadeShadowsSetShadowSampleType",
    "hash": "0xB11D94BC55F41932",
    "code": "-- CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE\nCascadeShadowsSetShadowSampleType(\n\ttype --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Possible values:\n\"CSM_ST_POINT\"\n\"CSM_ST_LINEAR\"\n\"CSM_ST_TWOTAP\"\n\"CSM_ST_BOX3x3\"\n\"CSM_ST_BOX4x4\"\n\"CSM_ST_DITHER2_LINEAR\"\n\"CSM_ST_CUBIC\"\n\"CSM_ST_DITHER4\"\n\"CSM_ST_DITHER16\"\n\"CSM_ST_SOFT16\"\n\"CSM_ST_DITHER16_RPDB\"\n\"CSM_ST_POISSON16_RPDB_GNORM\"\n\"CSM_ST_HIGHRES_BOX4x4\"\n\"CSM_ST_CLOUDS_SIMPLE\"\n\"CSM_ST_CLOUDS_LINEAR\"\n\"CSM_ST_CLOUDS_TWOTAP\"\n\"CSM_ST_CLOUDS_BOX3x3\"\n\"CSM_ST_CLOUDS_BOX4x4\"\n\"CSM_ST_CLOUDS_DITHER2_LINEAR\"\n\"CSM_ST_CLOUDS_SOFT16\"\n\"CSM_ST_CLOUDS_DITHER16_RPDB\"\n\"CSM_ST_CLOUDS_POISSON16_RPDB_GNORM\""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ClearDrawOrigin",
    "hash": "0xFF0B610F6BE0D7AF",
    "code": "-- CLEAR_DRAW_ORIGIN\nClearDrawOrigin()",
    "parameters": [],
    "returns": [],
    "description": "Resets the screen's draw-origin which was changed by the function SET_DRAW_ORIGIN back to x=0, y=0. See SET_DRAW_ORIGIN for further information."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ClearExtraTimecycleModifier",
    "hash": "0x92CCC17A7A2285DA",
    "code": "-- _CLEAR_EXTRA_TIMECYCLE_MODIFIER\nClearExtraTimecycleModifier()",
    "parameters": [],
    "returns": [],
    "description": "Clears the secondary timecycle modifier usually set with SetExtraTimecycleModifier"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ClearTimecycleModifier",
    "hash": "0x0F07E7745A236711",
    "code": "-- CLEAR_TIMECYCLE_MODIFIER\nClearTimecycleModifier()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ClearTvChannelPlaylist",
    "hash": "0xBEB3D46BB7F043C0",
    "code": "-- CLEAR_TV_CHANNEL_PLAYLIST\nClearTvChannelPlaylist(\n\ttvChannel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CreateCheckpoint",
    "hash": "0x0134F0835AB6BFCB",
    "code": "-- CREATE_CHECKPOINT\nlocal retval --[[ integer ]] =\n\tCreateCheckpoint(\n\t\ttype --[[ integer ]], \n\t\tposX1 --[[ number ]], \n\t\tposY1 --[[ number ]], \n\t\tposZ1 --[[ number ]], \n\t\tposX2 --[[ number ]], \n\t\tposY2 --[[ number ]], \n\t\tposZ2 --[[ number ]], \n\t\tdiameter --[[ number ]], \n\t\tred --[[ integer ]], \n\t\tgreen --[[ integer ]], \n\t\tblue --[[ integer ]], \n\t\talpha --[[ integer ]], \n\t\treserved --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Creates a checkpoint. Returns the handle of the checkpoint.  \n20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.\nParameters:  \n* type - The type of checkpoint to create. See below for a list of checkpoint types.  \n* pos1 - The position of the checkpoint.  \n* pos2 - The position of the next checkpoint to point to.  \n* diameter - The diameter of the checkpoint.\n* color - The color of the checkpoint.  \n* reserved - Special parameter, see below for details. Usually set to 0 in the scripts.  \nCheckpoint types (prior to game build 2189):  \n0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  \n5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  \n10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  \n15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker        \n20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   \n25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker      \n30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   \n35-38-------Ring: Airplane Up, Left, Right, UpsideDown  \n39----------?  \n40----------Ring: just a ring  \n41----------?  \n42-44-------Cylinder w/ number (uses 'reserved' parameter)  \n45-47-------Cylinder no arrow or number  \nIf using type 42-44, reserved sets number / number and shape to display  \n0-99------------Just numbers (0-99)  \n100-109-----------------Arrow (0-9)  \n110-119------------Two arrows (0-9)  \n120-129----------Three arrows (0-9)  \n130-139----------------Circle (0-9)  \n140-149------------CycleArrow (0-9)  \n150-159----------------Circle (0-9)  \n160-169----Circle  w/ pointer (0-9)  \n170-179-------Perforated ring (0-9)  \n180-189----------------Sphere (0-9)  \n\n\nCheckpoint Types as of game build 2189"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "CreateTrackedPoint",
    "hash": "0xE2C9439ED45DEA60",
    "code": "-- CREATE_TRACKED_POINT\nlocal retval --[[ integer ]] =\n\tCreateTrackedPoint()",
    "parameters": [],
    "returns": [],
    "description": "Creates a tracked point: useful for checking the visibility of a 3D point on screen.\n\nTracked points must be manually managed and will not be destroyed on resource stop (they are not an instance of CScriptResource). See DESTROY_TRACKED_POINT and onResourceStop.\n\nOnly 64 points may be tracked at a given time."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DeleteCheckpoint",
    "hash": "0xF5ED37F54CD4D52E",
    "code": "-- DELETE_CHECKPOINT\nDeleteCheckpoint(\n\tcheckpoint --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DestroyTrackedPoint",
    "hash": "0xB25DC90BAD56CA42",
    "code": "-- DESTROY_TRACKED_POINT\nDestroyTrackedPoint(\n\tpoint --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DisableMoonCycleOverride",
    "hash": "0x2BF72AD5B41AA739",
    "code": "-- DISABLE_MOON_CYCLE_OVERRIDE\nDisableMoonCycleOverride()",
    "parameters": [],
    "returns": [],
    "description": "Removes any custom moon cycle overrides that have been configured with ENABLE_MOON_CYCLE_OVERRIDE"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DisableOcclusionThisFrame",
    "hash": "0x3669F1B198DCAA4F",
    "code": "-- DISABLE_OCCLUSION_THIS_FRAME\nDisableOcclusionThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DisableScreenblurFade",
    "hash": "0xDE81239437E8C5A8",
    "code": "-- DISABLE_SCREENBLUR_FADE\nDisableScreenblurFade()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DisableScriptAmbientEffects",
    "hash": "0xEFD97FF47B745B8D",
    "code": "-- _DISABLE_SCRIPT_AMBIENT_EFFECTS\nDisableScriptAmbientEffects(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DisableVehicleDistantlights",
    "hash": "0xC9F98AC1884E73A2",
    "code": "-- DISABLE_VEHICLE_DISTANTLIGHTS\nDisableVehicleDistantlights(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DoesLatestBriefStringExist",
    "hash": "0x5E657EF1099EDD65",
    "code": "-- DOES_LATEST_BRIEF_STRING_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesLatestBriefStringExist(\n\t\tbriefValue --[[ integer ]]\n\t)",
    "parameters": [
      "briefValue: \n\nA value indicating brief text."
    ],
    "returns": [],
    "description": "Parameters:\n\nbriefValue: \n\nA value indicating brief text.\n\nUsed in pi_menu.c. Checks if there is a brief entry for specified value. Values: 0 - Dialogue brief 1 - Help text brief 2 - Mission Objective brief"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DoesParticleFxLoopedExist",
    "hash": "0x74AFEF0D2E1E409B",
    "code": "-- DOES_PARTICLE_FX_LOOPED_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesParticleFxLoopedExist(\n\t\tptfxHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DoesVehicleHaveCrewEmblem",
    "hash": "0x060D935D3981A275",
    "code": "-- DOES_VEHICLE_HAVE_CREW_EMBLEM\nlocal retval --[[ boolean ]] =\n\tDoesVehicleHaveCrewEmblem(\n\t\tvehicle --[[ Vehicle ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DontRenderInGameUi",
    "hash": "0x22A249A53034450A",
    "code": "-- DONT_RENDER_IN_GAME_UI\nDontRenderInGameUi(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawBinkMovie",
    "hash": "0x7118E83EEB9F7238",
    "code": "-- _DRAW_BINK_MOVIE\nDrawBinkMovie(\n\tbinkMovie --[[ integer ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tscaleX --[[ number ]], \n\tscaleY --[[ number ]], \n\trotation --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [
      "binkMovie: \n\nThe movie to be drawn (from _SET_BINK_MOVIE).",
      "posX: \n\nThe centered x position of the movie (0.0 - 1.0).",
      "posY: \n\nThe centered y position of the movie (0.0 - 1.0).",
      "scaleX: \n\nThe x scale of the movie (0.0 - 1.0).",
      "scaleY: \n\nThe y scale of the movie (0.0 - 1.0).",
      "rotation: \n\nThe rotation of the movie (0.0 - 360.0).",
      "r: \n\nThe red value of the movie (0 - 255).",
      "g: \n\nThe green value of the movie (0 - 255).",
      "b: \n\nThe blue value of the movie (0 - 255).",
      "a: \n\nThe alpha value of the movie (0 - 255)."
    ],
    "returns": [],
    "description": "Parameters:\n\nbinkMovie: \n\nThe movie to be drawn (from _SET_BINK_MOVIE).\n\nposX: \n\nThe centered x position of the movie (0.0 - 1.0).\n\nposY: \n\nThe centered y position of the movie (0.0 - 1.0).\n\nscaleX: \n\nThe x scale of the movie (0.0 - 1.0).\n\nscaleY: \n\nThe y scale of the movie (0.0 - 1.0).\n\nrotation: \n\nThe rotation of the movie (0.0 - 360.0).\n\nr: \n\nThe red value of the movie (0 - 255).\n\ng: \n\nThe green value of the movie (0 - 255).\n\nb: \n\nThe blue value of the movie (0 - 255).\n\na: \n\nThe alpha value of the movie (0 - 255).\n\nMust be called each frame, will play at specified position on screen when called with _PLAY_BINK_MOVIE"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawBox",
    "hash": "0xD3A9971CADAC7252",
    "code": "-- DRAW_BOX\nDrawBox(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [
      "x1: \n\nThe x-coordinate of the first corner of the box.",
      "y1: \n\nThe y-coordinate of the first corner of the box.",
      "z1: \n\nThe z-coordinate of the first corner of the box.",
      "x2: \n\nThe x-coordinate of the opposite corner of the box.",
      "y2: \n\nThe y-coordinate of the opposite corner of the box.",
      "z2: \n\nThe z-coordinate of the opposite corner of the box.",
      "red: \n\nThe red color component of the box (0 - 255).",
      "green: \n\nThe green color component of the box (0 - 255).",
      "blue: \n\nThe blue color component of the box (0 - 255).",
      "alpha: \n\nThe alpha value of the box (0 - 255)."
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nThe x-coordinate of the first corner of the box.\n\ny1: \n\nThe y-coordinate of the first corner of the box.\n\nz1: \n\nThe z-coordinate of the first corner of the box.\n\nx2: \n\nThe x-coordinate of the opposite corner of the box.\n\ny2: \n\nThe y-coordinate of the opposite corner of the box.\n\nz2: \n\nThe z-coordinate of the opposite corner of the box.\n\nred: \n\nThe red color component of the box (0 - 255).\n\ngreen: \n\nThe green color component of the box (0 - 255).\n\nblue: \n\nThe blue color component of the box (0 - 255).\n\nalpha: \n\nThe alpha value of the box (0 - 255).\n\nThis native draws a box between two vectors in the game world. It is typically used for visualizing boundaries or areas of interest. The color of the box is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawDebugBox",
    "hash": "0x083A2CA4F2E573BD",
    "code": "-- DRAW_DEBUG_BOX\nDrawDebugBox(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawDebugCross",
    "hash": "0x73B1189623049839",
    "code": "-- DRAW_DEBUG_CROSS\nDrawDebugCross(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tsize --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawDebugLine",
    "hash": "0x7FDFADE676AA3CB0",
    "code": "-- DRAW_DEBUG_LINE\nDrawDebugLine(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawDebugLineWithTwoColours",
    "hash": "0xD8B9A8AC5608FF94",
    "code": "-- DRAW_DEBUG_LINE_WITH_TWO_COLOURS\nDrawDebugLineWithTwoColours(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tr1 --[[ integer ]], \n\tg1 --[[ integer ]], \n\tb1 --[[ integer ]], \n\tr2 --[[ integer ]], \n\tg2 --[[ integer ]], \n\tb2 --[[ integer ]], \n\talpha1 --[[ integer ]], \n\talpha2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawDebugSphere",
    "hash": "0xAAD68E1AB39DA632",
    "code": "-- DRAW_DEBUG_SPHERE\nDrawDebugSphere(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawDebugText",
    "hash": "0x3903E216620488E8",
    "code": "-- DRAW_DEBUG_TEXT\nDrawDebugText(\n\ttext --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawDebugText_2d",
    "hash": "0xA3BB2E9555C05A8F",
    "code": "-- DRAW_DEBUG_TEXT_2D\nDrawDebugText_2d(\n\ttext --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawInteractiveSprite",
    "hash": "0x2BC54A8188768488",
    "code": "-- _DRAW_INTERACTIVE_SPRITE\nDrawInteractiveSprite(\n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tscreenX --[[ number ]], \n\tscreenY --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\theading --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [
      "textureDict: \n\nName of texture dictionary to load texture from",
      "textureName: \n\nName of texture to load from texture dictionary",
      "screenX: \n\nScreen X",
      "screenY: \n\nScreen Y",
      "width: \n\nScale X",
      "height: \n\nScale Y",
      "heading: \n\nTexture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees",
      "red: \n\nColor",
      "green: \n\nColor",
      "blue: \n\nColor",
      "alpha: \n\nOpacity level"
    ],
    "returns": [],
    "description": "Parameters:\n\ntextureDict: \n\nName of texture dictionary to load texture from\n\ntextureName: \n\nName of texture to load from texture dictionary\n\nscreenX: \n\nScreen X\n\nscreenY: \n\nScreen Y\n\nwidth: \n\nScale X\n\nheight: \n\nScale Y\n\nheading: \n\nTexture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees\n\nred: \n\nColor\n\ngreen: \n\nColor\n\nblue: \n\nColor\n\nalpha: \n\nOpacity level\n\nSimilar to _DRAW_SPRITE, but seems to be some kind of \"interactive\" sprite, at least used by render targets. These seem to be the only dicts ever requested by this native:\n\nprop_screen_biker_laptop\nProp_Screen_GR_Disruption\nProp_Screen_TaleOfUs\nprop_screen_nightclub\nProp_Screen_IE_Adhawk\nprop_screen_sm_free_trade_shipping\nprop_screen_hacker_truck\nMPDesktop\nProp_Screen_Nightclub\nAnd a few others"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawLightWithRange",
    "hash": "0xF2A1B2771A01DBD4",
    "code": "-- DRAW_LIGHT_WITH_RANGE\nDrawLightWithRange(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tcolorR --[[ integer ]], \n\tcolorG --[[ integer ]], \n\tcolorB --[[ integer ]], \n\trange --[[ number ]], \n\tintensity --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawLightWithRangeAndShadow",
    "hash": "0xF49E9A9716A04595",
    "code": "-- _DRAW_LIGHT_WITH_RANGE_AND_SHADOW\nDrawLightWithRangeAndShadow(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\trange --[[ number ]], \n\tintensity --[[ number ]], \n\tshadow --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawLine",
    "hash": "0x6B7256074AE34680",
    "code": "-- DRAW_LINE\nDrawLine(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [
      "x1: \n\nThe x-coordinate of the starting point of the line.",
      "y1: \n\nThe y-coordinate of the starting point of the line.",
      "z1: \n\nThe z-coordinate of the starting point of the line.",
      "x2: \n\nThe x-coordinate of the ending point of the line.",
      "y2: \n\nThe y-coordinate of the ending point of the line.",
      "z2: \n\nThe z-coordinate of the ending point of the line.",
      "red: \n\nThe red color component of the line (0 - 255).",
      "green: \n\nThe green color component of the line (0 - 255).",
      "blue: \n\nThe blue color component of the line (0 - 255).",
      "alpha: \n\nThe alpha value of the line (0 - 255)."
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nThe x-coordinate of the starting point of the line.\n\ny1: \n\nThe y-coordinate of the starting point of the line.\n\nz1: \n\nThe z-coordinate of the starting point of the line.\n\nx2: \n\nThe x-coordinate of the ending point of the line.\n\ny2: \n\nThe y-coordinate of the ending point of the line.\n\nz2: \n\nThe z-coordinate of the ending point of the line.\n\nred: \n\nThe red color component of the line (0 - 255).\n\ngreen: \n\nThe green color component of the line (0 - 255).\n\nblue: \n\nThe blue color component of the line (0 - 255).\n\nalpha: \n\nThe alpha value of the line (0 - 255).\n\nThis native draws a line between two vectors in the game world. It is typically used for visualizing paths or connections between points. The color of the line is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawLowQualityPhotoToPhone",
    "hash": "0x1072F115DAB0717E",
    "code": "-- DRAW_LOW_QUALITY_PHOTO_TO_PHONE\nDrawLowQualityPhotoToPhone(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawMarker",
    "hash": "0x28477EC23D892089",
    "code": "-- DRAW_MARKER\nDrawMarker(\n\ttype --[[ integer ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tdirX --[[ number ]], \n\tdirY --[[ number ]], \n\tdirZ --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tscaleX --[[ number ]], \n\tscaleY --[[ number ]], \n\tscaleZ --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]], \n\tbobUpAndDown --[[ boolean ]], \n\tfaceCamera --[[ boolean ]], \n\trotationOrder --[[ integer ]], \n\trotate --[[ boolean ]], \n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tdrawOnEnts --[[ boolean ]]\n)",
    "parameters": [
      "type: \n\nThe marker type to draw.",
      "posX: \n\nThe X coordinate to draw the marker at.",
      "posY: \n\nThe Y coordinate to draw the marker at.",
      "posZ: \n\nThe Z coordinate to draw the marker at.",
      "dirX: \n\nThe X component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.",
      "dirY: \n\nThe Y component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.",
      "dirZ: \n\nThe Z component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.",
      "rotX: \n\nThe X rotation for the marker. Only used if the direction vector is 0.0.",
      "rotY: \n\nThe Y rotation for the marker. Only used if the direction vector is 0.0.",
      "rotZ: \n\nThe Z rotation for the marker. Only used if the direction vector is 0.0.",
      "scaleX: \n\nThe scale for the marker on the X axis.",
      "scaleY: \n\nThe scale for the marker on the Y axis.",
      "scaleZ: \n\nThe scale for the marker on the Z axis.",
      "red: \n\nThe red component of the marker color, on a scale from 0-255.",
      "green: \n\nThe green component of the marker color, on a scale from 0-255.",
      "blue: \n\nThe blue component of the marker color, on a scale from 0-255.",
      "alpha: \n\nThe alpha component of the marker color, on a scale from 0-255.",
      "bobUpAndDown: \n\nWhether or not the marker should slowly animate up/down.",
      "faceCamera: \n\nWhether the marker should be a 'billboard', as in, should constantly face the camera.",
      "rotationOrder: \n\nThe order yaw, pitch and roll is applied. Usually 2.",
      "rotate: \n\nRotations only apply to the heading.",
      "textureDict: \n\nA texture dictionary to draw the marker with, or NULL. Example: 'GolfPutting'",
      "textureName: \n\nA texture name in textureDict to draw the marker with, or NULL. Example: 'PuttingMarker'",
      "drawOnEnts: \n\nWhether or not the marker should draw on intersecting entities."
    ],
    "returns": [],
    "description": "Parameters:\n\ntype: \n\nThe marker type to draw.\n\nposX: \n\nThe X coordinate to draw the marker at.\n\nposY: \n\nThe Y coordinate to draw the marker at.\n\nposZ: \n\nThe Z coordinate to draw the marker at.\n\ndirX: \n\nThe X component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.\n\ndirY: \n\nThe Y component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.\n\ndirZ: \n\nThe Z component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.\n\nrotX: \n\nThe X rotation for the marker. Only used if the direction vector is 0.0.\n\nrotY: \n\nThe Y rotation for the marker. Only used if the direction vector is 0.0.\n\nrotZ: \n\nThe Z rotation for the marker. Only used if the direction vector is 0.0.\n\nscaleX: \n\nThe scale for the marker on the X axis.\n\nscaleY: \n\nThe scale for the marker on the Y axis.\n\nscaleZ: \n\nThe scale for the marker on the Z axis.\n\nred: \n\nThe red component of the marker color, on a scale from 0-255.\n\ngreen: \n\nThe green component of the marker color, on a scale from 0-255.\n\nblue: \n\nThe blue component of the marker color, on a scale from 0-255.\n\nalpha: \n\nThe alpha component of the marker color, on a scale from 0-255.\n\nbobUpAndDown: \n\nWhether or not the marker should slowly animate up/down.\n\nfaceCamera: \n\nWhether the marker should be a 'billboard', as in, should constantly face the camera.\n\nrotationOrder: \n\nThe order yaw, pitch and roll is applied. Usually 2.\n\nrotate: \n\nRotations only apply to the heading.\n\ntextureDict: \n\nA texture dictionary to draw the marker with, or NULL. Example: 'GolfPutting'\n\ntextureName: \n\nA texture name in textureDict to draw the marker with, or NULL. Example: 'PuttingMarker'\n\ndrawOnEnts: \n\nWhether or not the marker should draw on intersecting entities.\n\nDraws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a Wait(0) loop.\n\nThere's a list of markers on the FiveM documentation site."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawMarker_2",
    "hash": "0xE82728F0DE75D13A",
    "code": "-- _DRAW_MARKER_2\nDrawMarker_2(\n\ttype --[[ integer ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tdirX --[[ number ]], \n\tdirY --[[ number ]], \n\tdirZ --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tscaleX --[[ number ]], \n\tscaleY --[[ number ]], \n\tscaleZ --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]], \n\tbobUpAndDown --[[ boolean ]], \n\tfaceCamera --[[ boolean ]], \n\trotationOrder --[[ integer ]], \n\trotate --[[ boolean ]], \n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tdrawOnEnts --[[ boolean ]], \n\tp24 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 26: BOOL p25"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawPoly",
    "hash": "0xAC26716048436851",
    "code": "-- DRAW_POLY\nDrawPoly(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tx3 --[[ number ]], \n\ty3 --[[ number ]], \n\tz3 --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "x/y/z - Location of a vertex (in world coords), presumably.  \n----------------  \nx1, y1, z1     : Coordinates for the first point  \nx2, y2, z2     : Coordinates for the second point  \nx3, y3, z3     : Coordinates for the third point  \nr, g, b, alpha : Color with RGBA-Values  \nKeep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).  \nBut be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.  \nI recommend using a predefined function to call this.  \n[VB.NET]  \nPublic Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)  \n    [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)  \nEnd Sub  \n[C#]  \npublic void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)  \n{  \n    Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);  \n}  \nBTW: Intersecting triangles are not supported: They overlap in the order they were called."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawRect",
    "hash": "0x3A618A217E5154F0",
    "code": "-- DRAW_RECT\nDrawRect(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Draws a rectangle on the screen.  \n-x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)  \n-y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)  \n-width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)  \n-height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)  \n-R: Red part of the color. (0-255)  \n-G: Green part of the color. (0-255)  \n-B: Blue part of the color. (0-255)  \n-A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)  \nThe total number of rectangles to be drawn in one frame is apparently limited to 399.  \n\nNativeDB Added Parameter 9: BOOL p8"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawScaleformMovie",
    "hash": "0x54972ADAF0294A93",
    "code": "-- DRAW_SCALEFORM_MOVIE\nDrawScaleformMovie(\n\tscaleformHandle --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]], \n\tunk --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawScaleformMovie_3d",
    "hash": "0x87D51D72255D4E78",
    "code": "-- DRAW_SCALEFORM_MOVIE_3D\nDrawScaleformMovie_3d(\n\tscaleform --[[ integer ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tp7 --[[ number ]], \n\tsharpness --[[ number ]], \n\tp9 --[[ number ]], \n\tscaleX --[[ number ]], \n\tscaleY --[[ number ]], \n\tscaleZ --[[ number ]], \n\tp13 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawScaleformMovie_3dSolid",
    "hash": "0x1CE592FDC749D6F5",
    "code": "-- DRAW_SCALEFORM_MOVIE_3D_SOLID\nDrawScaleformMovie_3dSolid(\n\tscaleform --[[ integer ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tp7 --[[ number ]], \n\tp8 --[[ number ]], \n\tp9 --[[ number ]], \n\tscaleX --[[ number ]], \n\tscaleY --[[ number ]], \n\tscaleZ --[[ number ]], \n\tp13 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawScaleformMovieFullscreen",
    "hash": "0x0DF606929C105BE1",
    "code": "-- DRAW_SCALEFORM_MOVIE_FULLSCREEN\nDrawScaleformMovieFullscreen(\n\tscaleform --[[ integer ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]], \n\tunk --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "unk is not used so no need"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawScaleformMovieFullscreenMasked",
    "hash": "0xCF537FDE4FBD4CE5",
    "code": "-- DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED\nDrawScaleformMovieFullscreenMasked(\n\tscaleform1 --[[ integer ]], \n\tscaleform2 --[[ integer ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawShowroom",
    "hash": "0x98C4FE6EC34154CA",
    "code": "-- _DRAW_SHOWROOM\nlocal retval --[[ boolean ]] =\n\tDrawShowroom(\n\t\tp0 --[[ string ]], \n\t\tped --[[ Ped ]], \n\t\tp2 --[[ integer ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A  \np0 was always \"CELEBRATION_WINNER\""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawSphere",
    "hash": "0x799017F9E3B10112",
    "code": "-- _DRAW_SPHERE\nDrawSphere(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\topacity --[[ number ]]\n)",
    "parameters": [
      "x: \n\nX coordinate of the sphere",
      "y: \n\nY coordinate of the sphere",
      "z: \n\nZ coordinate of the sphere",
      "radius: \n\nSize of the sphere, 1.0 = 1 meter",
      "r: \n\nColor red 0-255",
      "g: \n\nColor green 0-255",
      "b: \n\nColor blue 0-255",
      "opacity: \n\nOpacity from 0.0-1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nX coordinate of the sphere\n\ny: \n\nY coordinate of the sphere\n\nz: \n\nZ coordinate of the sphere\n\nradius: \n\nSize of the sphere, 1.0 = 1 meter\n\nr: \n\nColor red 0-255\n\ng: \n\nColor green 0-255\n\nb: \n\nColor blue 0-255\n\nopacity: \n\nOpacity from 0.0-1.0\n\nDraws a 3D sphere, typically seen in the GTA:O freemode event \"Penned In\".\n\nExample image:\n\nDrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawSpotLight",
    "hash": "0xD0F64B265C8C8B33",
    "code": "-- DRAW_SPOT_LIGHT\nDrawSpotLight(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tdirX --[[ number ]], \n\tdirY --[[ number ]], \n\tdirZ --[[ number ]], \n\tcolorR --[[ integer ]], \n\tcolorG --[[ integer ]], \n\tcolorB --[[ integer ]], \n\tdistance --[[ number ]], \n\tbrightness --[[ number ]], \n\thardness --[[ number ]], \n\tradius --[[ number ]], \n\tfalloff --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Parameters:  \n* pos - coordinate where the spotlight is located  \n* dir - the direction vector the spotlight should aim at from its current position  \n* r,g,b - color of the spotlight  \n* distance - the maximum distance the light can reach  \n* brightness - the brightness of the light  \n* roundness - \"smoothness\" of the circle edge  \n* radius - the radius size of the spotlight  \n* falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)  \nExample in C# (spotlight aims at the closest vehicle):  \nVector3 myPos = Game.Player.Character.Position;  \nVehicle nearest = World.GetClosestVehicle(myPos , 1000f);  \nVector3 destinationCoords = nearest.Position;  \nVector3 dirVector = destinationCoords - myPos;  \ndirVector.Normalize();  \nFunction.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawSpotLightWithShadow",
    "hash": "0x5BCA583A583194DB",
    "code": "-- _DRAW_SPOT_LIGHT_WITH_SHADOW\nDrawSpotLightWithShadow(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tdirX --[[ number ]], \n\tdirY --[[ number ]], \n\tdirZ --[[ number ]], \n\tcolorR --[[ integer ]], \n\tcolorG --[[ integer ]], \n\tcolorB --[[ integer ]], \n\tdistance --[[ number ]], \n\tbrightness --[[ number ]], \n\troundness --[[ number ]], \n\tradius --[[ number ]], \n\tfalloff --[[ number ]], \n\tshadowId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawSprite",
    "hash": "0xE7FFAE5EBF23D890",
    "code": "-- DRAW_SPRITE\nDrawSprite(\n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tscreenX --[[ number ]], \n\tscreenY --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\theading --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Draws a 2D sprite on the screen.  \nParameters:  \ntextureDict - Name of texture dictionary to load texture from (e.g. \"CommonMenu\", \"MPWeaponsCommon\", etc.)  \ntextureName - Name of texture to load from texture dictionary (e.g. \"last_team_standing_icon\", \"tennis_icon\", etc.)  \nscreenX/Y - Screen offset (0.5 = center)  \nscaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)  \nheading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees  \nred,green,blue - Sprite color (default = 255/255/255)  \nalpha - opacity level  \n\nNativeDB Added Parameter 12: BOOL p11"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawSpritePoly_2",
    "hash": "0x736D7AA1B750856B",
    "code": "-- _DRAW_SPRITE_POLY_2\nDrawSpritePoly_2(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tx3 --[[ number ]], \n\ty3 --[[ number ]], \n\tz3 --[[ number ]], \n\tred1 --[[ number ]], \n\tgreen1 --[[ number ]], \n\tblue1 --[[ number ]], \n\talpha1 --[[ integer ]], \n\tred2 --[[ number ]], \n\tgreen2 --[[ number ]], \n\tblue2 --[[ number ]], \n\talpha2 --[[ integer ]], \n\tred3 --[[ number ]], \n\tgreen3 --[[ number ]], \n\tblue3 --[[ number ]], \n\talpha3 --[[ integer ]], \n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tu1 --[[ number ]], \n\tv1 --[[ number ]], \n\tw1 --[[ number ]], \n\tu2 --[[ number ]], \n\tv2 --[[ number ]], \n\tw2 --[[ number ]], \n\tu3 --[[ number ]], \n\tv3 --[[ number ]], \n\tw3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used for drawling Deadline trailing lights, see deadline.ytd\n\nEach vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.\n\nFor UVW mapping (u,v,w parameters), reference your favourite internet resource for more details."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawSpriteUv",
    "hash": "0x95812F9B26074726",
    "code": "-- _DRAW_SPRITE_UV\nDrawSpriteUv(\n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\tu1 --[[ number ]], \n\tv1 --[[ number ]], \n\tu2 --[[ number ]], \n\tv2 --[[ number ]], \n\theading --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite. u1, v1 - texture coordinates for the top-left corner u2, v2 - texture coordinates for the bottom-right corner\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawTexturedPoly",
    "hash": "0x29280002282F1928",
    "code": "-- DRAW_TEXTURED_POLY\nDrawTexturedPoly(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tx3 --[[ number ]], \n\ty3 --[[ number ]], \n\tz3 --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]], \n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tu1 --[[ number ]], \n\tv1 --[[ number ]], \n\tw1 --[[ number ]], \n\tu2 --[[ number ]], \n\tv2 --[[ number ]], \n\tw2 --[[ number ]], \n\tu3 --[[ number ]], \n\tv3 --[[ number ]], \n\tw3 --[[ number ]]\n)",
    "parameters": [
      "x1: \n\nThe x-coordinate of the first vector.",
      "y1: \n\nThe y-coordinate of the first vector.",
      "z1: \n\nThe z-coordinate of the first vector.",
      "x2: \n\nThe x-coordinate of the second vector.",
      "y2: \n\nThe y-coordinate of the second vector.",
      "z2: \n\nThe z-coordinate of the second vector.",
      "x3: \n\nThe x-coordinate of the third vector.",
      "y3: \n\nThe y-coordinate of the third vector.",
      "z3: \n\nThe z-coordinate of the third vector.",
      "red: \n\nThe red color component of the polygon (0 - 255).",
      "green: \n\nThe green color component of the polygon (0 - 255).",
      "blue: \n\nThe blue color component of the polygon (0 - 255).",
      "alpha: \n\nThe alpha value of the polygon (0 - 255).",
      "textureDict: \n\nThe name of the texture dictionary.",
      "textureName: \n\nThe name of the texture.",
      "u1: \n\nThe u-coordinate of the first UV mapping.",
      "v1: \n\nThe v-coordinate of the first UV mapping.",
      "w1: \n\nThe w-coordinate of the first UV mapping.",
      "u2: \n\nThe u-coordinate of the second UV mapping.",
      "v2: \n\nThe v-coordinate of the second UV mapping.",
      "w2: \n\nThe w-coordinate of the second UV mapping.",
      "u3: \n\nThe u-coordinate of the third UV mapping.",
      "v3: \n\nThe v-coordinate of the third UV mapping.",
      "w3: \n\nThe w-coordinate of the third UV mapping."
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nThe x-coordinate of the first vector.\n\ny1: \n\nThe y-coordinate of the first vector.\n\nz1: \n\nThe z-coordinate of the first vector.\n\nx2: \n\nThe x-coordinate of the second vector.\n\ny2: \n\nThe y-coordinate of the second vector.\n\nz2: \n\nThe z-coordinate of the second vector.\n\nx3: \n\nThe x-coordinate of the third vector.\n\ny3: \n\nThe y-coordinate of the third vector.\n\nz3: \n\nThe z-coordinate of the third vector.\n\nred: \n\nThe red color component of the polygon (0 - 255).\n\ngreen: \n\nThe green color component of the polygon (0 - 255).\n\nblue: \n\nThe blue color component of the polygon (0 - 255).\n\nalpha: \n\nThe alpha value of the polygon (0 - 255).\n\ntextureDict: \n\nThe name of the texture dictionary.\n\ntextureName: \n\nThe name of the texture.\n\nu1: \n\nThe u-coordinate of the first UV mapping.\n\nv1: \n\nThe v-coordinate of the first UV mapping.\n\nw1: \n\nThe w-coordinate of the first UV mapping.\n\nu2: \n\nThe u-coordinate of the second UV mapping.\n\nv2: \n\nThe v-coordinate of the second UV mapping.\n\nw2: \n\nThe w-coordinate of the second UV mapping.\n\nu3: \n\nThe u-coordinate of the third UV mapping.\n\nv3: \n\nThe v-coordinate of the third UV mapping.\n\nw3: \n\nThe w-coordinate of the third UV mapping.\n\nThis native draws a textured polygon between three vectors in the game world. It's commonly utilized for rendering deadline trailing lights, with additional details available in the deadline.ytd file. UVW mapping details (u,v,w parameters) can be found on various internet resources. This native is specifically used for drawing textured polygons on the screen, where UV coordinates define the texture mapping and color/alpha parameters define the appearance of the polygon. This native should be called every frame for continuous rendering.\n\nNativeDB Introduced: v877"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "DrawTvChannel",
    "hash": "0xFDDC2B4ED3C69DF0",
    "code": "-- DRAW_TV_CHANNEL\nDrawTvChannel(\n\txPos --[[ number ]], \n\tyPos --[[ number ]], \n\txScale --[[ number ]], \n\tyScale --[[ number ]], \n\trotation --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.\n\"act_cinema.ysc\", line 1483:\nHUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);\nHUD::SET_TEXT_RENDER_ID(l_AE);\nGRAPHICS::_0x61BB1D9B3A95D802(4);\nGRAPHICS::_0xC6372ECD45D73BCD(1);\nif (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {\n    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);\n} else {\n    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);\n}\n\"am_mp_property_int.ysc\", line 102545:\nif (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {\n    if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {\n        HUD::SET_TEXT_RENDER_ID(a_2._f1);\n        GRAPHICS::_0x61BB1D9B3A95D802(4);\n        GRAPHICS::_0xC6372ECD45D73BCD(1);\n        GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);\n        if (GRAPHICS::GET_TV_CHANNEL() == -1) {\n            sub_a8fa5(a_2, 1);\n        } else {\n            sub_a8fa5(a_2, 1);\n            GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);\n        }\n        HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());\n    }\n}"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EnableAlienBloodVfx",
    "hash": "0x9DCE1F0F78260875",
    "code": "-- ENABLE_ALIEN_BLOOD_VFX\nEnableAlienBloodVfx(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Creates a motion-blur sort of effect, this native does not seem to work, however by using the ANIMPOSTFX_PLAY native with \"DrugsMichaelAliensFight\" as the effect parameter, you should be able to get the effect.\n\nThis native does not seem to work, however by using the ANIMPOSTFX_PLAY native with \"DrugsMichaelAliensFight\" as the effect parameter, you should be able to get the effect."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EnableClownBloodVfx",
    "hash": "0xD821490579791273",
    "code": "-- ENABLE_CLOWN_BLOOD_VFX\nEnableClownBloodVfx(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nWhether to toggle the clown VFX on or off."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nWhether to toggle the clown VFX on or off.\n\nIf true, this native will create purple explosions upon projectile impact, add comic-like PTFX when firing a weapon, create a sound on bullet impact and have its own \"blood effect\".\n\nIf the PTFX asset \"scr_rcbarry2\" is not requested using (RequestNamedPtfxAsset) then this native will not work as intended.\n\nExcerpt from fm_content_drug_lab_work.c:\n\nSTREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_rcbarry2\");\nif (STREAMING::HAS_NAMED_PTFX_ASSET_LOADED(\"scr_rcbarry2\"))\n{\n  GRAPHICS::ENABLE_CLOWN_BLOOD_VFX(true);\n  AUDIO::START_AUDIO_SCENE(\"DLC_CM2022_DRUG_TRIP_SPRINKLERS_SCENE\");\n  func_720(26);\n}"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EnableMoonCycleOverride",
    "hash": "0x2C328AF17210F009",
    "code": "-- ENABLE_MOON_CYCLE_OVERRIDE\nEnableMoonCycleOverride(\n\tphase --[[ number ]]\n)",
    "parameters": [
      "phase: \n\nA value indicating the moon cycle."
    ],
    "returns": [],
    "description": "Parameters:\n\nphase: \n\nA value indicating the moon cycle.\n\nEnable a custom moon cycle, allowing control of which lunar phase the moon is in.\n\nValid values are from 0.0 to 1.0, with 0.5 representing a full moon.\n\nValue\tLunar Phase\n0.1\tWaxing Crescent\n0.2\tFirst Quarter\n0.3\tWaxing Gibbous\n0.5\tFull Moon\n0.7\tWaning Gibbous\n0.8\tThird Quarter\n0.9\tWaning Crescent\n\nThe moon phase can be disabled with DISABLE_MOON_CYCLE_OVERRIDE"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EnableMovieKeyframeWait",
    "hash": "0x74C180030FDE4B69",
    "code": "-- ENABLE_MOVIE_KEYFRAME_WAIT\nEnableMovieKeyframeWait(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EnableMovieSubtitles",
    "hash": "0x873FA65C778AD970",
    "code": "-- ENABLE_MOVIE_SUBTITLES\nEnableMovieSubtitles(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EndPetrolTrailDecals",
    "hash": "0x0A123435A26C36CD",
    "code": "-- END_PETROL_TRAIL_DECALS\nEndPetrolTrailDecals()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EndScaleformMovieMethod",
    "hash": "0xC6796A8FFA375E53",
    "code": "-- END_SCALEFORM_MOVIE_METHOD\nEndScaleformMovieMethod()",
    "parameters": [],
    "returns": [],
    "description": "Pops and calls the Scaleform function on the stack"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EndScaleformMovieMethodReturnValue",
    "hash": "0xC50AA39A577AF886",
    "code": "-- END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE\nlocal retval --[[ integer ]] =\n\tEndScaleformMovieMethodReturnValue()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EndTextCommandScaleformString",
    "hash": "0x362E2D3FE93A9959",
    "code": "-- END_TEXT_COMMAND_SCALEFORM_STRING\nEndTextCommandScaleformString()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "EndTextCommandUnparsedScaleformString",
    "hash": "0xAE4E8157D9ECF087",
    "code": "-- END_TEXT_COMMAND_UNPARSED_SCALEFORM_STRING\nEndTextCommandUnparsedScaleformString()",
    "parameters": [],
    "returns": [],
    "description": "Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens. Also useful for when you are trying to add blips and inputs in your scaleform (If the scaleform supports it)."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "FadeDecalsInRange",
    "hash": "0xD77EDADB0420E6E0",
    "code": "-- FADE_DECALS_IN_RANGE\nFadeDecalsInRange(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tduration --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "FadeUpPedLight",
    "hash": "0xC9B18B4619F48F7B",
    "code": "-- FADE_UP_PED_LIGHT\nFadeUpPedLight(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ForceRenderInGameUi",
    "hash": "0xDC459CFA0CCE245B",
    "code": "-- FORCE_RENDER_IN_GAME_UI\nForceRenderInGameUi(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "FreeMemoryForHighQualityPhoto",
    "hash": "0xD801CC02177FA3F1",
    "code": "-- FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO\nFreeMemoryForHighQualityPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "FreeMemoryForLowQualityPhoto",
    "hash": "0x6A12D88881435DCA",
    "code": "-- FREE_MEMORY_FOR_LOW_QUALITY_PHOTO\nFreeMemoryForLowQualityPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "FreeMemoryForMissionCreatorPhoto",
    "hash": "0x0A46AF8A78DC5E0A",
    "code": "-- FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO\nFreeMemoryForMissionCreatorPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetActualScreenResolution",
    "hash": "0x873C9F3104101DD3",
    "code": "-- GET_ACTUAL_SCREEN_RESOLUTION\nlocal x --[[ integer ]], y --[[ integer ]] =\n\tGetActualScreenResolution()",
    "parameters": [],
    "returns": [],
    "description": "Returns current screen resolution.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetAspectRatio",
    "hash": "0xF1307EF624A80D87",
    "code": "-- GET_ASPECT_RATIO\nlocal retval --[[ number ]] =\n\tGetAspectRatio(\n\t\tphysicalAspect --[[ boolean ]]\n\t)",
    "parameters": [
      "physicalAspect: \n\nA boolean value. Passing in true returns the physical aspect ratio of the game window. Passing in false returns the aspect ratio of the main game window."
    ],
    "returns": [
      "The aspect ratio of the game window as a floating-point number."
    ],
    "description": "Parameters:\n\nphysicalAspect: \n\nA boolean value. Passing in true returns the physical aspect ratio of the game window. Passing in false returns the aspect ratio of the main game window.\n\nReturns:\n\nThe aspect ratio of the game window as a floating-point number.\n\nThis native retrieves the aspect ratio of the game window. If physicalAspect is true, it returns the physical aspect ratio of the game window, which is useful for 3x1 modes. Otherwise, it returns the aspect ratio of the main game window, considering any custom overrides from the settings menu.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetBinkMovieTime",
    "hash": "0x8E17DDD6B9D5BF29",
    "code": "-- _GET_BINK_MOVIE_TIME\nlocal retval --[[ number ]] =\n\tGetBinkMovieTime(\n\t\tbinkMovie --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "In percentage: 0.0 - 100.0\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetCurrentNumberOfCloudPhotos",
    "hash": "0x473151EBC762C6DA",
    "code": "-- GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS\nlocal retval --[[ integer ]] =\n\tGetCurrentNumberOfCloudPhotos()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetDecalWashLevel",
    "hash": "0x323F647679A09103",
    "code": "-- GET_DECAL_WASH_LEVEL\nlocal retval --[[ number ]] =\n\tGetDecalWashLevel(\n\t\tdecal --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetExtraTimecycleModifierIndex",
    "hash": "0xBB0527EC6341496D",
    "code": "-- _GET_EXTRA_TIMECYCLE_MODIFIER_INDEX\nlocal retval --[[ integer ]] =\n\tGetExtraTimecycleModifierIndex()",
    "parameters": [],
    "returns": [
      "An integer representing the Timecycle modifier"
    ],
    "description": "Returns:\n\nAn integer representing the Timecycle modifier\n\nSee GET_TIMECYCLE_MODIFIER_INDEX for use, works the same just for the secondary timecycle modifier."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetIsHidef",
    "hash": "0x84ED31191CC5D2C9",
    "code": "-- GET_IS_HIDEF\nlocal retval --[[ boolean ]] =\n\tGetIsHidef()",
    "parameters": [],
    "returns": [
      "A boolean value indicating whether the game is running in high-definition (true) or not (false)."
    ],
    "description": "Returns:\n\nA boolean value indicating whether the game is running in high-definition (true) or not (false).\n\nThis native indicates whether the game is running in high-definition (HD) resolution. It returns false if the resolution is less than 1280x720 and true if it's equal to or greater than 1280x720.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetIsPetrolDecalInRange",
    "hash": "0x2F09F7976C512404",
    "code": "-- GET_IS_PETROL_DECAL_IN_RANGE\nlocal retval --[[ boolean ]] =\n\tGetIsPetrolDecalInRange(\n\t\txCoord --[[ number ]], \n\t\tyCoord --[[ number ]], \n\t\tzCoord --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetIsWidescreen",
    "hash": "0x30CF4BDA4FCB1905",
    "code": "-- GET_IS_WIDESCREEN\nlocal retval --[[ boolean ]] =\n\tGetIsWidescreen()",
    "parameters": [],
    "returns": [
      "A boolean value indicating whether the game is running in widescreen mode (true) or not (false).Returns false for narrow format aspect ratios (3:2, 4:3, 5:4, etc.) and true for wide format aspect ratios (5:3, 16:9, 16:10, etc.). If the aspect ratio is set to \"Auto\" in the game settings, it returns false or true based on the actual set resolution ratio."
    ],
    "description": "Returns:\n\nA boolean value indicating whether the game is running in widescreen mode (true) or not (false).Returns false for narrow format aspect ratios (3:2, 4:3, 5:4, etc.) and true for wide format aspect ratios (5:3, 16:9, 16:10, etc.). If the aspect ratio is set to \"Auto\" in the game settings, it returns false or true based on the actual set resolution ratio.\n\nThis native retrieves whether the game is running in widescreen mode or not.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetMaximumNumberOfCloudPhotos",
    "hash": "0xDC54A7AF8B3A14EF",
    "code": "-- GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS\nlocal retval --[[ integer ]] =\n\tGetMaximumNumberOfCloudPhotos()",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 96."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetMaximumNumberOfPhotos",
    "hash": "0x34D23450F028B0BF",
    "code": "-- GET_MAXIMUM_NUMBER_OF_PHOTOS\nlocal retval --[[ integer ]] =\n\tGetMaximumNumberOfPhotos()",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetRequestingnightvision",
    "hash": "0x35FB78DC42B7BD21",
    "code": "-- GET_REQUESTINGNIGHTVISION\nlocal retval --[[ boolean ]] =\n\tGetRequestingnightvision()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetSafeZoneSize",
    "hash": "0xBAF107B6BB2C97F0",
    "code": "-- GET_SAFE_ZONE_SIZE\nlocal retval --[[ number ]] =\n\tGetSafeZoneSize()",
    "parameters": [],
    "returns": [],
    "description": "Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetScaleformMovieMethodReturnValueBool",
    "hash": "0xD80A80346A45D761",
    "code": "-- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL\nlocal retval --[[ boolean ]] =\n\tGetScaleformMovieMethodReturnValueBool(\n\t\tmethodReturn --[[ integer ]]\n\t)",
    "parameters": [
      "methodReturn: \n\nOperation handle returned by END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE"
    ],
    "returns": [
      "The return value passed from actionscript to game code."
    ],
    "description": "Parameters:\n\nmethodReturn: \n\nOperation handle returned by END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE\n\nReturns:\n\nThe return value passed from actionscript to game code."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetScaleformMovieMethodReturnValueInt",
    "hash": "0x2DE7EFA66B906036",
    "code": "-- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT\nlocal retval --[[ integer ]] =\n\tGetScaleformMovieMethodReturnValueInt(\n\t\tmethod_return --[[ integer ]]\n\t)",
    "parameters": [
      "method_return: \n\nThe return value of this native: EndScaleformMovieMethodReturn"
    ],
    "returns": [
      "Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string."
    ],
    "description": "Parameters:\n\nmethod_return: \n\nThe return value of this native: EndScaleformMovieMethodReturn\n\nReturns:\n\nReturns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.\n\nUsed to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetScaleformMovieMethodReturnValueString",
    "hash": "0xE1E258829A885245",
    "code": "-- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING\nlocal retval --[[ string ]] =\n\tGetScaleformMovieMethodReturnValueString(\n\t\tmethod_return --[[ integer ]]\n\t)",
    "parameters": [
      "method_return: \n\nThe return value of this native: EndScaleformMovieMethodReturn"
    ],
    "returns": [
      "Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int."
    ],
    "description": "Parameters:\n\nmethod_return: \n\nThe return value of this native: EndScaleformMovieMethodReturn\n\nReturns:\n\nReturns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.\n\nUsed to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetScreenCoordFromWorldCoord",
    "hash": "0x34E82F05DF2974F5",
    "code": "-- GET_SCREEN_COORD_FROM_WORLD_COORD\nlocal retval --[[ boolean ]], screenX --[[ number ]], screenY --[[ number ]] =\n\tGetScreenCoordFromWorldCoord(\n\t\tworldX --[[ number ]], \n\t\tworldY --[[ number ]], \n\t\tworldZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)\nReturns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.\nFor .NET users...\nVB:\nPublic Shared Function World3DToScreen2d(pos as vector3) As Vector2\n        Dim x2dp, y2dp As New Native.OutputArgument\n        Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)\n        Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))\n\n    End Function\nC#:\nVector2 World3DToScreen2d(Vector3 pos)\n    {\n        var x2dp = new OutputArgument();\n        var y2dp = new OutputArgument();\n        Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);\n        return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());\n    }\n//USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.\nUsed to be called _WORLD3D_TO_SCREEN2D\nI thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetScreenResolution",
    "hash": "0x888D57E407E63624",
    "code": "-- GET_SCREEN_RESOLUTION\nlocal x --[[ integer ]], y --[[ integer ]] =\n\tGetScreenResolution()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to always return 1280x720. Use _GET_ACTIVE_SCREEN_RESOLUTION to retrieve the correct screen resolution."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetScreenblurFadeCurrentTime",
    "hash": "0x5CCABFFCA31DDE33",
    "code": "-- GET_SCREENBLUR_FADE_CURRENT_TIME\nlocal retval --[[ number ]] =\n\tGetScreenblurFadeCurrentTime()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetScriptGfxPosition",
    "hash": "0x6DD8F5AA635EB4B2",
    "code": "-- _GET_SCRIPT_GFX_POSITION\nlocal calculatedX --[[ number ]], calculatedY --[[ number ]] =\n\tGetScriptGfxPosition(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe input X coordinate.",
      "y: \n\nThe input Y coordinate.",
      "calculatedX: \n\nA pointer to the calculated X value.",
      "calculatedY: \n\nA pointer to the calculated Y value."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe input X coordinate.\n\ny: \n\nThe input Y coordinate.\n\ncalculatedX: \n\nA pointer to the calculated X value.\n\ncalculatedY: \n\nA pointer to the calculated Y value.\n\nCalculates the effective X/Y fractions when applying the values set by SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetStatusOfLoadMissionCreatorPhoto",
    "hash": "0x1670F8D05056F257",
    "code": "-- GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO\nlocal retval --[[ integer ]] =\n\tGetStatusOfLoadMissionCreatorPhoto(\n\t\tp0 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetStatusOfSaveHighQualityPhoto",
    "hash": "0x0C0C4E81E1AC60A0",
    "code": "-- GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO\nlocal retval --[[ integer ]] =\n\tGetStatusOfSaveHighQualityPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetStatusOfSortedListOperation",
    "hash": "0xF5BED327CEA362B1",
    "code": "-- GET_STATUS_OF_SORTED_LIST_OPERATION\nlocal retval --[[ integer ]] =\n\tGetStatusOfSortedListOperation(\n\t\tscanForSaving --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [
      "0 - Succeeded, 1 - In progress, 2 - Failed"
    ],
    "description": "Returns:\n\n0 - Succeeded, 1 - In progress, 2 - Failed\n\nReturns status of gallery photo fetch, which was requested by QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetStatusOfTakeHighQualityPhoto",
    "hash": "0x0D6CA79EEEBD8CA3",
    "code": "-- GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO\nlocal retval --[[ integer ]] =\n\tGetStatusOfTakeHighQualityPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetStatusOfTakeMissionCreatorPhoto",
    "hash": "0x90A78ECAA4E78453",
    "code": "-- GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO\nlocal retval --[[ integer ]] =\n\tGetStatusOfTakeMissionCreatorPhoto()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetTextureResolution",
    "hash": "0x35736EE65BD00C11",
    "code": "-- GET_TEXTURE_RESOLUTION\nlocal retval --[[ vector3 ]] =\n\tGetTextureResolution(\n\t\ttextureDict --[[ string ]], \n\t\ttextureName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the texture resolution of the passed texture dict+name.  \nNote: Most texture resolutions are doubled compared to the console version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetTimecycleModifierIndex",
    "hash": "0xFDF3D97C674AFB66",
    "code": "-- GET_TIMECYCLE_MODIFIER_INDEX\nlocal retval --[[ integer ]] =\n\tGetTimecycleModifierIndex()",
    "parameters": [],
    "returns": [],
    "description": "Only use for this in the PC scripts is:\nif (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)\nFor a full list, see here: pastebin.com/cnk7FTF2"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetTimecycleTransitionModifierIndex",
    "hash": "0x459FD2C8D0AB78BC",
    "code": "-- GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX\nlocal retval --[[ integer ]] =\n\tGetTimecycleTransitionModifierIndex()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetTogglePausedRenderphasesStatus",
    "hash": "0xEB3DAC2C86001E5E",
    "code": "-- GET_TOGGLE_PAUSED_RENDERPHASES_STATUS\nlocal retval --[[ boolean ]] =\n\tGetTogglePausedRenderphasesStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetTvChannel",
    "hash": "0xFC1E275A90D39995",
    "code": "-- GET_TV_CHANNEL\nlocal retval --[[ integer ]] =\n\tGetTvChannel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetTvVolume",
    "hash": "0x2170813D3DD8661B",
    "code": "-- GET_TV_VOLUME\nlocal retval --[[ number ]] =\n\tGetTvVolume()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetUsingnightvision",
    "hash": "0x2202A3F42C8E5F79",
    "code": "-- GET_USINGNIGHTVISION\nlocal retval --[[ boolean ]] =\n\tGetUsingnightvision()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetUsingseethrough",
    "hash": "0x44B80ABAB9D80BD3",
    "code": "-- GET_USINGSEETHROUGH\nlocal retval --[[ boolean ]] =\n\tGetUsingseethrough()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GetVehicleCrewEmblemRequestState",
    "hash": "0xFE26117A5841B2FF",
    "code": "-- GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE\nlocal retval --[[ integer ]] =\n\tGetVehicleCrewEmblemRequestState(\n\t\tvehicle --[[ Vehicle ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailGetMaxHeight",
    "hash": "0xA4819F5E23E2FFAD",
    "code": "-- GOLF_TRAIL_GET_MAX_HEIGHT\nlocal retval --[[ number ]] =\n\tGolfTrailGetMaxHeight()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailGetVisualControlPoint",
    "hash": "0xA4664972A9B8F8BA",
    "code": "-- GOLF_TRAIL_GET_VISUAL_CONTROL_POINT\nlocal retval --[[ vector3 ]] =\n\tGolfTrailGetVisualControlPoint(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetColour",
    "hash": "0x12995F2E53FFA601",
    "code": "-- GOLF_TRAIL_SET_COLOUR\nGolfTrailSetColour(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]], \n\tp4 --[[ integer ]], \n\tp5 --[[ integer ]], \n\tp6 --[[ integer ]], \n\tp7 --[[ integer ]], \n\tp8 --[[ integer ]], \n\tp9 --[[ integer ]], \n\tp10 --[[ integer ]], \n\tp11 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetEnabled",
    "hash": "0xA51C4B86B71652AE",
    "code": "-- GOLF_TRAIL_SET_ENABLED\nGolfTrailSetEnabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetFacing",
    "hash": "0x06F761EA47C1D3ED",
    "code": "-- GOLF_TRAIL_SET_FACING\nGolfTrailSetFacing(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetFixedControlPoint",
    "hash": "0xB1BB03742917A5D6",
    "code": "-- GOLF_TRAIL_SET_FIXED_CONTROL_POINT\nGolfTrailSetFixedControlPoint(\n\ttype --[[ integer ]], \n\txPos --[[ number ]], \n\tyPos --[[ number ]], \n\tzPos --[[ number ]], \n\tp4 --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "12 matches across 4 scripts. All 4 scripts were job creators.\ntype ranged from 0 - 2.\np4 was always 0.2f. Likely scale.\nassuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).\nTested but noticed nothing."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetPath",
    "hash": "0x312342E1A4874F3F",
    "code": "-- GOLF_TRAIL_SET_PATH\nGolfTrailSetPath(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]], \n\tp8 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p8 seems to always be false."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetRadius",
    "hash": "0x2485D34E50A22E84",
    "code": "-- GOLF_TRAIL_SET_RADIUS\nGolfTrailSetRadius(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetShaderParams",
    "hash": "0x9CFDD90B2B844BF7",
    "code": "-- GOLF_TRAIL_SET_SHADER_PARAMS\nGolfTrailSetShaderParams(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only appeared in Golf & Golf_mp. Parameters were all ptrs"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GolfTrailSetTessellation",
    "hash": "0xDBAA5EC848BA2D46",
    "code": "-- GOLF_TRAIL_SET_TESSELLATION\nGolfTrailSetTessellation(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GrassLodResetScriptAreas",
    "hash": "0x302C91AB2D477F7E",
    "code": "-- _GRASS_LOD_RESET_SCRIPT_AREAS\nGrassLodResetScriptAreas()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "GrassLodShrinkScriptAreas",
    "hash": "0x6D955F6A9E0295B1",
    "code": "-- _GRASS_LOD_SHRINK_SCRIPT_AREAS\nGrassLodShrinkScriptAreas(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "HasScaleformContainerMovieLoadedIntoParent",
    "hash": "0x8217150E1217EBFD",
    "code": "-- HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT\nlocal retval --[[ boolean ]] =\n\tHasScaleformContainerMovieLoadedIntoParent(\n\t\tscaleformHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "HasScaleformMovieFilenameLoaded",
    "hash": "0x0C1C5D756FB5F337",
    "code": "-- HAS_SCALEFORM_MOVIE_FILENAME_LOADED\nlocal retval --[[ boolean ]] =\n\tHasScaleformMovieFilenameLoaded(\n\t\tscaleformName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only values used in the scripts are:\n\"heist_mp\"\n\"heistmap_mp\"\n\"instructional_buttons\"\n\"heist_pre\""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "HasScaleformMovieLoaded",
    "hash": "0x85F01B8D5B90570E",
    "code": "-- HAS_SCALEFORM_MOVIE_LOADED\nlocal retval --[[ boolean ]] =\n\tHasScaleformMovieLoaded(\n\t\tscaleformHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "HasScaleformMovieNamedLoaded",
    "hash": "0x9743BCCF7CD6E1F6",
    "code": "-- _HAS_SCALEFORM_MOVIE_NAMED_LOADED\nlocal retval --[[ boolean ]], scaleformHandle --[[ integer ]] =\n\tHasScaleformMovieNamedLoaded(\n\t\tscaleformName --[[ string ]]\n\t)",
    "parameters": [
      "scaleformHandle: \n\nScaleform movie handle",
      "scaleformName: \n\nName of the Scaleform movie to check"
    ],
    "returns": [
      "Returns true if the named Scaleform movie is loaded, false otherwise."
    ],
    "description": "Parameters:\n\nscaleformHandle: \n\nScaleform movie handle\n\nscaleformName: \n\nName of the Scaleform movie to check\n\nReturns:\n\nReturns true if the named Scaleform movie is loaded, false otherwise.\n\nCheck if a Scaleform movie with the given name has been loaded.\n\nNativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "HasScaleformScriptHudMovieLoaded",
    "hash": "0xDF6E5987D2B4D140",
    "code": "-- HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED\nlocal retval --[[ boolean ]] =\n\tHasScaleformScriptHudMovieLoaded(\n\t\thudComponent --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "HasStreamedTextureDictLoaded",
    "hash": "0x0145F696AAAAD2E4",
    "code": "-- HAS_STREAMED_TEXTURE_DICT_LOADED\nlocal retval --[[ boolean ]] =\n\tHasStreamedTextureDictLoaded(\n\t\ttextureDict --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "IsDecalAlive",
    "hash": "0xC694D74949CAFD0C",
    "code": "-- IS_DECAL_ALIVE\nlocal retval --[[ boolean ]] =\n\tIsDecalAlive(\n\t\tdecal --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "IsPlaylistUnk",
    "hash": "0x1F710BFF7DAE6261",
    "code": "-- _IS_PLAYLIST_UNK\nlocal retval --[[ boolean ]] =\n\tIsPlaylistUnk(\n\t\ttvChannel --[[ integer ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "IsScaleformMovieDeleting",
    "hash": "0x86255B1FC929E33E",
    "code": "-- IS_SCALEFORM_MOVIE_DELETING\nlocal retval --[[ boolean ]] =\n\tIsScaleformMovieDeleting(\n\t\tscaleformIndex --[[ integer ]]\n\t)",
    "parameters": [
      "scaleformIndex: \n\nScaleform index returned by REQUEST_SCALEFORM_MOVIE (or similar natives)."
    ],
    "returns": [
      "Returns true if a scaleform movie is being deleted from streaming memory (After it has been marked as no longer needed with SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED."
    ],
    "description": "Parameters:\n\nscaleformIndex: \n\nScaleform index returned by REQUEST_SCALEFORM_MOVIE (or similar natives).\n\nReturns:\n\nReturns true if a scaleform movie is being deleted from streaming memory (After it has been marked as no longer needed with SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED.\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "IsScaleformMovieMethodReturnValueReady",
    "hash": "0x768FF8961BA904D6",
    "code": "-- IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY\nlocal retval --[[ boolean ]] =\n\tIsScaleformMovieMethodReturnValueReady(\n\t\tmethod_return --[[ integer ]]\n\t)",
    "parameters": [
      "method_return: \n\nThe return value of this native: EndScaleformMovieMethodReturn"
    ],
    "returns": [
      "Returns true if the return value of a scaleform function is ready to be collected"
    ],
    "description": "Parameters:\n\nmethod_return: \n\nThe return value of this native: EndScaleformMovieMethodReturn\n\nReturns:\n\nReturns true if the return value of a scaleform function is ready to be collected\n\nmethodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT)."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "IsScreenblurFadeRunning",
    "hash": "0x7B226C785A52A0A9",
    "code": "-- IS_SCREENBLUR_FADE_RUNNING\nlocal retval --[[ boolean ]] =\n\tIsScreenblurFadeRunning()",
    "parameters": [],
    "returns": [],
    "description": "Returns whether screen transition to blur/from blur is running."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "IsTrackedPointVisible",
    "hash": "0xC45CCDAAC9221CA8",
    "code": "-- IS_TRACKED_POINT_VISIBLE\nlocal retval --[[ boolean ]] =\n\tIsTrackedPointVisible(\n\t\tpoint --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "IsTvPlaylistItemPlaying",
    "hash": "0x0AD973CA1E077B60",
    "code": "-- _IS_TV_PLAYLIST_ITEM_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsTvPlaylistItemPlaying(\n\t\tvideoCliphash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "IS_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "LoadMissionCreatorPhoto",
    "hash": "0x4862437A486F91B0",
    "code": "-- LOAD_MISSION_CREATOR_PHOTO\nlocal retval --[[ boolean ]], p1 --[[ Any ]], p2 --[[ Any ]] =\n\tLoadMissionCreatorPhoto(\n\t\tp0 --[[ string ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "LoadMovieMeshSet",
    "hash": "0xB66064452270E8F1",
    "code": "-- LOAD_MOVIE_MESH_SET\nlocal retval --[[ integer ]] =\n\tLoadMovieMeshSet(\n\t\tmovieMeshSetName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "MoveVehicleDecals",
    "hash": "0x84C8D7C2D30D3280",
    "code": "-- MOVE_VEHICLE_DECALS\nMoveVehicleDecals(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "OverrideInteriorSmokeEnd",
    "hash": "0xEFB55E7C25D3B3BE",
    "code": "-- OVERRIDE_INTERIOR_SMOKE_END\nOverrideInteriorSmokeEnd()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "OverrideInteriorSmokeLevel",
    "hash": "0x1600FD8CF72EBC12",
    "code": "-- OVERRIDE_INTERIOR_SMOKE_LEVEL\nOverrideInteriorSmokeLevel(\n\tlevel --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "OverrideInteriorSmokeName",
    "hash": "0x2A2A52824DB96700",
    "code": "-- OVERRIDE_INTERIOR_SMOKE_NAME\nOverrideInteriorSmokeName(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "OverridePedBadgeTexture",
    "hash": "0x95EB5E34F821BABE",
    "code": "-- _OVERRIDE_PED_BADGE_TEXTURE\nlocal retval --[[ boolean ]] =\n\tOverridePedBadgeTexture(\n\t\tped --[[ Ped ]], \n\t\ttxd --[[ string ]], \n\t\ttxn --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "PassKeyboardInputToScaleform",
    "hash": "0xD1C7CB175E012964",
    "code": "-- PASS_KEYBOARD_INPUT_TO_SCALEFORM\nlocal retval --[[ boolean ]] =\n\tPassKeyboardInputToScaleform(\n\t\tscaleformHandle --[[ integer ]]\n\t)",
    "parameters": [
      "scaleformHandle: \n\nScaleform movie handle returned by REQUEST_SCALEFORM_MOVIE"
    ],
    "returns": [
      "Bool indicating if an input occurred this frame and was passed to the scaleform."
    ],
    "description": "Parameters:\n\nscaleformHandle: \n\nScaleform movie handle returned by REQUEST_SCALEFORM_MOVIE\n\nReturns:\n\nBool indicating if an input occurred this frame and was passed to the scaleform.\n\nPasses keyboard input to scaleform. You must call this native every frame. Once an input occurs, this native will return true and call SET_PC_KEY scaleform movie method with the key that has been inputted.\n\nThe key parameter which is passed to the scaleform can also be: \"BACKSPACE\", \"ENTER\" or \"\\x1b\" (Which is ESC). This native is only used in web_browser.c as of game build 2944."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "PatchDecalDiffuseMap",
    "hash": "0x8A35C742130C6080",
    "code": "-- PATCH_DECAL_DIFFUSE_MAP\nPatchDecalDiffuseMap(\n\tdecalType --[[ integer ]], \n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REQUEST_STREAMED_TEXTURE_DICT(\"MPOnMissMarkers\", false);  \n*uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);  \nPATCH_DECAL_DIFFUSE_MAP(9120, \"MPOnMissMarkers\", \"Capture_The_Flag_Base_Icon\");"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "PlayBinkMovie",
    "hash": "0x70D2CC8A542A973C",
    "code": "-- _PLAY_BINK_MOVIE\nPlayBinkMovie(\n\tbinkMovie --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "PopTimecycleModifier",
    "hash": "0x3C8938D7D872211E",
    "code": "-- POP_TIMECYCLE_MODIFIER\nPopTimecycleModifier()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "PresetInteriorAmbientCache",
    "hash": "0xD7021272EB0A451E",
    "code": "-- PRESET_INTERIOR_AMBIENT_CACHE\nPresetInteriorAmbientCache(\n\ttimecycleModifierName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only one match in the scripts:\nGRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE(\"int_carrier_hanger\");"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "PushTimecycleModifier",
    "hash": "0x58F735290861E6B4",
    "code": "-- PUSH_TIMECYCLE_MODIFIER\nPushTimecycleModifier()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "QueryMovieMeshSetState",
    "hash": "0x9B6E70C5CEEF4EEB",
    "code": "-- QUERY_MOVIE_MESH_SET_STATE\nlocal retval --[[ Any ]] =\n\tQueryMovieMeshSetState(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "QueueOperationToCreateSortedListOfPhotos",
    "hash": "0x2A893980E96B659A",
    "code": "-- QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS\nlocal retval --[[ boolean ]] =\n\tQueueOperationToCreateSortedListOfPhotos(\n\t\tscanForSaving --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the operation began."
    ],
    "description": "Returns:\n\nReturns true if the operation began.\n\nQueues a scan of all gallery photos. Also see GET_STATUS_OF_SORTED_LIST_OPERATION"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RegisterNoirScreenEffectThisFrame",
    "hash": "0xA44FF770DFBC5DAE",
    "code": "-- _REGISTER_NOIR_SCREEN_EFFECT_THIS_FRAME\nRegisterNoirScreenEffectThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Used with 'NG_filmnoir_BW{01,02}' timecycles and the \"NOIR_FILTER_SOUNDS\" audioref."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ReleaseBinkMovie",
    "hash": "0x04D950EEFA4EED8C",
    "code": "-- _RELEASE_BINK_MOVIE\nReleaseBinkMovie(\n\tbinkMovie --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ReleaseMovieMeshSet",
    "hash": "0xEB119AA014E89183",
    "code": "-- RELEASE_MOVIE_MESH_SET\nReleaseMovieMeshSet(\n\tmovieMeshSet --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveDecal",
    "hash": "0xED3F346429CCD659",
    "code": "-- REMOVE_DECAL\nRemoveDecal(\n\tdecal --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveDecalsFromObject",
    "hash": "0xCCF71CBDDF5B6CB9",
    "code": "-- REMOVE_DECALS_FROM_OBJECT\nRemoveDecalsFromObject(\n\tobj --[[ Object ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveDecalsFromObjectFacing",
    "hash": "0xA6F6F70FDC6D144C",
    "code": "-- REMOVE_DECALS_FROM_OBJECT_FACING\nRemoveDecalsFromObjectFacing(\n\tobj --[[ Object ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveDecalsFromVehicle",
    "hash": "0xE91F1B65F2B48D57",
    "code": "-- REMOVE_DECALS_FROM_VEHICLE\nRemoveDecalsFromVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveDecalsInRange",
    "hash": "0x5D6B2D4830A67C62",
    "code": "-- REMOVE_DECALS_IN_RANGE\nRemoveDecalsInRange(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\trange --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol..."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveParticleFx",
    "hash": "0xC401503DFE8D53CF",
    "code": "-- REMOVE_PARTICLE_FX\nRemoveParticleFx(\n\tptfxHandle --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveParticleFxFromEntity",
    "hash": "0xB8FEAEEBCC127425",
    "code": "-- REMOVE_PARTICLE_FX_FROM_ENTITY\nRemoveParticleFxFromEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveParticleFxInRange",
    "hash": "0xDD19FA1C6D657305",
    "code": "-- REMOVE_PARTICLE_FX_IN_RANGE\nRemoveParticleFxInRange(\n\tX --[[ number ]], \n\tY --[[ number ]], \n\tZ --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveScaleformScriptHudMovie",
    "hash": "0xF44A5456AC3F4F97",
    "code": "-- REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE\nRemoveScaleformScriptHudMovie(\n\thudComponent --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveTcmodifierOverride",
    "hash": "0x15E33297C3E8DC60",
    "code": "-- REMOVE_TCMODIFIER_OVERRIDE\nRemoveTcmodifierOverride(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RemoveVehicleCrewEmblem",
    "hash": "0xD2300034310557E4",
    "code": "-- REMOVE_VEHICLE_CREW_EMBLEM\nRemoveVehicleCrewEmblem(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RequestScaleformMovie",
    "hash": "0x11FE353CF9733E6F",
    "code": "-- REQUEST_SCALEFORM_MOVIE\nlocal retval --[[ integer ]] =\n\tRequestScaleformMovie(\n\t\tscaleformName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RequestScaleformMovieInstance",
    "hash": "0xC514489CFB8AF806",
    "code": "-- REQUEST_SCALEFORM_MOVIE_INSTANCE\nlocal retval --[[ integer ]] =\n\tRequestScaleformMovieInstance(\n\t\tscaleformName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same as REQUEST_SCALEFORM_MOVIE, except it seems to fix stretched scaleforms on ultrawide."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RequestScaleformMovieSkipRenderWhilePaused",
    "hash": "0xBD06C611BB9048C2",
    "code": "-- REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED\nlocal retval --[[ integer ]] =\n\tRequestScaleformMovieSkipRenderWhilePaused(\n\t\tscaleformName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Requests a scaleform movie that doesn't render when the game is paused (With SET_GAME_PAUSED)."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RequestScaleformMovieWithIgnoreSuperWidescreen",
    "hash": "0x65E7E78842E74CDB",
    "code": "-- REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN\nlocal retval --[[ integer ]] =\n\tRequestScaleformMovieWithIgnoreSuperWidescreen(\n\t\tscaleformName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Requests a scaleform movie, which has no widescreen adjustments while rendering (Useful for when your scaleform doesn't fully draw on the screen and borders are visible)."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RequestScaleformScriptHudMovie",
    "hash": "0x9304881D6F6537EA",
    "code": "-- REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE\nRequestScaleformScriptHudMovie(\n\thudComponent --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "RequestStreamedTextureDict",
    "hash": "0xDFA2EF8E04127DD5",
    "code": "-- REQUEST_STREAMED_TEXTURE_DICT\nRequestStreamedTextureDict(\n\ttextureDict --[[ string ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This function can requests texture dictonaries from following RPFs:\nscaleform_generic.rpf\nscaleform_minigames.rpf\nscaleform_minimap.rpf\nscaleform_web.rpf\nlast param isnt a toggle"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ResetAdaptation",
    "hash": "0xE3E2C1B4C59DBC77",
    "code": "-- RESET_ADAPTATION\nResetAdaptation(\n\tnumFrames --[[ integer ]]\n)",
    "parameters": [
      "numFrames: \n\nNumber of frames."
    ],
    "returns": [],
    "description": "Parameters:\n\nnumFrames: \n\nNumber of frames.\n\nResets AnimPostFX adaptation."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ResetParticleFxOverride",
    "hash": "0x89C8553DD3274AAE",
    "code": "-- RESET_PARTICLE_FX_OVERRIDE\nResetParticleFxOverride(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Resets the effect of SET_PARTICLE_FX_OVERRIDE"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ResetPausedRenderphases",
    "hash": "0xE1C8709406F2C41C",
    "code": "-- RESET_PAUSED_RENDERPHASES\nResetPausedRenderphases()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ResetScriptGfxAlign",
    "hash": "0xE3A3DB414A373DAB",
    "code": "-- RESET_SCRIPT_GFX_ALIGN\nResetScriptGfxAlign()",
    "parameters": [],
    "returns": [],
    "description": "This function resets the alignment set using SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS to the default values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect any other scripts attempting to draw."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ReturnTwo",
    "hash": "0x40AFB081F8ADD4EE",
    "code": "-- _RETURN_TWO\nlocal retval --[[ integer ]] =\n\tReturnTwo(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SaveHighQualityPhoto",
    "hash": "0x3DEC726C25A11BAC",
    "code": "-- SAVE_HIGH_QUALITY_PHOTO\nlocal retval --[[ boolean ]] =\n\tSaveHighQualityPhoto(\n\t\tunused --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ScaleformMovieMethodAddParamBool",
    "hash": "0xC58424BA936EB458",
    "code": "-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL\nScaleformMovieMethodAddParamBool(\n\tvalue --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Pushes a boolean for the Scaleform function onto the stack."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ScaleformMovieMethodAddParamFloat",
    "hash": "0xD69736AAE04DB51A",
    "code": "-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT\nScaleformMovieMethodAddParamFloat(\n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Pushes a float for the Scaleform function onto the stack."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ScaleformMovieMethodAddParamInt",
    "hash": "0xC3D0841A0CC546A6",
    "code": "-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT\nScaleformMovieMethodAddParamInt(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Pushes an integer for the Scaleform function onto the stack."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ScaleformMovieMethodAddParamLatestBriefString",
    "hash": "0xEC52C631A1831C03",
    "code": "-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING\nScaleformMovieMethodAddParamLatestBriefString(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Values: 0 - Dialogue Brief 1 - Help Text Brief 2 - Mission Objective Brief"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ScaleformMovieMethodAddParamLiteralString",
    "hash": "0x77FE3402004CD1B0",
    "code": "-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING\nScaleformMovieMethodAddParamLiteralString(\n\tstring --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds a literal string to a scaleform movie method. There doesn't seem to be any difference between this and other SCALEFORM_MOVIE_METHOD_ADD_PARAM_*_STRING natives in game code."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ScaleformMovieMethodAddParamPlayerNameString",
    "hash": "0xE83A3E3557A56640",
    "code": "-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING\nScaleformMovieMethodAddParamPlayerNameString(\n\tstring --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like \"INSTRUCTIONAL_BUTTONS\").  \nWhen switching with a controller, the icons update and become the controller's icons."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "ScaleformMovieMethodAddParamTextureNameString",
    "hash": "0xBA7148484BD90365",
    "code": "-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING\nScaleformMovieMethodAddParamTextureNameString(\n\tstring --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughGetMaxThickness",
    "hash": "0x43DBAE39626CE83F",
    "code": "-- _SEETHROUGH_GET_MAX_THICKNESS\nlocal retval --[[ number ]] =\n\tSeethroughGetMaxThickness()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughReset",
    "hash": "0x70A64C0234EF522C",
    "code": "-- SEETHROUGH_RESET\nSeethroughReset()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetColorNear",
    "hash": "0x1086127B3A63505E",
    "code": "-- SEETHROUGH_SET_COLOR_NEAR\nSeethroughSetColorNear(\n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetFadeEndDistance",
    "hash": "0x9D75795B9DC6EBBF",
    "code": "-- _SEETHROUGH_SET_FADE_END_DISTANCE\nSeethroughSetFadeEndDistance(\n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetFadeStartDistance",
    "hash": "0xA78DE25577300BA1",
    "code": "-- _SEETHROUGH_SET_FADE_START_DISTANCE\nSeethroughSetFadeStartDistance(\n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetHeatscale",
    "hash": "0xD7D0B00177485411",
    "code": "-- SEETHROUGH_SET_HEATSCALE\nSeethroughSetHeatscale(\n\tindex --[[ integer ]], \n\theatScale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetHiLightIntensity",
    "hash": "0x19E50EB6E33E1D28",
    "code": "-- _SEETHROUGH_SET_HI_LIGHT_INTENSITY\nSeethroughSetHiLightIntensity(\n\tintensity --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetHiLightNoise",
    "hash": "0x1636D7FC127B10D2",
    "code": "-- _SEETHROUGH_SET_HI_LIGHT_NOISE\nSeethroughSetHiLightNoise(\n\tnoise --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetMaxThickness",
    "hash": "0x0C8FAC83902A62DF",
    "code": "-- _SEETHROUGH_SET_MAX_THICKNESS\nSeethroughSetMaxThickness(\n\tthickness --[[ number ]]\n)",
    "parameters": [
      "thickness: \n\nmin: 1.0 max: 10000.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nthickness: \n\nmin: 1.0 max: 10000.0"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetNoiseAmountMax",
    "hash": "0xFEBFBFDFB66039DE",
    "code": "-- _SEETHROUGH_SET_NOISE_AMOUNT_MAX\nSeethroughSetNoiseAmountMax(\n\tamount --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SeethroughSetNoiseAmountMin",
    "hash": "0xFF5992E1C9E65D05",
    "code": "-- _SEETHROUGH_SET_NOISE_AMOUNT_MIN\nSeethroughSetNoiseAmountMin(\n\tamount --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetArtificialLightsState",
    "hash": "0x1268615ACE24D504",
    "code": "-- SET_ARTIFICIAL_LIGHTS_STATE\nSetArtificialLightsState(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nTrue turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on."
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nTrue turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.\n\nDoes not affect weapons, particles, fire/explosions, flashlights or the sun.\n\nWhen set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.\n\nUsed in Humane Labs Heist for EMP."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetArtificialLightsStateAffectsVehicles",
    "hash": "0xE2B187C0939B3D32",
    "code": "-- _SET_ARTIFICIAL_LIGHTS_STATE_AFFECTS_VEHICLES\nSetArtificialLightsStateAffectsVehicles(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If \"blackout\" is enabled, this native allows you to ignore \"blackout\" for vehicles.\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetBackfaceculling",
    "hash": "0x23BA6B0C2AD7B0D3",
    "code": "-- SET_BACKFACECULLING\nSetBackfaceculling(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetBinkMovie",
    "hash": "0x338D9F609FD632DB",
    "code": "-- _SET_BINK_MOVIE\nlocal retval --[[ integer ]] =\n\tSetBinkMovie(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [
      "name: \n\nThe BINK movie to play (with or without file extension)."
    ],
    "returns": [],
    "description": "Parameters:\n\nname: \n\nThe BINK movie to play (with or without file extension).\n\nCreates an integer (usually 1) for a BINK movie to be called with other natives. List of all BINK movies (alphabetically ordered) as of b2802"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetBinkMovieTime",
    "hash": "0x0CB6B3446855B57A",
    "code": "-- _SET_BINK_MOVIE_TIME\nSetBinkMovieTime(\n\tbinkMovie --[[ integer ]], \n\tprogress --[[ number ]]\n)",
    "parameters": [
      "binkMovie: \n\nThe movie that is being played.",
      "progress: \n\nAs a percentage (0.0 - 100.0)."
    ],
    "returns": [],
    "description": "Parameters:\n\nbinkMovie: \n\nThe movie that is being played.\n\nprogress: \n\nAs a percentage (0.0 - 100.0).\n\nSeeks a BINK movie to a specified position."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetBinkMovieUnk_2",
    "hash": "0xF816F2933752322D",
    "code": "-- _SET_BINK_MOVIE_UNK_2\nSetBinkMovieUnk_2(\n\tbinkMovie --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetBinkMovieVolume",
    "hash": "0xAFF33B1178172223",
    "code": "-- _SET_BINK_MOVIE_VOLUME\nSetBinkMovieVolume(\n\tbinkMovie --[[ integer ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetBinkShouldSkip",
    "hash": "0x6805D58CAA427B72",
    "code": "-- _SET_BINK_SHOULD_SKIP\nSetBinkShouldSkip(\n\tbinkMovie --[[ integer ]], \n\tshouldSkip --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetCheckpointCylinderHeight",
    "hash": "0x2707AAE9D9297D89",
    "code": "-- SET_CHECKPOINT_CYLINDER_HEIGHT\nSetCheckpointCylinderHeight(\n\tcheckpoint --[[ integer ]], \n\tnearHeight --[[ number ]], \n\tfarHeight --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the cylinder height of the checkpoint.  \nParameters:  \n* nearHeight - The height of the checkpoint when inside of the radius.  \n* farHeight - The height of the checkpoint when outside of the radius.  \n* radius - The radius of the checkpoint."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetCheckpointIconHeight",
    "hash": "0x4B5B4DA5D79F1943",
    "code": "-- _SET_CHECKPOINT_ICON_HEIGHT\nSetCheckpointIconHeight(\n\tcheckpoint --[[ integer ]], \n\theight_multiplier --[[ number ]]\n)",
    "parameters": [
      "checkpoint: \n\nThe checkpoint the multiplier should be applied to.",
      "height_multiplier: \n\nThe multiplier for the icon height above the checkpoint's coordinates. Default is 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\ncheckpoint: \n\nThe checkpoint the multiplier should be applied to.\n\nheight_multiplier: \n\nThe multiplier for the icon height above the checkpoint's coordinates. Default is 1.0\n\nThis multiplies the height of the icon inside a checkpoint with the default height of about 2 units above the checkpoint's coordinates."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetCheckpointIconScale",
    "hash": "0x44621483FF966526",
    "code": "-- _SET_CHECKPOINT_ICON_SCALE\nSetCheckpointIconScale(\n\tcheckpoint --[[ integer ]], \n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetCheckpointRgba",
    "hash": "0x7167371E8AD747F7",
    "code": "-- SET_CHECKPOINT_RGBA\nSetCheckpointRgba(\n\tcheckpoint --[[ integer ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the checkpoint color."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetCheckpointRgba2",
    "hash": "0xB9EA40907C680580",
    "code": "-- SET_CHECKPOINT_RGBA2\nSetCheckpointRgba2(\n\tcheckpoint --[[ integer ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the checkpoint icon color."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetCurrentPlayerTcmodifier",
    "hash": "0xBBF327DED94E4DEB",
    "code": "-- SET_CURRENT_PLAYER_TCMODIFIER\nSetCurrentPlayerTcmodifier(\n\tmodifierName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetDebugLinesAndSpheresDrawingActive",
    "hash": "0x175B6BFC15CDD0C5",
    "code": "-- SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE\nSetDebugLinesAndSpheresDrawingActive(\n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetDisableDecalRenderingThisFrame",
    "hash": "0x4B5CFC83122DF602",
    "code": "-- SET_DISABLE_DECAL_RENDERING_THIS_FRAME\nSetDisableDecalRenderingThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetDisablePetrolDecalsIgnitingThisFrame",
    "hash": "0xD9454B5752C857DC",
    "code": "-- SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME\nSetDisablePetrolDecalsIgnitingThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Prevents gas / petrol decals (aka gas / petrol trails and puddles) to be ignited on fire during the frame in which the native is called.\n\nNote: This native needs to be called every frame to prevent ignition."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetDrawOrigin",
    "hash": "0xAA0008F3BBB8F416",
    "code": "-- SET_DRAW_ORIGIN\nSetDrawOrigin(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the on-screen drawing origin for draw-functions in world coordinates.\n\nThe effect can be reset by calling CLEAR_DRAW_ORIGIN and is limited to 32 different origins each frame."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetEntityIconColor",
    "hash": "0x1D5F595CCAE2E238",
    "code": "-- SET_ENTITY_ICON_COLOR\nSetEntityIconColor(\n\tentity --[[ Entity ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetEntityIconVisibility",
    "hash": "0xE0E8BEECCA96BA31",
    "code": "-- SET_ENTITY_ICON_VISIBILITY\nSetEntityIconVisibility(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetExtraTimecycleModifier",
    "hash": "0x5096FD9CCB49056D",
    "code": "-- _SET_EXTRA_TIMECYCLE_MODIFIER\nSetExtraTimecycleModifier(\n\tmodifierName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetFlash",
    "hash": "0x0AB84296FED9CFC6",
    "code": "-- SET_FLASH\nSetFlash(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tfadeIn --[[ number ]], \n\tduration --[[ number ]], \n\tfadeOut --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Purpose of p0 and p1 unknown."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetForcePedFootstepsTracks",
    "hash": "0xAEEDAD1420C65CC0",
    "code": "-- _SET_FORCE_PED_FOOTSTEPS_TRACKS\nSetForcePedFootstepsTracks(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces footstep tracks on all surfaces.\nUSE_/USING_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetForceVehicleTrails",
    "hash": "0x4CC7F0FEA5283FE0",
    "code": "-- _SET_FORCE_VEHICLE_TRAILS\nSetForceVehicleTrails(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces vehicle trails on all surfaces.\nUSE_/USING_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetHidofOverride",
    "hash": "0xBA3D65906822BED5",
    "code": "-- SET_HIDOF_OVERRIDE\nSetHidofOverride(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]], \n\tnearplaneOut --[[ number ]], \n\tnearplaneIn --[[ number ]], \n\tfarplaneOut --[[ number ]], \n\tfarplaneIn --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetNextPlayerTcmodifier",
    "hash": "0xBF59707B3E5ED531",
    "code": "-- SET_NEXT_PLAYER_TCMODIFIER\nSetNextPlayerTcmodifier(\n\tmodifierName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetNightvision",
    "hash": "0x18F621F7A5B1F85D",
    "code": "-- SET_NIGHTVISION\nSetNightvision(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enables Night Vision.  \nExample:  \nC#: Function.Call(Hash.SET_NIGHTVISION, true);  \nC++: GRAPHICS::SET_NIGHTVISION(true);  \nBOOL toggle:  \ntrue = turns night vision on for your player.  \nfalse = turns night vision off for your player."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetNoiseoveride",
    "hash": "0xE787BF1C5CF823C9",
    "code": "-- SET_NOISEOVERIDE\nSetNoiseoveride(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetNoisinessoveride",
    "hash": "0xCB6A7C3BB17A0C67",
    "code": "-- SET_NOISINESSOVERIDE\nSetNoisinessoveride(\n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxBulletImpactScale",
    "hash": "0x27E32866E9A5C416",
    "code": "-- SET_PARTICLE_FX_BULLET_IMPACT_SCALE\nSetParticleFxBulletImpactScale(\n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxCamInsideNonplayerVehicle",
    "hash": "0xACEE6F360FC1F6B6",
    "code": "-- SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE\nSetParticleFxCamInsideNonplayerVehicle(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxCamInsideVehicle",
    "hash": "0xEEC4047028426510",
    "code": "-- SET_PARTICLE_FX_CAM_INSIDE_VEHICLE\nSetParticleFxCamInsideVehicle(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxLoopedAlpha",
    "hash": "0x726845132380142E",
    "code": "-- SET_PARTICLE_FX_LOOPED_ALPHA\nSetParticleFxLoopedAlpha(\n\tptfxHandle --[[ integer ]], \n\talpha --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxLoopedColour",
    "hash": "0x7F8F65877F88783B",
    "code": "-- SET_PARTICLE_FX_LOOPED_COLOUR\nSetParticleFxLoopedColour(\n\tptfxHandle --[[ integer ]], \n\tr --[[ number ]], \n\tg --[[ number ]], \n\tb --[[ number ]], \n\tbLocalOnly --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the colour tint of a previously started looped particle effect\n\nYou can use the inverse lerp method to normalize in a range from 0.0 to 1.0 an rgb"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxLoopedEvolution",
    "hash": "0x5F0C4B5B1C393BE2",
    "code": "-- SET_PARTICLE_FX_LOOPED_EVOLUTION\nSetParticleFxLoopedEvolution(\n\tptfxHandle --[[ integer ]], \n\tpropertyName --[[ string ]], \n\tamount --[[ number ]], \n\tnoNetwork --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxLoopedFarClipDist",
    "hash": "0xDCB194B85EF7B541",
    "code": "-- SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST\nSetParticleFxLoopedFarClipDist(\n\tptfxHandle --[[ integer ]], \n\trange --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxLoopedOffsets",
    "hash": "0xF7DDEBEC43483C43",
    "code": "-- SET_PARTICLE_FX_LOOPED_OFFSETS\nSetParticleFxLoopedOffsets(\n\tptfxHandle --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxLoopedScale",
    "hash": "0xB44250AAA456492D",
    "code": "-- SET_PARTICLE_FX_LOOPED_SCALE\nSetParticleFxLoopedScale(\n\tptfxHandle --[[ integer ]], \n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxNonLoopedAlpha",
    "hash": "0x77168D722C58B2FC",
    "code": "-- SET_PARTICLE_FX_NON_LOOPED_ALPHA\nSetParticleFxNonLoopedAlpha(\n\talpha --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Usage example for C#:  \nFunction.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });  \n\t\tNote: the argument alpha ranges from 0.0f-1.0f !"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxNonLoopedColour",
    "hash": "0x26143A59EF48B262",
    "code": "-- SET_PARTICLE_FX_NON_LOOPED_COLOUR\nSetParticleFxNonLoopedColour(\n\tr --[[ number ]], \n\tg --[[ number ]], \n\tb --[[ number ]]\n)",
    "parameters": [
      "r: \n\nRed (0.0 - 1.0)",
      "g: \n\nGreen (0.0 - 1.0)",
      "b: \n\nBlue (0.0 - 1.0)"
    ],
    "returns": [],
    "description": "Parameters:\n\nr: \n\nRed (0.0 - 1.0)\n\ng: \n\nGreen (0.0 - 1.0)\n\nb: \n\nBlue (0.0 - 1.0)\n\nOnly works on some fx's, while on others it might SEEM to work \"properly\", but the colors can be \"strange\" or even completly different from what you've expected. Reason for this is that those fx's might already have colors \"baked into them\" which then start to act as a \"mixing palette\", resulting in a different color than expected. A hypothetical example of this would be if the fx itself is already full (bright) red (RGB: 1.0, 0.0, 0.0) and you then set the color to (bright) green (RGB: 0.0, 1.0, 0.0), that it MIGHT result in Yellow (RGB: 1.0, 1.0, 0.0).\n\nThis doc previously stated that the set color is NOT networked, however it does actually turns out to be networked. Tested with all fireworks effects and several other FX effects resulted in colored fx effects on all clients when used in combination with START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD. This might however not be the case for all types of particle fx's, so it's recommended to test this thoroughly with multiple clients before releasing your script for example."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxNonLoopedEmitterScale",
    "hash": "0x1E2E01C00837D26E",
    "code": "-- _SET_PARTICLE_FX_NON_LOOPED_EMITTER_SCALE\nSetParticleFxNonLoopedEmitterScale(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxOverride",
    "hash": "0xEA1E2D93F6F75ED9",
    "code": "-- SET_PARTICLE_FX_OVERRIDE\nSetParticleFxOverride(\n\toldAsset --[[ string ]], \n\tnewAsset --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetParticleFxShootoutBoat",
    "hash": "0x96EF97DAEB89BEF5",
    "code": "-- SET_PARTICLE_FX_SHOOTOUT_BOAT\nSetParticleFxShootoutBoat(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetPlayerTcmodifierTransition",
    "hash": "0xBDEB86F4D5809204",
    "code": "-- SET_PLAYER_TCMODIFIER_TRANSITION\nSetPlayerTcmodifierTransition(\n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScaleformMovieAsNoLongerNeeded",
    "hash": "0x1D132D614DD86811",
    "code": "-- SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED\nlocal scaleformHandle --[[ integer ]] =\n\tSetScaleformMovieAsNoLongerNeeded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScaleformMovieToUseLargeRt",
    "hash": "0x32F34FF7F617643B",
    "code": "-- SET_SCALEFORM_MOVIE_TO_USE_LARGE_RT\nSetScaleformMovieToUseLargeRt(\n\tscaleformMovieId --[[ integer ]], \n\tuseLargeRT --[[ boolean ]]\n)",
    "parameters": [
      "scaleformMovieId: \n\nThe handle of the Scaleform to be used.",
      "useLargeRT: \n\nA boolean switch to enable/disable the use of the large rendertarget."
    ],
    "returns": [],
    "description": "Parameters:\n\nscaleformMovieId: \n\nThe handle of the Scaleform to be used.\n\nuseLargeRT: \n\nA boolean switch to enable/disable the use of the large rendertarget.\n\nNativeDB Introduced: v573\n\nConfigures a Scaleform movie to render to a large render target (1280x720), which is useful for ensuring higher quality and clarity in certain display scenarios. Such as displaying the name of an organization (CEO Office) in a visually impactful way for example."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScaleformMovieToUseSuperLargeRt",
    "hash": "0xE6A9F00D4240B519",
    "code": "-- SET_SCALEFORM_MOVIE_TO_USE_SUPER_LARGE_RT\nSetScaleformMovieToUseSuperLargeRt(\n\tscaleformHandle --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adjusts a scaleform movie's dimensions to fit a large rendertarget. Mostly used in casino scripts."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScaleformMovieToUseSystemTime",
    "hash": "0x6D8EB211944DCE08",
    "code": "-- SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME\nSetScaleformMovieToUseSystemTime(\n\tscaleform --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScriptGfxAlign",
    "hash": "0xB8A850F20A067EB6",
    "code": "-- SET_SCRIPT_GFX_ALIGN\nSetScriptGfxAlign(\n\thorizontalAlign --[[ integer ]], \n\tverticalAlign --[[ integer ]]\n)",
    "parameters": [
      "horizontalAlign: \n\nThe horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').",
      "verticalAlign: \n\nThe vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T')."
    ],
    "returns": [],
    "description": "Parameters:\n\nhorizontalAlign: \n\nThe horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').\n\nverticalAlign: \n\nThe vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').\n\nThis function anchors script draws to a side of the safe zone. This needs to be called to make the interface independent of the player's safe zone configuration.\n\nThese values are equivalent to alignX and alignY in common:/data/ui/frontend.xml, which can be used as a baseline for default alignment.\n\nValid values for horizontalAlign, from original documentation:\n\nC (67) - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with the right side of the screen.\nL (76) - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when centered.\nR (82) - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away from the right side of the screen, both move with the right side of the screen.\n\nValid values for verticalAlign, from original documentation:\n\nB (66) - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about rather centered.\nC (67) - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is different from 66.\nT (84) - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.\n\nUsing any other value (including 0) will result in the safe zone not being taken into account for this draw. The canonical value for this is 'I' (73).\n\nFor example, you can use SET_SCRIPT_GFX_ALIGN(0, 84) to only scale on the Y axis (to the top), but not change the X axis.\n\nTo reset the value, use RESET_SCRIPT_GFX_ALIGN."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScriptGfxAlignParams",
    "hash": "0xF5A2C681787E579D",
    "code": "-- SET_SCRIPT_GFX_ALIGN_PARAMS\nSetScriptGfxAlignParams(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tw --[[ number ]], \n\th --[[ number ]]\n)",
    "parameters": [
      "x: \n\nThe X offset for the item to be drawn.",
      "y: \n\nThe Y offset for the item to be drawn.",
      "w: \n\nThe width of the item to be drawn.",
      "h: \n\nThe height of the item to be drawn."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe X offset for the item to be drawn.\n\ny: \n\nThe Y offset for the item to be drawn.\n\nw: \n\nThe width of the item to be drawn.\n\nh: \n\nThe height of the item to be drawn.\n\nSets the draw offset/calculated size for SET_SCRIPT_GFX_ALIGN. If using any alignment other than left/top, the game expects the width/height to be configured using this native in order to get a proper starting position for the draw command."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScriptGfxDrawBehindPausemenu",
    "hash": "0xC6372ECD45D73BCD",
    "code": "-- SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU\nSetScriptGfxDrawBehindPausemenu(\n\tflag --[[ boolean ]]\n)",
    "parameters": [
      "flag: \n\nA boolean value."
    ],
    "returns": [],
    "description": "Parameters:\n\nflag: \n\nA boolean value.\n\nSets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetScriptGfxDrawOrder",
    "hash": "0x61BB1D9B3A95D802",
    "code": "-- SET_SCRIPT_GFX_DRAW_ORDER\nSetScriptGfxDrawOrder(\n\torder --[[ integer ]]\n)",
    "parameters": [
      "order: \n\nThe intended draw order/layer."
    ],
    "returns": [],
    "description": "Parameters:\n\norder: \n\nThe intended draw order/layer.\n\nSets the draw order for script draw commands. Examples from decompiled scripts: GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7); GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0); GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1); GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);\n\nenum eGfxDrawOrder\n{\n    GFX_ORDER_BEFORE_HUD_PRIORITY_LOW = 0,\n    GFX_ORDER_BEFORE_HUD = 1,\n    GFX_ORDER_BEFORE_HUD_PRIORITY_HIGH = 2,\n    GFX_ORDER_AFTER_HUD_PRIORITY_LOW = 3,\n    GFX_ORDER_AFTER_HUD = 4,\n    GFX_ORDER_AFTER_HUD_PRIORITY_HIGH = 5,\n    GFX_ORDER_AFTER_FADE_PRIORITY_LOW = 6,\n    GFX_ORDER_AFTER_FADE = 7,\n    GFX_ORDER_AFTER_FADE_PRIORITY_HIGH = 8,\n}"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetSeethrough",
    "hash": "0x7E08924259E08CE0",
    "code": "-- SET_SEETHROUGH\nSetSeethrough(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles Heatvision on/off."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetStreamedTextureDictAsNoLongerNeeded",
    "hash": "0xBE2CACCF5A8AA805",
    "code": "-- SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED\nSetStreamedTextureDictAsNoLongerNeeded(\n\ttextureDict --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTimecycleModifier",
    "hash": "0x2C933ABF17A1DF41",
    "code": "-- SET_TIMECYCLE_MODIFIER\nSetTimecycleModifier(\n\tmodifierName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. \"timecycle_mods_1.xml\")\nParameters:\nmodifierName - The modifier to load (e.g. \"V_FIB_IT3\", \"scanline_cam\", etc.)"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTimecycleModifierStrength",
    "hash": "0x82E7FFCD5B2326B3",
    "code": "-- SET_TIMECYCLE_MODIFIER_STRENGTH\nSetTimecycleModifierStrength(\n\tstrength --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTrackedPointInfo",
    "hash": "0x164ECBB3CF750CB0",
    "code": "-- SET_TRACKED_POINT_INFO\nSetTrackedPointInfo(\n\tpoint --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTransitionTimecycleModifier",
    "hash": "0x3BCF567485E1971C",
    "code": "-- SET_TRANSITION_TIMECYCLE_MODIFIER\nSetTransitionTimecycleModifier(\n\tmodifierName --[[ string ]], \n\ttransition --[[ number ]]\n)",
    "parameters": [
      "modifierName: \n\nThe name of a timecycle",
      "transition: \n\nThe speed to transition to modifierName. Appears to be half-seconds (?)"
    ],
    "returns": [],
    "description": "Parameters:\n\nmodifierName: \n\nThe name of a timecycle\n\ntransition: \n\nThe speed to transition to modifierName. Appears to be half-seconds (?)\n\nThis native doesn't work like SetWeatherTypeTransition."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTvAudioFrontend",
    "hash": "0x113D2C5DC57E1774",
    "code": "-- SET_TV_AUDIO_FRONTEND\nSetTvAudioFrontend(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Probably changes tvs from being a 3d audio to being \"global\" audio"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTvChannel",
    "hash": "0xBAABBB23EB6E484E",
    "code": "-- SET_TV_CHANNEL\nSetTvChannel(\n\tchannel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTvChannelPlaylist",
    "hash": "0xF7B38B8305F1FE8B",
    "code": "-- SET_TV_CHANNEL_PLAYLIST\nSetTvChannelPlaylist(\n\ttvChannel --[[ integer ]], \n\tplaylistName --[[ string ]], \n\trestart --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Loads specified video sequence into the TV Channel TV_Channel ranges from 0-2 VideoSequence can be any of the following: \"PL_STD_CNT\" CNT Standard Channel \"PL_STD_WZL\" Weazel Standard Channel \"PL_LO_CNT\" \"PL_LO_WZL\" \"PL_SP_WORKOUT\" \"PL_SP_INV\" - Jay Norris Assassination Mission Fail \"PL_SP_INV_EXP\" - Jay Norris Assassination Mission Success \"PL_LO_RS\" - Righteous Slaughter Ad \"PL_LO_RS_CUTSCENE\" - Righteous Slaughter Cut-scene \"PL_SP_PLSH1_INTRO\" \"PL_LES1_FAME_OR_SHAME\" \"PL_STD_WZL_FOS_EP2\" \"PL_MP_WEAZEL\" - Weazel Logo on loop \"PL_MP_CCTV\" - Generic CCTV loop Restart: 0=video sequence continues as normal 1=sequence restarts from beginning every time that channel is selected The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in tvplaylists.xml. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT). https://pastebin.com/zUzGB6h7"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTvChannelPlaylistAtHour",
    "hash": "0x2201C576FACAEBE8",
    "code": "-- SET_TV_CHANNEL_PLAYLIST_AT_HOUR\nSetTvChannelPlaylistAtHour(\n\ttvChannel --[[ integer ]], \n\tplaylistName --[[ string ]], \n\thour --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "SetTvVolume",
    "hash": "0x2982BF73F66E9DDC",
    "code": "-- SET_TV_VOLUME\nSetTvVolume(\n\tvolume --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartNetworkedParticleFxLoopedOnEntity",
    "hash": "0x6F60E89A7B64EE1D",
    "code": "-- START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY\nlocal retval --[[ integer ]] =\n\tStartNetworkedParticleFxLoopedOnEntity(\n\t\teffectName --[[ string ]], \n\t\tentity --[[ Entity ]], \n\t\txOffset --[[ number ]], \n\t\tyOffset --[[ number ]], \n\t\tzOffset --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "network fx  \nNativeDB Added Parameter 13: Any p12\nNativeDB Added Parameter 14: Any p13\nNativeDB Added Parameter 15: Any p14\nNativeDB Added Parameter 16: Any p15"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartNetworkedParticleFxLoopedOnEntityBone",
    "hash": "0xDDE23F30CC5A0F03",
    "code": "-- START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE\nlocal retval --[[ integer ]] =\n\tStartNetworkedParticleFxLoopedOnEntityBone(\n\t\teffectName --[[ string ]], \n\t\tentity --[[ Entity ]], \n\t\txOffset --[[ number ]], \n\t\tyOffset --[[ number ]], \n\t\tzOffset --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tboneIndex --[[ integer ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "network fx  \nNativeDB Added Parameter 14: Any p13\nNativeDB Added Parameter 15: Any p14\nNativeDB Added Parameter 16: Any p15\nNativeDB Added Parameter 17: Any p16"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartNetworkedParticleFxNonLoopedAtCoord",
    "hash": "0xF56B8137DF10135D",
    "code": "-- START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD\nlocal retval --[[ boolean ]] =\n\tStartNetworkedParticleFxNonLoopedAtCoord(\n\t\teffectName --[[ string ]], \n\t\txPos --[[ number ]], \n\t\tyPos --[[ number ]], \n\t\tzPos --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: the USE_PARTICLE_FX_ASSET needs to be called before EVERY StartNetworkedParticleFxNonLoopedAtCoord(....) call!\n\nList with lots of particle effects: https://vespura.com/fivem/particle-list/\n\nNote: Not all particles on this list are for non looped and vice versa, neither are all of them suited/meant to have SetParticleFxNonLoopedColour(....) called on them.\n\nNativeDB Added Parameter 12: BOOL p11"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartNetworkedParticleFxNonLoopedOnEntity",
    "hash": "0xC95EB1DB6E92113D",
    "code": "-- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY\nlocal retval --[[ boolean ]] =\n\tStartNetworkedParticleFxNonLoopedOnEntity(\n\t\teffectName --[[ string ]], \n\t\tentity --[[ Entity ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tscale --[[ number ]], \n\t\taxisX --[[ boolean ]], \n\t\taxisY --[[ boolean ]], \n\t\taxisZ --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartNetworkedParticleFxNonLoopedOnEntityBone",
    "hash": "0x02B1F2A72E0F5325",
    "code": "-- _START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE\nlocal retval --[[ boolean ]] =\n\tStartNetworkedParticleFxNonLoopedOnEntityBone(\n\t\teffectName --[[ string ]], \n\t\tentity --[[ Entity ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tboneIndex --[[ integer ]], \n\t\tscale --[[ number ]], \n\t\taxisX --[[ boolean ]], \n\t\taxisY --[[ boolean ]], \n\t\taxisZ --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartNetworkedParticleFxNonLoopedOnPedBone",
    "hash": "0xA41B6A43642AC2CF",
    "code": "-- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE\nlocal retval --[[ boolean ]] =\n\tStartNetworkedParticleFxNonLoopedOnPedBone(\n\t\teffectName --[[ string ]], \n\t\tped --[[ Ped ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tboneIndex --[[ integer ]], \n\t\tscale --[[ number ]], \n\t\taxisX --[[ boolean ]], \n\t\taxisY --[[ boolean ]], \n\t\taxisZ --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartParticleFxLoopedAtCoord",
    "hash": "0xE184F4F0DC5910E7",
    "code": "-- START_PARTICLE_FX_LOOPED_AT_COORD\nlocal retval --[[ integer ]] =\n\tStartParticleFxLoopedAtCoord(\n\t\teffectName --[[ string ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]], \n\t\tp11 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD(\"scr_fbi_falling_debris\", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)  \np11 seems to be always 0"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartParticleFxLoopedOnEntity",
    "hash": "0x1AE42C1660FD6517",
    "code": "-- START_PARTICLE_FX_LOOPED_ON_ENTITY\nlocal retval --[[ integer ]] =\n\tStartParticleFxLoopedOnEntity(\n\t\teffectName --[[ string ]], \n\t\tentity --[[ Entity ]], \n\t\txOffset --[[ number ]], \n\t\tyOffset --[[ number ]], \n\t\tzOffset --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartParticleFxLoopedOnEntityBone",
    "hash": "0xC6EB449E33977F0B",
    "code": "-- START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE\nlocal retval --[[ integer ]] =\n\tStartParticleFxLoopedOnEntityBone(\n\t\teffectName --[[ string ]], \n\t\tentity --[[ Entity ]], \n\t\txOffset --[[ number ]], \n\t\tyOffset --[[ number ]], \n\t\tzOffset --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tboneIndex --[[ integer ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartParticleFxLoopedOnPedBone",
    "hash": "0xF28DA9F38CD1787C",
    "code": "-- START_PARTICLE_FX_LOOPED_ON_PED_BONE\nlocal retval --[[ integer ]] =\n\tStartParticleFxLoopedOnPedBone(\n\t\teffectName --[[ string ]], \n\t\tped --[[ Ped ]], \n\t\txOffset --[[ number ]], \n\t\tyOffset --[[ number ]], \n\t\tzOffset --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tboneIndex --[[ integer ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartParticleFxNonLoopedAtCoord",
    "hash": "0x25129531F77B9ED3",
    "code": "-- START_PARTICLE_FX_NON_LOOPED_AT_COORD\nlocal retval --[[ integer ]] =\n\tStartParticleFxNonLoopedAtCoord(\n\t\teffectName --[[ string ]], \n\t\txPos --[[ number ]], \n\t\tyPos --[[ number ]], \n\t\tzPos --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tscale --[[ number ]], \n\t\txAxis --[[ boolean ]], \n\t\tyAxis --[[ boolean ]], \n\t\tzAxis --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD(\"scr_paleto_roof_impact\", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);  \nAxis - Invert Axis Flags  \nlist: pastebin.com/N9unUFWY  \n-------------------------------------------------------------------  \nC#  \nFunction.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.  \nchar *effectname = This is an in-game effect name, for e.g. \"scr_fbi4_trucks_crash\" is used to give the effects when truck crashes etc  \nfloat x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates  \nfloat xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.  \nfloat scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f  \nbool xaxis, yaxis, zaxis = To bool the axis values.  \nexample:  \nFunction.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, \"scr_fbi4_trucks_crash\", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartParticleFxNonLoopedOnEntity",
    "hash": "0x0D53A3B8DA0809D2",
    "code": "-- START_PARTICLE_FX_NON_LOOPED_ON_ENTITY\nlocal retval --[[ boolean ]] =\n\tStartParticleFxNonLoopedOnEntity(\n\t\teffectName --[[ string ]], \n\t\tentity --[[ Entity ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tscale --[[ number ]], \n\t\taxisX --[[ boolean ]], \n\t\taxisY --[[ boolean ]], \n\t\taxisZ --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Starts a particle effect on an entity for example your player.  \nList: pastebin.com/N9unUFWY  \nExample:  \nC#:  \nFunction.Call(Hash.REQUEST_NAMED_PTFX_ASSET, \"scr_rcbarry2\");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, \"scr_rcbarry2\");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, \"scr_clown_appears\", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);  \nInternally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE  \nhowever it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartParticleFxNonLoopedOnPedBone",
    "hash": "0x0E7E72961BA18619",
    "code": "-- START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE\nlocal retval --[[ boolean ]] =\n\tStartParticleFxNonLoopedOnPedBone(\n\t\teffectName --[[ string ]], \n\t\tped --[[ Ped ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tboneIndex --[[ integer ]], \n\t\tscale --[[ number ]], \n\t\taxisX --[[ boolean ]], \n\t\taxisY --[[ boolean ]], \n\t\taxisZ --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(\"scr_sh_bong_smoke\", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);  \nAxis - Invert Axis Flags  \nlist: pastebin.com/N9unUFWY"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StartPetrolTrailDecals",
    "hash": "0x99AC7F0D8B9C893D",
    "code": "-- START_PETROL_TRAIL_DECALS\nStartPetrolTrailDecals(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StopBinkMovie",
    "hash": "0x63606A61DE68898A",
    "code": "-- _STOP_BINK_MOVIE\nStopBinkMovie(\n\tbinkMovie --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "StopParticleFxLooped",
    "hash": "0x8F75998877616996",
    "code": "-- STOP_PARTICLE_FX_LOOPED\nStopParticleFxLooped(\n\tptfxHandle --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always 0 in the native scripts"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "TerraingridActivate",
    "hash": "0xA356990E161C9E65",
    "code": "-- TERRAINGRID_ACTIVATE\nTerraingridActivate(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nEnables or disables the golf putting grid display."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nEnables or disables the golf putting grid display.\n\nThis native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png). This requires these two natives to be called as well to configure the grid: TERRAINGRID_SET_PARAMS and TERRAINGRID_SET_COLOURS."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "TerraingridSetColours",
    "hash": "0x5CE62918F8D703C7",
    "code": "-- TERRAINGRID_SET_COLOURS\nTerraingridSetColours(\n\tlowR --[[ integer ]], \n\tlowG --[[ integer ]], \n\tlowB --[[ integer ]], \n\tlowAlpha --[[ integer ]], \n\tR --[[ integer ]], \n\tG --[[ integer ]], \n\tB --[[ integer ]], \n\tAlpha --[[ integer ]], \n\thighR --[[ integer ]], \n\thighG --[[ integer ]], \n\thighB --[[ integer ]], \n\thighAlpha --[[ integer ]]\n)",
    "parameters": [
      "lowR: \n\nred value for the lower level",
      "lowG: \n\ngreen value for the lower level",
      "lowB: \n\nblue value for the lower level",
      "lowAlpha: \n\nalpha value for the lower level",
      "R: \n\nred value for the normal level",
      "G: \n\ngreen value for the normal level",
      "B: \n\nblue value for the normal level",
      "Alpha: \n\nalpha value for the normal level",
      "highR: \n\nred value for the upper level",
      "highG: \n\ngreen value for the upper level",
      "highB: \n\nblue value for the upper level",
      "highAlpha: \n\nalpha value for the upper level"
    ],
    "returns": [],
    "description": "Parameters:\n\nlowR: \n\nred value for the lower level\n\nlowG: \n\ngreen value for the lower level\n\nlowB: \n\nblue value for the lower level\n\nlowAlpha: \n\nalpha value for the lower level\n\nR: \n\nred value for the normal level\n\nG: \n\ngreen value for the normal level\n\nB: \n\nblue value for the normal level\n\nAlpha: \n\nalpha value for the normal level\n\nhighR: \n\nred value for the upper level\n\nhighG: \n\ngreen value for the upper level\n\nhighB: \n\nblue value for the upper level\n\nhighAlpha: \n\nalpha value for the upper level\n\nThis native is used along with these two natives: TERRAINGRID_ACTIVATE and TERRAINGRID_SET_PARAMS. This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height. All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png\n\nOld description: Only called in golf and golf_mp\\ parameters used are\\ GRAPHICS::_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "TerraingridSetParams",
    "hash": "0x1C4FC5752BCD8E48",
    "code": "-- TERRAINGRID_SET_PARAMS\nTerraingridSetParams(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp3 --[[ number ]], \n\trotation --[[ number ]], \n\tp5 --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\tp8 --[[ number ]], \n\tscale --[[ number ]], \n\tglowIntensity --[[ number ]], \n\tnormalHeight --[[ number ]], \n\theightDiff --[[ number ]]\n)",
    "parameters": [
      "x: \n\nGrid center x coord.",
      "y: \n\nGrid center y coord.",
      "z: \n\nGrid center z coord.",
      "p3: \n\nNot sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.",
      "rotation: \n\nGrid rotation (keep between 0.0 and 1.0).",
      "p5: \n\nOffset top/bottom (? not sure about this one, seems weird).",
      "width: \n\nGrid width (usually 15.0).",
      "height: \n\nGrid height (usually 15.0).",
      "p8: \n\nNot sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.",
      "scale: \n\nZoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).",
      "glowIntensity: \n\nglow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).",
      "normalHeight: \n\nThe z coord for 'normal' height (white grid lines level).",
      "heightDiff: \n\nThis is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red)."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nGrid center x coord.\n\ny: \n\nGrid center y coord.\n\nz: \n\nGrid center z coord.\n\np3: \n\nNot sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.\n\nrotation: \n\nGrid rotation (keep between 0.0 and 1.0).\n\np5: \n\nOffset top/bottom (? not sure about this one, seems weird).\n\nwidth: \n\nGrid width (usually 15.0).\n\nheight: \n\nGrid height (usually 15.0).\n\np8: \n\nNot sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.\n\nscale: \n\nZoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).\n\nglowIntensity: \n\nglow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).\n\nnormalHeight: \n\nThe z coord for 'normal' height (white grid lines level).\n\nheightDiff: \n\nThis is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red).\n\nThis native is used along with these two natives: TERRAINGRID_ACTIVATE and TERRAINGRID_SET_COLOURS.\n\nThis native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.\n\nAll those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "TogglePausedRenderphases",
    "hash": "0xDFC252D8A3E15AB7",
    "code": "-- TOGGLE_PAUSED_RENDERPHASES\nTogglePausedRenderphases(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nSetting it to false will exclude render updates as mentioned in the description, until it's set back to true."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nSetting it to false will exclude render updates as mentioned in the description, until it's set back to true.\n\nSwitches the rendering display to exclude everything except PostFX, resulting in a frozen screen before the UI pass."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "TriggerScreenblurFadeIn",
    "hash": "0xA328A24AAA6B7FDC",
    "code": "-- TRIGGER_SCREENBLUR_FADE_IN\nlocal retval --[[ boolean ]] =\n\tTriggerScreenblurFadeIn(\n\t\ttransitionTime --[[ number ]]\n\t)",
    "parameters": [
      "transitionTime: \n\nTime in milliseconds to transition into a fully blurred screen"
    ],
    "returns": [],
    "description": "Parameters:\n\ntransitionTime: \n\nTime in milliseconds to transition into a fully blurred screen"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "TriggerScreenblurFadeOut",
    "hash": "0xEFACC8AEF94430D5",
    "code": "-- TRIGGER_SCREENBLUR_FADE_OUT\nlocal retval --[[ boolean ]] =\n\tTriggerScreenblurFadeOut(\n\t\ttransitionTime --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "Ui3dsceneIsAvailable",
    "hash": "0xD3A10FC7FD8D98CD",
    "code": "-- UI3DSCENE_IS_AVAILABLE\nlocal retval --[[ boolean ]] =\n\tUi3dsceneIsAvailable()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "Ui3dscenePushPreset",
    "hash": "0xF1CEA8A4198D8E9A",
    "code": "-- UI3DSCENE_PUSH_PRESET\nlocal retval --[[ boolean ]] =\n\tUi3dscenePushPreset(\n\t\tpresetName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "All presets can be found in common\\data\\ui\\uiscenes.meta"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "UnpatchDecalDiffuseMap",
    "hash": "0xB7ED70C49521A61D",
    "code": "-- UNPATCH_DECAL_DIFFUSE_MAP\nUnpatchDecalDiffuseMap(\n\tdecalType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);  \nGRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(\"MPMissMarkers256\");"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "UpdateLightsOnEntity",
    "hash": "0xDEADC0DEDEADC0DE",
    "code": "-- UPDATE_LIGHTS_ON_ENTITY\nUpdateLightsOnEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "UseParticleFxAsset",
    "hash": "0x6C38AF3693A69A91",
    "code": "-- USE_PARTICLE_FX_ASSET\nUseParticleFxAsset(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the b678d decompiled scripts:\n GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(\"FM_Mission_Controler\");\n GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(\"scr_apartment_mp\");\n GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(\"scr_indep_fireworks\");\n GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(\"scr_mp_cig_plane\");\n GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(\"scr_mp_creator\");\n GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(\"scr_ornate_heist\");\n GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(\"scr_prison_break_heist_station\");"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "WashDecalsFromVehicle",
    "hash": "0x5B712761429DBC14",
    "code": "-- WASH_DECALS_FROM_VEHICLE\nWashDecalsFromVehicle(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "WashDecalsInRange",
    "hash": "0x9C30613D50A6ADEF",
    "code": "-- WASH_DECALS_IN_RANGE\nWashDecalsInRange(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x0218ba067d249dea",
    "hash": "0x0218BA067D249DEA",
    "code": "-- 0x0218BA067D249DEA\nN_0x0218ba067d249dea()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x02369d5c8a51fdcf",
    "hash": "0x02369D5C8A51FDCF",
    "code": "-- 0x02369D5C8A51FDCF\nN_0x02369d5c8a51fdcf(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "DISABLE_S*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x03300b57fcac6ddb",
    "hash": "0x03300B57FCAC6DDB",
    "code": "-- 0x03300B57FCAC6DDB\nN_0x03300b57fcac6ddb(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x0ae73d8df3a762b2",
    "hash": "0x0AE73D8DF3A762B2",
    "code": "-- 0x0AE73D8DF3A762B2\nN_0x0ae73d8df3a762b2(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x0e4299c549f0d1f1",
    "hash": "0x0E4299C549F0D1F1",
    "code": "-- 0x0E4299C549F0D1F1\nN_0x0e4299c549f0d1f1(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x108be26959a9d9bb",
    "hash": "0x108BE26959A9D9BB",
    "code": "-- 0x108BE26959A9D9BB\nN_0x108be26959a9d9bb(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "UI3DSCENE_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x14fc5833464340a8",
    "hash": "0x14FC5833464340A8",
    "code": "-- 0x14FC5833464340A8\nN_0x14fc5833464340a8()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x1612c45f9e3e0d44",
    "hash": "0x1612C45F9E3E0D44",
    "code": "-- 0x1612C45F9E3E0D44\nN_0x1612c45f9e3e0d44()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x1bbc135a4d25edde",
    "hash": "0x1BBC135A4D25EDDE",
    "code": "-- 0x1BBC135A4D25EDDE\nN_0x1bbc135a4d25edde(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x1cba05ae7bd7ee05",
    "hash": "0x1CBA05AE7BD7EE05",
    "code": "-- 0x1CBA05AE7BD7EE05\nN_0x1cba05ae7bd7ee05(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_TRA*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x259ba6d4e6f808f1",
    "hash": "0x259BA6D4E6F808F1",
    "code": "-- 0x259BA6D4E6F808F1\nN_0x259ba6d4e6f808f1(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x25fc3e33a31ad0c9",
    "hash": "0x25FC3E33A31AD0C9",
    "code": "-- 0x25FC3E33A31AD0C9\nN_0x25fc3e33a31ad0c9(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x27cfb1b1e078cb2d",
    "hash": "0x27CFB1B1E078CB2D",
    "code": "-- 0x27CFB1B1E078CB2D\nN_0x27cfb1b1e078cb2d()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x27feb5254759cde3",
    "hash": "0x27FEB5254759CDE3",
    "code": "-- 0x27FEB5254759CDE3\nlocal retval --[[ boolean ]] =\n\tN_0x27feb5254759cde3(\n\t\ttextureDict --[[ string ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x2a251aa48b2b46db",
    "hash": "0x2A251AA48B2B46DB",
    "code": "-- 0x2A251AA48B2B46DB\nN_0x2a251aa48b2b46db()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x2b40a97646381508",
    "hash": "0x2B40A97646381508",
    "code": "-- 0x2B40A97646381508\nN_0x2b40a97646381508(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x2c42340f916c5930",
    "hash": "0x2C42340F916C5930",
    "code": "-- 0x2C42340F916C5930\nlocal retval --[[ Any ]] =\n\tN_0x2c42340f916c5930(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x2d3b147afad49de0",
    "hash": "0x2D3B147AFAD49DE0",
    "code": "-- 0x2D3B147AFAD49DE0\nN_0x2d3b147afad49de0(\n\ttextureDict --[[ string ]], \n\ttextureName --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\twidth --[[ number ]], \n\theight --[[ number ]], \n\tp6 --[[ number ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]], \n\tp11 --[[ integer ]]\n)",
    "parameters": [
      "textureDict: \n\ninside script_txds.rpf, browse it with OpenIV",
      "textureName: \n\ntextureName",
      "x: \n\nx position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)",
      "y: \n\ny position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)",
      "width: \n\nwidth 0.0 - 1.0 is the reasonable amount generally",
      "height: \n\nheight 0.0 - 1.0 is the reasonable amount generally",
      "p6: \n\nalmost always 0.0",
      "red: \n\nred color",
      "green: \n\ngreen color",
      "blue: \n\nblue color",
      "alpha: \n\nalpha",
      "p11:"
    ],
    "returns": [],
    "description": "Parameters:\n\ntextureDict: \n\ninside script_txds.rpf, browse it with OpenIV\n\ntextureName: \n\ntextureName\n\nx: \n\nx position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)\n\ny: \n\ny position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)\n\nwidth: \n\nwidth 0.0 - 1.0 is the reasonable amount generally\n\nheight: \n\nheight 0.0 - 1.0 is the reasonable amount generally\n\np6: \n\nalmost always 0.0\n\nred: \n\nred color\n\ngreen: \n\ngreen color\n\nblue: \n\nblue color\n\nalpha: \n\nalpha\n\np11:\nUsed in arcade games and Beam hack minigame in Doomsday Heist. For example, [Penetrator Arcade Game](https://streamable.com/8igrzw)\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x2fcb133ca50a49eb",
    "hash": "0x2FCB133CA50A49EB",
    "code": "-- 0x2FCB133CA50A49EB\nlocal retval --[[ Any ]] =\n\tN_0x2fcb133ca50a49eb(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x30432a0118736e00",
    "hash": "0x30432A0118736E00",
    "code": "-- 0x30432A0118736E00\nlocal retval --[[ Hash ]] =\n\tN_0x30432a0118736e00()",
    "parameters": [],
    "returns": [],
    "description": "GET_CURRENT_*\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x346ef3ecaaab149e",
    "hash": "0x346EF3ECAAAB149E",
    "code": "-- 0x346EF3ECAAAB149E\nN_0x346ef3ecaaab149e()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x36f6626459d91457",
    "hash": "0x36F6626459D91457",
    "code": "-- 0x36F6626459D91457\nN_0x36f6626459d91457(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x393bd2275ceb7793",
    "hash": "0x393BD2275CEB7793",
    "code": "-- 0x393BD2275CEB7793\nlocal retval --[[ Any ]] =\n\tN_0x393bd2275ceb7793()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x3c788e7f6438754d",
    "hash": "0x3C788E7F6438754D",
    "code": "-- 0x3C788E7F6438754D\nN_0x3c788e7f6438754d(\n\tcheckpointHandle --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [
      "checkpointHandle: \n\nthe handle of a created checkpoint",
      "x:",
      "y:",
      "z:"
    ],
    "returns": [],
    "description": "Parameters:\n\ncheckpointHandle: \n\nthe handle of a created checkpoint\n\nx:\ny:\nz:\nNativeDB Introduced: v1180\n\nSets the given checkpoint target to the new coords"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x43fa7cbe20dab219",
    "hash": "0x43FA7CBE20DAB219",
    "code": "-- 0x43FA7CBE20DAB219\nN_0x43fa7cbe20dab219(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x46d1a61a21f566fc",
    "hash": "0x46D1A61A21F566FC",
    "code": "-- 0x46D1A61A21F566FC\nN_0x46d1a61a21f566fc(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x4af92acd3141d96c",
    "hash": "0x4AF92ACD3141D96C",
    "code": "-- 0x4AF92ACD3141D96C\nN_0x4af92acd3141d96c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x54e22ea2c1956a8d",
    "hash": "0x54E22EA2C1956A8D",
    "code": "-- 0x54E22EA2C1956A8D\nN_0x54e22ea2c1956a8d(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x5b0316762afd4a64",
    "hash": "0x5B0316762AFD4A64",
    "code": "-- 0x5B0316762AFD4A64\nlocal retval --[[ integer ]] =\n\tN_0x5b0316762afd4a64()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x5dbf05db5926d089",
    "hash": "0x5DBF05DB5926D089",
    "code": "-- 0x5DBF05DB5926D089\nN_0x5dbf05db5926d089(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x5debd9c4dc995692",
    "hash": "0x5DEBD9C4DC995692",
    "code": "-- 0x5DEBD9C4DC995692\nN_0x5debd9c4dc995692()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x5f6df3d92271e8a1",
    "hash": "0x5F6DF3D92271E8A1",
    "code": "-- 0x5F6DF3D92271E8A1\nN_0x5f6df3d92271e8a1(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "DISABLE_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x615d3925e87a3b26",
    "hash": "0x615D3925E87A3B26",
    "code": "-- 0x615D3925E87A3B26\nN_0x615d3925e87a3b26(\n\tcheckpoint --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Unknown. Called after creating a checkpoint (type: 51) in the creators."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x61f95e5bb3e0a8c6",
    "hash": "0x61F95E5BB3E0A8C6",
    "code": "-- 0x61F95E5BB3E0A8C6\nN_0x61f95e5bb3e0a8c6(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x649c97d52332341a",
    "hash": "0x649C97D52332341A",
    "code": "-- 0x649C97D52332341A\nN_0x649c97d52332341a(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x6a51f78772175a51",
    "hash": "0x6A51F78772175A51",
    "code": "-- 0x6A51F78772175A51\nN_0x6a51f78772175a51(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_F*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x759650634f07b6b4",
    "hash": "0x759650634F07B6B4",
    "code": "-- 0x759650634F07B6B4\nlocal retval --[[ boolean ]] =\n\tN_0x759650634f07b6b4(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x7a42b2e236e71415",
    "hash": "0x7A42B2E236E71415",
    "code": "-- 0x7A42B2E236E71415\nN_0x7a42b2e236e71415()",
    "parameters": [],
    "returns": [],
    "description": "UI3DSCENE_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x7ac24eab6d74118d",
    "hash": "0x7AC24EAB6D74118D",
    "code": "-- 0x7AC24EAB6D74118D\nlocal retval --[[ boolean ]] =\n\tN_0x7ac24eab6d74118d(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x7fa5d82b8f58ec06",
    "hash": "0x7FA5D82B8F58EC06",
    "code": "-- 0x7FA5D82B8F58EC06\nlocal retval --[[ boolean ]] =\n\tN_0x7fa5d82b8f58ec06()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x814af7dcaacc597b",
    "hash": "0x814AF7DCAACC597B",
    "code": "-- 0x814AF7DCAACC597B\nN_0x814af7dcaacc597b(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x82acc484ffa3b05f",
    "hash": "0x82ACC484FFA3B05F",
    "code": "-- 0x82ACC484FFA3B05F\nlocal retval --[[ Any ]] =\n\tN_0x82acc484ffa3b05f(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x851cd923176eba7c",
    "hash": "0x851CD923176EBA7C",
    "code": "-- 0x851CD923176EBA7C\nN_0x851cd923176eba7c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x8cde909a0370bb3a",
    "hash": "0x8CDE909A0370BB3A",
    "code": "-- 0x8CDE909A0370BB3A\nN_0x8cde909a0370bb3a(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used only once in the scripts (taxi_clowncar)\n\nSET_PARTICLE_FX_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x908311265d42a820",
    "hash": "0x908311265D42A820",
    "code": "-- 0x908311265D42A820\nN_0x908311265d42a820(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x949f397a288b28b3",
    "hash": "0x949F397A288B28B3",
    "code": "-- 0x949F397A288B28B3\nN_0x949f397a288b28b3(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x9641588dab93b4b5",
    "hash": "0x9641588DAB93B4B5",
    "code": "-- 0x9641588DAB93B4B5\nN_0x9641588dab93b4b5(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x98d18905bf723b99",
    "hash": "0x98D18905BF723B99",
    "code": "-- 0x98D18905BF723B99\nlocal retval --[[ Any ]] =\n\tN_0x98d18905bf723b99()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x98edf76a7271e4f2",
    "hash": "0x98EDF76A7271E4F2",
    "code": "-- 0x98EDF76A7271E4F2\nN_0x98edf76a7271e4f2()",
    "parameters": [],
    "returns": [],
    "description": "REQUEST_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0x9b079e5221d984d3",
    "hash": "0x9B079E5221D984D3",
    "code": "-- 0x9B079E5221D984D3\nN_0x9b079e5221d984d3(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "FORCE_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xa46b73faa3460ae1",
    "hash": "0xA46B73FAA3460AE1",
    "code": "-- 0xA46B73FAA3460AE1\nN_0xa46b73faa3460ae1(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xaae9be70ec7c69ab",
    "hash": "0xAAE9BE70EC7C69AB",
    "code": "-- 0xAAE9BE70EC7C69AB\nN_0xaae9be70ec7c69ab(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xadd6627c4d325458",
    "hash": "0xADD6627C4D325458",
    "code": "-- 0xADD6627C4D325458\nN_0xadd6627c4d325458(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xae51bc858f32ba66",
    "hash": "0xAE51BC858F32BA66",
    "code": "-- 0xAE51BC858F32BA66\nN_0xae51bc858f32ba66(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xb2ebe8cbc58b90e9",
    "hash": "0xB2EBE8CBC58B90E9",
    "code": "-- 0xB2EBE8CBC58B90E9\nlocal retval --[[ Any ]] =\n\tN_0xb2ebe8cbc58b90e9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xb3c641f3630bf6da",
    "hash": "0xB3C641F3630BF6DA",
    "code": "-- 0xB3C641F3630BF6DA\nN_0xb3c641f3630bf6da(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Setter for 0xE59343E9E96529E7\n\nSET_M*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xb569f41f3e7e83a4",
    "hash": "0xB569F41F3E7E83A4",
    "code": "-- 0xB569F41F3E7E83A4\nN_0xb569f41f3e7e83a4(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xba0127da25fd54c9",
    "hash": "0xBA0127DA25FD54C9",
    "code": "-- 0xBA0127DA25FD54C9\nN_0xba0127da25fd54c9(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xba3d194057c79a7b",
    "hash": "0xBA3D194057C79A7B",
    "code": "-- 0xBA3D194057C79A7B\nN_0xba3d194057c79a7b(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PARTICLE_FX_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xbb90e12cac1dab25",
    "hash": "0xBB90E12CAC1DAB25",
    "code": "-- 0xBB90E12CAC1DAB25\nN_0xbb90e12cac1dab25(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xbcedb009461da156",
    "hash": "0xBCEDB009461DA156",
    "code": "-- 0xBCEDB009461DA156\nlocal retval --[[ Any ]] =\n\tN_0xbcedb009461da156()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xbe197eaa669238f4",
    "hash": "0xBE197EAA669238F4",
    "code": "-- 0xBE197EAA669238F4\nlocal retval --[[ Any ]] =\n\tN_0xbe197eaa669238f4(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xc0416b061f2b7e5e",
    "hash": "0xC0416B061F2B7E5E",
    "code": "-- 0xC0416B061F2B7E5E\nN_0xc0416b061f2b7e5e(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "GOLF_TRAIL_SET_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xc35a6d07c93802b2",
    "hash": "0xC35A6D07C93802B2",
    "code": "-- 0xC35A6D07C93802B2\nN_0xc35a6d07c93802b2()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xc5c8f970d4edff71",
    "hash": "0xC5C8F970D4EDFF71",
    "code": "-- 0xC5C8F970D4EDFF71\nN_0xc5c8f970d4edff71(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xca465d9cc0d231ba",
    "hash": "0xCA465D9CC0D231BA",
    "code": "-- 0xCA465D9CC0D231BA\nN_0xca465d9cc0d231ba(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xca4ae345a153d573",
    "hash": "0xCA4AE345A153D573",
    "code": "-- 0xCA4AE345A153D573\nN_0xca4ae345a153d573(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xcb82a0bf0e3e3265",
    "hash": "0xCB82A0BF0E3E3265",
    "code": "-- 0xCB82A0BF0E3E3265\nlocal retval --[[ integer ]] =\n\tN_0xcb82a0bf0e3e3265(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xcfd16f0db5a3535c",
    "hash": "0xCFD16F0DB5A3535C",
    "code": "-- 0xCFD16F0DB5A3535C\nN_0xcfd16f0db5a3535c(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xd1c55b110e4df534",
    "hash": "0xD1C55B110E4DF534",
    "code": "-- 0xD1C55B110E4DF534\nN_0xd1c55b110e4df534(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_TV_???"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xdb1ea9411c8911ec",
    "hash": "0xDB1EA9411C8911EC",
    "code": "-- 0xDB1EA9411C8911EC\nN_0xdb1ea9411c8911ec(\n\tcheckpointHandle --[[ integer ]]\n)",
    "parameters": [
      "checkpointHandle: \n\nthe handle of a created checkpoint"
    ],
    "returns": [],
    "description": "Parameters:\n\ncheckpointHandle: \n\nthe handle of a created checkpoint\n\nNativeDB Introduced: v1180\n\nThis native is used for the \"larger\" circular checkpoints, and sets the circle/ring around the checkpoint to point in the same direction as the inner arrow"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xe2892e7e55d7073a",
    "hash": "0xE2892E7E55D7073A",
    "code": "-- 0xE2892E7E55D7073A\nN_0xe2892e7e55d7073a(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xe59343e9e96529e7",
    "hash": "0xE59343E9E96529E7",
    "code": "-- 0xE59343E9E96529E7\nlocal retval --[[ number ]] =\n\tN_0xe59343e9e96529e7()",
    "parameters": [],
    "returns": [],
    "description": "Getter for 0xB3C641F3630BF6DA\n\nGET_M*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xe63d7c6eececb66b",
    "hash": "0xE63D7C6EECECB66B",
    "code": "-- 0xE63D7C6EECECB66B\nN_0xe63d7c6eececb66b(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "TOGGLE_*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xe791df1f73ed2c8b",
    "hash": "0xE791DF1F73ED2C8B",
    "code": "-- 0xE791DF1F73ED2C8B\nlocal retval --[[ Any ]] =\n\tN_0xe791df1f73ed2c8b(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xec72c258667be5ea",
    "hash": "0xEC72C258667BE5EA",
    "code": "-- 0xEC72C258667BE5EA\nlocal retval --[[ Any ]] =\n\tN_0xec72c258667be5ea(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xef398beee4ef45f9",
    "hash": "0xEF398BEEE4EF45F9",
    "code": "-- 0xEF398BEEE4EF45F9\nN_0xef398beee4ef45f9(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xefabc7722293da7c",
    "hash": "0xEFABC7722293DA7C",
    "code": "-- 0xEFABC7722293DA7C\nN_0xefabc7722293da7c()",
    "parameters": [],
    "returns": [],
    "description": "AD*"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xf3f776ada161e47d",
    "hash": "0xF3F776ADA161E47D",
    "code": "-- 0xF3F776ADA161E47D\nN_0xf3f776ada161e47d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xf51d36185993515d",
    "hash": "0xF51D36185993515D",
    "code": "-- 0xF51D36185993515D\nN_0xf51d36185993515d(\n\tcheckpoint --[[ integer ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tunkX --[[ number ]], \n\tunkY --[[ number ]], \n\tunkZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xf78b803082d4386f",
    "hash": "0xF78B803082D4386F",
    "code": "-- 0xF78B803082D4386F\nN_0xf78b803082d4386f(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: GRAPHICS",
    "apiset": "API set: client",
    "name": "N_0xfcf6788fc4860cd4",
    "hash": "0xFCF6788FC4860CD4",
    "code": "-- 0xFCF6788FC4860CD4\nN_0xfcf6788fc4860cd4(\n\tcheckpoint --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SETCHECKPOINT*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ActivateFrontendMenu",
    "hash": "0xEF01D36B9C9D0C7B",
    "code": "-- ACTIVATE_FRONTEND_MENU\nActivateFrontendMenu(\n\tmenuhash --[[ Hash ]], \n\ttogglePause --[[ boolean ]], \n\tcomponent --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does stuff like this:\\ gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617\\ Example:\\ int GetHash = GET_HASH_KEY(\"fe_menu_version_corona_lobby\");\\ ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);\\ BOOL p1 is a toggle to define the game in pause.\\ int p2 is unknown but -1 always works, not sure why though.\\ [30/03/2017] ins1de :\\ the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.\\ Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);\\ Result : Opens the \"Online\" tab without pausing the menu, with -1 it opens the map.\n\nBelow is a list of all known Frontend Menu Hashes.\n\nFE_MENU_VERSION_SP_PAUSE\nFE_MENU_VERSION_MP_PAUSE\nFE_MENU_VERSION_CREATOR_PAUSE\nFE_MENU_VERSION_CUTSCENE_PAUSE\nFE_MENU_VERSION_SAVEGAME\nFE_MENU_VERSION_PRE_LOBBY\nFE_MENU_VERSION_LOBBY\nFE_MENU_VERSION_MP_CHARACTER_SELECT\nFE_MENU_VERSION_MP_CHARACTER_CREATION\nFE_MENU_VERSION_EMPTY\nFE_MENU_VERSION_EMPTY_NO_BACKGROUND\nFE_MENU_VERSION_TEXT_SELECTION\nFE_MENU_VERSION_CORONA\nFE_MENU_VERSION_CORONA_LOBBY\nFE_MENU_VERSION_CORONA_JOINED_PLAYERS\nFE_MENU_VERSION_CORONA_INVITE_PLAYERS\nFE_MENU_VERSION_CORONA_INVITE_FRIENDS\nFE_MENU_VERSION_CORONA_INVITE_CREWS\nFE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS\nFE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS\nFE_MENU_VERSION_CORONA_RACE\nFE_MENU_VERSION_CORONA_BETTING\nFE_MENU_VERSION_JOINING_SCREEN\nFE_MENU_VERSION_LANDING_MENU\nFE_MENU_VERSION_LANDING_KEYMAPPING_MENU"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddBlipForArea",
    "hash": "0xCE5D0E5E315DB238",
    "code": "-- _ADD_BLIP_FOR_AREA\nlocal retval --[[ Blip ]] =\n\tAddBlipForArea(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\twidth --[[ number ]], \n\t\theight --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate of the center of the blip.",
      "y: \n\nThe Y coordinate of the center of the blip.",
      "z: \n\nThe Z coordinate of the center of the blip.",
      "width: \n\nThe width of the blip.",
      "height: \n\nThe height of the blip."
    ],
    "returns": [
      "A handle to the blip."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate of the center of the blip.\n\ny: \n\nThe Y coordinate of the center of the blip.\n\nz: \n\nThe Z coordinate of the center of the blip.\n\nwidth: \n\nThe width of the blip.\n\nheight: \n\nThe height of the blip.\n\nReturns:\n\nA handle to the blip.\n\nAdds a rectangular blip for the specified coordinates/area.\n\nIt is recommended to use SET_BLIP_ROTATION and SET_BLIP_COLOUR to make the blip not rotate along with the camera.\n\nBy default, the blip will show as a regular blip with the specified color/sprite if it is outside of the minimap view.\n\nExample image:  \n\n(Native name is likely to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddBlipForCoord",
    "hash": "0x5A039BB0BCA604B6",
    "code": "-- ADD_BLIP_FOR_COORD\nlocal retval --[[ Blip ]] =\n\tAddBlipForCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate to create the blip on.",
      "y: \n\nThe Y coordinate.",
      "z: \n\nThe Z coordinate."
    ],
    "returns": [
      "A blip handle."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate to create the blip on.\n\ny: \n\nThe Y coordinate.\n\nz: \n\nThe Z coordinate.\n\nReturns:\n\nA blip handle.\n\nCreates a blip for the specified coordinates. You can use SET_BLIP_ natives to change the blip."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddBlipForEntity",
    "hash": "0x5CDE92C702A8FCE7",
    "code": "-- ADD_BLIP_FOR_ENTITY\nlocal retval --[[ Blip ]] =\n\tAddBlipForEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nThe entity handle to create the blip."
    ],
    "returns": [
      "A blip handle."
    ],
    "description": "Parameters:\n\nentity: \n\nThe entity handle to create the blip.\n\nReturns:\n\nA blip handle.\n\nCreate a blip that by default is red (enemy), you can use SET_BLIP_AS_FRIENDLY to make it blue (friend).\\ Can be used for objects, vehicles and peds.\n\nExample of enemy:  Example of friend:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddBlipForPickup",
    "hash": "0xBE339365C863BD36",
    "code": "-- ADD_BLIP_FOR_PICKUP\nlocal retval --[[ Blip ]] =\n\tAddBlipForPickup(\n\t\tpickup --[[ Pickup ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddBlipForRadius",
    "hash": "0x46818D79B1F7499A",
    "code": "-- ADD_BLIP_FOR_RADIUS\nlocal retval --[[ Blip ]] =\n\tAddBlipForRadius(\n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [
      "posX: \n\nThe x position of the blip (you can also send a vector3 instead of the bulk coordinates)",
      "posY: \n\nThe y position of the blip (you can also send a vector3 instead of the bulk coordinates)",
      "posZ: \n\nThe z position of the blip (you can also send a vector3 instead of the bulk coordinates)",
      "radius: \n\nThe number that defines the radius of the blip circle"
    ],
    "returns": [
      "The blip handle that can be manipulated with every SetBlip natives"
    ],
    "description": "Parameters:\n\nposX: \n\nThe x position of the blip (you can also send a vector3 instead of the bulk coordinates)\n\nposY: \n\nThe y position of the blip (you can also send a vector3 instead of the bulk coordinates)\n\nposZ: \n\nThe z position of the blip (you can also send a vector3 instead of the bulk coordinates)\n\nradius: \n\nThe number that defines the radius of the blip circle\n\nReturns:\n\nThe blip handle that can be manipulated with every SetBlip natives\n\nCreate a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use AddBlipCoords)\n\nExample image:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddNextMessageToPreviousBriefs",
    "hash": "0x60296AF4BA14ABC5",
    "code": "-- ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS\nAddNextMessageToPreviousBriefs(\n\taddToBrief --[[ boolean ]]\n)",
    "parameters": [
      "addToBrief: \n\nToggles if the next help message will be shown in Pause Menu > Info > Help."
    ],
    "returns": [],
    "description": "Parameters:\n\naddToBrief: \n\nToggles if the next help message will be shown in Pause Menu > Info > Help."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddPointToGpsCustomRoute",
    "hash": "0x311438A071DD9B1A",
    "code": "-- ADD_POINT_TO_GPS_CUSTOM_ROUTE\nAddPointToGpsCustomRoute(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddPointToGpsMultiRoute",
    "hash": "0xA905192A6781C41B",
    "code": "-- ADD_POINT_TO_GPS_MULTI_ROUTE\nAddPointToGpsMultiRoute(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentFloat",
    "hash": "0xE7DCB5B874BCD96E",
    "code": "-- ADD_TEXT_COMPONENT_FLOAT\nAddTextComponentFloat(\n\tvalue --[[ number ]], \n\tdecimalPlaces --[[ integer ]]\n)",
    "parameters": [
      "value: \n\nThe number to substitute in the label.",
      "decimalPlaces: \n\nHow many decimal places to add"
    ],
    "returns": [],
    "description": "Parameters:\n\nvalue: \n\nThe number to substitute in the label.\n\ndecimalPlaces: \n\nHow many decimal places to add\n\nAdds a float to a text component placeholder, replacing ~1~ in the current text command's text label."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentFormattedInteger",
    "hash": "0x0E4C749FF9DE9CC4",
    "code": "-- ADD_TEXT_COMPONENT_FORMATTED_INTEGER\nAddTextComponentFormattedInteger(\n\tvalue --[[ integer ]], \n\tcommaSeparated --[[ boolean ]]\n)",
    "parameters": [
      "value: \n\nThe integer to add to the string",
      "commaSeparated: \n\nWhether or not to add comma seperators. So if true 1000 would become 1,000."
    ],
    "returns": [],
    "description": "Parameters:\n\nvalue: \n\nThe integer to add to the string\n\ncommaSeparated: \n\nWhether or not to add comma seperators. So if true 1000 would become 1,000."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentInteger",
    "hash": "0x03B504CF259931BC",
    "code": "-- ADD_TEXT_COMPONENT_INTEGER\nAddTextComponentInteger(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringBlipName",
    "hash": "0x80EAD8E2E1D5D52E",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME\nAddTextComponentSubstringBlipName(\n\tblip --[[ Blip ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringKeyboardDisplay",
    "hash": "0x5F68520888E69014",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY\nAddTextComponentSubstringKeyboardDisplay(\n\tstring --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Certain characters like < will have to be escaped using html entities (e.g. &lt;), otherwise the text wont display properly."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringPhoneNumber",
    "hash": "0x761B77454205A61D",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER\nAddTextComponentSubstringPhoneNumber(\n\tp0 --[[ string ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 was always -1"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringPlayerName",
    "hash": "0x6C188BE134E074AA",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME\nAddTextComponentSubstringPlayerName(\n\ttext --[[ string ]]\n)",
    "parameters": [
      "text: \n\nA string to add of up to 99 characters. This can contain additional ~ formatting directives."
    ],
    "returns": [],
    "description": "Parameters:\n\ntext: \n\nA string to add of up to 99 characters. This can contain additional ~ formatting directives.\n\nAdds an arbitrary string as a text component placeholder, replacing ~a~ in the current text command's text label.\n\nSee the documentation on text formatting for more information."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringTextLabel",
    "hash": "0xC63CD5D2920ACBE7",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL\nAddTextComponentSubstringTextLabel(\n\tlabelName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringTextLabelHashKey",
    "hash": "0x17299B63C7683A2B",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY\nAddTextComponentSubstringTextLabelHashKey(\n\tgxtEntryHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY(\"ES_HELP\"), adds \"Continue\". Just uses a text labels hash key"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringTime",
    "hash": "0x1115F16B8AB9E8BF",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_TIME\nAddTextComponentSubstringTime(\n\ttimestamp --[[ integer ]], \n\tformat --[[ integer ]]\n)",
    "parameters": [
      "timestamp: \n\nThe timestamp in milliseconds",
      "format: \n\nThe format of the timestamp, as bitwise flags"
    ],
    "returns": [],
    "description": "Parameters:\n\ntimestamp: \n\nThe timestamp in milliseconds\n\nformat: \n\nThe format of the timestamp, as bitwise flags\n\nTakes a time in milliseconds and converts it to a string. Use ~a~ to mark the position in your line of text where you want this substring inserted.\n\nenum eTimeFormat {\n    TEXT_FORMAT_MILLISECONDS = 1,\n    TEXT_FORMAT_SECONDS = 2,\n    TEXT_FORMAT_MINUTES = 4,\n    TEXT_FORMAT_HOURS = 8,\n    TEXT_FORMAT_DAYS = 16,\n    // e.g. show 12:20 not 00:12:20\n    TEXT_FORMAT_HIDE_LEADING_UNITS_EQUAL_TO_ZERO = 32,\n    // e.g. show 1:14 not 01:14\n    TEXT_FORMAT_HIDE_LEADING_ZEROS_ON_LEADING_UNITS = 64,\n    // e.g. show 3m24s not 3:24\n    TEXT_FORMAT_SHOW_UNIT_DIVIDERS_AS_LETTERS = 128,\n    // e.g. show 3m24 not 3m24s\n    TEXT_FORMAT_HIDE_UNIT_LETTER_FOR_SMALLEST_UNITS = 256,\n    // e.g. show 05:51 not 05:519\n    TEXT_FORMAT_HIDE_MILLISECONDS_UNITS_DIGIT = 512,\n    // e.g. show 05:5 not 05:519\n    TEXT_FORMAT_HIDE_MILLISECONDS_TENS_DIGIT = 1024,\n    // e.g. show 12.345 not 12:345\n    TEXT_FORMAT_USE_DOT_FOR_MILLISECOND_DIVIDER = 2048\n}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AddTextComponentSubstringWebsite",
    "hash": "0x94CF4AC034C9C986",
    "code": "-- ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE\nAddTextComponentSubstringWebsite(\n\twebsite --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AllowPauseMenuWhenDeadThisFrame",
    "hash": "0xCC3FDDED67BCFC63",
    "code": "-- _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME\nAllowPauseMenuWhenDeadThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Allows opening the pause menu this frame, when the player is dead."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "AllowSonarBlips",
    "hash": "0x60734CC207C9833C",
    "code": "-- ALLOW_SONAR_BLIPS\nAllowSonarBlips(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandBusyspinnerOn",
    "hash": "0xABA17D7CE615ADBF",
    "code": "-- BEGIN_TEXT_COMMAND_BUSYSPINNER_ON\nBeginTextCommandBusyspinnerOn(\n\tstring --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here  \nBEGIN_TEXT_COMMAND_PRINT  \ne.g  \nvoid StartLoadingMessage(char *text, int spinnerType = 3)  \n\t{  \n_SET_LOADING_PROMPT_TEXT_ENTRY(\"STRING\");  \nADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  \n_SHOW_LOADING_PROMPT(spinnerType);  \n\t}  \n/*OR*/  \n\tvoid ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)  \n\t{  \n_SET_LOADING_PROMPT_TEXT_ENTRY(\"STRING\");  \nADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  \n_SHOW_LOADING_PROMPT(spinnerType);  \nWAIT(timeMs);  \n_REMOVE_LOADING_PROMPT();  \n\t}  \nThese are some localized strings used in the loading spinner.  \n\"PM_WAIT\"                   = Please Wait  \n\"CELEB_WPLYRS\"              = Waiting For Players.  \n\"CELL_SPINNER2\"             = Scanning storage.  \n\"ERROR_CHECKYACHTNAME\" = Registering your yacht's name. Please wait.  \n\"ERROR_CHECKPROFANITY\"   = Checking your text for profanity. Please wait.  \n\"FM_COR_AUTOD\"                        = Just spinner no text  \n\"FM_IHELP_WAT2\"                        = Waiting for other players  \n\"FM_JIP_WAITO\"                            = Game options are being set  \n\"FMMC_DOWNLOAD\"                    = Downloading  \n\"FMMC_PLYLOAD\"                         = Loading  \n\"FMMC_STARTTRAN\"                    = Launching session  \n\"HUD_QUITTING\"                           =  Quiting session  \n\"KILL_STRIP_IDM\"                         = Waiting for to accept  \n\"MP_SPINLOADING\"                      = Loading"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandClearPrint",
    "hash": "0xE124FA80A759019C",
    "code": "-- BEGIN_TEXT_COMMAND_CLEAR_PRINT\nBeginTextCommandClearPrint(\n\ttext --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "clears a print text command with this text"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandDisplayHelp",
    "hash": "0x8509B634FBE7DA11",
    "code": "-- BEGIN_TEXT_COMMAND_DISPLAY_HELP\nBeginTextCommandDisplayHelp(\n\tinputType --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used to be known as _SET_TEXT_COMPONENT_FORMAT"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandDisplayText",
    "hash": "0x25FBB336DF1804CB",
    "code": "-- BEGIN_TEXT_COMMAND_DISPLAY_TEXT\nBeginTextCommandDisplayText(\n\ttext --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The following were found in the decompiled script files:  \nSTRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3  \nESDOLLA   \nESMINDOLLA - cash (negative)  \nUsed to be known as _SET_TEXT_ENTRY"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandGetWidth",
    "hash": "0x54CE8AC98E120CAB",
    "code": "-- _BEGIN_TEXT_COMMAND_GET_WIDTH\nBeginTextCommandGetWidth(\n\ttext --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "BEGIN_TEXT_COMMAND_*\nExample:\n_BEGIN_TEXT_COMMAND_GET_WIDTH(\"NUMBER\");\nADD_TEXT_COMPONENT_FLOAT(69.420f, 2);\nfloat width = _END_TEXT_COMMAND_GET_WIDTH(1);"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandIsMessageDisplayed",
    "hash": "0x853648FD1063A213",
    "code": "-- BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED\nBeginTextCommandIsMessageDisplayed(\n\ttext --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "nothin doin.   \nBOOL Message(char* text)  \n\t{  \nBEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(\"STRING\");  \nADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  \nreturn END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();  \n\t}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandIsThisHelpMessageBeingDisplayed",
    "hash": "0x0A24DA3A41B718F5",
    "code": "-- BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED\nBeginTextCommandIsThisHelpMessageBeingDisplayed(\n\tlabelName --[[ string ]]\n)",
    "parameters": [
      "labelName: \n\nText entry name. This can be created using AddTextEntry."
    ],
    "returns": [],
    "description": "Parameters:\n\nlabelName: \n\nText entry name. This can be created using AddTextEntry."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandLineCount",
    "hash": "0x521FB041D93DD0E4",
    "code": "-- _BEGIN_TEXT_COMMAND_LINE_COUNT\nBeginTextCommandLineCount(\n\tentry --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "get's line count  \nint GetLineCount(char *text, float x, float y)  \n\t{  \n_BEGIN_TEXT_COMMAND_LINE_COUNT(\"STRING\");  \n                ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  \nreturn _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);  \n\t}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandObjective",
    "hash": "0x23D69E0465570028",
    "code": "-- _BEGIN_TEXT_COMMAND_OBJECTIVE\nBeginTextCommandObjective(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandOverrideButtonText",
    "hash": "0x8F9EE5687F8EECCD",
    "code": "-- BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT\nBeginTextCommandOverrideButtonText(\n\tgxtEntry --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandPrint",
    "hash": "0xB87A37EEB7FAA67D",
    "code": "-- BEGIN_TEXT_COMMAND_PRINT\nBeginTextCommandPrint(\n\tGxtEntry --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used to be known as _SET_TEXT_ENTRY_2  \nvoid ShowSubtitle(char *text)  \n{  \n\tBEGIN_TEXT_COMMAND_PRINT(\"STRING\");  \n\tADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  \n\tEND_TEXT_COMMAND_PRINT(2000, 1);  \n}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandSetBlipName",
    "hash": "0xF9113A30DE5C6670",
    "code": "-- BEGIN_TEXT_COMMAND_SET_BLIP_NAME\nBeginTextCommandSetBlipName(\n\ttextLabel --[[ string ]]\n)",
    "parameters": [
      "textLabel: \n\nThe text label to set."
    ],
    "returns": [],
    "description": "Parameters:\n\ntextLabel: \n\nThe text label to set.\n\nStarts a text command to change the name of a blip displayed in the pause menu.\n\nThis should be paired with END_TEXT_COMMAND_SET_BLIP_NAME, once adding all required text components."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BeginTextCommandThefeedPost",
    "hash": "0x202709F4C58A0424",
    "code": "-- BEGIN_TEXT_COMMAND_THEFEED_POST\nBeginTextCommandThefeedPost(\n\ttext --[[ string ]]\n)",
    "parameters": [
      "text: \n\nThe text label to use."
    ],
    "returns": [],
    "description": "Parameters:\n\ntext: \n\nThe text label to use.\n\nDeclares the entry type of a notification, for example \"STRING\". int ShowNotification(char *text) { BEGIN_TEXT_COMMAND_THEFEED_POST(\"STRING\"); ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text); return _DRAW_NOTIFICATION(1, 1); }"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BusyspinnerIsDisplaying",
    "hash": "0xB2A592B04648A9CB",
    "code": "-- BUSYSPINNER_IS_DISPLAYING\nlocal retval --[[ boolean ]] =\n\tBusyspinnerIsDisplaying()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BusyspinnerIsOn",
    "hash": "0xD422FCC5F239A915",
    "code": "-- BUSYSPINNER_IS_ON\nlocal retval --[[ boolean ]] =\n\tBusyspinnerIsOn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "BusyspinnerOff",
    "hash": "0x10D373323E5B9C0D",
    "code": "-- BUSYSPINNER_OFF\nBusyspinnerOff()",
    "parameters": [],
    "returns": [],
    "description": "Removes the loading prompt at the bottom right of the screen."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ChangeFakeMpCash",
    "hash": "0x0772DF77852C2E30",
    "code": "-- CHANGE_FAKE_MP_CASH\nChangeFakeMpCash(\n\tcash --[[ integer ]], \n\tbank --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Displays cash change notifications on HUD."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearAdditionalText",
    "hash": "0x2A179DF17CCF04CD",
    "code": "-- CLEAR_ADDITIONAL_TEXT\nClearAdditionalText(\n\tp0 --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearAllBlipRoutes",
    "hash": "0xD12882D3FF82BF11",
    "code": "-- _CLEAR_ALL_BLIP_ROUTES\nClearAllBlipRoutes()",
    "parameters": [],
    "returns": [],
    "description": "Clears all active blip routes that have been set with SetBlipRoute."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearAllHelpMessages",
    "hash": "0x6178F68A87A4D3A0",
    "code": "-- CLEAR_ALL_HELP_MESSAGES\nClearAllHelpMessages()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearBrief",
    "hash": "0x9D292F73ADBD9313",
    "code": "-- CLEAR_BRIEF\nClearBrief()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearDynamicPauseMenuErrorMessage",
    "hash": "0x7792424AA0EAC32E",
    "code": "-- CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE\nClearDynamicPauseMenuErrorMessage()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearFloatingHelp",
    "hash": "0x50085246ABD3FEFA",
    "code": "-- CLEAR_FLOATING_HELP\nClearFloatingHelp(\n\thudIndex --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearGpsCustomRoute",
    "hash": "0xE6DE0561D9232A64",
    "code": "-- CLEAR_GPS_CUSTOM_ROUTE\nClearGpsCustomRoute()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearGpsFlags",
    "hash": "0x21986729D6A3A830",
    "code": "-- CLEAR_GPS_FLAGS\nClearGpsFlags()",
    "parameters": [],
    "returns": [],
    "description": "Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.  \nDoesn't seem like the flags are actually read by the game at all."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearGpsMultiRoute",
    "hash": "0x67EEDEA1B9BAFD94",
    "code": "-- CLEAR_GPS_MULTI_ROUTE\nClearGpsMultiRoute()",
    "parameters": [],
    "returns": [],
    "description": "Does the same as SET_GPS_MULTI_ROUTE_RENDER(false)"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearGpsPlayerWaypoint",
    "hash": "0xFF4FB7C8CDFA3DA7",
    "code": "-- CLEAR_GPS_PLAYER_WAYPOINT\nClearGpsPlayerWaypoint()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearGpsRaceTrack",
    "hash": "0x7AA5B4CE533C858B",
    "code": "-- CLEAR_GPS_RACE_TRACK\nClearGpsRaceTrack()",
    "parameters": [],
    "returns": [],
    "description": "Does the same as SET_RACE_TRACK_RENDER(false);"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearHelp",
    "hash": "0x8DFCED7A656F8802",
    "code": "-- CLEAR_HELP\nClearHelp(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearPedInPauseMenu",
    "hash": "0x5E62BE5DC58E9E06",
    "code": "-- CLEAR_PED_IN_PAUSE_MENU\nClearPedInPauseMenu()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearPrints",
    "hash": "0xCC33FA791322B9D9",
    "code": "-- CLEAR_PRINTS\nClearPrints()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearRaceGalleryBlips",
    "hash": "0x2708FC083123F9FF",
    "code": "-- _CLEAR_RACE_GALLERY_BLIPS\nClearRaceGalleryBlips()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearReminderMessage",
    "hash": "0xB57D8DD645CFA2CF",
    "code": "-- CLEAR_REMINDER_MESSAGE\nClearReminderMessage()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearSmallPrints",
    "hash": "0x2CEA2839313C09AC",
    "code": "-- CLEAR_SMALL_PRINTS\nClearSmallPrints()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ClearThisPrint",
    "hash": "0xCF708001E1E536DD",
    "code": "-- CLEAR_THIS_PRINT\nClearThisPrint(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "CloseMultiplayerChat",
    "hash": "0x1AC8F4AD40E22127",
    "code": "-- _CLOSE_MULTIPLAYER_CHAT\nCloseMultiplayerChat()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "CloseSocialClubMenu",
    "hash": "0xD2B32BE3FC1626C6",
    "code": "-- CLOSE_SOCIAL_CLUB_MENU\nCloseSocialClubMenu()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "CreateFakeMpGamerTag",
    "hash": "0xBFEFE3321A3F5015",
    "code": "-- CREATE_FAKE_MP_GAMER_TAG\nlocal retval --[[ integer ]] =\n\tCreateFakeMpGamerTag(\n\t\tped --[[ Ped ]], \n\t\tusername --[[ string ]], \n\t\tcrewIsPrivate --[[ boolean ]], \n\t\tcrewIsRockstar --[[ boolean ]], \n\t\tcrewName --[[ string ]], \n\t\tcrewRank --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped that the fake gamer tag will be attached to.",
      "username: \n\nThe name displayed on the gamer tag.",
      "crewIsPrivate: \n\nIf the crew is private. Public crews have a pointed end cap, private crews do not.",
      "crewIsRockstar: \n\nIf the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.",
      "crewName: \n\nThe name of the crew.",
      "crewRank: \n\nThe rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews."
    ],
    "returns": [
      "The ID of the new gamer tag."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped that the fake gamer tag will be attached to.\n\nusername: \n\nThe name displayed on the gamer tag.\n\ncrewIsPrivate: \n\nIf the crew is private. Public crews have a pointed end cap, private crews do not.\n\ncrewIsRockstar: \n\nIf the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.\n\ncrewName: \n\nThe name of the crew.\n\ncrewRank: \n\nThe rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.\n\nReturns:\n\nThe ID of the new gamer tag.\n\nAs per the name, this native creates a \"fake\" gamer tag that is attached to a specific ped. Unlike \"real\" gamer tags, you cannot set the crew colour of these gamer tags.\n\nTo create gamer tags for actual players and for more gamer tag information, see CREATE_MP_GAMER_TAG_WITH_CREW_COLOR."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "CreateMpGamerTagWithCrewColor",
    "hash": "0x6DD05E9D83EFA4C9",
    "code": "-- CREATE_MP_GAMER_TAG_WITH_CREW_COLOR\nCreateMpGamerTagWithCrewColor(\n\tplayer --[[ Player ]], \n\tusername --[[ string ]], \n\tcrewIsPrivate --[[ boolean ]], \n\tcrewIsRockstar --[[ boolean ]], \n\tcrewName --[[ string ]], \n\tcrewRank --[[ integer ]], \n\tcrewR --[[ integer ]], \n\tcrewG --[[ integer ]], \n\tcrewB --[[ integer ]]\n)",
    "parameters": [
      "player: \n\nThe local player ID to assign the gamer tag to.",
      "username: \n\nThe name displayed on the gamer tag.",
      "crewIsPrivate: \n\nIf the crew is private. Public crews have a pointed end cap, private crews do not.",
      "crewIsRockstar: \n\nIf the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.",
      "crewName: \n\nThe name of the crew.",
      "crewRank: \n\nThe rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.",
      "crewR: \n\nRed component of the crew colour.",
      "crewG: \n\nGreen component of the crew colour.",
      "crewB: \n\nBlue component of the crew colour."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe local player ID to assign the gamer tag to.\n\nusername: \n\nThe name displayed on the gamer tag.\n\ncrewIsPrivate: \n\nIf the crew is private. Public crews have a pointed end cap, private crews do not.\n\ncrewIsRockstar: \n\nIf the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.\n\ncrewName: \n\nThe name of the crew.\n\ncrewRank: \n\nThe rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.\n\ncrewR: \n\nRed component of the crew colour.\n\ncrewG: \n\nGreen component of the crew colour.\n\ncrewB: \n\nBlue component of the crew colour.\n\nCreates a gamer tag for the specified local player ID, automatically attached to the player's current ped. The created gamer tag will have the same ID as the player. You can use IS_MP_GAMER_TAG_ACTIVE to check if a gamer tag already exists for a player. After the gamer tag is created, all components will be set as invisible. Use SET_MP_GAMER_TAG_VISIBILITY to change the visibility of individual components or _SET_MP_GAMER_TAG_VISIBILITY_ALL to set all of them at once.\n\nTo create a gamer tag for a ped that is not a player, see CREATE_FAKE_MP_GAMER_TAG."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DeleteWaypointsFromThisPlayer",
    "hash": "0xD8E694757BCEA8E9",
    "code": "-- DELETE_WAYPOINTS_FROM_THIS_PLAYER\nDeleteWaypointsFromThisPlayer()",
    "parameters": [],
    "returns": [],
    "description": "Same as SET_WAYPOINT_OFF, except it checks if the local player is the owner of the waypoint."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisableFrontendThisFrame",
    "hash": "0x6D3465A73092F0E6",
    "code": "-- DISABLE_FRONTEND_THIS_FRAME\nDisableFrontendThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisableMultiplayerChat",
    "hash": "0x1DB21A44B09E8BA3",
    "code": "-- _DISABLE_MULTIPLAYER_CHAT\nDisableMultiplayerChat(\n\tdisable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If true is passed, the player won't be able to open the multiplayer chat"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayAmmoThisFrame",
    "hash": "0xA5E78BA2B1331C55",
    "code": "-- DISPLAY_AMMO_THIS_FRAME\nDisplayAmmoThisFrame(\n\tdisplay --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayAreaName",
    "hash": "0x276B6CE369C33678",
    "code": "-- DISPLAY_AREA_NAME\nDisplayAreaName(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayCash",
    "hash": "0x96DEC8D5430208B7",
    "code": "-- DISPLAY_CASH\nDisplayCash(\n\tdisplay --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "\"DISPLAY_CASH(true);\" makes the cash amount render on the screen when appropriate  \n\"DISPLAY_CASH(false);\" disables cash amount rendering"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayHelpTextThisFrame",
    "hash": "0x960C9FF8F616E41C",
    "code": "-- DISPLAY_HELP_TEXT_THIS_FRAME\nDisplayHelpTextThisFrame(\n\tpTextLabel --[[ string ]], \n\tbCurvedWindow --[[ boolean ]]\n)",
    "parameters": [
      "pTextLabel: \n\nText label for this message.",
      "bCurvedWindow: \n\nUnused parameter."
    ],
    "returns": [],
    "description": "Parameters:\n\npTextLabel: \n\nText label for this message.\n\nbCurvedWindow: \n\nUnused parameter.\n\nShows a help message for one frame. Do note that this message doesn't get added to the Pause Menu info section."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayHud",
    "hash": "0xA6294919E56FF02A",
    "code": "-- DISPLAY_HUD\nDisplayHud(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If Hud should be displayed"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayHudWhenDeadThisFrame",
    "hash": "0x7669F9E39DC17063",
    "code": "-- _DISPLAY_HUD_WHEN_DEAD_THIS_FRAME\nDisplayHudWhenDeadThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Enables drawing some hud components, such as help labels, this frame, when the player is dead."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayHudWhenPausedThisFrame",
    "hash": "0x402F9ED62087E898",
    "code": "-- DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME\nDisplayHudWhenPausedThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayPlayerNameTagsOnBlips",
    "hash": "0x82CEDC33687E1F50",
    "code": "-- DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS\nDisplayPlayerNameTagsOnBlips(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nthe toggle boolean"
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nthe toggle boolean\n\nToggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O. Doesn't need to be called every frame. Preview: https://i.imgur.com/DfqKWfJ.png Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplayRadar",
    "hash": "0xA0EBB943C300E693",
    "code": "-- DISPLAY_RADAR\nDisplayRadar(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If Minimap / Radar should be displayed."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DisplaySniperScopeThisFrame",
    "hash": "0x73115226F4814E62",
    "code": "-- DISPLAY_SNIPER_SCOPE_THIS_FRAME\nDisplaySniperScopeThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Displays the crosshair for this frame."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DoesBlipExist",
    "hash": "0xA6DB27D19ECBB7DA",
    "code": "-- DOES_BLIP_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesBlipExist(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DoesBlipHaveGpsRoute",
    "hash": "0xDD2238F57B977751",
    "code": "-- DOES_BLIP_HAVE_GPS_ROUTE\nlocal retval --[[ boolean ]] =\n\tDoesBlipHaveGpsRoute(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DoesPedHaveAiBlip",
    "hash": "0x15B8ECF844EE67ED",
    "code": "-- DOES_PED_HAVE_AI_BLIP\nlocal retval --[[ boolean ]] =\n\tDoesPedHaveAiBlip(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the ped's blip is controlled by the game.   \nIt's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DoesTextBlockExist",
    "hash": "0x1C7302E725259789",
    "code": "-- DOES_TEXT_BLOCK_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesTextBlockExist(\n\t\tgxt --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DoesTextLabelExist",
    "hash": "0xAC09CA973C564252",
    "code": "-- DOES_TEXT_LABEL_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesTextLabelExist(\n\t\tgxt --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if the passed gxt name exists in the game files."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DontTiltMinimapThisFrame",
    "hash": "0x6D14BFDC33B34F55",
    "code": "-- DONT_TILT_MINIMAP_THIS_FRAME\nDontTiltMinimapThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "When calling this, the current frame will have the players \"arrow icon\" be focused on the dead center of the radar."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "DrawHudOverFadeThisFrame",
    "hash": "0xBF4F34A85CA2970C",
    "code": "-- DRAW_HUD_OVER_FADE_THIS_FRAME\nDrawHudOverFadeThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Allows HUD to be drawn over screen fade every frame this function is called."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandBusyspinnerOn",
    "hash": "0xBD12F8228410D9B4",
    "code": "-- END_TEXT_COMMAND_BUSYSPINNER_ON\nEndTextCommandBusyspinnerOn(\n\tbusySpinnerType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eBusySpinnerType\n{\n\tBUSY_SPINNER_LEFT = 0,\n\tBUSY_SPINNER_LEFT_2 = 1,\n\tBUSY_SPINNER_LEFT_3 = 2,\n\tBUSY_SPINNER_SAVE = 3,\n\tBUSY_SPINNER_RIGHT = 4,\n};"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandClearPrint",
    "hash": "0xFCC75460ABA29378",
    "code": "-- END_TEXT_COMMAND_CLEAR_PRINT\nEndTextCommandClearPrint()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandDisplayHelp",
    "hash": "0x238FFE5C7B0498A6",
    "code": "-- END_TEXT_COMMAND_DISPLAY_HELP\nEndTextCommandDisplayHelp(\n\tshape --[[ integer ]], \n\tloop --[[ boolean ]], \n\tbeep --[[ boolean ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [
      "shape: \n\n0 for a normal rectangle shape, 1 and 2 has rounded edges, and can be used for floating help text hud component FLOATING_HELP_TEXT_1 and FLOATING_HELP_TEXT_2. Use 1 for FLOATING_HELP_TEXT_1 and 2 for FLOATING_HELP_TEXT_2, otherwise the help text will be reset to a normal help text on the top left corner on your screen.",
      "loop: \n\nIf this is true, the message will stay forever unless you call CLEAR_ALL_HELP_MESSAGES.",
      "beep: \n\nIf this is true, the beeping sound will play. Beeping sound name is INFO in sound set HUD_FRONTEND_DEFAULT_SOUNDSET.",
      "duration: \n\nDuration in ms of how long this help message should display for. -1 for default."
    ],
    "returns": [],
    "description": "Parameters:\n\nshape: \n\n0 for a normal rectangle shape, 1 and 2 has rounded edges, and can be used for floating help text hud component FLOATING_HELP_TEXT_1 and FLOATING_HELP_TEXT_2. Use 1 for FLOATING_HELP_TEXT_1 and 2 for FLOATING_HELP_TEXT_2, otherwise the help text will be reset to a normal help text on the top left corner on your screen.\n\nloop: \n\nIf this is true, the message will stay forever unless you call CLEAR_ALL_HELP_MESSAGES.\n\nbeep: \n\nIf this is true, the beeping sound will play. Beeping sound name is INFO in sound set HUD_FRONTEND_DEFAULT_SOUNDSET.\n\nduration: \n\nDuration in ms of how long this help message should display for. -1 for default."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandDisplayText",
    "hash": "0xCD015E5BB0D96A57",
    "code": "-- END_TEXT_COMMAND_DISPLAY_TEXT\nEndTextCommandDisplayText(\n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.  \nNativeDB Added Parameter 3: int p2"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandGetWidth",
    "hash": "0x85F061DA64ED2F67",
    "code": "-- _END_TEXT_COMMAND_GET_WIDTH\nlocal retval --[[ number ]] =\n\tEndTextCommandGetWidth(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "END_TEXT_COMMAND_*\nIn scripts font most of the time is passed as 1.\nUse _BEGIN_TEXT_GET_COMMAND_GET_WIDTH\nparam is not font from what i've tested"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandIsMessageDisplayed",
    "hash": "0x8A9BA1AB3E237613",
    "code": "-- END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED\nlocal retval --[[ boolean ]] =\n\tEndTextCommandIsMessageDisplayed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandIsThisHelpMessageBeingDisplayed",
    "hash": "0x10BDDBFC529428DD",
    "code": "-- END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED\nlocal retval --[[ boolean ]] =\n\tEndTextCommandIsThisHelpMessageBeingDisplayed(\n\t\thudIndex --[[ integer ]]\n\t)",
    "parameters": [
      "hudIndex: \n\nThe hud index for help message."
    ],
    "returns": [
      "true: Indicates if the specific help message has been displayed.\\ false: Indicates that the specific help message is still being displayed."
    ],
    "description": "Parameters:\n\nhudIndex: \n\nThe hud index for help message.\n\nReturns:\n\ntrue: Indicates if the specific help message has been displayed.\\ false: Indicates that the specific help message is still being displayed.\n\nReturns whether a specific help message is being displayed or not.\n\nenum HudIndexes {\n    HELP_TEXT = 0,\n    FLOATING_HELP_TEXT_1 = 1,\n    FLOATING_HELP_TEXT_2 = 2,\n}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandLineCount",
    "hash": "0x9040DFB09BE75706",
    "code": "-- _END_TEXT_COMMAND_LINE_COUNT\nlocal retval --[[ integer ]] =\n\tEndTextCommandLineCount(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "END_TEXT_COMMAND_*\nDetermines how many lines the text string will use when drawn on screen.\nMust use 0x521FB041D93DD0E4 for setting up"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandObjective",
    "hash": "0xCFDBDF5AE59BA0F4",
    "code": "-- _END_TEXT_COMMAND_OBJECTIVE\nEndTextCommandObjective(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandOverrideButtonText",
    "hash": "0xA86911979638106F",
    "code": "-- END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT\nEndTextCommandOverrideButtonText(\n\tbuttonIndex --[[ integer ]]\n)",
    "parameters": [
      "buttonIndex: \n\nIndex of the instructional button"
    ],
    "returns": [],
    "description": "Parameters:\n\nbuttonIndex: \n\nIndex of the instructional button"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandPrint",
    "hash": "0x9D77056A530643F6",
    "code": "-- END_TEXT_COMMAND_PRINT\nEndTextCommandPrint(\n\tduration --[[ integer ]], \n\tdrawImmediately --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Draws the subtitle at middle center of the screen.  \nint duration = time in milliseconds to show text on screen before disappearing  \ndrawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished  \nUsed to be known as _DRAW_SUBTITLE_TIMED"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandSetBlipName",
    "hash": "0xBC38B49BCB83BC9B",
    "code": "-- END_TEXT_COMMAND_SET_BLIP_NAME\nEndTextCommandSetBlipName(\n\tblip --[[ Blip ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to change the name for."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to change the name for.\n\nFinalizes a text command started with BEGIN_TEXT_COMMAND_SET_BLIP_NAME, setting the name of the specified blip."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostAward",
    "hash": "0xAA295B6F28BD587D",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_AWARD\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostAward(\n\t\ttextureDict --[[ string ]], \n\t\ttextureName --[[ string ]], \n\t\trpBonus --[[ integer ]], \n\t\tcolorOverlay --[[ integer ]], \n\t\ttitleLabel --[[ string ]]\n\t)",
    "parameters": [
      "textureDict: \n\nThe texture dictionary name for the icon on the left.",
      "textureName: \n\nThe texture name for the icon on the left.",
      "rpBonus: \n\nThe gained \"RP\" amount that will be displayed on the right side of the notification.",
      "colorOverlay: \n\nHudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.",
      "titleLabel: \n\nThe label that will be displayed at the top of the notification (title)."
    ],
    "returns": [
      "The notification handle."
    ],
    "description": "Parameters:\n\ntextureDict: \n\nThe texture dictionary name for the icon on the left.\n\ntextureName: \n\nThe texture name for the icon on the left.\n\nrpBonus: \n\nThe gained \"RP\" amount that will be displayed on the right side of the notification.\n\ncolorOverlay: \n\nHudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.\n\ntitleLabel: \n\nThe label that will be displayed at the top of the notification (title).\n\nReturns:\n\nThe notification handle.\n\nShows an \"award\" notification above the minimap, lua example result:\n\nOld description:\n\nExample:  \nUI::_SET_NOTIFICATION_TEXT_ENTRY(\"HUNT\");  \nUI::_0xAA295B6F28BD587D(\"Hunting\", \"Hunting_Gold_128\", 0, 109, \"HUD_MED_UNLKED\");"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostCrewRankup",
    "hash": "0x8EFCCF6EC66D85E4",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostCrewRankup(\n\t\tchTitle --[[ string ]], \n\t\tclanTxd --[[ string ]], \n\t\tclanTxn --[[ string ]], \n\t\tisImportant --[[ boolean ]], \n\t\tshowSubtitle --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostCrewtag",
    "hash": "0x97C9E4E7024A8F2C",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_CREWTAG\nlocal retval --[[ integer ]], crewTag --[[ integer ]] =\n\tEndTextCommandThefeedPostCrewtag(\n\t\tcrewTypeIsPrivate --[[ boolean ]], \n\t\tcrewTagContainsRockstar --[[ boolean ]], \n\t\trank --[[ integer ]], \n\t\thasFounderStatus --[[ boolean ]], \n\t\tisImportant --[[ boolean ]], \n\t\tclanHandle --[[ integer ]], \n\t\tr --[[ integer ]], \n\t\tg --[[ integer ]], \n\t\tb --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function and the one below it are for after you receive an invite, not sending it.  \np0 = 1 or 0  \nnothin doin.   \nint invite(Player player)  \n\t{  \nint iVar2, iVar3;  \nnetworkHandleMgr handle;  \nNETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);  \nnetworkClanMgr clan;  \nchar *playerName = GET_PLAYER_NAME(player);  \n_SET_NOTIFICATION_TEXT_ENTRY(\"STRING\");  \n_SET_NOTIFACTION_COLOR_NEXT(0);  \nADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  \nif (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))  \n{  \n\tiVar2 = 0;  \n\tif (ARE_STRINGS_EQUAL(clan.unk22, \"Leader\") && clan.unk30 == 0)  \n\t{  \niVar2 = 1;  \n\t}  \n\tif (clan.unk21 > 0)  \n\t{  \niVar3 = 0;  \n\t}  \n\telse  \n\t{  \niVar3 = 1;  \n\t}  \n\tBOOL unused = _0x54E79E9C(&clan.clanHandle, 35);  \n\treturn _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /*unused*/, &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);  \n}  \n\t}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostCrewtagWithGameName",
    "hash": "0x137BC35589E34E1E",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME\nlocal retval --[[ integer ]], crewTag --[[ integer ]] =\n\tEndTextCommandThefeedPostCrewtagWithGameName(\n\t\tcrewTypeIsPrivate --[[ boolean ]], \n\t\tcrewTagContainsRockstar --[[ boolean ]], \n\t\trank --[[ integer ]], \n\t\tisLeader --[[ boolean ]], \n\t\tisImportant --[[ boolean ]], \n\t\tclanHandle --[[ integer ]], \n\t\tgamerStr --[[ string ]], \n\t\tr --[[ integer ]], \n\t\tg --[[ integer ]], \n\t\tb --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 = 1 or 0  \ncrashes my game...  \nthis is for sending invites to network players - jobs/apartment/ect...   \nreturn notification handle  \nint invite(Player player)  \n\t{  \nnetworkHandleMgr netHandle;  \nnetworkClanMgr clan;  \nchar *playerName = GET_PLAYER_NAME(player);  \n_SET_NOTIFICATION_TEXT_ENTRY(\"STRING\");  \n_SET_NOTIFACTION_COLOR_NEXT(1);  \nADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  \nNETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);  \nif (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))  \n{  \n\tNETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);  \n\t_DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);  \n}  \n\t}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostMessagetext",
    "hash": "0x1CCD9A37359072CF",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostMessagetext(\n\t\ttextureDict --[[ string ]], \n\t\ttextureName --[[ string ]], \n\t\tflash --[[ boolean ]], \n\t\ticonType --[[ integer ]], \n\t\tsender --[[ string ]], \n\t\tsubject --[[ string ]]\n\t)",
    "parameters": [
      "textureDict: \n\nThe texture dictionary for the icon.",
      "textureName: \n\nThe texture name for the icon.",
      "flash: \n\nFlash, doesn't seem to work no matter what.",
      "iconType: \n\nThe icon type, see the list in the description below.",
      "sender: \n\nThe notification title.",
      "subject: \n\nThe notification subtitle."
    ],
    "returns": [
      "The notification handle."
    ],
    "description": "Parameters:\n\ntextureDict: \n\nThe texture dictionary for the icon.\n\ntextureName: \n\nThe texture name for the icon.\n\nflash: \n\nFlash, doesn't seem to work no matter what.\n\niconType: \n\nThe icon type, see the list in the description below.\n\nsender: \n\nThe notification title.\n\nsubject: \n\nThe notification subtitle.\n\nReturns:\n\nThe notification handle.\n\nSets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).\n\nTexture dictionary and texture name parameters are usually the same exact value.\n\nExample result:\n\nOld description with list of possible icons and texture names:\n\nList of picNames: pastebin.com/XdpJVbHz  \nflash is a bool for fading in.  \niconTypes:  \n1 : Chat Box  \n2 : Email  \n3 : Add Friend Request  \n4 : Nothing  \n5 : Nothing  \n6 : Nothing  \n7 : Right Jumping Arrow  \n8 : RP Icon  \n9 : $ Icon  \n\"sender\" is the very top header. This can be any old string.  \n\"subject\" is the header under the sender."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostMessagetextGxtEntry",
    "hash": "0xC6F580E4C94926AC",
    "code": "-- _END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_GXT_ENTRY\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostMessagetextGxtEntry(\n\t\ttxdName --[[ string ]], \n\t\ttextureName --[[ string ]], \n\t\tflash --[[ boolean ]], \n\t\ticonType --[[ integer ]], \n\t\tsender --[[ string ]], \n\t\tsubject --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT. Needs more research. Only one type of usage in the scripts: HUD::_C6F580E4C94926AC(\"CHAR_ACTING_UP\", \"CHAR_ACTING_UP\", 0, 0, \"DI_FEED_CHAR\", a_0);"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostMessagetextTu",
    "hash": "0x1E6611149DB3DB6B",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostMessagetextTu(\n\t\tpicTxd --[[ string ]], \n\t\tpicTxn --[[ string ]], \n\t\tflash --[[ boolean ]], \n\t\ticonType --[[ integer ]], \n\t\tnameStr --[[ string ]], \n\t\tsubtitleStr --[[ string ]], \n\t\tdurationMultiplier --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example, only occurrence in the scripts:\n\nv_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU(\"CHAR_SOCIAL_CLUB\", \"CHAR_SOCIAL_CLUB\", 0, 0, &v_9, \"\", a_5);\n\nExample result:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostMessagetextWithCrewTag",
    "hash": "0x5CBF7BADE20DB93E",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostMessagetextWithCrewTag(\n\t\tpicTxd --[[ string ]], \n\t\tpicTxn --[[ string ]], \n\t\tflash --[[ boolean ]], \n\t\ticonType --[[ integer ]], \n\t\tnameStr --[[ string ]], \n\t\tsubtitleStr --[[ string ]], \n\t\tduration --[[ number ]], \n\t\tcrewPackedStr --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "List of picNames pastebin.com/XdpJVbHz  \nflash is a bool for fading in.  \niconTypes:  \n1 : Chat Box  \n2 : Email  \n3 : Add Friend Request  \n4 : Nothing  \n5 : Nothing  \n6 : Nothing  \n7 : Right Jumping Arrow  \n8 : RP Icon  \n9 : $ Icon  \n\"sender\" is the very top header. This can be any old string.  \n\"subject\" is the header under the sender.  \n\"duration\" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.  \n\"clanTag\" shows a crew tag in the \"sender\" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. \"MK\" becomes \"___MK\", \"ACE\" becomes \"___ACE\", etc.)"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon",
    "hash": "0x531B84E7DA981FB6",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(\n\t\tpicTxd --[[ string ]], \n\t\tpicTxn --[[ string ]], \n\t\tflash --[[ boolean ]], \n\t\ticonType1 --[[ integer ]], \n\t\tnameStr --[[ string ]], \n\t\tsubtitleStr --[[ string ]], \n\t\tduration --[[ number ]], \n\t\tcrewPackedStr --[[ string ]], \n\t\ticonType2 --[[ integer ]], \n\t\ttextColor --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "List of picNames: pastebin.com/XdpJVbHz  \nflash is a bool for fading in.  \niconTypes:  \n1 : Chat Box  \n2 : Email  \n3 : Add Friend Request  \n4 : Nothing  \n5 : Nothing  \n6 : Nothing  \n7 : Right Jumping Arrow  \n8 : RP Icon  \n9 : $ Icon  \n\"sender\" is the very top header. This can be any old string.  \n\"subject\" is the header under the sender.  \n\"duration\" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.  \n\"clanTag\" shows a crew tag in the \"sender\" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. \"MK\" becomes \"___MK\", \"ACE\" becomes \"___ACE\", etc.)  \niconType2 is a mirror of iconType. It shows in the \"subject\" line, right under the original iconType.  \nint IconNotification(char *text, char *text2, char *Subject)  \n{  \n\t_SET_NOTIFICATION_TEXT_ENTRY(\"STRING\");  \n\tADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  \n\t_SET_NOTIFICATION_MESSAGE_CLAN_TAG_2(\"CHAR_SOCIAL_CLUB\", \"CHAR_SOCIAL_CLUB\", 1, 7, text2, Subject, 1.0f, \"__EXAMPLE\", 7);  \n\treturn _DRAW_NOTIFICATION(1, 1);  \n}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostMpticker",
    "hash": "0xF020C96915705B3A",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_MPTICKER\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostMpticker(\n\t\tblink --[[ boolean ]], \n\t\tbHasTokens --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostReplayIcon",
    "hash": "0xD202B92CBF1D816F",
    "code": "-- _END_TEXT_COMMAND_THEFEED_POST_REPLAY_ICON\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostReplayIcon(\n\t\teType --[[ integer ]], \n\t\tiIcon --[[ integer ]], \n\t\tsTitle --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returns a notification handle, prints out a notification like below:  \ntype range: 0   \nif you set type to 1, image goes from 0 - 39 - Xbox you can add text to  \nexample:   \nUI::_0xD202B92CBF1D816F(1, 20, \"Who you trynna get crazy with, ese? Don't you know I'm LOCO?!\");"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostReplayInput",
    "hash": "0xDD6CB2CCE7C2735C",
    "code": "-- _END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostReplayInput(\n\t\ttype --[[ integer ]], \n\t\tbutton --[[ string ]], \n\t\ttext --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returns a notification handle, prints out a notification like below:\ntype range: 0 - 2\nif you set type to 1, button accepts \"~INPUT_SOMETHING~\"\nexample:\nHUD::_0xDD6CB2CCE7C2735C(1, \"~INPUT_TALK~\", \"Who you trynna get crazy with, ese? Don't you know I'm LOCO?!\");\n- imgur.com/UPy0Ial\nExamples from the scripts:\nl_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,\"~INPUT_REPLAY_START_STOP_RECORDING~\",\"\");\nl_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,\"~INPUT_SAVE_REPLAY_CLIP~\",\"\");\nl_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,\"~INPUT_REPLAY_START_STOP_RECORDING~\",\"\");\nl_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,\"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~\",\"\");"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostStats",
    "hash": "0x2B7E9A4EAAA93C89",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_STATS\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostStats(\n\t\tstatTitle --[[ string ]], \n\t\ticonEnum --[[ integer ]], \n\t\tstepVal --[[ boolean ]], \n\t\tbarValue --[[ integer ]], \n\t\tisImportant --[[ boolean ]], \n\t\tpicTxd --[[ string ]], \n\t\tpicTxn --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [
      "The notification handle."
    ],
    "description": "Returns:\n\nThe notification handle.\n\nList of picture names\n\nExample result:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostTicker",
    "hash": "0x2ED7843F8F801023",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_TICKER\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostTicker(\n\t\tisImportant --[[ boolean ]], \n\t\tbHasTokens --[[ boolean ]]\n\t)",
    "parameters": [
      "isImportant: \n\nMakes the notification flash on the screen.",
      "bHasTokens: \n\nMakes the notification appear in the \"Pause Menu > Info/Brief > Notifications\" section."
    ],
    "returns": [
      "The notification handle."
    ],
    "description": "Parameters:\n\nisImportant: \n\nMakes the notification flash on the screen.\n\nbHasTokens: \n\nMakes the notification appear in the \"Pause Menu > Info/Brief > Notifications\" section.\n\nReturns:\n\nThe notification handle.\n\nExample output preview:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostTickerForced",
    "hash": "0x44FA03975424A0EE",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostTickerForced(\n\t\tblink --[[ boolean ]], \n\t\tbHasTokens --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostTickerWithTokens",
    "hash": "0x378E809BF61EC840",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostTickerWithTokens(\n\t\tisImportant --[[ boolean ]], \n\t\tbHasTokens --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostUnlock",
    "hash": "0x33EE12743CCD6343",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_UNLOCK\nlocal retval --[[ Any ]] =\n\tEndTextCommandThefeedPostUnlock(\n\t\tchTitle --[[ string ]], \n\t\ticonType --[[ integer ]], \n\t\tchSubtitle --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostUnlockTu",
    "hash": "0xC8F3AAF93D0600BF",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU\nlocal retval --[[ Any ]] =\n\tEndTextCommandThefeedPostUnlockTu(\n\t\tchTitle --[[ string ]], \n\t\ticonType --[[ integer ]], \n\t\tchSubtitle --[[ string ]], \n\t\tisImportant --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostUnlockTuWithColor",
    "hash": "0x7AE0589093A2E088",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR\nlocal retval --[[ Any ]] =\n\tEndTextCommandThefeedPostUnlockTuWithColor(\n\t\tchTitle --[[ string ]], \n\t\ticonType --[[ integer ]], \n\t\tchSubtitle --[[ string ]], \n\t\tisImportant --[[ boolean ]], \n\t\ttitleColor --[[ integer ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "EndTextCommandThefeedPostVersusTu",
    "hash": "0xB6871B0555B02996",
    "code": "-- END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU\nlocal retval --[[ integer ]] =\n\tEndTextCommandThefeedPostVersusTu(\n\t\tch1TXD --[[ string ]], \n\t\tch1TXN --[[ string ]], \n\t\tval1 --[[ integer ]], \n\t\tch2TXD --[[ string ]], \n\t\tch2TXN --[[ string ]], \n\t\tval2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 7: int hudColorIndex1\nNativeDB Added Parameter 8: int hudColorIndex2"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "FlagPlayerContextInTournament",
    "hash": "0xCEF214315D276FD1",
    "code": "-- FLAG_PLAYER_CONTEXT_IN_TOURNAMENT\nFlagPlayerContextInTournament(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "FlashAbilityBar",
    "hash": "0x02CFBA0C9E9275CE",
    "code": "-- FLASH_ABILITY_BAR\nFlashAbilityBar(\n\tmillisecondsToFlash --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "FlashMinimapDisplay",
    "hash": "0xF2DD778C22B15BDA",
    "code": "-- FLASH_MINIMAP_DISPLAY\nFlashMinimapDisplay()",
    "parameters": [],
    "returns": [],
    "description": "adds a short flash to the Radar/Minimap  \nUsage: UI.FLASH_MINIMAP_DISPLAY"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "FlashMinimapDisplayWithColor",
    "hash": "0x6B1DE27EE78E6A19",
    "code": "-- FLASH_MINIMAP_DISPLAY_WITH_COLOR\nFlashMinimapDisplayWithColor(\n\thudColorIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "FlashWantedDisplay",
    "hash": "0xA18AFB39081B6A1F",
    "code": "-- FLASH_WANTED_DISPLAY\nFlashWantedDisplay(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ForceCloseReportugcMenu",
    "hash": "0xEE4C0E6DBC6F2C6F",
    "code": "-- FORCE_CLOSE_REPORTUGC_MENU\nForceCloseReportugcMenu()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ForceCloseTextInputBox",
    "hash": "0x8817605C2BA76200",
    "code": "-- FORCE_CLOSE_TEXT_INPUT_BOX\nForceCloseTextInputBox()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ForceSonarBlipsThisFrame",
    "hash": "0x1121BFA1A1A522A8",
    "code": "-- FORCE_SONAR_BLIPS_THIS_FRAME\nlocal retval --[[ Any ]] =\n\tForceSonarBlipsThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Doesn't actually return anything."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetAiBlip",
    "hash": "0x56176892826A4FE8",
    "code": "-- _GET_AI_BLIP\nlocal retval --[[ Blip ]] =\n\tGetAiBlip(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the current AI BLIP for the specified ped"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetAiBlip_2",
    "hash": "0x7CD934010E115C2C",
    "code": "-- _GET_AI_BLIP_2\nlocal retval --[[ Blip ]] =\n\tGetAiBlip_2(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipAlpha",
    "hash": "0x970F608F0EE6C885",
    "code": "-- GET_BLIP_ALPHA\nlocal retval --[[ integer ]] =\n\tGetBlipAlpha(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipColour",
    "hash": "0xDF729E8D20CF7327",
    "code": "-- GET_BLIP_COLOUR\nlocal retval --[[ integer ]] =\n\tGetBlipColour(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipCoords",
    "hash": "0x586AFE3FF72D996E",
    "code": "-- GET_BLIP_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetBlipCoords(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipFromEntity",
    "hash": "0xBC8DBDCA2436F7E8",
    "code": "-- GET_BLIP_FROM_ENTITY\nlocal retval --[[ Blip ]] =\n\tGetBlipFromEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the Blip handle of given Entity."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipHudColour",
    "hash": "0x729B5F1EFBC0AAEE",
    "code": "-- GET_BLIP_HUD_COLOUR\nlocal retval --[[ integer ]] =\n\tGetBlipHudColour(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipInfoIdCoord",
    "hash": "0xFA7C7F0AADF25D09",
    "code": "-- GET_BLIP_INFO_ID_COORD\nlocal retval --[[ vector3 ]] =\n\tGetBlipInfoIdCoord(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipInfoIdDisplay",
    "hash": "0x1E314167F701DC3B",
    "code": "-- GET_BLIP_INFO_ID_DISPLAY\nlocal retval --[[ integer ]] =\n\tGetBlipInfoIdDisplay(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipInfoIdEntityIndex",
    "hash": "0x4BA4E2553AFEDC2C",
    "code": "-- GET_BLIP_INFO_ID_ENTITY_INDEX\nlocal retval --[[ Entity ]] =\n\tGetBlipInfoIdEntityIndex(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipInfoIdPickupIndex",
    "hash": "0x9B6786E4C03DD382",
    "code": "-- GET_BLIP_INFO_ID_PICKUP_INDEX\nlocal retval --[[ Pickup ]] =\n\tGetBlipInfoIdPickupIndex(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipInfoIdType",
    "hash": "0xBE9B0959FFD0779B",
    "code": "-- GET_BLIP_INFO_ID_TYPE\nlocal retval --[[ integer ]] =\n\tGetBlipInfoIdType(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a value based on what the blip is attached to\n1 - Vehicle\n2 - Ped\n3 - Object\n4 - Coord\n5 - unk\n6 - Pickup\n7 - Radius"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipRotation",
    "hash": "0x003E92BA477F9D7F",
    "code": "-- _GET_BLIP_ROTATION\nlocal retval --[[ integer ]] =\n\tGetBlipRotation(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetBlipSprite",
    "hash": "0x1FC877464A04FC4F",
    "code": "-- GET_BLIP_SPRITE\nlocal retval --[[ integer ]] =\n\tGetBlipSprite(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [
      "blip: \n\nThe blip handle."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip handle.\n\nGets the sprite id of the specified blip. Blip sprite ids and images can be found here."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetClosestBlipOfType",
    "hash": "0xD484BF71050CA1EE",
    "code": "-- _GET_CLOSEST_BLIP_OF_TYPE\nlocal retval --[[ Blip ]] =\n\tGetClosestBlipOfType(\n\t\tblipSprite --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetCurrentFrontendMenuVersion",
    "hash": "0x2309595AD6145265",
    "code": "-- GET_CURRENT_FRONTEND_MENU_VERSION\nlocal retval --[[ Hash ]] =\n\tGetCurrentFrontendMenuVersion()",
    "parameters": [],
    "returns": [],
    "description": "if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat(\"fe_menu_version_empty_no_background\"))"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetCurrentWebpageId",
    "hash": "0x01A358D9128B7A86",
    "code": "-- GET_CURRENT_WEBPAGE_ID\nlocal retval --[[ integer ]] =\n\tGetCurrentWebpageId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetCurrentWebsiteId",
    "hash": "0x97D47996FC48CBAD",
    "code": "-- GET_CURRENT_WEBSITE_ID\nlocal retval --[[ integer ]] =\n\tGetCurrentWebsiteId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetDefaultScriptRendertargetRenderId",
    "hash": "0x52F0982D7FD156B6",
    "code": "-- GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID\nlocal retval --[[ integer ]] =\n\tGetDefaultScriptRendertargetRenderId()",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 1."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetFilenameForAudioConversation",
    "hash": "0x7B5280EBA9840C72",
    "code": "-- GET_FILENAME_FOR_AUDIO_CONVERSATION\nlocal retval --[[ string ]] =\n\tGetFilenameForAudioConversation(\n\t\tlabelName --[[ string ]]\n\t)",
    "parameters": [
      "labelName: \n\nThe label name for which the audio conversation filename is requested."
    ],
    "returns": [
      "Returns the filename associated with the provided labelName."
    ],
    "description": "Parameters:\n\nlabelName: \n\nThe label name for which the audio conversation filename is requested.\n\nReturns:\n\nReturns the filename associated with the provided labelName.\n\nGets a localized string literal from a label name. This is used to get the filename of the audio conversation associated with the provided label name."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetFirstBlipInfoId",
    "hash": "0x1BEDE233E6CD2A1F",
    "code": "-- GET_FIRST_BLIP_INFO_ID\nlocal retval --[[ Blip ]] =\n\tGetFirstBlipInfoId(\n\t\tblipSprite --[[ integer ]]\n\t)",
    "parameters": [
      "blipSprite: \n\nSprite ID, see the Blips Game Reference for the full list."
    ],
    "returns": [
      "Returns the first blip ID in an interator that has the specified blip sprite."
    ],
    "description": "Parameters:\n\nblipSprite: \n\nSprite ID, see the Blips Game Reference for the full list.\n\nReturns:\n\nReturns the first blip ID in an interator that has the specified blip sprite.\n\nAlso see GET_NEXT_BLIP_INFO_ID for an example."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetGlobalActionscriptFlag",
    "hash": "0xE3B05614DCE1D014",
    "code": "-- GET_GLOBAL_ACTIONSCRIPT_FLAG\nlocal retval --[[ integer ]] =\n\tGetGlobalActionscriptFlag(\n\t\tflagIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the ActionScript flagValue.\nActionScript flags are global flags that scaleforms use\nFlags found during testing\n0: Returns 1 if the web_browser keyboard is open, otherwise 0\n1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)\n2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed\n9: Returns the current selection on the mobile phone scaleform\nThere are 20 flags in total."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetHudColour",
    "hash": "0x7C9C91AB74A0360F",
    "code": "-- GET_HUD_COLOUR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]], a --[[ integer ]] =\n\tGetHudColour(\n\t\thudColorIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets hud color RGBA parameter values by passing a hud color index (hudColorIndex).\n\nHUD colors can be found here"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetHudComponentPosition",
    "hash": "0x223CA69A8C4417FD",
    "code": "-- GET_HUD_COMPONENT_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetHudComponentPosition(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetHudScreenPositionFromWorldPosition",
    "hash": "0xF9904D11F1ACBEC3",
    "code": "-- GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION\nlocal retval --[[ boolean ]], screenX --[[ number ]], screenY --[[ number ]] =\n\tGetHudScreenPositionFromWorldPosition(\n\t\tworldX --[[ number ]], \n\t\tworldY --[[ number ]], \n\t\tworldZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "World to relative screen coords\nthis world to screen will keep the text on screen. it will keep it in the screen pos"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetLengthOfLiteralString",
    "hash": "0xF030907CCBB8A9FD",
    "code": "-- GET_LENGTH_OF_LITERAL_STRING\nlocal retval --[[ integer ]] =\n\tGetLengthOfLiteralString(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the length of the string passed (much like strlen)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetLengthOfLiteralStringInBytes",
    "hash": "0x43E4111189E54F0E",
    "code": "-- GET_LENGTH_OF_LITERAL_STRING_IN_BYTES\nlocal retval --[[ integer ]] =\n\tGetLengthOfLiteralStringInBytes(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetLengthOfStringWithThisTextLabel",
    "hash": "0x801BD273D3A23F74",
    "code": "-- GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL\nlocal retval --[[ integer ]] =\n\tGetLengthOfStringWithThisTextLabel(\n\t\tgxt --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the string length of the string from the gxt string ."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMainPlayerBlipId",
    "hash": "0xDCD4EC3F419D02FA",
    "code": "-- GET_MAIN_PLAYER_BLIP_ID\nlocal retval --[[ Blip ]] =\n\tGetMainPlayerBlipId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMenuPedBoolStat",
    "hash": "0x052991E59076E4E4",
    "code": "-- GET_MENU_PED_BOOL_STAT\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tGetMenuPedBoolStat(\n\t\tp0 --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 was always 0xAE2602A3."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMenuPedFloatStat",
    "hash": "0x5FBD7095FE7AE57F",
    "code": "-- GET_MENU_PED_FLOAT_STAT\nlocal retval --[[ boolean ]], p1 --[[ number ]] =\n\tGetMenuPedFloatStat(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMenuPedIntStat",
    "hash": "0xEF4CED81CEBEDC6D",
    "code": "-- GET_MENU_PED_INT_STAT\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tGetMenuPedIntStat(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMenuPedMaskedIntStat",
    "hash": "0x90A6526CF0381030",
    "code": "-- GET_MENU_PED_MASKED_INT_STAT\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tGetMenuPedMaskedIntStat(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMinimapFowCoordinateIsRevealed",
    "hash": "0x6E31B91145873922",
    "code": "-- GET_MINIMAP_FOW_COORDINATE_IS_REVEALED\nlocal retval --[[ boolean ]] =\n\tGetMinimapFowCoordinateIsRevealed(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMinimapFowDiscoveryRatio",
    "hash": "0xE0130B41D3CF4574",
    "code": "-- GET_MINIMAP_FOW_DISCOVERY_RATIO\nlocal retval --[[ number ]] =\n\tGetMinimapFowDiscoveryRatio()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetMouseEvent",
    "hash": "0x632B2940C67F4EA9",
    "code": "-- GET_MOUSE_EVENT\nlocal retval --[[ boolean ]], received --[[ bool ]], selectionType --[[ integer ]], context --[[ integer ]], slotIndex --[[ integer ]] =\n\tGetMouseEvent(\n\t\tscaleformHandle --[[ integer ]]\n\t)",
    "parameters": [
      "scaleformHandle: \n\nHandle of the scaleform",
      "received: \n\nReturns a boolean indicating if the data was received successfully (in Lua).",
      "selectionType: \n\nThe type of MouseEvent specified above.",
      "context: \n\nContext of the slot the mouse is hovering on.",
      "slotIndex: \n\nIndex of the slot the mouse is hovering on."
    ],
    "returns": [],
    "description": "Parameters:\n\nscaleformHandle: \n\nHandle of the scaleform\n\nreceived: \n\nReturns a boolean indicating if the data was received successfully (in Lua).\n\nselectionType: \n\nThe type of MouseEvent specified above.\n\ncontext: \n\nContext of the slot the mouse is hovering on.\n\nslotIndex: \n\nIndex of the slot the mouse is hovering on.\n\nReturns:\nretVal Returns true if MOUSE_EVENT callback from Scaleforms has been called.\n\nGets mouse event data from scaleforms with mouse support. Must be checked every frame. Returns item index if using the COLOUR_SWITCHER_02 scaleform. Selection types, found in MOUSE_EVENTS.as: MOUSE_DRAG_OUT = 0; MOUSE_DRAG_OVER = 1; MOUSE_DOWN = 2; MOUSE_MOVE = 3; MOUSE_UP = 4; MOUSE_PRESS = 5; MOUSE_RELEASE = 6; MOUSE_RELEASE_OUTSIDE = 7; MOUSE_ROLL_OUT = 8; MOUSE_ROLL_OVER = 9; MOUSE_WHEEL_UP = 10; MOUSE_WHEEL_DOWN = 11;\n\nScaleforms that this works with:\n\nCOLOUR_SWITCHER_02\nMP_RESULTS_PANEL\nMP_NEXT_JOB_SELECTION\nSC_LEADERBOARD Probably works with other scaleforms, needs more research. In order to use this Native you MUST have controls 239, 240, 237, 238 enabled! This native, due to its erroneous redundancy of the returned boolean value, works differently in C#: shifting the parameters (where received becomes selectionType and so on making the fourth parameter unused and always 0)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetNamedRendertargetRenderId",
    "hash": "0x1A6478B61C6BDC3B",
    "code": "-- GET_NAMED_RENDERTARGET_RENDER_ID\nlocal retval --[[ integer ]] =\n\tGetNamedRendertargetRenderId(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetNewSelectedMissionCreatorBlip",
    "hash": "0x5C90988E7C8E1AF4",
    "code": "-- GET_NEW_SELECTED_MISSION_CREATOR_BLIP\nlocal retval --[[ Blip ]] =\n\tGetNewSelectedMissionCreatorBlip()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetNextBlipInfoId",
    "hash": "0x14F96AA50D6FBEA7",
    "code": "-- GET_NEXT_BLIP_INFO_ID\nlocal retval --[[ Blip ]] =\n\tGetNextBlipInfoId(\n\t\tblipSprite --[[ integer ]]\n\t)",
    "parameters": [
      "blipSprite: \n\nSprite ID, see the Game Reference for the full list."
    ],
    "returns": [
      "Returns the next blip ID in an interator that has the specified blip sprite."
    ],
    "description": "Parameters:\n\nblipSprite: \n\nSprite ID, see the Game Reference for the full list.\n\nReturns:\n\nReturns the next blip ID in an interator that has the specified blip sprite."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetNorthRadarBlip",
    "hash": "0x3F0CF9CB7E589B88",
    "code": "-- _GET_NORTH_RADAR_BLIP\nlocal retval --[[ Blip ]] =\n\tGetNorthRadarBlip()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetNumberOfActiveBlips",
    "hash": "0x9A3FF3DE163034E8",
    "code": "-- GET_NUMBER_OF_ACTIVE_BLIPS\nlocal retval --[[ integer ]] =\n\tGetNumberOfActiveBlips()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetPauseMenuCursorPosition",
    "hash": "0x5BFF36D6ED83E0AE",
    "code": "-- _GET_PAUSE_MENU_CURSOR_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetPauseMenuCursorPosition()",
    "parameters": [],
    "returns": [
      "If the pause menu is open, it will return a Vector3, Z is always 0. If the pause menu is closed, it will return Vector3.Zero"
    ],
    "description": "Returns:\n\nIf the pause menu is open, it will return a Vector3, Z is always 0. If the pause menu is closed, it will return Vector3.Zero\n\nName between GET_ONSCREEN_KEYBOARD_RESULT and GET_PAUSE_MENU_STATE. Likely, GET_PAUSE_MENU_*."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetPauseMenuSelection",
    "hash": "0x36C1451A88A09630",
    "code": "-- _GET_PAUSE_MENU_SELECTION\nlocal lastItemMenuId --[[ integer ]], selectedItemUniqueId --[[ integer ]] =\n\tGetPauseMenuSelection()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetPauseMenuSelectionData",
    "hash": "0x7E17BE53E1AAABAF",
    "code": "-- _GET_PAUSE_MENU_SELECTION_DATA\nlocal lastItemMenuId --[[ integer ]], selectedItemMenuId --[[ integer ]], selectedItemUniqueId --[[ integer ]] =\n\tGetPauseMenuSelectionData()",
    "parameters": [],
    "returns": [],
    "description": "lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)\nselectedItemMenuId: same as lastItemMenuId except for the currently selected menu item\nselectedItemUniqueId: this is uniqueID of the currently selected menu item\nwhen the pausemenu is closed:\nlastItemMenuId = -1\nselectedItemMenuId = -1\nselectedItemUniqueId = 0\nwhen the header gains focus:\nlastItemMenuId updates as normal or 0 if the pausemenu was just opened\nselectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened\nselectedItemUniqueId = -1\nwhen focus is moved from the header to a pausemenu page:\nlastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)\nselectedItemMenuId = -1\nselectedItemUniqueId updates as normal"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetPauseMenuState",
    "hash": "0x272ACD84970869C5",
    "code": "-- GET_PAUSE_MENU_STATE\nlocal retval --[[ integer ]] =\n\tGetPauseMenuState()",
    "parameters": [],
    "returns": [],
    "description": "enum ePauseMenuState\n{\n    PM_INACTIVE \t =  0,\n    PM_STARTING_UP \t =  5,\n    PM_RESTARTING \t = 10,\n    PM_READY \t\t = 15,\n    PM_IN_STORE \t = 20,\n    PM_IN_SC_MENU \t = 25,\n    PM_SHUTTING_DOWN = 30,\n    PM_IN_VIDEOEDITOR = 35,\n}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetRenderedCharacterHeight",
    "hash": "0xDB88A37483346780",
    "code": "-- GET_RENDERED_CHARACTER_HEIGHT\nlocal retval --[[ number ]] =\n\tGetRenderedCharacterHeight(\n\t\tsize --[[ number ]], \n\t\tfont --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.\nOld name: _GET_TEXT_SCALE_HEIGHT"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetStandardBlipEnumId",
    "hash": "0x4A9923385BDB9DAD",
    "code": "-- GET_STANDARD_BLIP_ENUM_ID\nlocal retval --[[ integer ]] =\n\tGetStandardBlipEnumId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetStreetNameFromHashKey",
    "hash": "0xD0EF8A959B8A4CB9",
    "code": "-- GET_STREET_NAME_FROM_HASH_KEY\nlocal retval --[[ string ]] =\n\tGetStreetNameFromHashKey(\n\t\thash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Converts the hash of a street name into a readable string. To retrieve a hash for a given (street) coordinate, see GET_STREET_NAME_AT_COORD."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetTextSubstring",
    "hash": "0x169BD9382084C8C0",
    "code": "-- _GET_TEXT_SUBSTRING\nlocal retval --[[ string ]] =\n\tGetTextSubstring(\n\t\ttext --[[ string ]], \n\t\tposition --[[ integer ]], \n\t\tlength --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a substring of a specified length starting at a specified position.\nExample:\n// Get \"STRING\" text from \"MY_STRING\"\nsubStr = HUD::_GET_TEXT_SUBSTRING(\"MY_STRING\", 3, 6);"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetTextSubstringSafe",
    "hash": "0xB2798643312205C5",
    "code": "-- _GET_TEXT_SUBSTRING_SAFE\nlocal retval --[[ string ]] =\n\tGetTextSubstringSafe(\n\t\ttext --[[ string ]], \n\t\tposition --[[ integer ]], \n\t\tlength --[[ integer ]], \n\t\tmaxLength --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.\nNOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69\nExample:\n// Condensed example of how Rockstar uses this function\nstrLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());\nsubStr = HUD::_GET_TEXT_SUBSTRING_SAFE(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);\n--\n\"fm_race_creator.ysc\", line 85115:\n// parameters modified for clarity\nBOOL sub_8e5aa(char *text, int length) {\n    for (i = 0; i <= (length - 2); i += 1) {\n        if (!MISC::ARE_STRINGS_EQUAL(HUD::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), \" \")) {\n            return FALSE;\n        }\n    }\n    return TRUE;\n}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetTextSubstringSlice",
    "hash": "0xCE94AEBA5D82908A",
    "code": "-- _GET_TEXT_SUBSTRING_SLICE\nlocal retval --[[ string ]] =\n\tGetTextSubstringSlice(\n\t\ttext --[[ string ]], \n\t\tstartPosition --[[ integer ]], \n\t\tendPosition --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).\nExample:\n// Get \"STRING\" text from \"MY_STRING\"\nsubStr = HUD::_GET_TEXT_SUBSTRING_SLICE(\"MY_STRING\", 3, 9);\n// Overflows are possibly replaced with underscores (needs verification)\nsubStr = HUD::_GET_TEXT_SUBSTRING_SLICE(\"MY_STRING\", 3, 10); // \"STRING_\"?"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetWarningMessageTitleHash",
    "hash": "0x81DF9ABA6C83DFF9",
    "code": "-- _GET_WARNING_MESSAGE_TITLE_HASH\nlocal retval --[[ Hash ]] =\n\tGetWarningMessageTitleHash()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GetWaypointBlipEnumId",
    "hash": "0x186E5D252FA50E7D",
    "code": "-- GET_WAYPOINT_BLIP_ENUM_ID\nlocal retval --[[ integer ]] =\n\tGetWaypointBlipEnumId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "GivePedToPauseMenu",
    "hash": "0xAC0BFBDC3BE00E14",
    "code": "-- GIVE_PED_TO_PAUSE_MENU\nGivePedToPauseMenu(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 is either 1 or 2 in the PC scripts.  \n\nThis native is used to \"give\"/duplicate a player ped to a frontend menu as configured via the ACTIVATE_FRONTEND_MENU native, you first must utilize the CLONE_PED to clone said ped."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HasAdditionalTextLoaded",
    "hash": "0x02245FE4BED318B8",
    "code": "-- HAS_ADDITIONAL_TEXT_LOADED\nlocal retval --[[ boolean ]] =\n\tHasAdditionalTextLoaded(\n\t\tslot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HasDirectorModeBeenTriggered",
    "hash": "0xA277800A9EAE340E",
    "code": "-- _HAS_DIRECTOR_MODE_BEEN_TRIGGERED\nlocal retval --[[ boolean ]] =\n\tHasDirectorModeBeenTriggered()",
    "parameters": [],
    "returns": [],
    "description": "HAS_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HasThisAdditionalTextLoaded",
    "hash": "0xADBF060E2B30C5BC",
    "code": "-- HAS_THIS_ADDITIONAL_TEXT_LOADED\nlocal retval --[[ boolean ]] =\n\tHasThisAdditionalTextLoaded(\n\t\tgxt --[[ string ]], \n\t\tslot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if the specified gxt has loaded into the passed slot."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideAreaAndVehicleNameThisFrame",
    "hash": "0xA4DEDE28B1814289",
    "code": "-- _HIDE_AREA_AND_VEHICLE_NAME_THIS_FRAME\nHideAreaAndVehicleNameThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "HIDE_*_THIS_FRAME\n\nHides area and vehicle name HUD components for one frame."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideHelpTextThisFrame",
    "hash": "0xD46923FC481CA285",
    "code": "-- HIDE_HELP_TEXT_THIS_FRAME\nHideHelpTextThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideHudAndRadarThisFrame",
    "hash": "0x719FF505F097FD20",
    "code": "-- HIDE_HUD_AND_RADAR_THIS_FRAME\nHideHudAndRadarThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideHudComponentThisFrame",
    "hash": "0x6806C51AD12B83B8",
    "code": "-- HIDE_HUD_COMPONENT_THIS_FRAME\nHideHudComponentThisFrame(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This function hides various HUD (Heads-up Display) components.\n\nListed below are the integers and the corresponding HUD component.\n\n1 : WANTED_STARS\n2 : WEAPON_ICON\n3 : CASH\n4 : MP_CASH\n5 : MP_MESSAGE\n6 : VEHICLE_NAME\n7 : AREA_NAME\n8 : VEHICLE_CLASS\n9 : STREET_NAME\n10 : HELP_TEXT\n11 : FLOATING_HELP_TEXT_1\n12 : FLOATING_HELP_TEXT_2\n13 : CASH_CHANGE\n14 : RETICLE\n15 : SUBTITLE_TEXT\n16 : RADIO_STATIONS\n17 : SAVING_GAME\n18 : GAME_STREAM\n19 : WEAPON_WHEEL\n20 : WEAPON_WHEEL_STATS\n21 : HUD_COMPONENTS\n22 : HUD_WEAPONS\n\nThese integers also work for the SHOW_HUD_COMPONENT_THIS_FRAME native, but instead shows the HUD Component."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideLoadingOnFadeThisFrame",
    "hash": "0x4B0311D3CDC4648F",
    "code": "-- HIDE_LOADING_ON_FADE_THIS_FRAME\nHideLoadingOnFadeThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideMinimapExteriorMapThisFrame",
    "hash": "0x5FBAE526203990C9",
    "code": "-- HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME\nHideMinimapExteriorMapThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideMinimapInteriorMapThisFrame",
    "hash": "0x20FE7FDFEEAD38C0",
    "code": "-- HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME\nHideMinimapInteriorMapThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideNumberOnBlip",
    "hash": "0x532CFF637EF80148",
    "code": "-- HIDE_NUMBER_ON_BLIP\nHideNumberOnBlip(\n\tblip --[[ Blip ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HideScriptedHudComponentThisFrame",
    "hash": "0xE374C498D8BADC14",
    "code": "-- HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME\nHideScriptedHudComponentThisFrame(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HudDisplayLoadingScreenTips",
    "hash": "0x488043841BBE156F",
    "code": "-- _HUD_DISPLAY_LOADING_SCREEN_TIPS\nHudDisplayLoadingScreenTips()",
    "parameters": [],
    "returns": [],
    "description": "Displays loading screen tips, requires _0x56C8B608CFD49854 to be called beforehand."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HudForceWeaponWheel",
    "hash": "0xEB354E5376BC81A7",
    "code": "-- HUD_FORCE_WEAPON_WHEEL\nHudForceWeaponWheel(\n\tshow --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces the weapon wheel to show/hide."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HudSetWeaponWheelTopSlot",
    "hash": "0x72C1056D678BB7D8",
    "code": "-- HUD_SET_WEAPON_WHEEL_TOP_SLOT\nHudSetWeaponWheelTopSlot(\n\tweaponHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HudWeaponWheelGetSelectedHash",
    "hash": "0xA48931185F0536FE",
    "code": "-- _HUD_WEAPON_WHEEL_GET_SELECTED_HASH\nlocal retval --[[ Hash ]] =\n\tHudWeaponWheelGetSelectedHash()",
    "parameters": [],
    "returns": [],
    "description": "Returns the weapon hash to the selected/highlighted weapon in the wheel"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HudWeaponWheelGetSlotHash",
    "hash": "0xA13E93403F26C812",
    "code": "-- _HUD_WEAPON_WHEEL_GET_SLOT_HASH\nlocal retval --[[ Hash ]] =\n\tHudWeaponWheelGetSlotHash(\n\t\tweaponTypeIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the weapon hash active in a specific weapon wheel slotList"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HudWeaponWheelIgnoreControlInput",
    "hash": "0x14C9FDCC41F81F63",
    "code": "-- _HUD_WEAPON_WHEEL_IGNORE_CONTROL_INPUT\nHudWeaponWheelIgnoreControlInput(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "HudWeaponWheelIgnoreSelection",
    "hash": "0x0AFC4AF510774B47",
    "code": "-- _HUD_WEAPON_WHEEL_IGNORE_SELECTION\nHudWeaponWheelIgnoreSelection()",
    "parameters": [],
    "returns": [],
    "description": "Calling this each frame, stops the player from receiving a weapon via the weapon wheel."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsBlipFlashing",
    "hash": "0xA5E41FD83AD6CEF0",
    "code": "-- IS_BLIP_FLASHING\nlocal retval --[[ boolean ]] =\n\tIsBlipFlashing(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsBlipOnMinimap",
    "hash": "0xE41CA53051197A27",
    "code": "-- IS_BLIP_ON_MINIMAP\nlocal retval --[[ boolean ]] =\n\tIsBlipOnMinimap(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsBlipShortRange",
    "hash": "0xDA5F8727EB75B926",
    "code": "-- IS_BLIP_SHORT_RANGE\nlocal retval --[[ boolean ]] =\n\tIsBlipShortRange(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsFloatingHelpTextOnScreen",
    "hash": "0x2432784ACA090DA4",
    "code": "-- IS_FLOATING_HELP_TEXT_ON_SCREEN\nlocal retval --[[ boolean ]] =\n\tIsFloatingHelpTextOnScreen(\n\t\thudIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsFrontendReadyForControl",
    "hash": "0x3BAB9A4E4F2FF5C7",
    "code": "-- IS_FRONTEND_READY_FOR_CONTROL\nlocal retval --[[ boolean ]] =\n\tIsFrontendReadyForControl()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsHelpMessageBeingDisplayed",
    "hash": "0x4D79439A6B55AC67",
    "code": "-- IS_HELP_MESSAGE_BEING_DISPLAYED\nlocal retval --[[ boolean ]] =\n\tIsHelpMessageBeingDisplayed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsHelpMessageFadingOut",
    "hash": "0x327EDEEEAC55C369",
    "code": "-- IS_HELP_MESSAGE_FADING_OUT\nlocal retval --[[ boolean ]] =\n\tIsHelpMessageFadingOut()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsHelpMessageOnScreen",
    "hash": "0xDAD37F45428801AE",
    "code": "-- IS_HELP_MESSAGE_ON_SCREEN\nlocal retval --[[ boolean ]] =\n\tIsHelpMessageOnScreen()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsHoveringOverMissionCreatorBlip",
    "hash": "0x4167EFE0527D706E",
    "code": "-- IS_HOVERING_OVER_MISSION_CREATOR_BLIP\nlocal retval --[[ boolean ]] =\n\tIsHoveringOverMissionCreatorBlip()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsHudComponentActive",
    "hash": "0xBC4C9EA5391ECC0D",
    "code": "-- IS_HUD_COMPONENT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsHudComponentActive(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Full list of components below  \nHUD = 0;  \nHUD_WANTED_STARS = 1;  \nHUD_WEAPON_ICON = 2;  \nHUD_CASH = 3;  \nHUD_MP_CASH = 4;  \nHUD_MP_MESSAGE = 5;  \nHUD_VEHICLE_NAME = 6;  \nHUD_AREA_NAME = 7;  \nHUD_VEHICLE_CLASS = 8;  \nHUD_STREET_NAME = 9;  \nHUD_HELP_TEXT = 10;  \nHUD_FLOATING_HELP_TEXT_1 = 11;  \nHUD_FLOATING_HELP_TEXT_2 = 12;  \nHUD_CASH_CHANGE = 13;  \nHUD_RETICLE = 14;  \nHUD_SUBTITLE_TEXT = 15;  \nHUD_RADIO_STATIONS = 16;  \nHUD_SAVING_GAME = 17;  \nHUD_GAME_STREAM = 18;  \nHUD_WEAPON_WHEEL = 19;  \nHUD_WEAPON_WHEEL_STATS = 20;  \nMAX_HUD_COMPONENTS = 21;  \nMAX_HUD_WEAPONS = 22;  \nMAX_SCRIPTED_HUD_COMPONENTS = 141;"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsHudHidden",
    "hash": "0xA86478C6958735C5",
    "code": "-- IS_HUD_HIDDEN\nlocal retval --[[ boolean ]] =\n\tIsHudHidden()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsHudPreferenceSwitchedOn",
    "hash": "0x1930DFA731813EC4",
    "code": "-- IS_HUD_PREFERENCE_SWITCHED_ON\nlocal retval --[[ boolean ]] =\n\tIsHudPreferenceSwitchedOn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMessageBeingDisplayed",
    "hash": "0x7984C03AA5CC2F41",
    "code": "-- IS_MESSAGE_BEING_DISPLAYED\nlocal retval --[[ boolean ]] =\n\tIsMessageBeingDisplayed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMinimapRendering",
    "hash": "0xAF754F20EB5CD51A",
    "code": "-- IS_MINIMAP_RENDERING\nlocal retval --[[ boolean ]] =\n\tIsMinimapRendering()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMissionCreatorBlip",
    "hash": "0x26F49BF3381D933D",
    "code": "-- IS_MISSION_CREATOR_BLIP\nlocal retval --[[ boolean ]] =\n\tIsMissionCreatorBlip(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMouseRolledOverInstructionalButtons",
    "hash": "0x3D9ACB1EB139E702",
    "code": "-- IS_MOUSE_ROLLED_OVER_INSTRUCTIONAL_BUTTONS\nlocal retval --[[ boolean ]] =\n\tIsMouseRolledOverInstructionalButtons()",
    "parameters": [],
    "returns": [
      "Returns true if the cursor is hovering above instructional buttons."
    ],
    "description": "Returns:\n\nReturns true if the cursor is hovering above instructional buttons.\n\nNote: The buttons need to support mouse (with the TOGGLE_MOUSE_SUPPORT scaleform movie method) for it to return true."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMpGamerTagActive",
    "hash": "0x4E929E7A5796FD26",
    "code": "-- IS_MP_GAMER_TAG_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsMpGamerTagActive(\n\t\tgamerTagId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMpGamerTagFree",
    "hash": "0x595B5178E412E199",
    "code": "-- IS_MP_GAMER_TAG_FREE\nlocal retval --[[ boolean ]] =\n\tIsMpGamerTagFree(\n\t\tgamerTagId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMpGamerTagMovieActive",
    "hash": "0x6E0EB3EB47C8D7AA",
    "code": "-- IS_MP_GAMER_TAG_MOVIE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsMpGamerTagMovieActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsMultiplayerChatActive",
    "hash": "0xB118AF58B5F332A1",
    "code": "-- _IS_MULTIPLAYER_CHAT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsMultiplayerChatActive()",
    "parameters": [],
    "returns": [],
    "description": "Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsNamedRendertargetLinked",
    "hash": "0x113750538FA31298",
    "code": "-- IS_NAMED_RENDERTARGET_LINKED\nlocal retval --[[ boolean ]] =\n\tIsNamedRendertargetLinked(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsNamedRendertargetRegistered",
    "hash": "0x78DCDC15C9F116B4",
    "code": "-- IS_NAMED_RENDERTARGET_REGISTERED\nlocal retval --[[ boolean ]] =\n\tIsNamedRendertargetRegistered(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsNavigatingMenuContent",
    "hash": "0x4E3CD0EF8A489541",
    "code": "-- IS_NAVIGATING_MENU_CONTENT\nlocal retval --[[ Any ]] =\n\tIsNavigatingMenuContent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsOnlinePoliciesMenuActive",
    "hash": "0x6F72CD94F7B5B68C",
    "code": "-- IS_ONLINE_POLICIES_MENU_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsOnlinePoliciesMenuActive()",
    "parameters": [],
    "returns": [],
    "description": "Returns the same as IS_SOCIAL_CLUB_ACTIVE."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsPauseMenuActive",
    "hash": "0xB0034A223497FFCB",
    "code": "-- IS_PAUSE_MENU_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsPauseMenuActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsPauseMenuRestarting",
    "hash": "0x1C491717107431C7",
    "code": "-- IS_PAUSE_MENU_RESTARTING\nlocal retval --[[ boolean ]] =\n\tIsPauseMenuRestarting()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsPausemapInInteriorMode",
    "hash": "0x9049FE339D5F6F6F",
    "code": "-- IS_PAUSEMAP_IN_INTERIOR_MODE\nlocal retval --[[ boolean ]] =\n\tIsPausemapInInteriorMode()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsRadarHidden",
    "hash": "0x157F93B036700462",
    "code": "-- IS_RADAR_HIDDEN\nlocal retval --[[ boolean ]] =\n\tIsRadarHidden()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsRadarPreferenceSwitchedOn",
    "hash": "0x9EB6522EA68F22FE",
    "code": "-- IS_RADAR_PREFERENCE_SWITCHED_ON\nlocal retval --[[ boolean ]] =\n\tIsRadarPreferenceSwitchedOn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsReportugcMenuOpen",
    "hash": "0x9135584D09A3437E",
    "code": "-- IS_REPORTUGC_MENU_OPEN\nlocal retval --[[ boolean ]] =\n\tIsReportugcMenuOpen()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsScriptedHudComponentActive",
    "hash": "0xDD100EB17A94FF65",
    "code": "-- IS_SCRIPTED_HUD_COMPONENT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsScriptedHudComponentActive(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsScriptedHudComponentHiddenThisFrame",
    "hash": "0x09C0403ED9A751C2",
    "code": "-- IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME\nlocal retval --[[ boolean ]] =\n\tIsScriptedHudComponentHiddenThisFrame(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsSocialClubActive",
    "hash": "0xC406BE343FC4B9AF",
    "code": "-- IS_SOCIAL_CLUB_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsSocialClubActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsStreamingAdditionalText",
    "hash": "0x8B6817B71B85EBF0",
    "code": "-- IS_STREAMING_ADDITIONAL_TEXT\nlocal retval --[[ boolean ]] =\n\tIsStreamingAdditionalText(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsSubtitlePreferenceSwitchedOn",
    "hash": "0xAD6DACA4BA53E0A4",
    "code": "-- IS_SUBTITLE_PREFERENCE_SWITCHED_ON\nlocal retval --[[ boolean ]] =\n\tIsSubtitlePreferenceSwitchedOn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsUpdatingMpGamerTagNameAndCrewDetails",
    "hash": "0xEB709A36958ABE0D",
    "code": "-- IS_UPDATING_MP_GAMER_TAG_NAME_AND_CREW_DETAILS\nlocal retval --[[ boolean ]] =\n\tIsUpdatingMpGamerTagNameAndCrewDetails(\n\t\tplayerId --[[ integer ]]\n\t)",
    "parameters": [
      "playerId: \n\nLocal ID of the player."
    ],
    "returns": [
      "Returns if game code is currently updating gamer tag and crew details for a player's name tag."
    ],
    "description": "Parameters:\n\nplayerId: \n\nLocal ID of the player.\n\nReturns:\n\nReturns if game code is currently updating gamer tag and crew details for a player's name tag.\n\nWhen this native returns true, do not call SET_MP_GAMER_TAG_NAME."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsWarningMessageActive",
    "hash": "0xE18B138FABC53103",
    "code": "-- IS_WARNING_MESSAGE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsWarningMessageActive()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if a Warning Message or ReportUGC menu is active."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsWarningMessageActive_2",
    "hash": "0xAF42195A42C63BBA",
    "code": "-- _IS_WARNING_MESSAGE_ACTIVE_2\nlocal retval --[[ boolean ]] =\n\tIsWarningMessageActive_2()",
    "parameters": [],
    "returns": [],
    "description": "IS_WARNING_MESSAGE_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "IsWaypointActive",
    "hash": "0x1DD1F58F493F1DA5",
    "code": "-- IS_WAYPOINT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsWaypointActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "LinkNamedRendertarget",
    "hash": "0xF6C09E276AEB3F2D",
    "code": "-- LINK_NAMED_RENDERTARGET\nLinkNamedRendertarget(\n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "LockMinimapAngle",
    "hash": "0x299FAEBB108AE05B",
    "code": "-- LOCK_MINIMAP_ANGLE\nLockMinimapAngle(\n\tangle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Locks the minimap to the specified angle in integer degrees.  \nangle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "LockMinimapPosition",
    "hash": "0x1279E861A329E73F",
    "code": "-- LOCK_MINIMAP_POSITION\nLockMinimapPosition(\n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Locks the minimap to the specified world position."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "LogDebugInfo",
    "hash": "0x2162C446DFDF38FD",
    "code": "-- _LOG_DEBUG_INFO\nLogDebugInfo(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Not present in retail version of the game, actual definiton seems to be\n_LOG_DEBUG_INFO(const char* category, const char* debugText);"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "OpenOnlinePoliciesMenu",
    "hash": "0x805D7CBB36FD6C4C",
    "code": "-- OPEN_ONLINE_POLICIES_MENU\nOpenOnlinePoliciesMenu()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "OpenReportugcMenu",
    "hash": "0x523A590C1A3CC0D3",
    "code": "-- OPEN_REPORTUGC_MENU\nOpenReportugcMenu()",
    "parameters": [],
    "returns": [],
    "description": "Shows a menu for reporting UGC content."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "OpenSocialClubMenu",
    "hash": "0x75D3691713C3B05A",
    "code": "-- OPEN_SOCIAL_CLUB_MENU\nOpenSocialClubMenu()",
    "parameters": [],
    "returns": [],
    "description": "Uses the SOCIAL_CLUB2 scaleform."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "OverrideMultiplayerChatColour",
    "hash": "0xF47E567B3630DD12",
    "code": "-- _OVERRIDE_MULTIPLAYER_CHAT_COLOUR\nOverrideMultiplayerChatColour(\n\tp0 --[[ integer ]], \n\thudColor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "OverrideMultiplayerChatPrefix",
    "hash": "0x6A1738B4323FE2D9",
    "code": "-- _OVERRIDE_MULTIPLAYER_CHAT_PREFIX\nOverrideMultiplayerChatPrefix(\n\tgxtEntryHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuActivateContext",
    "hash": "0xDD564BDD0472C936",
    "code": "-- PAUSE_MENU_ACTIVATE_CONTEXT\nPauseMenuActivateContext(\n\thash --[[ Hash ]]\n)",
    "parameters": [
      "hash: \n\nContext name hash."
    ],
    "returns": [],
    "description": "Parameters:\n\nhash: \n\nContext name hash.\n\nActivates the specified frontend menu context.\n\npausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.\n\nThe *ALL* part of the context means that whatever is being defined, will be active when any or all of those conditions after *ALL* are met.\n\nThe *NONE* part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after *NONE* are met.\n\nThis basically allows you to hide certain menu sections, or things like instructional buttons.\n\nSee the old description below for more info.\n\nSeems to add/set the current menu context (to show/hide buttons?) Pausemenu.xml: <Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts> Code:\n\nif (...) {\n    sub_bbd34(a_0, 0, \"FM_BET_HELP\");\n    UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native\n    UI::OBJECT_DECAL_TOGGLE(${bet_locked});\n} else {\n    sub_bbd34(a_0, 0, \"\");\n    UI::OBJECT_DECAL_TOGGLE(${bet_available});\n    UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native\n}\n\n\nOBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision // Old Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, \"OBJECT_DECAL_TOGGLE\" is called prior."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuDeactivateContext",
    "hash": "0x444D8CF241EC25C5",
    "code": "-- PAUSE_MENU_DEACTIVATE_CONTEXT\nPauseMenuDeactivateContext(\n\tcontextHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuDisableBusyspinner",
    "hash": "0x9245E81072704B8A",
    "code": "-- _PAUSE_MENU_DISABLE_BUSYSPINNER\nPauseMenuDisableBusyspinner(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\ntrue to disable and false to re-enable the loading icon."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\ntrue to disable and false to re-enable the loading icon.\n\nDisables the loading spinner in Pause Menu when switching from one header tab to another."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuGetIndexOfMouseHoveredSlot",
    "hash": "0x359AF31A4B52F5ED",
    "code": "-- _PAUSE_MENU_GET_INDEX_OF_MOUSE_HOVERED_SLOT\nlocal retval --[[ integer ]] =\n\tPauseMenuGetIndexOfMouseHoveredSlot()",
    "parameters": [],
    "returns": [],
    "description": "If mouse is hovering on a slot, it returns the slot's index, else it returns -1."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuGetUniqueIdOfMouseHoveredSlot",
    "hash": "0x13C4B962653A5280",
    "code": "-- _PAUSE_MENU_GET_UNIQUE_ID_OF_MOUSE_HOVERED_SLOT\nlocal retval --[[ integer ]] =\n\tPauseMenuGetUniqueIdOfMouseHoveredSlot()",
    "parameters": [],
    "returns": [],
    "description": "If mouse is hovering on a slot, it returns uniqueid of that slot, else it returns -1."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuIsContextActive",
    "hash": "0x84698AB38D0C6636",
    "code": "-- PAUSE_MENU_IS_CONTEXT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tPauseMenuIsContextActive(\n\t\tcontextHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuIsContextMenuActive",
    "hash": "0x2A25ADC48F87841F",
    "code": "-- PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE\nlocal retval --[[ Any ]] =\n\tPauseMenuIsContextMenuActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuRedrawInstructionalButtons",
    "hash": "0x4895BDEA16E7C080",
    "code": "-- PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS\nPauseMenuRedrawInstructionalButtons(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Updates instructional buttons in Pause Menu after menu contexts have been toggled. p0 purpose is currently unknown, only 0 is used in scripts."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuSetBusySpinner",
    "hash": "0xC78E239AC5B2DDB9",
    "code": "-- PAUSE_MENU_SET_BUSY_SPINNER\nPauseMenuSetBusySpinner(\n\tbVisible --[[ boolean ]], \n\tiColumnID --[[ integer ]], \n\tiSpinnerIndex --[[ integer ]]\n)",
    "parameters": [
      "bVisible: \n\nSets or removes this spinner.",
      "iColumnID: \n\nLocation of this spinner (0 - 17). Indexes can be found in common:\\data\\ui\\frontend.xml, PauseMenu\\PersistentData\\Spinner\\Offsets. If bVisible is false, this will be ignored.",
      "iSpinnerIndex: \n\nIndex of this spinner. Can have a maximum of three spinners at a time."
    ],
    "returns": [],
    "description": "Parameters:\n\nbVisible: \n\nSets or removes this spinner.\n\niColumnID: \n\nLocation of this spinner (0 - 17). Indexes can be found in common:\\data\\ui\\frontend.xml, PauseMenu\\PersistentData\\Spinner\\Offsets. If bVisible is false, this will be ignored.\n\niSpinnerIndex: \n\nIndex of this spinner. Can have a maximum of three spinners at a time.\n\nSets a loading icon in the pause menu."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuSetWarnOnTabChange",
    "hash": "0xF06EBB91A81E09E3",
    "code": "-- PAUSE_MENU_SET_WARN_ON_TAB_CHANGE\nPauseMenuSetWarnOnTabChange(\n\tsetWarn --[[ boolean ]]\n)",
    "parameters": [
      "setWarn: \n\nWether to show the message or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nsetWarn: \n\nWether to show the message or not.\n\nShows this warning message when trying to switch pause menu header tabs: https://i.imgur.com/8qmfztu.png"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuceptionGoDeeper",
    "hash": "0x77F16B447824DA6C",
    "code": "-- PAUSE_MENUCEPTION_GO_DEEPER\nPauseMenuceptionGoDeeper(\n\tpageId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets current pause menu page/component to the specified value. Available page IDs: https://pastebin.com/qxuhwjPT"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseMenuceptionTheKick",
    "hash": "0xCDCA26E80FAECB8F",
    "code": "-- PAUSE_MENUCEPTION_THE_KICK\nPauseMenuceptionTheKick()",
    "parameters": [],
    "returns": [],
    "description": "Forces the Pause Menu to back out of unique pages such as Awards, Unlocks, Key Bindings etc"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PauseToggleFullscreenMap",
    "hash": "0x2DE6C5E2E996F178",
    "code": "-- PAUSE_TOGGLE_FULLSCREEN_MAP\nPauseToggleFullscreenMap(\n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles pause menu map rendering."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PreloadBusyspinner",
    "hash": "0xC65AB383CD91DF98",
    "code": "-- PRELOAD_BUSYSPINNER\nPreloadBusyspinner()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "PulseBlip",
    "hash": "0x742D6FD43115AF73",
    "code": "-- PULSE_BLIP\nPulseBlip(\n\tblip --[[ Blip ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RaceGalleryAddBlip",
    "hash": "0x551DF99658DB6EE8",
    "code": "-- _RACE_GALLERY_ADD_BLIP\nlocal retval --[[ Any ]] =\n\tRaceGalleryAddBlip(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RaceGalleryFullscreen",
    "hash": "0x5354C5BA2EA868A4",
    "code": "-- _RACE_GALLERY_FULLSCREEN\nRaceGalleryFullscreen(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If toggle is true, the map is shown in full screen\nIf toggle is false, the map is shown in normal mode"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RaceGalleryNextBlipSprite",
    "hash": "0x1EAE6DD17B7A5EFA",
    "code": "-- _RACE_GALLERY_NEXT_BLIP_SPRITE\nRaceGalleryNextBlipSprite(\n\tspriteId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RefreshWaypoint",
    "hash": "0x81FA173F170560D1",
    "code": "-- REFRESH_WAYPOINT\nRefreshWaypoint()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RegisterNamedRendertarget",
    "hash": "0x57D9C12635E25CE3",
    "code": "-- REGISTER_NAMED_RENDERTARGET\nlocal retval --[[ boolean ]] =\n\tRegisterNamedRendertarget(\n\t\tname --[[ string ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ReleaseControlOfFrontend",
    "hash": "0x14621BB1DF14E2B2",
    "code": "-- RELEASE_CONTROL_OF_FRONTEND\nReleaseControlOfFrontend()",
    "parameters": [],
    "returns": [],
    "description": "Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.\n\nTo disable the keys, use 0xEC9264727EEC0F28."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ReleaseNamedRendertarget",
    "hash": "0xE9F6FFE837354DD4",
    "code": "-- RELEASE_NAMED_RENDERTARGET\nlocal retval --[[ boolean ]] =\n\tReleaseNamedRendertarget(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ReloadMapMenu",
    "hash": "0x2916A928514C9827",
    "code": "-- RELOAD_MAP_MENU\nReloadMapMenu()",
    "parameters": [],
    "returns": [],
    "description": "Forces the map menu to reload."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RemoveBlip",
    "hash": "0x86A652570E5F25DD",
    "code": "-- REMOVE_BLIP\nlocal blip --[[ Blip ]] =\n\tRemoveBlip()",
    "parameters": [
      "blip: \n\nBlip handle to remove."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nBlip handle to remove.\n\nRemoves the blip from your map.\n\nNote: This function only works on the script that created the blip, if you wish to remove blips created by other scripts, see SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RemoveMpGamerTag",
    "hash": "0x31698AA80E0223F8",
    "code": "-- REMOVE_MP_GAMER_TAG\nRemoveMpGamerTag(\n\tgamerTagId --[[ integer ]]\n)",
    "parameters": [
      "gamerTagId: \n\nA player ID with a gamer tag or a fake gamer tag ID."
    ],
    "returns": [],
    "description": "Parameters:\n\ngamerTagId: \n\nA player ID with a gamer tag or a fake gamer tag ID.\n\nRemoves the gamer tag associated with the provided ID. This does not happen instantly. Use IS_MP_GAMER_TAG_FREE to determine when the ID is free for reuse."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RemoveMultiplayerBankCash",
    "hash": "0xC7C6789AA1CFEDD0",
    "code": "-- REMOVE_MULTIPLAYER_BANK_CASH\nRemoveMultiplayerBankCash()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RemoveMultiplayerHudCash",
    "hash": "0x968F270E39141ECA",
    "code": "-- REMOVE_MULTIPLAYER_HUD_CASH\nRemoveMultiplayerHudCash()",
    "parameters": [],
    "returns": [],
    "description": "Removes multiplayer cash hud each frame"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RemoveMultiplayerWalletCash",
    "hash": "0x95CF81BD06EE1887",
    "code": "-- REMOVE_MULTIPLAYER_WALLET_CASH\nRemoveMultiplayerWalletCash()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RemoveWarningMessageListItems",
    "hash": "0x6EF54AB721DC6242",
    "code": "-- _REMOVE_WARNING_MESSAGE_LIST_ITEMS\nRemoveWarningMessageListItems()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ReplaceHudColour",
    "hash": "0x1CCC708F0F850613",
    "code": "-- REPLACE_HUD_COLOUR\nReplaceHudColour(\n\thudColorIndex --[[ integer ]], \n\thudColorIndex2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Changes the hud color at a given index (hudColorIndex) by another one (hudColorIndex2).\n\nHUD colors can be found here"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ReplaceHudColourWithRgba",
    "hash": "0xF314CF4F0211894E",
    "code": "-- REPLACE_HUD_COLOUR_WITH_RGBA\nReplaceHudColourWithRgba(\n\thudColorIndex --[[ integer ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hud colors can be found here"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RequestAdditionalText",
    "hash": "0x71A78003C8E71424",
    "code": "-- REQUEST_ADDITIONAL_TEXT\nRequestAdditionalText(\n\tgxt --[[ string ]], \n\tslot --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Request a gxt into the passed slot."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RequestAdditionalTextForDlc",
    "hash": "0x6009F9F1AE90D8A6",
    "code": "-- REQUEST_ADDITIONAL_TEXT_FOR_DLC\nRequestAdditionalTextForDlc(\n\tgxt --[[ string ]], \n\tslot --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ResetGlobalActionscriptFlag",
    "hash": "0xB99C4E4D9499DF29",
    "code": "-- RESET_GLOBAL_ACTIONSCRIPT_FLAG\nResetGlobalActionscriptFlag(\n\tflagIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ResetHudComponentValues",
    "hash": "0x450930E616475D0D",
    "code": "-- RESET_HUD_COMPONENT_VALUES\nResetHudComponentValues(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ResetReticuleValues",
    "hash": "0x12782CE0A636E9F0",
    "code": "-- RESET_RETICULE_VALUES\nResetReticuleValues()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "RestartFrontendMenu",
    "hash": "0x10706DC6AD2D49C0",
    "code": "-- RESTART_FRONTEND_MENU\nRestartFrontendMenu(\n\tmenuHash --[[ Hash ]], \n\thighlightedTab --[[ integer ]]\n)",
    "parameters": [
      "menuHash: \n\nHash of the frontend menu. See ACTIVATE_FRONTEND_MENU for the list of available menus.",
      "highlightedTab: \n\nMenu ID (from PauseMenuLUT (in pause_menu_sp_content.gfx files), but the value - 1000) of which tab to have highlighted on the header, or -1."
    ],
    "returns": [],
    "description": "Parameters:\n\nmenuHash: \n\nHash of the frontend menu. See ACTIVATE_FRONTEND_MENU for the list of available menus.\n\nhighlightedTab: \n\nMenu ID (from PauseMenuLUT (in pause_menu_sp_content.gfx files), but the value - 1000) of which tab to have highlighted on the header, or -1.\n\nChanges the current frontend menu to the desired frontend menu version."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetAbilityBarValue",
    "hash": "0x9969599CCFF5D85E",
    "code": "-- SET_ABILITY_BAR_VALUE\nSetAbilityBarValue(\n\tvalue --[[ number ]], \n\tmaxValue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetAbilityBarVisibilityInMultiplayer",
    "hash": "0x1DFEDD15019315A9",
    "code": "-- _SET_ABILITY_BAR_VISIBILITY_IN_MULTIPLAYER\nSetAbilityBarVisibilityInMultiplayer(\n\tvisible --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetAllowAbilityBarInMultiplayer",
    "hash": "0x889329C80FE5963C",
    "code": "-- _SET_ALLOW_ABILITY_BAR_IN_MULTIPLAYER\nSetAllowAbilityBarInMultiplayer(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetAllowCommaOnTextInput",
    "hash": "0x577599CCED639CA2",
    "code": "-- SET_ALLOW_COMMA_ON_TEXT_INPUT\nSetAllowCommaOnTextInput(\n\tallow --[[ boolean ]]\n)",
    "parameters": [
      "allow: \n\nToggles if the comma can be used in conjuction with the filename text input box type."
    ],
    "returns": [],
    "description": "Parameters:\n\nallow: \n\nToggles if the comma can be used in conjuction with the filename text input box type.\n\nNOTE: This must be called before you open the text input box."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBigmapActive",
    "hash": "0x231C8F89D0539D8F",
    "code": "-- SET_BIGMAP_ACTIVE\nSetBigmapActive(\n\ttoggleBigMap --[[ boolean ]], \n\tshowFullMap --[[ boolean ]]\n)",
    "parameters": [
      "toggleBigMap: \n\nEnable or disable the expanded minimap.",
      "showFullMap: \n\nEnable or disable the full map from being shown on the minimap, requires p0 to be true."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggleBigMap: \n\nEnable or disable the expanded minimap.\n\nshowFullMap: \n\nEnable or disable the full map from being shown on the minimap, requires p0 to be true.\n\nToggles the big minimap state like in GTA:Online.\n\nTo get the current state of the minimap, use IS_BIGMAP_ACTIVE."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipAlpha",
    "hash": "0x45FF974EEE1C8734",
    "code": "-- SET_BLIP_ALPHA\nSetBlipAlpha(\n\tblip --[[ Blip ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets alpha-channel for blip color.\nExample:\nBlip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);\nHUD::SET_BLIP_COLOUR(blip , 3);\nHUD::SET_BLIP_ALPHA(blip , 64);"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipAsFriendly",
    "hash": "0x6F6F290102C02AB4",
    "code": "-- SET_BLIP_AS_FRIENDLY\nSetBlipAsFriendly(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "blip: \n\nThe blip handle",
      "toggle: \n\nTrue for friendly, false for enemy"
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip handle\n\ntoggle: \n\nTrue for friendly, false for enemy\n\nAllows the user to set a blip as friendly or enemy based on the toggle."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipAsMissionCreatorBlip",
    "hash": "0x24AC0137444F9FD5",
    "code": "-- SET_BLIP_AS_MISSION_CREATOR_BLIP\nSetBlipAsMissionCreatorBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipAsShortRange",
    "hash": "0xBE8BE4FE60E27B72",
    "code": "-- SET_BLIP_AS_SHORT_RANGE\nSetBlipAsShortRange(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "blip: \n\nThe blip handle.",
      "toggle: \n\nTrue to only display the blip as 'short range', false to display the blip from a longer distance."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip handle.\n\ntoggle: \n\nTrue to only display the blip as 'short range', false to display the blip from a longer distance.\n\nSets whether or not the specified blip should only be displayed when nearby, or on the minimap."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipBright",
    "hash": "0xB203913733F27884",
    "code": "-- SET_BLIP_BRIGHT\nSetBlipBright(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipCategory",
    "hash": "0x234CDD44D996FD9A",
    "code": "-- SET_BLIP_CATEGORY\nSetBlipCategory(\n\tblip --[[ Blip ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to change the category index of",
      "index: \n\nThe category index to change to"
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to change the category index of\n\nindex: \n\nThe category index to change to\n\nExamples result:\n\nindex:\n\n1 = No distance shown in legend\n2 = Distance shown in legend\n7 = \"Other Players\" category, also shows distance in legend\n10 = \"Property\" category\n11 = \"Owned Property\" category\n12 - 133 = Custom named categories\n134 - 254 = Custom unnamed categories\n\n\nindex wraps around after 255.\n\nBlips with categories 7, 10, 11 or 12 - 254 (custom categories) will all show under the specific categories listing in the map legend, regardless of sprite or name.\n\nLegend entries\n\nindex\tLegend entry\tLabel\n7\tOther Players\tBLIP_OTHPLYR\n10\tProperty\tBLIP_PROPCAT\n11\tOwned Property\tBLIP_APARTCAT\n12 - 133\tCustom categories (Named)\tBLIP_CAT_ + index\n134 - 254\tCustom categories (Unnamed)\t-"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipColour",
    "hash": "0x03D7FB09E75D6B7E",
    "code": "-- SET_BLIP_COLOUR\nSetBlipColour(\n\tblip --[[ Blip ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [
      "blip: \n\nThe blip handle to set the color of",
      "color: \n\nThis can be a hex color code, or a blip color."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip handle to set the color of\n\ncolor: \n\nThis can be a hex color code, or a blip color."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipCoords",
    "hash": "0xAE2AF67E9D9AF65D",
    "code": "-- SET_BLIP_COORDS\nSetBlipCoords(\n\tblip --[[ Blip ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipDisplay",
    "hash": "0x9029B2F3DA924928",
    "code": "-- SET_BLIP_DISPLAY\nSetBlipDisplay(\n\tblip --[[ Blip ]], \n\tdisplayId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "displayId Behaviour\n\ndisplay ID\tBehaviour\n0\tDoesn't show up, ever, anywhere.\n1\tDoesn't show up, ever, anywhere.\n2\tShows on both main map and minimap. (Selectable on map)\n3\tShows on main map only. (Selectable on map)\n4\tShows on main map only. (Selectable on map)\n5\tShows on minimap only.\n6\tShows on both main map and minimap. (Selectable on map)\n7\tDoesn't show up, ever, anywhere.\n8\tShows on both main map and minimap. (Not selectable on map)\n9\tShows on minimap only.\n10\tShows on both main map and minimap. (Not selectable on map)\n\nAnything higher than 10 seems to be exactly the same as 10.\n\nRockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipDisplayIndicatorOnBlip",
    "hash": "0xC4278F70131BAA6D",
    "code": "-- _SET_BLIP_DISPLAY_INDICATOR_ON_BLIP\nSetBlipDisplayIndicatorOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Must be toggled before being queued for animation"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipFade",
    "hash": "0x2AEE8F8390D2298C",
    "code": "-- SET_BLIP_FADE\nSetBlipFade(\n\tblip --[[ Blip ]], \n\topacity --[[ integer ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipFlashInterval",
    "hash": "0xAA51DB313C010A7E",
    "code": "-- SET_BLIP_FLASH_INTERVAL\nSetBlipFlashInterval(\n\tblip --[[ Blip ]], \n\tinterval --[[ integer ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to change flashing interval",
      "interval: \n\nInterval in milliseconds before flashing the blip"
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to change flashing interval\n\ninterval: \n\nInterval in milliseconds before flashing the blip\n\nSets the interval in milliseconds before flashing the blip."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipFlashTimer",
    "hash": "0xD3CD6FD297AE87CC",
    "code": "-- SET_BLIP_FLASH_TIMER\nSetBlipFlashTimer(\n\tblip --[[ Blip ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to start flashing",
      "duration: \n\nTime in milliseconds to flash the blip before stopping"
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to start flashing\n\nduration: \n\nTime in milliseconds to flash the blip before stopping\n\nFlashes blip for time in milliseconds before stopping."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipFlashes",
    "hash": "0xB14552383D39CE3E",
    "code": "-- SET_BLIP_FLASHES\nSetBlipFlashes(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipFlashesAlternate",
    "hash": "0x2E8D9498C56DD0D1",
    "code": "-- SET_BLIP_FLASHES_ALTERNATE\nSetBlipFlashesAlternate(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipHiddenOnLegend",
    "hash": "0x54318C915D27E4CE",
    "code": "-- SET_BLIP_HIDDEN_ON_LEGEND\nSetBlipHiddenOnLegend(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipHighDetail",
    "hash": "0xE2590BC29220CEBB",
    "code": "-- SET_BLIP_HIGH_DETAIL\nSetBlipHighDetail(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipNameFromTextFile",
    "hash": "0xEAA0FFE120D92784",
    "code": "-- SET_BLIP_NAME_FROM_TEXT_FILE\nSetBlipNameFromTextFile(\n\tblip --[[ Blip ]], \n\tgxtEntry --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Doesn't work if the label text of gxtEntry is >= 80."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipNameToPlayerName",
    "hash": "0x127DE7B20C60A6A3",
    "code": "-- SET_BLIP_NAME_TO_PLAYER_NAME\nSetBlipNameToPlayerName(\n\tblip --[[ Blip ]], \n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipPriority",
    "hash": "0xAE9FC9EF6A9FAC79",
    "code": "-- SET_BLIP_PRIORITY\nSetBlipPriority(\n\tblip --[[ Blip ]], \n\tpriority --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipRotation",
    "hash": "0xF87683CDF73C3F6E",
    "code": "-- SET_BLIP_ROTATION\nSetBlipRotation(\n\tblip --[[ Blip ]], \n\trotation --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipRoute",
    "hash": "0x4F7D8A9BFB0B43E9",
    "code": "-- SET_BLIP_ROUTE\nSetBlipRoute(\n\tblip --[[ Blip ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enable / disable showing route for the Blip-object."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipRouteColour",
    "hash": "0x837155CD2F63DA09",
    "code": "-- SET_BLIP_ROUTE_COLOUR\nSetBlipRouteColour(\n\tblip --[[ Blip ]], \n\tcolour --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipScale",
    "hash": "0xD38744167B2FA257",
    "code": "-- SET_BLIP_SCALE\nSetBlipScale(\n\tblip --[[ Blip ]], \n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipScaleTransformation",
    "hash": "0xCD6524439909C979",
    "code": "-- _SET_BLIP_SCALE_TRANSFORMATION\nSetBlipScaleTransformation(\n\tblip --[[ Blip ]], \n\txScale --[[ number ]], \n\tyScale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See https://imgur.com/a/lLkEsMN\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipSecondaryColour",
    "hash": "0x14892474891E09EB",
    "code": "-- SET_BLIP_SECONDARY_COLOUR\nSetBlipSecondaryColour(\n\tblip --[[ Blip ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipShowCone",
    "hash": "0x13127EC3665E8EE1",
    "code": "-- SET_BLIP_SHOW_CONE\nSetBlipShowCone(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipShrink",
    "hash": "0x2B6D467DAB714E8D",
    "code": "-- _SET_BLIP_SHRINK\nSetBlipShrink(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes a blip go small when off the minimap.\nSET_BLIP_AS_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipSprite",
    "hash": "0xDF735600A4696DAF",
    "code": "-- SET_BLIP_SPRITE\nSetBlipSprite(\n\tblip --[[ Blip ]], \n\tspriteId --[[ integer ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to change.",
      "spriteId: \n\nThe sprite ID to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to change.\n\nspriteId: \n\nThe sprite ID to set.\n\nSets the displayed sprite for a specific blip.\n\nThere's a list of sprites on the FiveM documentation site."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetBlipSquaredRotation",
    "hash": "0xA8B6AFDAC320AC87",
    "code": "-- _SET_BLIP_SQUARED_ROTATION\nSetBlipSquaredRotation(\n\tblip --[[ Blip ]], \n\theading --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does not require whole number/integer rotations."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetColourOfNextTextComponent",
    "hash": "0x39BBF623FC803EAC",
    "code": "-- SET_COLOUR_OF_NEXT_TEXT_COMPONENT\nSetColourOfNextTextComponent(\n\thudColor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetCustomMpHudColor",
    "hash": "0x2ACCB195F3CCD9DE",
    "code": "-- SET_CUSTOM_MP_HUD_COLOR\nSetCustomMpHudColor(\n\thudColorId --[[ integer ]]\n)",
    "parameters": [
      "hudColorId: \n\nThe ID of the custom HUD color. Use -1 (HUD_COLOUR_INVALID) to clear the custom color. Refer to the eHudColours enum for valid color IDs."
    ],
    "returns": [],
    "description": "Parameters:\n\nhudColorId: \n\nThe ID of the custom HUD color. Use -1 (HUD_COLOUR_INVALID) to clear the custom color. Refer to the eHudColours enum for valid color IDs.\n\nSet a custom color for the MP HUD, providing a way to customize the HUD's appearance similar to character color changes in MP.\n\nenum eHudColours {\n    HUD_COLOUR_PURE_WHITE = 0,\n    HUD_COLOUR_WHITE = 1,\n    HUD_COLOUR_BLACK = 2,\n    HUD_COLOUR_GREY = 3,\n    HUD_COLOUR_GREYLIGHT = 4,\n    HUD_COLOUR_GREYDARK = 5,\n    HUD_COLOUR_RED = 6,\n    HUD_COLOUR_REDLIGHT = 7,\n    HUD_COLOUR_REDDARK = 8,\n    HUD_COLOUR_BLUE = 9,\n    HUD_COLOUR_BLUELIGHT = 10,\n    HUD_COLOUR_BLUEDARK = 11,\n    HUD_COLOUR_YELLOW = 12,\n    HUD_COLOUR_YELLOWLIGHT = 13,\n    HUD_COLOUR_YELLOWDARK = 14,\n    HUD_COLOUR_ORANGE = 15,\n    HUD_COLOUR_ORANGELIGHT = 16,\n    HUD_COLOUR_ORANGEDARK = 17,\n    HUD_COLOUR_GREEN = 18,\n    HUD_COLOUR_GREENLIGHT = 19,\n    HUD_COLOUR_GREENDARK = 20,\n    HUD_COLOUR_PURPLE = 21,\n    HUD_COLOUR_PURPLELIGHT = 22,\n    HUD_COLOUR_PURPLEDARK = 23,\n    HUD_COLOUR_PINK = 24,\n    HUD_COLOUR_STAR = 25,\n    HUD_COLOUR_STARLIGHT = 26,\n    HUD_COLOUR_STARDARK = 27,\n    HUD_COLOUR_NET_PLAYER1 = 28,\n    HUD_COLOUR_NET_PLAYER2 = 29,\n    HUD_COLOUR_NET_PLAYER3 = 30,\n    HUD_COLOUR_NET_PLAYER4 = 31,\n    HUD_COLOUR_NET_PLAYER5 = 32,\n    HUD_COLOUR_NET_PLAYER6 = 33,\n    HUD_COLOUR_NET_PLAYER7 = 34,\n    HUD_COLOUR_NET_PLAYER8 = 35,\n    HUD_COLOUR_NET_PLAYER9 = 36,\n    HUD_COLOUR_NET_PLAYER10 = 37,\n    HUD_COLOUR_NET_PLAYER11 = 38,\n    HUD_COLOUR_NET_PLAYER12 = 39,\n    HUD_COLOUR_NET_PLAYER13 = 40,\n    HUD_COLOUR_NET_PLAYER14 = 41,\n    HUD_COLOUR_NET_PLAYER15 = 42,\n    HUD_COLOUR_NET_PLAYER16 = 43,\n    HUD_COLOUR_NET_PLAYER17 = 44,\n    HUD_COLOUR_NET_PLAYER18 = 45,\n    HUD_COLOUR_NET_PLAYER19 = 46,\n    HUD_COLOUR_NET_PLAYER20 = 47,\n    HUD_COLOUR_NET_PLAYER21 = 48,\n    HUD_COLOUR_NET_PLAYER22 = 49,\n    HUD_COLOUR_NET_PLAYER23 = 50,\n    HUD_COLOUR_NET_PLAYER24 = 51,\n    HUD_COLOUR_NET_PLAYER25 = 52,\n    HUD_COLOUR_NET_PLAYER26 = 53,\n    HUD_COLOUR_NET_PLAYER27 = 54,\n    HUD_COLOUR_NET_PLAYER28 = 55,\n    HUD_COLOUR_NET_PLAYER29 = 56,\n    HUD_COLOUR_NET_PLAYER30 = 57,\n    HUD_COLOUR_NET_PLAYER31 = 58,\n    HUD_COLOUR_NET_PLAYER32 = 59,\n    HUD_COLOUR_SIMPLEBLIP_DEFAULT = 60,\n    HUD_COLOUR_MENU_BLUE = 61,\n    HUD_COLOUR_MENU_GREY_LIGHT = 62,\n    HUD_COLOUR_MENU_BLUE_EXTRA_DARK = 63,\n    HUD_COLOUR_MENU_YELLOW = 64,\n    HUD_COLOUR_MENU_YELLOW_DARK = 65,\n    HUD_COLOUR_MENU_GREEN = 66,\n    HUD_COLOUR_MENU_GREY = 67,\n    HUD_COLOUR_MENU_GREY_DARK = 68,\n    HUD_COLOUR_MENU_HIGHLIGHT = 69,\n    HUD_COLOUR_MENU_STANDARD = 70,\n    HUD_COLOUR_MENU_DIMMED = 71,\n    HUD_COLOUR_MENU_EXTRA_DIMMED = 72,\n    HUD_COLOUR_BRIEF_TITLE = 73,\n    HUD_COLOUR_MID_GREY_MP = 74,\n    HUD_COLOUR_NET_PLAYER1_DARK = 75,\n    HUD_COLOUR_NET_PLAYER2_DARK = 76,\n    HUD_COLOUR_NET_PLAYER3_DARK = 77,\n    HUD_COLOUR_NET_PLAYER4_DARK = 78,\n    HUD_COLOUR_NET_PLAYER5_DARK = 79,\n    HUD_COLOUR_NET_PLAYER6_DARK = 80,\n    HUD_COLOUR_NET_PLAYER7_DARK = 81,\n    HUD_COLOUR_NET_PLAYER8_DARK = 82,\n    HUD_COLOUR_NET_PLAYER9_DARK = 83,\n    HUD_COLOUR_NET_PLAYER10_DARK = 84,\n    HUD_COLOUR_NET_PLAYER11_DARK = 85,\n    HUD_COLOUR_NET_PLAYER12_DARK = 86,\n    HUD_COLOUR_NET_PLAYER13_DARK = 87,\n    HUD_COLOUR_NET_PLAYER14_DARK = 88,\n    HUD_COLOUR_NET_PLAYER15_DARK = 89,\n    HUD_COLOUR_NET_PLAYER16_DARK = 90,\n    HUD_COLOUR_NET_PLAYER17_DARK = 91,\n    HUD_COLOUR_NET_PLAYER18_DARK = 92,\n    HUD_COLOUR_NET_PLAYER19_DARK = 93,\n    HUD_COLOUR_NET_PLAYER20_DARK = 94,\n    HUD_COLOUR_NET_PLAYER21_DARK = 95,\n    HUD_COLOUR_NET_PLAYER22_DARK = 96,\n    HUD_COLOUR_NET_PLAYER23_DARK = 97,\n    HUD_COLOUR_NET_PLAYER24_DARK = 98,\n    HUD_COLOUR_NET_PLAYER25_DARK = 99,\n    HUD_COLOUR_NET_PLAYER26_DARK = 100,\n    HUD_COLOUR_NET_PLAYER27_DARK = 101,\n    HUD_COLOUR_NET_PLAYER28_DARK = 102,\n    HUD_COLOUR_NET_PLAYER29_DARK = 103,\n    HUD_COLOUR_NET_PLAYER30_DARK = 104,\n    HUD_COLOUR_NET_PLAYER31_DARK = 105,\n    HUD_COLOUR_NET_PLAYER32_DARK = 106,\n    HUD_COLOUR_BRONZE = 107,\n    HUD_COLOUR_SILVER = 108,\n    HUD_COLOUR_GOLD = 109,\n    HUD_COLOUR_PLATINUM = 110,\n    HUD_COLOUR_GANG1 = 111,\n    HUD_COLOUR_GANG2 = 112,\n    HUD_COLOUR_GANG3 = 113,\n    HUD_COLOUR_GANG4 = 114,\n    HUD_COLOUR_SAME_CREW = 115,\n    HUD_COLOUR_FREEMODE = 116,\n    HUD_COLOUR_PAUSE_BG = 117,\n    HUD_COLOUR_FRIENDLY = 118,\n    HUD_COLOUR_ENEMY = 119,\n    HUD_COLOUR_LOCATION = 120,\n    HUD_COLOUR_PICKUP = 121,\n    HUD_COLOUR_PAUSE_SINGLEPLAYER = 122,\n    HUD_COLOUR_FREEMODE_DARK = 123,\n    HUD_COLOUR_INACTIVE_MISSION = 124,\n    HUD_COLOUR_DAMAGE = 125,\n    HUD_COLOUR_PINKLIGHT = 126,\n    HUD_COLOUR_PM_MITEM_HIGHLIGHT = 127,\n    HUD_COLOUR_SCRIPT_VARIABLE = 128,\n    HUD_COLOUR_YOGA = 129,\n    HUD_COLOUR_TENNIS = 130,\n    HUD_COLOUR_GOLF = 131,\n    HUD_COLOUR_SHOOTING_RANGE = 132,\n    HUD_COLOUR_FLIGHT_SCHOOL = 133,\n    HUD_COLOUR_NORTH_BLUE = 134,\n    HUD_COLOUR_SOCIAL_CLUB = 135,\n    HUD_COLOUR_PLATFORM_BLUE = 136,\n    HUD_COLOUR_PLATFORM_GREEN = 137,\n    HUD_COLOUR_PLATFORM_GREY = 138,\n    HUD_COLOUR_FACEBOOK_BLUE = 139,\n    HUD_COLOUR_INGAME_BG = 140,\n    HUD_COLOUR_DARTS = 141,\n    HUD_COLOUR_WAYPOINT = 142,\n    HUD_COLOUR_MICHAEL = 143,\n    HUD_COLOUR_FRANKLIN = 144,\n    HUD_COLOUR_TREVOR = 145,\n    HUD_COLOUR_GOLF_P1 = 146,\n    HUD_COLOUR_GOLF_P2 = 147,\n    HUD_COLOUR_GOLF_P3 = 148,\n    HUD_COLOUR_GOLF_P4 = 149,\n    HUD_COLOUR_WAYPOINTLIGHT = 150,\n    HUD_COLOUR_WAYPOINTDARK = 151,\n    HUD_COLOUR_PANEL_LIGHT = 152,\n    HUD_COLOUR_MICHAEL_DARK = 153,\n    HUD_COLOUR_FRANKLIN_DARK = 154,\n    HUD_COLOUR_TREVOR_DARK = 155,\n    HUD_COLOUR_OBJECTIVE_ROUTE = 156,\n    HUD_COLOUR_PAUSEMAP_TINT = 157,\n    HUD_COLOUR_PAUSE_DESELECT = 158,\n    HUD_COLOUR_PM_WEAPONS_PURCHASABLE = 159,\n    HUD_COLOUR_PM_WEAPONS_LOCKED = 160,\n    HUD_COLOUR_END_SCREEN_BG = 161,\n    HUD_COLOUR_CHOP = 162,\n    HUD_COLOUR_PAUSEMAP_TINT_HALF = 163,\n    HUD_COLOUR_NORTH_BLUE_OFFICIAL = 164,\n    HUD_COLOUR_SCRIPT_VARIABLE_2 = 165,\n    HUD_COLOUR_H = 166,\n    HUD_COLOUR_HDARK = 167,\n    HUD_COLOUR_T = 168,\n    HUD_COLOUR_TDARK = 169,\n    HUD_COLOUR_HSHARD = 170,\n    HUD_COLOUR_CONTROLLER_MICHAEL = 171 \n    HUD_COLOUR_CONTROLLER_FRANKLIN = 172 \n    HUD_COLOUR_CONTROLLER_TREVOR = 173 \n    HUD_COLOUR_CONTROLLER_CHOP = 174,\n    HUD_COLOUR_VIDEO_EDITOR_VIDEO = 175,\n    HUD_COLOUR_VIDEO_EDITOR_AUDIO = 176,\n    HUD_COLOUR_VIDEO_EDITOR_TEXT = 177,\n    HUD_COLOUR_HB_BLUE = 178,\n    HUD_COLOUR_HB_YELLOW = 179,\n    HUD_COLOUR_VIDEO_EDITOR_SCORE = 180,\n    HUD_COLOUR_VIDEO_EDITOR_AUDIO_FADEOUT = 181,\n    HUD_COLOUR_VIDEO_EDITOR_TEXT_FADEOUT = 182,\n    HUD_COLOUR_VIDEO_EDITOR_SCORE_FADEOUT = 183,\n    HUD_COLOUR_HEIST_BACKGROUND = 184,\n    HUD_COLOUR_VIDEO_EDITOR_AMBIENT = 185,\n    HUD_COLOUR_VIDEO_EDITOR_AMBIENT_FADEOUT = 186,\n    HUD_COLOUR_GANG_BOSS = 187,\n    HUD_COLOUR_GOON = 188,\n    HUD_COLOUR_BOSS = 189,\n    HUD_COLOUR_LOW_FLOW = 190,\n    HUD_COLOUR_LOW_FLOW_DARK = 191,\n    HUD_COLOUR_G1 = 192,\n    HUD_COLOUR_G2 = 193,\n    HUD_COLOUR_G3 = 194,\n    HUD_COLOUR_G4 = 195,\n    HUD_COLOUR_G5 = 196,\n    HUD_COLOUR_G6 = 197,\n    HUD_COLOUR_G7 = 198,\n    HUD_COLOUR_G8 = 199,\n    HUD_COLOUR_G9 = 200,\n    HUD_COLOUR_G10 = 201,\n    HUD_COLOUR_G11 = 202,\n    HUD_COLOUR_G12 = 203,\n    HUD_COLOUR_G13 = 204,\n    HUD_COLOUR_G14 = 205,\n    HUD_COLOUR_G15 = 206,\n    HUD_COLOUR_ADVERSARY = 207,\n    HUD_COLOUR_DEGEN_RED = 208,\n    HUD_COLOUR_DEGEN_YELLOW = 209,\n    HUD_COLOUR_DEGEN_GREEN = 210,\n    HUD_COLOUR_DEGEN_CYAN = 211,\n    HUD_COLOUR_DEGEN_BLUE = 212,\n    HUD_COLOUR_DEGEN_MAGENTA = 213,\n    HUD_COLOUR_STUNT_1 = 214,\n    HUD_COLOUR_STUNT_2 = 215,\n    HUD_COLOUR_SPECIAL_RACE_SERIES = 216 \n    HUD_COLOUR_SPECIAL_RACE_SERIES_DARK = 217,\n    HUD_COLOUR_CS = 218 \n    HUD_COLOUR_CS_DARK = 219,\n    HUD_COLOUR_TECH_GREEN = 220,\n    HUD_COLOUR_TECH_GREEN_DARK = 221,\n    HUD_COLOUR_TECH_RED = 222,\n    HUD_COLOUR_TECH_GREEN_VERY_DARK = 223,\n    HUD_COLOUR_PLACEHOLDER_01 = 224,\n    HUD_COLOUR_PLACEHOLDER_02 = 225,\n    HUD_COLOUR_PLACEHOLDER_03 = 226,\n    HUD_COLOUR_PLACEHOLDER_04 = 227,\n    HUD_COLOUR_PLACEHOLDER_05 = 228,\n    HUD_COLOUR_PLACEHOLDER_06 = 229,\n    HUD_COLOUR_PLACEHOLDER_07 = 230,\n    HUD_COLOUR_PLACEHOLDER_08 = 231,\n    HUD_COLOUR_PLACEHOLDER_09 = 232,\n    HUD_COLOUR_PLACEHOLDER_10 = 233,\n    HUD_COLOUR_JUNK_ENERGY = 234\n};\n\nNativeDB Introduced: 2545"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetDirectorModeClearTriggeredFlag",
    "hash": "0x2632482FD6B9AB87",
    "code": "-- _SET_DIRECTOR_MODE_CLEAR_TRIGGERED_FLAG\nSetDirectorModeClearTriggeredFlag()",
    "parameters": [],
    "returns": [],
    "description": "SET_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetFakePausemapPlayerPositionThisFrame",
    "hash": "0x77E2DD177910E1CF",
    "code": "-- SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME\nSetFakePausemapPlayerPositionThisFrame(\n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [
      "x: \n\nX coord of the position.",
      "y: \n\nY coord of the position."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nX coord of the position.\n\ny: \n\nY coord of the position.\n\nOverrides the position of the main player blip for the current frame."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetFloatingHelpTextScreenPosition",
    "hash": "0x7679CC1BCEBE3D4C",
    "code": "-- SET_FLOATING_HELP_TEXT_SCREEN_POSITION\nSetFloatingHelpTextScreenPosition(\n\thudIndex --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetFloatingHelpTextStyle",
    "hash": "0x788E7FD431BD67F1",
    "code": "-- SET_FLOATING_HELP_TEXT_STYLE\nSetFloatingHelpTextStyle(\n\thudIndex --[[ integer ]], \n\tstyle --[[ integer ]], \n\thudColor --[[ integer ]], \n\talpha --[[ integer ]], \n\tarrowPosition --[[ integer ]], \n\tboxOffset --[[ integer ]]\n)",
    "parameters": [
      "hudIndex: \n\nThe hud index for the floating help message",
      "style: \n\nValue 0 won't show an arrow at all. Values 1, 2 and -2 will display an arrow.",
      "hudColor: \n\nhttps://docs.fivem.net/docs/game-references/hud-colors/",
      "alpha: \n\nValue for the help box opacity, from 0-255. Anything greater will simply ignore the alpha value. Always 191 in R* scripts.",
      "arrowPosition: \n\nUsed to set the arrow positon. No value will hide the arrow",
      "boxOffset: \n\nOffset for the floating help box. Note: Arrow stays fixed"
    ],
    "returns": [],
    "description": "Parameters:\n\nhudIndex: \n\nThe hud index for the floating help message\n\nstyle: \n\nValue 0 won't show an arrow at all. Values 1, 2 and -2 will display an arrow.\n\nhudColor: \n\nhttps://docs.fivem.net/docs/game-references/hud-colors/\n\nalpha: \n\nValue for the help box opacity, from 0-255. Anything greater will simply ignore the alpha value. Always 191 in R* scripts.\n\narrowPosition: \n\nUsed to set the arrow positon. No value will hide the arrow\n\nboxOffset: \n\nOffset for the floating help box. Note: Arrow stays fixed\n\nArrow Positions\n0 = Off / No arrow\n1 = Top\n2 = Left\n3 = Bottom\n4 = Right\nNote\n\nAny numeric value greater than 4 will result in a right arrow (Index 4)\n\nImportant\n\nNeeds to be called every frame"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetFloatingHelpTextToEntity",
    "hash": "0xB094BC1DB4018240",
    "code": "-- SET_FLOATING_HELP_TEXT_TO_ENTITY\nSetFloatingHelpTextToEntity(\n\thudIndex --[[ integer ]], \n\tentity --[[ Entity ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetFloatingHelpTextWorldPosition",
    "hash": "0x784BA7E0ECEB4178",
    "code": "-- SET_FLOATING_HELP_TEXT_WORLD_POSITION\nSetFloatingHelpTextWorldPosition(\n\thudIndex --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetFrontendActive",
    "hash": "0x745711A75AB09277",
    "code": "-- SET_FRONTEND_ACTIVE\nSetFrontendActive(\n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetGpsCustomRouteRender",
    "hash": "0x900086F371220B6F",
    "code": "-- SET_GPS_CUSTOM_ROUTE_RENDER\nSetGpsCustomRouteRender(\n\ttoggle --[[ boolean ]], \n\tradarThickness --[[ integer ]], \n\tmapThickness --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetGpsFlags",
    "hash": "0x5B440763A4C8D15B",
    "code": "-- SET_GPS_FLAGS\nSetGpsFlags(\n\tp0 --[[ integer ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.\nDoesn't seem like the flags are actually read by the game at all."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetGpsFlashes",
    "hash": "0x320D0E0D936A0E9B",
    "code": "-- SET_GPS_FLASHES\nSetGpsFlashes(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetGpsMultiRouteRender",
    "hash": "0x3DDA37128DD1ACA8",
    "code": "-- SET_GPS_MULTI_ROUTE_RENDER\nSetGpsMultiRouteRender(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetHealthHudDisplayValues",
    "hash": "0x3F5CC444DCAAA8F2",
    "code": "-- SET_HEALTH_HUD_DISPLAY_VALUES\nSetHealthHudDisplayValues(\n\thealth --[[ integer ]], \n\tcapacity --[[ integer ]], \n\twasAdded --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetHelpMessageTextStyle",
    "hash": "0xB9C362BABECDDC7A",
    "code": "-- _SET_HELP_MESSAGE_TEXT_STYLE\nSetHelpMessageTextStyle(\n\tstyle --[[ integer ]], \n\thudColor --[[ integer ]], \n\talpha --[[ integer ]], \n\tp3 --[[ integer ]], \n\tp4 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetHudComponentPosition",
    "hash": "0xAABB1F56E2A17CED",
    "code": "-- SET_HUD_COMPONENT_POSITION\nSetHudComponentPosition(\n\tid --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetInteriorZoomLevelDecreased",
    "hash": "0x7EC8ABA5E74B3D7A",
    "code": "-- _SET_INTERIOR_ZOOM_LEVEL_DECREASED\nSetInteriorZoomLevelDecreased(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetInteriorZoomLevelIncreased",
    "hash": "0x504DFE62A1692296",
    "code": "-- _SET_INTERIOR_ZOOM_LEVEL_INCREASED\nSetInteriorZoomLevelIncreased(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMainPlayerBlipColour",
    "hash": "0x7B21E0BB01E8224A",
    "code": "-- _SET_MAIN_PLAYER_BLIP_COLOUR\nSetMainPlayerBlipColour(\n\tcolor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMaxArmourHudDisplay",
    "hash": "0x06A320535F5F0248",
    "code": "-- SET_MAX_ARMOUR_HUD_DISPLAY\nSetMaxArmourHudDisplay(\n\tmaximumValue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMaxHealthHudDisplay",
    "hash": "0x975D66A0BC17064C",
    "code": "-- SET_MAX_HEALTH_HUD_DISPLAY\nSetMaxHealthHudDisplay(\n\tmaximumValue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapAltitudeIndicatorLevel",
    "hash": "0xD201F3FF917A506D",
    "code": "-- _SET_MINIMAP_ALTITUDE_INDICATOR_LEVEL\nSetMinimapAltitudeIndicatorLevel(\n\taltitude --[[ number ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Argument must be 0.0f or above 38.0f, or it will be ignored.  \nNativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapBlockWaypoint",
    "hash": "0x58FADDED207897DC",
    "code": "-- SET_MINIMAP_BLOCK_WAYPOINT\nSetMinimapBlockWaypoint(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapComponent",
    "hash": "0x75A9A10948D1DEA6",
    "code": "-- SET_MINIMAP_COMPONENT\nlocal retval --[[ integer ]] =\n\tSetMinimapComponent(\n\t\tcomponentID --[[ integer ]], \n\t\ttoggle --[[ boolean ]], \n\t\thudColor --[[ integer ]]\n\t)",
    "parameters": [
      "componentID: \n\nThe component ID to change.",
      "toggle: \n\nTrue to enable/colorize, false to disable.",
      "hudColor: \n\nThe hudcolor index, the list of hud colors can be found here."
    ],
    "returns": [
      "Hardcoded to always return 1 (int)"
    ],
    "description": "Parameters:\n\ncomponentID: \n\nThe component ID to change.\n\ntoggle: \n\nTrue to enable/colorize, false to disable.\n\nhudColor: \n\nThe hudcolor index, the list of hud colors can be found here.\n\nReturns:\n\nHardcoded to always return 1 (int)\n\nThis native is used to colorize/toggle certain map components like the army base.\n\nComponent IDs 6 through 14 are used by the freemode event King of the Castle in GTA Online.\n\nAn incomplete list of component IDs:\n0: Los Santos International Airport yellow runway markers\n1: Sandy Shores Airfield yellow runway markers\n2: McKenzie Field yellow runway markers\n6: Vespucci Beach lifeguard building\n7: Top level zone of Alien Camp (Hippy Camp)\n8: Paleto Bay fire station drill tower\n9 Land Act Dam tower\n10 Pala Springs Aerial Tramway\n11 Galileo Observatory power unit\n12 Small zone (empty \"interior\") near Central Los Santos Medical Center\n13 Richman Mansion grotto\n14 2 Alien Camp (Hippy Camp) circles\n15 Fort Zancudo"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapFowRevealCoordinate",
    "hash": "0x0923DBF87DFF735E",
    "code": "-- SET_MINIMAP_FOW_REVEAL_COORDINATE\nSetMinimapFowRevealCoordinate(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapGolfCourse",
    "hash": "0x71BDB63DBAF8DA59",
    "code": "-- SET_MINIMAP_GOLF_COURSE\nSetMinimapGolfCourse(\n\thole --[[ integer ]]\n)",
    "parameters": [
      "hole: \n\nThe ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour."
    ],
    "returns": [],
    "description": "Parameters:\n\nhole: \n\nThe ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour.\n\nNot much is known so far on what it does exactly. All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.\n\nYou need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap. You'll also need to use the GOLF scaleform in order to get the correct minmap border to show up.\n\nUse SET_MINIMAP_GOLF_COURSE_OFF() to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapGolfCourseOff",
    "hash": "0x35EDD5B2E3FF01C0",
    "code": "-- SET_MINIMAP_GOLF_COURSE_OFF\nSetMinimapGolfCourseOff()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapHideFow",
    "hash": "0xF8DEE0A5600CBB93",
    "code": "-- SET_MINIMAP_HIDE_FOW\nSetMinimapHideFow(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If true, the entire map will be revealed."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapInPrologue",
    "hash": "0x9133955F1A2DA957",
    "code": "-- SET_MINIMAP_IN_PROLOGUE\nSetMinimapInPrologue(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles the North Yankton map"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapInSpectatorMode",
    "hash": "0x1A5CD7752DD28CD3",
    "code": "-- SET_MINIMAP_IN_SPECTATOR_MODE\nSetMinimapInSpectatorMode(\n\ttoggle --[[ boolean ]], \n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMinimapSonarSweep",
    "hash": "0x6B50FC8749632EC1",
    "code": "-- SET_MINIMAP_SONAR_SWEEP\nSetMinimapSonarSweep(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nA boolean value where true activates the sonar sweep animation on the minimap, and false turns it off."
    ],
    "returns": [
      "This native does not return any value."
    ],
    "description": "Parameters:\n\ntoggle: \n\nA boolean value where true activates the sonar sweep animation on the minimap, and false turns it off.\n\nReturns:\n\nThis native does not return any value.\n\nEnables or disables the sonar sweep animation on the minimap.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMissionName",
    "hash": "0x5F28ECF5FC84772F",
    "code": "-- SET_MISSION_NAME\nSetMissionName(\n\tp0 --[[ boolean ]], \n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMissionName_2",
    "hash": "0xE45087D85F468BC2",
    "code": "-- _SET_MISSION_NAME_2\nSetMissionName_2(\n\tp0 --[[ boolean ]], \n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMouseCursorStyle",
    "hash": "0x8DB8CFFD58B62552",
    "code": "-- SET_MOUSE_CURSOR_STYLE\nSetMouseCursorStyle(\n\tstyle --[[ integer ]]\n)",
    "parameters": [
      "style: \n\nWhich sprite to change to, see declared enum eMousePointerStyle."
    ],
    "returns": [],
    "description": "Parameters:\n\nstyle: \n\nWhich sprite to change to, see declared enum eMousePointerStyle.\n\nChanges the mouse style.\n\nenum eMousePointerStyle {\n\tARROW = 1,\n\tARROW_DIMMED = 2,\n\tHAND_OPEN = 3,\n\tHAND_GRAB = 4,\n\tHAND_MIDDLE_FINGER = 5,\n\tARROW_LEFT = 6,\n\tARROW_RIGHT = 7,\n\tARROW_UP = 8,\n\tARROW_DOWN = 9,\n\tARROW_TRIMMING = 10,\n\tARROW_PLUS = 11,\n\tARROW_MINUS = 12\n};"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMouseCursorThisFrame",
    "hash": "0xAAE7CE1D63167423",
    "code": "-- SET_MOUSE_CURSOR_THIS_FRAME\nSetMouseCursorThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Sets the mouse pointer to be active on current frame."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMouseCursorVisible",
    "hash": "0x98215325A695E78A",
    "code": "-- SET_MOUSE_CURSOR_VISIBLE\nSetMouseCursorVisible(\n\tisVisible --[[ boolean ]]\n)",
    "parameters": [
      "isVisible: \n\nIf the mouse cursor is visible"
    ],
    "returns": [],
    "description": "Parameters:\n\nisVisible: \n\nIf the mouse cursor is visible\n\nToggles the visibility of the cursor. Do note that if the game loses focus and then regains it, the cursor will become visible again."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagAlpha",
    "hash": "0xD48FE545CD46F857",
    "code": "-- SET_MP_GAMER_TAG_ALPHA\nSetMpGamerTagAlpha(\n\tgamerTagId --[[ integer ]], \n\tcomponent --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets flag's sprite transparency. 0-255."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagBigText",
    "hash": "0x7B7723747CCB55B6",
    "code": "-- SET_MP_GAMER_TAG_BIG_TEXT\nSetMpGamerTagBigText(\n\tgamerTagId --[[ integer ]], \n\tstring --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagColour",
    "hash": "0x613ED644950626AE",
    "code": "-- SET_MP_GAMER_TAG_COLOUR\nSetMpGamerTagColour(\n\tgamerTagId --[[ integer ]], \n\tcomponent --[[ integer ]], \n\thudColorIndex --[[ integer ]]\n)",
    "parameters": [
      "gamerTagId: \n\na gamerTagId obtained using for example: CREATE_FAKE_MP_GAMER_TAG.",
      "component: \n\na component id, see the full list here: link",
      "hudColorIndex: \n\na hud color index, see the full list here: link"
    ],
    "returns": [],
    "description": "Parameters:\n\ngamerTagId: \n\na gamerTagId obtained using for example: CREATE_FAKE_MP_GAMER_TAG.\n\ncomponent: \n\na component id, see the full list here: link\n\nhudColorIndex: \n\na hud color index, see the full list here: link\n\nSets a gamer tag's component colour"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagDisablePlayerHealthSync",
    "hash": "0xD29EC58C2F6B5014",
    "code": "-- _SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC\nSetMpGamerTagDisablePlayerHealthSync(\n\tgamerTagId --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "By default, the player health value shown by a gamer tag's health bar is synchronised with the health of the ped it is attached to. This native disables that behaviour, allowing _SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH to have an effect."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagHealthBarColour",
    "hash": "0x3158C77A7E888AB4",
    "code": "-- SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR\nSetMpGamerTagHealthBarColour(\n\tgamerTagId --[[ integer ]], \n\thudColorIndex --[[ integer ]]\n)",
    "parameters": [
      "gamerTagId: \n\na gamerTagId obtained using for example: CREATE_FAKE_MP_GAMER_TAG",
      "hudColorIndex: \n\na hud color index, see the full list here: link"
    ],
    "returns": [],
    "description": "Parameters:\n\ngamerTagId: \n\na gamerTagId obtained using for example: CREATE_FAKE_MP_GAMER_TAG\n\nhudColorIndex: \n\na hud color index, see the full list here: link\n\nShould be enabled as component (2). Has 0 alpha by default."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagMpBagLargeCount",
    "hash": "0x9C16459B2324B2CF",
    "code": "-- _SET_MP_GAMER_TAG_MP_BAG_LARGE_COUNT\nSetMpGamerTagMpBagLargeCount(\n\tgamerTagId --[[ integer ]], \n\tcount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "displays wanted star above head"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagName",
    "hash": "0xDEA2B8283BAA3944",
    "code": "-- SET_MP_GAMER_TAG_NAME\nSetMpGamerTagName(\n\tgamerTagId --[[ integer ]], \n\tstring --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagOverridePlayerHealth",
    "hash": "0x1563FE35E9928E67",
    "code": "-- _SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH\nSetMpGamerTagOverridePlayerHealth(\n\tgamerTagId --[[ integer ]], \n\thealth --[[ integer ]], \n\tmaximumHealth --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Manually sets the player health value for a gamer tag, using the maximum health to calculate what percentage of the bar should be filled. Has no effect unless _SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC has been called prior to disable synchronisation with the attached ped."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagUseVehicleHealth",
    "hash": "0xA67F9C46D612B6F1",
    "code": "-- _SET_MP_GAMER_TAG_USE_VEHICLE_HEALTH\nSetMpGamerTagUseVehicleHealth(\n\tgamerTagId --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the health bar of a gamer tag to show the health of the last (or current) vehicle of the ped the gamer tag is attached to. The vehicle health value is stored separate from the player health and using it won't clear any player health overrides."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagVisibility",
    "hash": "0x63BB75ABEDC1F6A0",
    "code": "-- SET_MP_GAMER_TAG_VISIBILITY\nSetMpGamerTagVisibility(\n\tgamerTagId --[[ integer ]], \n\tcomponent --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eMpGamerTagComponent\n{\n\tMP_TAG_GAMER_NAME = 0,\n\tMP_TAG_CREW_TAG = 1,\n\tMP_TAG_HEALTH_ARMOUR = 2,\n\tMP_TAG_BIG_TEXT = 3,\n\tMP_TAG_AUDIO_ICON = 4,\n\tMP_TAG_USING_MENU = 5,\n\tMP_TAG_PASSIVE_MODE = 6,\n\tMP_TAG_WANTED_STARS = 7,\n\tMP_TAG_DRIVER = 8,\n\tMP_TAG_CO_DRIVER = 9,\n\tMP_TAG_TAGGED = 10,\n\tMP_TAG_GAMER_NAME_NEARBY = 11,\n\tMP_TAG_ARROW = 12,\n\tMP_TAG_PACKAGES = 13,\n\tMP_TAG_INV_IF_PED_FOLLOWING = 14,\n\tMP_TAG_RANK_TEXT = 15,\n\tMP_TAG_TYPING = 16,\n\tMP_TAG_BAG_LARGE = 17,\n\tMP_TAG_ARROW = 18,\n\tMP_TAG_GANG_CEO = 19,\n\tMP_TAG_GANG_BIKER = 20,\n\tMP_TAG_BIKER_ARROW = 21,\n\tMP_TAG_MC_ROLE_PRESIDENT = 22,\n\tMP_TAG_MC_ROLE_VICE_PRESIDENT = 23,\n\tMP_TAG_MC_ROLE_ROAD_CAPTAIN = 24,\n\tMP_TAG_MC_ROLE_SARGEANT = 25,\n\tMP_TAG_MC_ROLE_ENFORCER = 26,\n\tMP_TAG_MC_ROLE_PROSPECT = 27,\n\tMP_TAG_TRANSMITTER = 28,\n\tMP_TAG_BOMB = 29\n};\n\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagVisibilityAll",
    "hash": "0xEE76FF7E6A0166B0",
    "code": "-- _SET_MP_GAMER_TAG_VISIBILITY_ALL\nSetMpGamerTagVisibilityAll(\n\tgamerTagId --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the visibility of all components of the gamer tag to the specified value."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMpGamerTagWantedLevel",
    "hash": "0xCF228E2AA03099C3",
    "code": "-- SET_MP_GAMER_TAG_WANTED_LEVEL\nSetMpGamerTagWantedLevel(\n\tgamerTagId --[[ integer ]], \n\twantedlvl --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "displays wanted star above head"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMultiplayerBankCash",
    "hash": "0xDD21B55DF695CD0A",
    "code": "-- SET_MULTIPLAYER_BANK_CASH\nSetMultiplayerBankCash()",
    "parameters": [],
    "returns": [],
    "description": "Preview image:\n\nTo change the bank balance use STAT_SET_INT with \"BANK_BALANCE\" to whatever value you need to."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMultiplayerHudCash",
    "hash": "0xFD1D220394BCB824",
    "code": "-- SET_MULTIPLAYER_HUD_CASH\nSetMultiplayerHudCash(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetMultiplayerWalletCash",
    "hash": "0xC2D15BEF167E27BC",
    "code": "-- SET_MULTIPLAYER_WALLET_CASH\nSetMultiplayerWalletCash()",
    "parameters": [],
    "returns": [],
    "description": "Preview image:\n\nTo change money value use STAT_SET_INT with \"MP0_WALLET_BALANCE\" to whatever value you need to."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetNewWaypoint",
    "hash": "0xFE43368D2AA4F2FC",
    "code": "-- SET_NEW_WAYPOINT\nSetNewWaypoint(\n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPauseMenuActive",
    "hash": "0xDF47FC56C71569CF",
    "code": "-- SET_PAUSE_MENU_ACTIVE\nSetPauseMenuActive(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native is deprecated.\n\nIf you're looking to:\n\nToggle the pause menu on, use ACTIVATE_FRONTEND_MENU\nToggle the pause menu off, use SET_FRONTEND_ACTIVE\nDisable toggling the pause menu, use DISABLE_FRONTEND_THIS_FRAME"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPauseMenuPedLighting",
    "hash": "0x3CA6050692BC61B0",
    "code": "-- SET_PAUSE_MENU_PED_LIGHTING\nSetPauseMenuPedLighting(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\nTrue enables the light, false disables the light."
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\nTrue enables the light, false disables the light.\n\nToggles the light state for the pause menu ped in frontend menus.\n\nThis is used by R* in combination with SET_PAUSE_MENU_PED_SLEEP_STATE to toggle the \"offline\" or \"online\" state in the \"friends\" tab of the pause menu in GTA Online.\n\nExample: On:  Off:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPauseMenuPedSleepState",
    "hash": "0xECF128344E9FF9F1",
    "code": "-- SET_PAUSE_MENU_PED_SLEEP_STATE\nSetPauseMenuPedSleepState(\n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "state: \n\n0 will make the ped slowly fall asleep, 1 will slowly wake the ped up."
    ],
    "returns": [],
    "description": "Parameters:\n\nstate: \n\n0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.\n\nToggles the pause menu ped sleep state for frontend menus.\n\nExample GIF"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPedAiBlipForcedOn",
    "hash": "0x0C4BBF625CA98C4E",
    "code": "-- SET_PED_AI_BLIP_FORCED_ON\nSetPedAiBlipForcedOn(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "if \"flag\" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip  \nIf \"flag\" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPedAiBlipGangId",
    "hash": "0xE52B8E7F85D39A08",
    "code": "-- SET_PED_AI_BLIP_GANG_ID\nSetPedAiBlipGangId(\n\tped --[[ Ped ]], \n\tgangId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPedAiBlipHasCone",
    "hash": "0x3EED80DFF7325CAA",
    "code": "-- SET_PED_AI_BLIP_HAS_CONE\nSetPedAiBlipHasCone(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPedAiBlipNoticeRange",
    "hash": "0x97C65887D4B37FA9",
    "code": "-- SET_PED_AI_BLIP_NOTICE_RANGE\nSetPedAiBlipNoticeRange(\n\tped --[[ Ped ]], \n\trange --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPedAiBlipSprite",
    "hash": "0xFCFACD0DB9D7A57D",
    "code": "-- _SET_PED_AI_BLIP_SPRITE\nSetPedAiBlipSprite(\n\tped --[[ Ped ]], \n\tspriteId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPedHasAiBlip",
    "hash": "0xD30C50DF888D58B5",
    "code": "-- SET_PED_HAS_AI_BLIP\nSetPedHasAiBlip(\n\tped --[[ Ped ]], \n\thasCone --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.\nSee gtaforums.com/topic/884370-native-research-ai-blips for further information."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPedHasAiBlipWithColor",
    "hash": "0xB13DCB4C6FAAD238",
    "code": "-- _SET_PED_HAS_AI_BLIP_WITH_COLOR\nSetPedHasAiBlipWithColor(\n\tped --[[ Ped ]], \n\thasCone --[[ boolean ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetPlayerIsInDirectorMode",
    "hash": "0x808519373FD336A3",
    "code": "-- _SET_PLAYER_IS_IN_DIRECTOR_MODE\nSetPlayerIsInDirectorMode(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If toggle is true, hides special ability bar / character name in the pause menu\nIf toggle is false, shows special ability bar / character name in the pause menu\nSET_PLAYER_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRaceTrackRender",
    "hash": "0x1EAC5F91BCBC5073",
    "code": "-- SET_RACE_TRACK_RENDER\nSetRaceTrackRender(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRadarAsExteriorThisFrame",
    "hash": "0xE81B7D2A3DAB2D81",
    "code": "-- SET_RADAR_AS_EXTERIOR_THIS_FRAME\nSetRadarAsExteriorThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRadarAsInteriorThisFrame",
    "hash": "0x59E727A1C9D3E31A",
    "code": "-- SET_RADAR_AS_INTERIOR_THIS_FRAME\nSetRadarAsInteriorThisFrame(\n\tinterior --[[ Hash ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\theading --[[ integer ]], \n\tzoom --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "List of interior hashes: pastebin.com/1FUyXNqY  \nNot for every interior zoom > 0 available."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRadarZoom",
    "hash": "0x096EF57A0C999BBA",
    "code": "-- SET_RADAR_ZOOM\nSetRadarZoom(\n\tzoomLevel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "zoomLevel ranges from 0 to 200"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRadarZoomPrecise",
    "hash": "0xBD12C5EEE184C337",
    "code": "-- SET_RADAR_ZOOM_PRECISE\nSetRadarZoomPrecise(\n\tzoom --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRadarZoomToBlip",
    "hash": "0xF98E4B3E56AFC7B1",
    "code": "-- SET_RADAR_ZOOM_TO_BLIP\nSetRadarZoomToBlip(\n\tblip --[[ Blip ]], \n\tzoom --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRadarZoomToDistance",
    "hash": "0xCB7CC0D58405AD41",
    "code": "-- SET_RADAR_ZOOM_TO_DISTANCE\nSetRadarZoomToDistance(\n\tzoom --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetRadiusBlipEdge",
    "hash": "0x25615540D894B814",
    "code": "-- SET_RADIUS_BLIP_EDGE\nSetRadiusBlipEdge(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "blip: \n\nThe blip handle",
      "toggle: \n\nWhether to turn off or on the effect"
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip handle\n\ntoggle: \n\nWhether to turn off or on the effect\n\nEnabling this on a radius blip will make it outline only.\\ Please note that this only works on a radius blip (i.e. one generated using ADD_BLIP_FOR_RADIUS), not a normal blip.\n\nExample result:\\"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetScriptVariable_2HudColour",
    "hash": "0x16A304E6CB2BFAB9",
    "code": "-- _SET_SCRIPT_VARIABLE_2_HUD_COLOUR\nSetScriptVariable_2HudColour(\n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetScriptVariableHudColour",
    "hash": "0xD68A5FF8A3A89874",
    "code": "-- SET_SCRIPT_VARIABLE_HUD_COLOUR\nSetScriptVariableHudColour(\n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the color of HUD_COLOUR_SCRIPT_VARIABLE"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetSocialClubTour",
    "hash": "0x9E778248D6685FE0",
    "code": "-- SET_SOCIAL_CLUB_TOUR\nSetSocialClubTour(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "HUD::SET_SOCIAL_CLUB_TOUR(\"Gallery\");\nHUD::SET_SOCIAL_CLUB_TOUR(\"Missions\");\nHUD::SET_SOCIAL_CLUB_TOUR(\"General\");\nHUD::SET_SOCIAL_CLUB_TOUR(\"Playlists\");"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextCentre",
    "hash": "0xC02F4DBFB51D988B",
    "code": "-- SET_TEXT_CENTRE\nSetTextCentre(\n\talign --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextColour",
    "hash": "0xBE6B23FFA53FB442",
    "code": "-- SET_TEXT_COLOUR\nSetTextColour(\n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "colors you input not same as you think?\nA: for some reason its R B G A"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextDropShadow",
    "hash": "0x1CA3E9EAC9D93E5E",
    "code": "-- SET_TEXT_DROP_SHADOW\nSetTextDropShadow()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextDropshadow",
    "hash": "0x465C84BC39F1C351",
    "code": "-- SET_TEXT_DROPSHADOW\nSetTextDropshadow(\n\tdistance --[[ integer ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [
      "distance: \n\nShadow distance in pixels, both horizontal and vertical.",
      "r: \n\nRed color.",
      "g: \n\nGreen color.",
      "b: \n\nBlue color.",
      "a: \n\nAlpha."
    ],
    "returns": [],
    "description": "Parameters:\n\ndistance: \n\nShadow distance in pixels, both horizontal and vertical.\n\nr: \n\nRed color.\n\ng: \n\nGreen color.\n\nb: \n\nBlue color.\n\na: \n\nAlpha.\n\ndistance - shadow distance in pixels, both horizontal and vertical r, g, b, a - color"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextEdge",
    "hash": "0x441603240D202FA6",
    "code": "-- SET_TEXT_EDGE\nSetTextEdge(\n\tp0 --[[ integer ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\ta --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextFont",
    "hash": "0x66E0276CC5F6B9DA",
    "code": "-- SET_TEXT_FONT\nSetTextFont(\n\tfontType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eTextFonts\n{\n    FONT_STANDARD = 0,\n    FONT_CURSIVE = 1,\n    FONT_ROCKSTAR_TAG = 2,\n    FONT_LEADERBOAR0D = 3,\n    FONT_CONDENSED = 4,\n    FONT_STYLE_FIXED_WIDTH_NUMBERS = 5,\n    FONT_CONDENSED_NOT_GAMERNAME = 6,\n    FONT_STYLE_PRICEDOWN = 7,\n    FONT_STYLE_TAXI = 8,\n}"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextInputBoxEnabled",
    "hash": "0x1185A8087587322C",
    "code": "-- SET_TEXT_INPUT_BOX_ENABLED\nSetTextInputBoxEnabled(\n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles if the text input box can be opened with DISPLAY_ONSCREEN_KEYBOARD."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextJustification",
    "hash": "0x4E096588B13FFECA",
    "code": "-- SET_TEXT_JUSTIFICATION\nSetTextJustification(\n\tjustifyType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Types -  \n0: Center-Justify  \n1: Left-Justify  \n2: Right-Justify  \nRight-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextLeading",
    "hash": "0xA50ABC31E3CDFAFF",
    "code": "-- SET_TEXT_LEADING\nSetTextLeading(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextOutline",
    "hash": "0x2513DFB0FB8400FE",
    "code": "-- SET_TEXT_OUTLINE\nSetTextOutline()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextProportional",
    "hash": "0x038C1F517D7FDCF8",
    "code": "-- SET_TEXT_PROPORTIONAL\nSetTextProportional(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextRenderId",
    "hash": "0x5F15302936E07111",
    "code": "-- SET_TEXT_RENDER_ID\nSetTextRenderId(\n\trenderId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextRightJustify",
    "hash": "0x6B3C4650BC8BEE47",
    "code": "-- SET_TEXT_RIGHT_JUSTIFY\nSetTextRightJustify(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextScale",
    "hash": "0x07C837F9A01C34C9",
    "code": "-- SET_TEXT_SCALE\nSetTextScale(\n\tscale --[[ number ]], \n\tsize --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Size range : 0F to 1.0F\np0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetTextWrap",
    "hash": "0x63145D9C883A1A70",
    "code": "-- SET_TEXT_WRAP\nSetTextWrap(\n\tstart --[[ number ]], \n\tend --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.  \nstart - left boundry on screen position (0.0 - 1.0)  \nend - right boundry on screen position (0.0 - 1.0)"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetUseIslandMap",
    "hash": "0x5E1460624D194A38",
    "code": "-- SET_USE_ISLAND_MAP\nSetUseIslandMap(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nA boolean value where true switches the minimap to the Cayo Perico map, and false reverts it to the standard map."
    ],
    "returns": [
      "This native does not return any value."
    ],
    "description": "Parameters:\n\ntoggle: \n\nA boolean value where true switches the minimap to the Cayo Perico map, and false reverts it to the standard map.\n\nReturns:\n\nThis native does not return any value.\n\nSwitches the display of the in-game minimap to the Cayo Perico map. This native needs to be called every frame to maintain the toggled state effectively.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetUseWaypointAsDestination",
    "hash": "0x6CDD58146A436083",
    "code": "-- _SET_USE_WAYPOINT_AS_DESTINATION\nSetUseWaypointAsDestination(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\ntrue to show 'Destination', false to show 'Waypoint' (the default)"
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\ntrue to show 'Destination', false to show 'Waypoint' (the default)\n\nSets a global mode which makes the pause menu map show 'Destination' instead of 'Waypoint' in the key legend on the bottom of the screen.\n\n<!-- Name guess: - alphabetical function order, below [SET_USER_RADIO_CONTROL_ENABLED, SET_USE_HI_DOF], above SET_VARIABLE_ON_SOUND. -->"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWarningMessage",
    "hash": "0x7B1776B3B53F8D74",
    "code": "-- SET_WARNING_MESSAGE\nSetWarningMessage(\n\tentryLine1 --[[ string ]], \n\tinstructionalKey --[[ integer ]], \n\tentryLine2 --[[ string ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ integer ]], \n\tbackground --[[ string ]], \n\tp6 --[[ string ]], \n\tshowBg --[[ boolean ]], \n\terrorCode --[[ integer ]]\n)",
    "parameters": [
      "entryLine1: \n\nThe text label to display as the first line of the warning message.",
      "instructionalKey: \n\nThis is an enum, check the description for a list.",
      "entryLine2: \n\nThe text label to display as the second line of the warning message.",
      "p3: \n\nPurpose unknown.",
      "p4: \n\nPurpose unknown.",
      "background: \n\nSet to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.",
      "p6: \n\nPurpose unknown.",
      "showBg: \n\nPurpose unknown.",
      "errorCode: \n\nWhen not 0, adds a field displaying the value as 'error code' to the warning message."
    ],
    "returns": [],
    "description": "Parameters:\n\nentryLine1: \n\nThe text label to display as the first line of the warning message.\n\ninstructionalKey: \n\nThis is an enum, check the description for a list.\n\nentryLine2: \n\nThe text label to display as the second line of the warning message.\n\np3: \n\nPurpose unknown.\n\np4: \n\nPurpose unknown.\n\nbackground: \n\nSet to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.\n\np6: \n\nPurpose unknown.\n\nshowBg: \n\nPurpose unknown.\n\nerrorCode: \n\nWhen not 0, adds a field displaying the value as 'error code' to the warning message.\n\nenum eInstructionalButtonTypes\n{\n    NONE = 0,\n    SELECT = 1,\n    OK = 2,\n    YES = 4,\n    BACK = 8,\n    BACK_SELECT = 9,\n    BACK_OK = 10,\n    BACK_YES = 12,\n    CANCEL = 16,\n    CANCEL_SELECT = 17,\n    CANCEL_OK = 18,\n    CANCEL_YES = 20,\n    NO = 32,\n    NO_SELECT = 33,\n    NO_OK = 34,\n    YES_NO = 36,\n    RETRY = 64,\n    RETRY_SELECT = 65,\n    RETRY_OK = 66,\n    RETRY_YES = 68,\n    RETRY_BACK = 72,\n    RETRY_BACK_SELECT = 73,\n    RETRY_BACK_OK = 74,\n    RETRY_BACK_YES = 76,\n    RETRY_CANCEL = 80,\n    RETRY_CANCEL_SELECT = 81,\n    RETRY_CANCEL_OK = 82,\n    RETRY_CANCEL_YES = 84,\n    SKIP = 256,\n    SKIP_SELECT = 257,\n    SKIP_OK = 258,\n    SKIP_YES = 260,\n    SKIP_BACK = 264,\n    SKIP_BACK_SELECT = 265,\n    SKIP_BACK_OK = 266,\n    SKIP_BACK_YES = 268,\n    SKIP_CANCEL = 272,\n    SKIP_CANCEL_SELECT = 273,\n    SKIP_CANCEL_OK = 274,\n    SKIP_CANCEL_YES = 276,\n    CONTINUE = 16384,\n    BACK_CONTINUE = 16392,\n    CANCEL_CONTINUE = 16400,\n    LOADING_SPINNER = 134217728,\n    SELECT_LOADING_SPINNER = 134217729,\n    OK_LOADING_SPINNER = 134217730,\n    YES_LOADING_SPINNER = 134217732,\n    BACK_LOADING_SPINNER = 134217736,\n    BACK_SELECT_LOADING_SPINNER = 134217737,\n    BACK_OK_LOADING_SPINNER = 134217738,\n    BACK_YES_LOADING_SPINNER = 134217740,\n    CANCEL_LOADING_SPINNER = 134217744,\n    CANCEL_SELECT_LOADING_SPINNER = 134217745,\n    CANCEL_OK_LOADING_SPINNER = 134217746,\n    CANCEL_YES_LOADING_SPINNER = 134217748\n}\n\n\nNote: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.\n\nResult of the example code: https://i.imgur.com/imwoimm.png"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWarningMessageOptionItems",
    "hash": "0x0C5A80A9E096D529",
    "code": "-- SET_WARNING_MESSAGE_OPTION_ITEMS\nlocal retval --[[ boolean ]] =\n\tSetWarningMessageOptionItems(\n\t\tindex --[[ integer ]], \n\t\tname --[[ string ]], \n\t\tcash --[[ integer ]], \n\t\trp --[[ integer ]], \n\t\tlvl --[[ integer ]], \n\t\tcolour --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWarningMessageWithAlert",
    "hash": "0x15803FEC3B9A872B",
    "code": "-- _SET_WARNING_MESSAGE_WITH_ALERT\nSetWarningMessageWithAlert(\n\tlabelTitle --[[ string ]], \n\tlabelMsg --[[ string ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]], \n\tlabelMsg2 --[[ string ]], \n\tp5 --[[ boolean ]], \n\tp6 --[[ integer ]], \n\tp7 --[[ integer ]], \n\tp8 --[[ string ]], \n\tp9 --[[ string ]], \n\tbackground --[[ boolean ]], \n\terrorCode --[[ integer ]]\n)",
    "parameters": [
      "labelTitle: \n\nLabel of the alert's title.",
      "labelMsg: \n\nLabel of the alert's message.",
      "p2: \n\nThis is an enum, check the description for a list.",
      "p3: \n\nThis is an enum, check the description for a list.",
      "labelMsg2: \n\nLabel of another message line",
      "p5: \n\nusually 0",
      "p6: \n\nusually -1",
      "p7: \n\nusually 0",
      "p8: \n\nunknown label",
      "p9: \n\nunknown label",
      "background: \n\nSet to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.",
      "errorCode: \n\nError code, shown at the bottom left if set to value other than 0."
    ],
    "returns": [],
    "description": "Parameters:\n\nlabelTitle: \n\nLabel of the alert's title.\n\nlabelMsg: \n\nLabel of the alert's message.\n\np2: \n\nThis is an enum, check the description for a list.\n\np3: \n\nThis is an enum, check the description for a list.\n\nlabelMsg2: \n\nLabel of another message line\n\np5: \n\nusually 0\n\np6: \n\nusually -1\n\np7: \n\nusually 0\n\np8: \n\nunknown label\n\np9: \n\nunknown label\n\nbackground: \n\nSet to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.\n\nerrorCode: \n\nError code, shown at the bottom left if set to value other than 0.\n\ninstructionalKey enum list:\n\nButtons = {\n      Empty = 0,\n      Select = 1, -- (RETURN)\n      Ok = 2, -- (RETURN)\n      Yes = 4, -- (RETURN)\n      Back = 8, -- (ESC)\n      Cancel = 16, -- (ESC)\n      No = 32, -- (ESC)\n      RetrySpace = 64, -- (SPACE)\n      Restart = 128, -- (SPACE)\n      Skip = 256, -- (SPACE)\n      Quit = 512, -- (ESC)\n      Adjust = 1024, -- (ARROWS)\n      SpaceKey = 2048, -- (SPACE)\n      Share = 4096, -- (SPACE)\n      SignIn = 8192, -- (SPACE)\n      Continue = 16384, -- (RETURN)\n      AdjustLeftRight = 32768, -- (SCROLL L/R)\n      AdjustUpDown = 65536, -- (SCROLL U/D)\n      Overwrite = 131072, -- (SPACE)\n      SocialClubSignup = 262144, -- (RETURN)\n      Confirm = 524288, -- (RETURN)\n      Queue = 1048576, -- (RETURN)\n      RetryReturn = 2097152, -- (RETURN)\n      BackEsc = 4194304, -- (ESC)\n      SocialClub = 8388608, -- (RETURN)\n      Spectate = 16777216, -- (SPACE)\n      OkEsc = 33554432, -- (ESC)\n      CancelTransfer = 67108864, -- (ESC)\n      LoadingSpinner = 134217728,\n      NoReturnToGTA = 268435456, -- (ESC)\n      CancelEsc = 536870912, -- (ESC)\n}\n\nAlt = {\n      Empty = 0,\n      No = 1, -- (SPACE)\n      Host = 2, -- (ESC)\n      SearchForJob = 4, -- (RETURN)\n      ReturnKey = 8, -- (TURN)\n      Freemode = 16, -- (ESC)\n}\n\n\nResult of the example code: https://i.imgur.com/TvmNF4k.png"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWarningMessageWithHeader",
    "hash": "0xDC38CC1E35B6A5D7",
    "code": "-- SET_WARNING_MESSAGE_WITH_HEADER\nlocal p7 --[[ Any ]] =\n\tSetWarningMessageWithHeader(\n\t\ttitleMsg --[[ string ]], \n\t\tentryLine1 --[[ string ]], \n\t\tflags --[[ integer ]], \n\t\tpromptMsg --[[ string ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ Any ]], \n\t\tbackground --[[ boolean ]], \n\t\tshowBg --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "You can only use text entries. No custom text.  \nC# Example :  \nFunction.Call(Hash._SET_WARNING_MESSAGE_2, \"HUD_QUIT\", \"HUD_CGIGNORE\", 2, \"HUD_CGINVITE\", 0, -1, 0, 0, 1);  \nyou can recreate this easily with scaleforms  \n---------------  \nFixed native name, from before nativedb restoration.  \n\nNativeDB Added Parameter 10: Any p9"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWarningMessageWithHeaderAndSubstringFlags",
    "hash": "0x701919482C74B5AB",
    "code": "-- SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS\nlocal p7 --[[ Any ]], p8 --[[ Any ]] =\n\tSetWarningMessageWithHeaderAndSubstringFlags(\n\t\tentryHeader --[[ string ]], \n\t\tentryLine1 --[[ string ]], \n\t\tinstructionalKey --[[ Any ]], \n\t\tentryLine2 --[[ string ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]], \n\t\tp9 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "You can only use text entries. No custom text.  \nNativeDB Added Parameter 11: Any p10"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWarningMessageWithHeaderExtended",
    "hash": "0x38B55259C2E078ED",
    "code": "-- SET_WARNING_MESSAGE_WITH_HEADER_EXTENDED\nSetWarningMessageWithHeaderExtended(\n\theaderTextLabel --[[ string ]], \n\tline1TextLabel --[[ string ]], \n\tbuttonsBitField --[[ integer ]], \n\tbuttonsBitFieldUpper --[[ integer ]], \n\tline2TextLabel --[[ string ]], \n\taddNumber --[[ boolean ]], \n\tnumberToAdd --[[ integer ]], \n\tfirstSubstring --[[ string ]], \n\tsecondSubstring --[[ string ]], \n\tshowBackground --[[ boolean ]], \n\terrorCode --[[ integer ]]\n)",
    "parameters": [
      "headerTextLabel: \n\nText label to set on the header/title.",
      "line1TextLabel: \n\nText label to set on the first line of the body..",
      "buttonsBitField: \n\nBit field of the button flags. See SET_WARNING_MESSAGE.",
      "buttonsBitFieldUpper: \n\nBit field of the upper button flags. See SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_EXTENDED.",
      "line2TextLabel: \n\nText label to set on the second line of the body.",
      "addNumber: \n\nIf number should be inserted into ~1~ in the body.",
      "numberToAdd: \n\nWhat number to insert into ~1~ in the body.",
      "firstSubstring: \n\nFirst substring text label to insert into ~a~ in the body.",
      "secondSubstring: \n\nSecond substring text label to insert into ~a~ in the body.",
      "showBackground: \n\nBool indicating if the message should have a black background.",
      "errorCode: \n\nError number to show at the bottom of the message. 0 is the default."
    ],
    "returns": [],
    "description": "Parameters:\n\nheaderTextLabel: \n\nText label to set on the header/title.\n\nline1TextLabel: \n\nText label to set on the first line of the body..\n\nbuttonsBitField: \n\nBit field of the button flags. See SET_WARNING_MESSAGE.\n\nbuttonsBitFieldUpper: \n\nBit field of the upper button flags. See SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_EXTENDED.\n\nline2TextLabel: \n\nText label to set on the second line of the body.\n\naddNumber: \n\nIf number should be inserted into ~1~ in the body.\n\nnumberToAdd: \n\nWhat number to insert into ~1~ in the body.\n\nfirstSubstring: \n\nFirst substring text label to insert into ~a~ in the body.\n\nsecondSubstring: \n\nSecond substring text label to insert into ~a~ in the body.\n\nshowBackground: \n\nBool indicating if the message should have a black background.\n\nerrorCode: \n\nError number to show at the bottom of the message. 0 is the default.\n\nSets a warning message for one frame with header and upper buttons bit field that don't fit the standard 32 bit set."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWaypointOff",
    "hash": "0xA7E4E2D361C2627F",
    "code": "-- SET_WAYPOINT_OFF\nSetWaypointOff()",
    "parameters": [],
    "returns": [],
    "description": "This native removes the current waypoint from the map.\nExample:\nC#:\nFunction.Call(Hash.SET_WAYPOINT_OFF);\nC++:\nHUD::SET_WAYPOINT_OFF();"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SetWidescreenFormat",
    "hash": "0xC3B07BA00A83B0F1",
    "code": "-- SET_WIDESCREEN_FORMAT\nSetWidescreenFormat(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowContactInstructionalButton",
    "hash": "0xC772A904CDE1186F",
    "code": "-- SHOW_CONTACT_INSTRUCTIONAL_BUTTON\nShowContactInstructionalButton(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nSet to true to show the instructional buttons, or false to hide them."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nSet to true to show the instructional buttons, or false to hide them.\n\nControls the visibility of the \"Contact\" instructional buttons on the map screen.\n\nNativeDB Introduced: 2545"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowCrewIndicatorOnBlip",
    "hash": "0xDCFB5D4DB8BF367E",
    "code": "-- SHOW_CREW_INDICATOR_ON_BLIP\nShowCrewIndicatorOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to toggle the half blue circle around the blip on.",
      "toggle: \n\nEnables or disables the half blue circle around the blip (on the left side)."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to toggle the half blue circle around the blip on.\n\ntoggle: \n\nEnables or disables the half blue circle around the blip (on the left side).\n\nEnables or disables the blue half circle  around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using SET_BLIP_SECONDARY_COLOUR.\n\nTo toggle the right side of the circle use: SHOW_FRIEND_INDICATOR_ON_BLIP.\n\nExample code result:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowFriendIndicatorOnBlip",
    "hash": "0x23C3EB807312F01A",
    "code": "-- SHOW_FRIEND_INDICATOR_ON_BLIP\nShowFriendIndicatorOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to toggle the half circle on.",
      "toggle: \n\nEnables or disables the half circle around the blip (on the right side of the blip)."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to toggle the half circle on.\n\ntoggle: \n\nEnables or disables the half circle around the blip (on the right side of the blip).\n\nHighlights a blip by a half cyan circle on the right side of the blip.  Indicating that that player is a friend (in GTA:O). This color can not be changed.\n\nTo toggle the left side (crew member indicator) of the half circle around the blip, use: SHOW_CREW_INDICATOR_ON_BLIP."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowHasCompletedIndicatorOnBlip",
    "hash": "0xCAC2031EBF79B1A8",
    "code": "-- _SHOW_HAS_COMPLETED_INDICATOR_ON_BLIP\nShowHasCompletedIndicatorOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF\n_SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*\n\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowHeadingIndicatorOnBlip",
    "hash": "0x5FBCA48327B914DF",
    "code": "-- SHOW_HEADING_INDICATOR_ON_BLIP\nShowHeadingIndicatorOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds the GTA: Online player heading indicator to a blip."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowHeightOnBlip",
    "hash": "0x75A16C3DA34F1245",
    "code": "-- SHOW_HEIGHT_ON_BLIP\nShowHeightOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowHudComponentThisFrame",
    "hash": "0x0B4DF1FA60C0E664",
    "code": "-- SHOW_HUD_COMPONENT_THIS_FRAME\nShowHudComponentThisFrame(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This function shows various HUD (Heads-up Display) components.\n\nListed below are the integers and the corresponding HUD component.\n\n1 : WANTED_STARS\n2 : WEAPON_ICON\n3 : CASH\n4 : MP_CASH\n5 : MP_MESSAGE\n6 : VEHICLE_NAME\n7 : AREA_NAME\n8 : VEHICLE_CLASS\n9 : STREET_NAME\n10 : HELP_TEXT\n11 : FLOATING_HELP_TEXT_1\n12 : FLOATING_HELP_TEXT_2\n13 : CASH_CHANGE\n14 : RETICLE\n15 : SUBTITLE_TEXT\n16 : RADIO_STATIONS\n17 : SAVING_GAME\n18 : GAME_STREAM\n19 : WEAPON_WHEEL\n20 : WEAPON_WHEEL_STATS\n21 : HUD_COMPONENTS\n22 : HUD_WEAPONS\n\nThese integers also work for the HIDE_HUD_COMPONENT_THIS_FRAME native, but instead hides the HUD component."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowNumberOnBlip",
    "hash": "0xA3C0B359DCB848B6",
    "code": "-- SHOW_NUMBER_ON_BLIP\nShowNumberOnBlip(\n\tblip --[[ Blip ]], \n\tnumber --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowOutlineIndicatorOnBlip",
    "hash": "0xB81656BC81FE24D1",
    "code": "-- SHOW_OUTLINE_INDICATOR_ON_BLIP\nShowOutlineIndicatorOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "blip: \n\nThe blip to toggle the outline on.",
      "toggle: \n\nEnables or disables the outline."
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nThe blip to toggle the outline on.\n\ntoggle: \n\nEnables or disables the outline.\n\nToggles a cyan outline around the blip.\n\nColor can be changed with SET_BLIP_SECONDARY_COLOUR. Enabling this circle will override the \"crew\" and \"friend\" half-circles (see SHOW_CREW_INDICATOR_ON_BLIP and SHOW_FRIEND_INDICATOR_ON_BLIP)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowPurchaseInstructionalButton",
    "hash": "0xF6865E26067B708C",
    "code": "-- _SHOW_PURCHASE_INSTRUCTIONAL_BUTTON\nShowPurchaseInstructionalButton(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowScriptedHudComponentThisFrame",
    "hash": "0x4F38DCA127DAAEA2",
    "code": "-- _SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME\nShowScriptedHudComponentThisFrame(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SHOW_*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowSigninUi",
    "hash": "0x60E892BA4F5BDCA4",
    "code": "-- _SHOW_SIGNIN_UI\nShowSigninUi()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowStartMissionInstructionalButton",
    "hash": "0xF1A6C18B35BCADE6",
    "code": "-- SHOW_START_MISSION_INSTRUCTIONAL_BUTTON\nShowStartMissionInstructionalButton(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ShowTickOnBlip",
    "hash": "0x74513EA3E505181E",
    "code": "-- SHOW_TICK_ON_BLIP\nShowTickOnBlip(\n\tblip --[[ Blip ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds a green checkmark on top of a blip."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "StartGpsCustomRoute",
    "hash": "0xDB34E8D56FC13B08",
    "code": "-- START_GPS_CUSTOM_ROUTE\nStartGpsCustomRoute(\n\thudColor --[[ integer ]], \n\tdisplayOnFoot --[[ boolean ]], \n\tfollowPlayer --[[ boolean ]]\n)",
    "parameters": [
      "hudColor: \n\nThe HUD color of the GPS path.",
      "displayOnFoot: \n\nDraws the path regardless if the player is in a vehicle or not.",
      "followPlayer: \n\nDraw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed."
    ],
    "returns": [],
    "description": "Parameters:\n\nhudColor: \n\nThe HUD color of the GPS path.\n\ndisplayOnFoot: \n\nDraws the path regardless if the player is in a vehicle or not.\n\nfollowPlayer: \n\nDraw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.\n\nStarts a new GPS custom-route, allowing you to plot lines on the map. Lines are drawn directly between points. The GPS custom route works like the GPS multi route, except it does not follow roads.\n\nExample result:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "StartGpsMultiRoute",
    "hash": "0x3D3D15AF7BCAAF83",
    "code": "-- START_GPS_MULTI_ROUTE\nStartGpsMultiRoute(\n\thudColor --[[ integer ]], \n\trouteFromPlayer --[[ boolean ]], \n\tdisplayOnFoot --[[ boolean ]]\n)",
    "parameters": [
      "hudColor: \n\nThe HUD color of the GPS path.",
      "routeFromPlayer: \n\nMakes the GPS draw a path from the player to the next point, rather than the original path from the previous point.",
      "displayOnFoot: \n\nDraws the GPS path regardless if the player is in a vehicle or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nhudColor: \n\nThe HUD color of the GPS path.\n\nrouteFromPlayer: \n\nMakes the GPS draw a path from the player to the next point, rather than the original path from the previous point.\n\ndisplayOnFoot: \n\nDraws the GPS path regardless if the player is in a vehicle or not.\n\nStarts a new GPS multi-route, allowing you to create custom GPS paths. GPS functions like the waypoint, except it can contain multiple points it's forced to go through. Once the player has passed a point, the GPS will no longer force its path through it.\n\nWorks independently from the player-placed waypoint and blip routes.\n\nExample result:"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "SuppressFrontendRenderingThisFrame",
    "hash": "0xBA751764F0821256",
    "code": "-- SUPPRESS_FRONTEND_RENDERING_THIS_FRAME\nSuppressFrontendRenderingThisFrame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "TakeControlOfFrontend",
    "hash": "0xEC9264727EEC0F28",
    "code": "-- TAKE_CONTROL_OF_FRONTEND\nTakeControlOfFrontend()",
    "parameters": [],
    "returns": [],
    "description": "Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.\n\nTo enable the keys again, use 0x14621BB1DF14E2B2."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedClearFrozenPost",
    "hash": "0x80FE4F3AB4E1B62A",
    "code": "-- THEFEED_CLEAR_FROZEN_POST\nThefeedClearFrozenPost()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedCommentTeleportPoolOff",
    "hash": "0xADED7F5748ACAFE6",
    "code": "-- THEFEED_COMMENT_TELEPORT_POOL_OFF\nThefeedCommentTeleportPoolOff()",
    "parameters": [],
    "returns": [],
    "description": "Displays \"normal\" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedCommentTeleportPoolOn",
    "hash": "0x56C8B608CFD49854",
    "code": "-- THEFEED_COMMENT_TELEPORT_POOL_ON\nThefeedCommentTeleportPoolOn()",
    "parameters": [],
    "returns": [],
    "description": "Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedDisableLoadingScreenTips",
    "hash": "0x32888337579A5970",
    "code": "-- _THEFEED_DISABLE_LOADING_SCREEN_TIPS\nThefeedDisableLoadingScreenTips()",
    "parameters": [],
    "returns": [],
    "description": "Stops loading screen tips shown by invoking either 0x488043841BBE156F or 0x15CFA549788D35EF"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedDisplayLoadingScreenTips",
    "hash": "0x15CFA549788D35EF",
    "code": "-- _THEFEED_DISPLAY_LOADING_SCREEN_TIPS\nThefeedDisplayLoadingScreenTips()",
    "parameters": [],
    "returns": [],
    "description": "Displays loading screen tips, requires 0x56C8B608CFD49854 to be called beforehand."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedFlushQueue",
    "hash": "0xA8FDB297A8D25FBA",
    "code": "-- THEFEED_FLUSH_QUEUE\nThefeedFlushQueue()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedForceRenderOff",
    "hash": "0x583049884A2EEE3C",
    "code": "-- THEFEED_FORCE_RENDER_OFF\nThefeedForceRenderOff()",
    "parameters": [],
    "returns": [],
    "description": "Enables loading screen tips to be be shown (_0x15CFA549788D35EF and _0x488043841BBE156F), blocks other kinds of notifications from being displayed (at least from current script). Call 0xADED7F5748ACAFE6 to display those again."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedForceRenderOn",
    "hash": "0xA13C11E1B5C06BFC",
    "code": "-- THEFEED_FORCE_RENDER_ON\nThefeedForceRenderOn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedFreezeNextPost",
    "hash": "0xFDEC055AB549E328",
    "code": "-- THEFEED_FREEZE_NEXT_POST\nThefeedFreezeNextPost()",
    "parameters": [],
    "returns": [],
    "description": "Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627)."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedGetFirstVisibleDeleteRemaining",
    "hash": "0x82352748437638CA",
    "code": "-- THEFEED_GET_FIRST_VISIBLE_DELETE_REMAINING\nlocal retval --[[ integer ]] =\n\tThefeedGetFirstVisibleDeleteRemaining()",
    "parameters": [],
    "returns": [],
    "description": "Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedHideThisFrame",
    "hash": "0x25F87B30C382FCA7",
    "code": "-- THEFEED_HIDE_THIS_FRAME\nThefeedHideThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Once called each frame hides all above radar notifications."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedIsPaused",
    "hash": "0xA9CBFD40B3FA3010",
    "code": "-- THEFEED_IS_PAUSED\nlocal retval --[[ boolean ]] =\n\tThefeedIsPaused()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedOnlyShowTooltips",
    "hash": "0x6F1554B0CC2089FA",
    "code": "-- THEFEED_ONLY_SHOW_TOOLTIPS\nThefeedOnlyShowTooltips(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedPause",
    "hash": "0xFDB423997FA30340",
    "code": "-- THEFEED_PAUSE\nThefeedPause()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedRemoveItem",
    "hash": "0xBE4390CB40B3E627",
    "code": "-- THEFEED_REMOVE_ITEM\nThefeedRemoveItem(\n\tnotificationId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Removes a notification instantly instead of waiting for it to disappear"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedResetAllParameters",
    "hash": "0xFDD85225B2DEA55E",
    "code": "-- THEFEED_RESET_ALL_PARAMETERS\nThefeedResetAllParameters()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedResume",
    "hash": "0xE1CD1E48E025E661",
    "code": "-- THEFEED_RESUME\nThefeedResume()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSetAnimpostfxColor",
    "hash": "0x17430B918701C342",
    "code": "-- _THEFEED_SET_ANIMPOSTFX_COLOR\nThefeedSetAnimpostfxColor(\n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]], \n\talpha --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSetAnimpostfxCount",
    "hash": "0x17AD8C9706BDD88A",
    "code": "-- _THEFEED_SET_ANIMPOSTFX_COUNT\nThefeedSetAnimpostfxCount(\n\tcount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Related to notification color flashing, setting p0 to 0 invalidates a _SET_NOTIFICATION_FLASH_COLOR call for the target notification."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSetAnimpostfxSound",
    "hash": "0x4A0C7C9BB10ABB36",
    "code": "-- _THEFEED_SET_ANIMPOSTFX_SOUND\nThefeedSetAnimpostfxSound(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: \"DPAD_WEAPON_SCROLL\" and \"HUD_FRONTEND_DEFAULT_SOUNDSET\""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSetFlushAnimpostfx",
    "hash": "0xBAE4F9B97CD43B30",
    "code": "-- _THEFEED_SET_FLUSH_ANIMPOSTFX\nThefeedSetFlushAnimpostfx(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If true, remove all feed components instantly. Otherwise tween/animate close each component"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSetNextPostBackgroundColor",
    "hash": "0x92F0DA1E27DB96DC",
    "code": "-- _THEFEED_SET_NEXT_POST_BACKGROUND_COLOR\nThefeedSetNextPostBackgroundColor(\n\thudColorIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the decompiled scripts:\nHUD::_92F0DA1E27DB96DC(6);\nHUD::_92F0DA1E27DB96DC(184);\nHUD::_92F0DA1E27DB96DC(190);\nsets background color for the next notification\n6 = red\n184 = green\n190 = yellow\nHere is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSetScriptedMenuHeight",
    "hash": "0x55598D21339CB998",
    "code": "-- THEFEED_SET_SCRIPTED_MENU_HEIGHT\nThefeedSetScriptedMenuHeight(\n\tpos --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSpsExtendWidescreenOff",
    "hash": "0xB695E2CD0A2DA9EE",
    "code": "-- THEFEED_SPS_EXTEND_WIDESCREEN_OFF\nThefeedSpsExtendWidescreenOff()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedSpsExtendWidescreenOn",
    "hash": "0xD4438C0564490E63",
    "code": "-- THEFEED_SPS_EXTEND_WIDESCREEN_ON\nThefeedSpsExtendWidescreenOn()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ThefeedUpdateItemTexture",
    "hash": "0x317EBA71D7543F52",
    "code": "-- THEFEED_UPDATE_ITEM_TEXTURE\nThefeedUpdateItemTexture(\n\ttxdString1 --[[ string ]], \n\ttxnString1 --[[ string ]], \n\ttxdString2 --[[ string ]], \n\ttxnString2 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used in the native scripts to reference \"GET_PEDHEADSHOT_TXD_STRING\" and \"CHAR_DEFAULT\".\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "ToggleStealthRadar",
    "hash": "0x6AFDFB93754950C7",
    "code": "-- TOGGLE_STEALTH_RADAR\nToggleStealthRadar(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "TriggerSonarBlip",
    "hash": "0x72DD432F3CDFC0EE",
    "code": "-- TRIGGER_SONAR_BLIP\nTriggerSonarBlip(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tradius --[[ number ]], \n\tp4 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "UnlockMinimapAngle",
    "hash": "0x8183455E16C42E3A",
    "code": "-- UNLOCK_MINIMAP_ANGLE\nUnlockMinimapAngle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "UnlockMinimapPosition",
    "hash": "0x3E93E06DB8EF1F30",
    "code": "-- UNLOCK_MINIMAP_POSITION\nUnlockMinimapPosition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "UseFakeMpCash",
    "hash": "0x170F541E1CADD1DE",
    "code": "-- USE_FAKE_MP_CASH\nUseFakeMpCash(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Related to displaying cash on the HUD\nAlways called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x04655f9d075d0ae5",
    "hash": "0x04655F9D075D0AE5",
    "code": "-- 0x04655F9D075D0AE5\nN_0x04655f9d075d0ae5(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x0c698d8f099174c7",
    "hash": "0x0C698D8F099174C7",
    "code": "-- 0x0C698D8F099174C7\nN_0x0c698d8f099174c7(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x0cf54f20de43879c",
    "hash": "0x0CF54F20DE43879C",
    "code": "-- 0x0CF54F20DE43879C\nN_0x0cf54f20de43879c(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x211c4ef450086857",
    "hash": "0x211C4EF450086857",
    "code": "-- 0x211C4EF450086857\nN_0x211c4ef450086857()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x214cd562a939246a",
    "hash": "0x214CD562A939246A",
    "code": "-- 0x214CD562A939246A\nlocal retval --[[ boolean ]] =\n\tN_0x214cd562a939246a()",
    "parameters": [],
    "returns": [],
    "description": "HAS_S*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x243296a510b562b6",
    "hash": "0x243296A510B562B6",
    "code": "-- 0x243296A510B562B6\nN_0x243296a510b562b6()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x24a49beaf468dc90",
    "hash": "0x24A49BEAF468DC90",
    "code": "-- 0x24A49BEAF468DC90\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tN_0x24a49beaf468dc90(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x2790f4b17d098e26",
    "hash": "0x2790F4B17D098E26",
    "code": "-- 0x2790F4B17D098E26\nN_0x2790f4b17d098e26(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_F*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x2c173ae2bdb9385e",
    "hash": "0x2C173AE2BDB9385E",
    "code": "-- 0x2C173AE2BDB9385E\nlocal retval --[[ integer ]] =\n\tN_0x2c173ae2bdb9385e(\n\t\tblip --[[ Blip ]]\n\t)",
    "parameters": [
      "blip: \n\nThe blip to check."
    ],
    "returns": [
      "Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0."
    ],
    "description": "Parameters:\n\nblip: \n\nThe blip to check.\n\nReturns:\n\nSeems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0.\n\nGETBLIP* Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0. Decompiled scripts always pass a blip handle as p0."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x2c9f302398e13141",
    "hash": "0x2C9F302398E13141",
    "code": "-- 0x2C9F302398E13141\nN_0x2c9f302398e13141(\n\tblip --[[ Blip ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Correct native name lies between SET_BLIP_SPRITE and SET_RADIUS_BLIP_EDGE alphabetically."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x2e22fefa0100275e",
    "hash": "0x2E22FEFA0100275E",
    "code": "-- 0x2E22FEFA0100275E\nlocal retval --[[ boolean ]] =\n\tN_0x2e22fefa0100275e()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x2f057596f2bd0061",
    "hash": "0x2F057596F2BD0061",
    "code": "-- 0x2F057596F2BD0061\nlocal retval --[[ boolean ]] =\n\tN_0x2f057596f2bd0061()",
    "parameters": [],
    "returns": [],
    "description": "Appears to return whether the player is using the pause menu store. Can't be sure though."
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x35a3cd97b2c0a6d2",
    "hash": "0x35A3CD97B2C0A6D2",
    "code": "-- 0x35A3CD97B2C0A6D2\nN_0x35a3cd97b2c0a6d2(\n\tblip --[[ Blip ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x41350b4fc28e3941",
    "hash": "0x41350B4FC28E3941",
    "code": "-- 0x41350B4FC28E3941\nN_0x41350b4fc28e3941(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x4b5b620c9b59ed34",
    "hash": "0x4B5B620C9B59ED34",
    "code": "-- 0x4B5B620C9B59ED34\nN_0x4b5b620c9b59ed34(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x55f5a5f07134de60",
    "hash": "0x55F5A5F07134DE60",
    "code": "-- 0x55F5A5F07134DE60\nN_0x55f5a5f07134de60()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x57d760d55f54e071",
    "hash": "0x57D760D55F54E071",
    "code": "-- 0x57D760D55F54E071\nN_0x57d760d55f54e071(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "FORCE_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x593feae1f73392d4",
    "hash": "0x593FEAE1F73392D4",
    "code": "-- 0x593FEAE1F73392D4\nlocal retval --[[ Any ]] =\n\tN_0x593feae1f73392d4()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x62e849b7eb28e770",
    "hash": "0x62E849B7EB28E770",
    "code": "-- 0x62E849B7EB28E770\nN_0x62e849b7eb28e770(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x66e7cb63c97b7d20",
    "hash": "0x66E7CB63C97B7D20",
    "code": "-- 0x66E7CB63C97B7D20\nlocal retval --[[ Any ]] =\n\tN_0x66e7cb63c97b7d20()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x7c226d5346d4d10a",
    "hash": "0x7C226D5346D4D10A",
    "code": "-- 0x7C226D5346D4D10A\nN_0x7c226d5346d4d10a(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x801879a9b4f4b2fb",
    "hash": "0x801879A9B4F4B2FB",
    "code": "-- 0x801879A9B4F4B2FB\nlocal retval --[[ boolean ]] =\n\tN_0x801879a9b4f4b2fb()",
    "parameters": [],
    "returns": [],
    "description": "IS_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x817b86108eb94e51",
    "hash": "0x817B86108EB94E51",
    "code": "-- 0x817B86108EB94E51\nlocal p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]], p4 --[[ Any ]], p5 --[[ Any ]], p6 --[[ Any ]], p7 --[[ Any ]], p8 --[[ Any ]] =\n\tN_0x817b86108eb94e51(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0/*16*/], &g_189F36._f10CD1[1/*16*/], &g_189F36._f10CD1[2/*16*/], &g_189F36._f10CD1[3/*16*/], &g_189F36._f10CD1[4/*16*/], &g_189F36._f10CD1[5/*16*/], &g_189F36._f10CD1[6/*16*/], &g_189F36._f10CD1[7/*16*/]);"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x8410c5e0cd847b9d",
    "hash": "0x8410C5E0CD847B9D",
    "code": "-- 0x8410C5E0CD847B9D\nN_0x8410c5e0cd847b9d()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x8f08017f9d7c47bd",
    "hash": "0x8F08017F9D7C47BD",
    "code": "-- 0x8F08017F9D7C47BD\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tN_0x8f08017f9d7c47bd(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x98c3cf913d895111",
    "hash": "0x98C3CF913D895111",
    "code": "-- 0x98C3CF913D895111\nlocal retval --[[ string ]] =\n\tN_0x98c3cf913d895111(\n\t\tstring --[[ string ]], \n\t\tlength --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_F*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0x9fcb3cbfb3ead69a",
    "hash": "0x9FCB3CBFB3EAD69A",
    "code": "-- 0x9FCB3CBFB3EAD69A\nN_0x9fcb3cbfb3ead69a(\n\tp0 --[[ integer ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xa17784fca9548d15",
    "hash": "0xA17784FCA9548D15",
    "code": "-- 0xA17784FCA9548D15\nN_0xa17784fca9548d15(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xa238192f33110615",
    "hash": "0xA238192F33110615",
    "code": "-- 0xA238192F33110615\nlocal retval --[[ boolean ]], p0 --[[ integer ]], p1 --[[ integer ]], p2 --[[ integer ]] =\n\tN_0xa238192f33110615()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xb552929b85fc27ec",
    "hash": "0xB552929B85FC27EC",
    "code": "-- 0xB552929B85FC27EC\nN_0xb552929b85fc27ec(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xb7b873520c84c118",
    "hash": "0xB7B873520C84C118",
    "code": "-- 0xB7B873520C84C118\nN_0xb7b873520c84c118()",
    "parameters": [],
    "returns": [],
    "description": "SET_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xba8d65c1c65702e5",
    "hash": "0xBA8D65C1C65702E5",
    "code": "-- 0xBA8D65C1C65702E5\nN_0xba8d65c1c65702e5(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "FORCE_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xc2d2ad9eaae265b8",
    "hash": "0xC2D2AD9EAAE265B8",
    "code": "-- 0xC2D2AD9EAAE265B8\nlocal retval --[[ boolean ]] =\n\tN_0xc2d2ad9eaae265b8()",
    "parameters": [],
    "returns": [],
    "description": "Getter for 0xCD74233600C4EA6B\n\nGET_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xc594b315edf2d4af",
    "hash": "0xC594B315EDF2D4AF",
    "code": "-- 0xC594B315EDF2D4AF\nN_0xc594b315edf2d4af(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xc8e1071177a23be5",
    "hash": "0xC8E1071177A23BE5",
    "code": "-- 0xC8E1071177A23BE5\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]], p2 --[[ Any ]] =\n\tN_0xc8e1071177a23be5()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xca6b2f7ce32ab653",
    "hash": "0xCA6B2F7CE32AB653",
    "code": "-- 0xCA6B2F7CE32AB653\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tN_0xca6b2f7ce32ab653(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xcd74233600c4ea6b",
    "hash": "0xCD74233600C4EA6B",
    "code": "-- 0xCD74233600C4EA6B\nN_0xcd74233600c4ea6b(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Setter for 0xC2D2AD9EAAE265B8\n\nSET_*"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xd1942374085c8469",
    "hash": "0xD1942374085C8469",
    "code": "-- 0xD1942374085C8469\nN_0xd1942374085c8469(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xd2049635deb9c375",
    "hash": "0xD2049635DEB9C375",
    "code": "-- 0xD2049635DEB9C375\nN_0xd2049635deb9c375()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xdaf87174be7454ff",
    "hash": "0xDAF87174BE7454FF",
    "code": "-- 0xDAF87174BE7454FF\nlocal retval --[[ boolean ]] =\n\tN_0xdaf87174be7454ff(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xde03620f8703a9df",
    "hash": "0xDE03620F8703A9DF",
    "code": "-- 0xDE03620F8703A9DF\nlocal retval --[[ Any ]] =\n\tN_0xde03620f8703a9df()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xe4c3b169876d33d7",
    "hash": "0xE4C3B169876D33D7",
    "code": "-- 0xE4C3B169876D33D7\nN_0xe4c3b169876d33d7(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xe67c6dfd386ea5e7",
    "hash": "0xE67C6DFD386EA5E7",
    "code": "-- 0xE67C6DFD386EA5E7\nN_0xe67c6dfd386ea5e7(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xeb81a3dadd503187",
    "hash": "0xEB81A3DADD503187",
    "code": "-- 0xEB81A3DADD503187\nN_0xeb81a3dadd503187()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xf13fe2a80c05c561",
    "hash": "0xF13FE2A80C05C561",
    "code": "-- 0xF13FE2A80C05C561\nlocal retval --[[ boolean ]] =\n\tN_0xf13fe2a80c05c561()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xf284ac67940c6812",
    "hash": "0xF284AC67940C6812",
    "code": "-- 0xF284AC67940C6812\nlocal retval --[[ Any ]] =\n\tN_0xf284ac67940c6812()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: HUD",
    "apiset": "API set: client",
    "name": "N_0xf83d0febe75e62c9",
    "hash": "0xF83D0FEBE75E62C9",
    "code": "-- 0xF83D0FEBE75E62C9\nN_0xf83d0febe75e62c9(\n\tblip --[[ Blip ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\twidth --[[ number ]], \n\tp4 --[[ Any ]], \n\tlength --[[ number ]], \n\theading --[[ number ]], \n\tp7 --[[ Any ]]\n)",
    "parameters": [
      "blip: \n\nA blip from an entity. The entity can not be a ped. The width and length will not change if it is a ped.",
      "p1: \n\n-1.0 in decompiled scripts (unk)",
      "p2: \n\n1.0 in decompiled scripts (unk)",
      "width: \n\nWidth of the cone (0.0 to ~3.0)",
      "p4: \n\n1.0 in decompiled scripts (unk)",
      "length: \n\nLength of the cone. (8.2 is 'normal' sized)",
      "heading: \n\nThis heading is in radians, this can be calculated with (heading + 180.00) * (pi/180)",
      "p7: \n\n1 in decompiled scripts (unk)"
    ],
    "returns": [],
    "description": "Parameters:\n\nblip: \n\nA blip from an entity. The entity can not be a ped. The width and length will not change if it is a ped.\n\np1: \n\n-1.0 in decompiled scripts (unk)\n\np2: \n\n1.0 in decompiled scripts (unk)\n\nwidth: \n\nWidth of the cone (0.0 to ~3.0)\n\np4: \n\n1.0 in decompiled scripts (unk)\n\nlength: \n\nLength of the cone. (8.2 is 'normal' sized)\n\nheading: \n\nThis heading is in radians, this can be calculated with (heading + 180.00) * (pi/180)\n\np7: \n\n1 in decompiled scripts (unk)\n\nNativeDB Added Parameter 9: int hudColour\nNativeDB Introduced: v1290\n\n\nSets the 'data' for a cone for a blip\n\nSee here for the hud colours for the cone\n\nName in scripts: SETUP_FAKE_CONE_DATA()\n\nFor people who don't know how to convert degrees to radians and the other way around:\n\ndegrees = radians * 180 / pi\nradians = degrees * pi / 180"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "ActivateInteriorEntitySet",
    "hash": "0x55E86AF2712B36A1",
    "code": "-- ACTIVATE_INTERIOR_ENTITY_SET\nActivateInteriorEntitySet(\n\tinterior --[[ integer ]], \n\tentitySetName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "AddPickupToInteriorRoomByName",
    "hash": "0x3F6167F351168730",
    "code": "-- ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME\nAddPickupToInteriorRoomByName(\n\tpickup --[[ Pickup ]], \n\troomName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "CapInterior",
    "hash": "0xD9175F941610DB54",
    "code": "-- CAP_INTERIOR\nCapInterior(\n\tinteriorID --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does something similar to INTERIOR::DISABLE_INTERIOR"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "ClearInteriorForEntity",
    "hash": "0x85D5422B2039A70D",
    "code": "-- _CLEAR_INTERIOR_FOR_ENTITY\nClearInteriorForEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Immediately removes entity from an interior. Like sets entity to limbo room.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "ClearRoomForEntity",
    "hash": "0xB365FC0C4E27FFA7",
    "code": "-- CLEAR_ROOM_FOR_ENTITY\nClearRoomForEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "ClearRoomForGameViewport",
    "hash": "0x23B59D8912F94246",
    "code": "-- CLEAR_ROOM_FOR_GAME_VIEWPORT\nClearRoomForGameViewport()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "DeactivateInteriorEntitySet",
    "hash": "0x420BD37289EEE162",
    "code": "-- DEACTIVATE_INTERIOR_ENTITY_SET\nDeactivateInteriorEntitySet(\n\tinterior --[[ integer ]], \n\tentitySetName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "DisableInterior",
    "hash": "0x6170941419D7D8EC",
    "code": "-- DISABLE_INTERIOR\nDisableInterior(\n\tinteriorID --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example:   \nThis removes the interior from the strip club and when trying to walk inside the player just falls:  \nINTERIOR::DISABLE_INTERIOR(118018, true);"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "EnableExteriorCullModelThisFrame",
    "hash": "0xA97F257D0151A6AB",
    "code": "-- ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME\nEnableExteriorCullModelThisFrame(\n\tmapObjectHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "EnableScriptCullModelThisFrame",
    "hash": "0x50C375537449F369",
    "code": "-- _ENABLE_SCRIPT_CULL_MODEL_THIS_FRAME\nEnableScriptCullModelThisFrame(\n\tmapObjectHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "ForceRoomForEntity",
    "hash": "0x52923C4710DD9907",
    "code": "-- FORCE_ROOM_FOR_ENTITY\nForceRoomForEntity(\n\tentity --[[ Entity ]], \n\tinterior --[[ integer ]], \n\troomHashKey --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces the particular room in an interior to load incase not teleporting into the portal."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "ForceRoomForGameViewport",
    "hash": "0x920D853F3E17F1DA",
    "code": "-- FORCE_ROOM_FOR_GAME_VIEWPORT\nForceRoomForGameViewport(\n\tinteriorID --[[ integer ]], \n\troomHashKey --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorAtCoords",
    "hash": "0xB0F7F8663821D9C3",
    "code": "-- GET_INTERIOR_AT_COORDS\nlocal retval --[[ integer ]] =\n\tGetInteriorAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.  \nExample for VB.NET  \nDim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorAtCoordsWithType",
    "hash": "0x05B7A89BD78797FC",
    "code": "-- GET_INTERIOR_AT_COORDS_WITH_TYPE\nlocal retval --[[ integer ]] =\n\tGetInteriorAtCoordsWithType(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tinteriorType --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.  \nUse: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))  \nInterior types include: \"V_Michael\", \"V_Franklins\", \"V_Franklinshouse\", etc.. you can find them in the scripts.  \nNot a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorAtCoordsWithTypehash",
    "hash": "0xF0F77ADB9F67E79D",
    "code": "-- GET_INTERIOR_AT_COORDS_WITH_TYPEHASH\nlocal retval --[[ integer ]] =\n\tGetInteriorAtCoordsWithTypehash(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\ttypeHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorFromCollision",
    "hash": "0xEC4CF9FCB29A4424",
    "code": "-- GET_INTERIOR_FROM_COLLISION\nlocal retval --[[ integer ]] =\n\tGetInteriorFromCollision(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorFromEntity",
    "hash": "0x2107BA504071A6BB",
    "code": "-- GET_INTERIOR_FROM_ENTITY\nlocal retval --[[ integer ]] =\n\tGetInteriorFromEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the handle of the interior that the entity is in. Returns 0 if outside."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorFromPrimaryView",
    "hash": "0xE7D267EC6CA966C3",
    "code": "-- GET_INTERIOR_FROM_PRIMARY_VIEW\nlocal retval --[[ integer ]] =\n\tGetInteriorFromPrimaryView()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorGroupId",
    "hash": "0xE4A84ABF135EF91A",
    "code": "-- GET_INTERIOR_GROUP_ID\nlocal retval --[[ integer ]] =\n\tGetInteriorGroupId(\n\t\tinterior --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorHeading",
    "hash": "0xF49B58631D9E22D9",
    "code": "-- GET_INTERIOR_HEADING\nlocal retval --[[ number ]] =\n\tGetInteriorHeading(\n\t\tinterior --[[ integer ]]\n\t)",
    "parameters": [
      "interior: \n\nID of the interior"
    ],
    "returns": [
      "Returns interior heading in radians. Multiply the returned value with 57.29578 (or 180.0 / math.pi) to convert it to degrees."
    ],
    "description": "Parameters:\n\ninterior: \n\nID of the interior\n\nReturns:\n\nReturns interior heading in radians. Multiply the returned value with 57.29578 (or 180.0 / math.pi) to convert it to degrees.\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetInteriorLocationAndNamehash",
    "hash": "0x252BDC06B73FA6EA",
    "code": "-- GET_INTERIOR_LOCATION_AND_NAMEHASH\nlocal position --[[ vector3 ]], nameHash --[[ Hash ]] =\n\tGetInteriorLocationAndNamehash(\n\t\tinterior --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetKeyForEntityInRoom",
    "hash": "0x399685DB942336BC",
    "code": "-- GET_KEY_FOR_ENTITY_IN_ROOM\nlocal retval --[[ Hash ]] =\n\tGetKeyForEntityInRoom(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetOffsetFromInteriorInWorldCoords",
    "hash": "0x9E3B3E6D66F6E22F",
    "code": "-- GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetOffsetFromInteriorInWorldCoords(\n\t\tinterior --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetRoomKeyForGameViewport",
    "hash": "0xA6575914D2A0B450",
    "code": "-- GET_ROOM_KEY_FOR_GAME_VIEWPORT\nlocal retval --[[ Hash ]] =\n\tGetRoomKeyForGameViewport()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "GetRoomKeyFromEntity",
    "hash": "0x47C2A06D4F5F424B",
    "code": "-- GET_ROOM_KEY_FROM_ENTITY\nlocal retval --[[ Hash ]] =\n\tGetRoomKeyFromEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "IsCollisionMarkedOutside",
    "hash": "0xEEA5AC2EDA7C33E8",
    "code": "-- IS_COLLISION_MARKED_OUTSIDE\nlocal retval --[[ boolean ]] =\n\tIsCollisionMarkedOutside(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "IsInteriorCapped",
    "hash": "0x92BAC8ACF88CEC26",
    "code": "-- IS_INTERIOR_CAPPED\nlocal retval --[[ boolean ]] =\n\tIsInteriorCapped(\n\t\tinteriorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "IsInteriorDisabled",
    "hash": "0xBC5115A5A939DD15",
    "code": "-- IS_INTERIOR_DISABLED\nlocal retval --[[ boolean ]] =\n\tIsInteriorDisabled(\n\t\tinterior --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "IsInteriorEntitySetActive",
    "hash": "0x35F7DD45E8C0A16D",
    "code": "-- IS_INTERIOR_ENTITY_SET_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsInteriorEntitySetActive(\n\t\tinterior --[[ integer ]], \n\t\tentitySetName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "IsInteriorReady",
    "hash": "0x6726BDCCC1932F0E",
    "code": "-- IS_INTERIOR_READY\nlocal retval --[[ boolean ]] =\n\tIsInteriorReady(\n\t\tinteriorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "IsInteriorScene",
    "hash": "0xBC72B5D7A1CBD54D",
    "code": "-- IS_INTERIOR_SCENE\nlocal retval --[[ boolean ]] =\n\tIsInteriorScene()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "IsValidInterior",
    "hash": "0x26B0E73D7EAAF4D3",
    "code": "-- IS_VALID_INTERIOR\nlocal retval --[[ boolean ]] =\n\tIsValidInterior(\n\t\tinterior --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "PinInteriorInMemory",
    "hash": "0x2CA429C029CCF247",
    "code": "-- PIN_INTERIOR_IN_MEMORY\nPinInteriorInMemory(\n\tinterior --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "RefreshInterior",
    "hash": "0x41F37C3427C75AE0",
    "code": "-- REFRESH_INTERIOR\nRefreshInterior(\n\tinteriorID --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "SetInteriorEntitySetColor",
    "hash": "0xC1F1920BAF281317",
    "code": "-- _SET_INTERIOR_ENTITY_SET_COLOR\nSetInteriorEntitySetColor(\n\tinterior --[[ integer ]], \n\tentitySetName --[[ string ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "UnpinInterior",
    "hash": "0x261CCE7EED010641",
    "code": "-- UNPIN_INTERIOR\nUnpinInterior(\n\tinterior --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does something similar to INTERIOR::DISABLE_INTERIOR.  \nYou don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x38c1cb1cb119a016",
    "hash": "0x38C1CB1CB119A016",
    "code": "-- 0x38C1CB1CB119A016\nN_0x38c1cb1cb119a016(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x405dc2aef6af95b9",
    "hash": "0x405DC2AEF6AF95B9",
    "code": "-- 0x405DC2AEF6AF95B9\nN_0x405dc2aef6af95b9(\n\troomHashKey --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x483aca1176ca93f1",
    "hash": "0x483ACA1176CA93F1",
    "code": "-- 0x483ACA1176CA93F1\nN_0x483aca1176ca93f1()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x4c2330e61d3deb56",
    "hash": "0x4C2330E61D3DEB56",
    "code": "-- 0x4C2330E61D3DEB56\nlocal retval --[[ Any ]] =\n\tN_0x4c2330e61d3deb56(\n\t\tinterior --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only used once in the entire game scripts.\nDoes not actually return anything."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x7241ccb7d020db69",
    "hash": "0x7241CCB7D020DB69",
    "code": "-- 0x7241CCB7D020DB69\nN_0x7241ccb7d020db69(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Jenkins hash _might_ be 0xFC227584."
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x7ecdf98587e92dec",
    "hash": "0x7ECDF98587E92DEC",
    "code": "-- 0x7ECDF98587E92DEC\nN_0x7ecdf98587e92dec(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x82ebb79e258fa2b7",
    "hash": "0x82EBB79E258FA2B7",
    "code": "-- 0x82EBB79E258FA2B7\nN_0x82ebb79e258fa2b7(\n\tentity --[[ Entity ]], \n\tinteriorID --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0x9e6542f0ce8e70a3",
    "hash": "0x9E6542F0CE8E70A3",
    "code": "-- 0x9E6542F0CE8E70A3\nN_0x9e6542f0ce8e70a3(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "DISABLE_*"
  },
  {
    "namespace": "Namespace: INTERIOR",
    "apiset": "API set: client",
    "name": "N_0xaf348afcb575a441",
    "hash": "0xAF348AFCB575A441",
    "code": "-- 0xAF348AFCB575A441\nN_0xaf348afcb575a441(\n\troomName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Exemple of use(carmod_shop.c4)  \nINTERIOR::_AF348AFCB575A441(\"V_CarModRoom\");"
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "AddToItemset",
    "hash": "0xE3945201F14637DD",
    "code": "-- ADD_TO_ITEMSET\nlocal retval --[[ boolean ]] =\n\tAddToItemset(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "CleanItemset",
    "hash": "0x41BC0D722FC04221",
    "code": "-- CLEAN_ITEMSET\nCleanItemset(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "CreateItemset",
    "hash": "0x35AD299F50D91B24",
    "code": "-- CREATE_ITEMSET\nlocal retval --[[ Vehicle ]] =\n\tCreateItemset(\n\t\tdistri --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "DestroyItemset",
    "hash": "0xDE18220B1C183EDA",
    "code": "-- DESTROY_ITEMSET\nDestroyItemset(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "GetIndexedItemInItemset",
    "hash": "0x7A197E2521EE2BAB",
    "code": "-- GET_INDEXED_ITEM_IN_ITEMSET\nlocal retval --[[ Any ]] =\n\tGetIndexedItemInItemset(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "GetItemsetSize",
    "hash": "0xD9127E83ABF7C631",
    "code": "-- GET_ITEMSET_SIZE\nlocal retval --[[ Any ]] =\n\tGetItemsetSize(\n\t\tx --[[ ScrHandle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "IsInItemset",
    "hash": "0x2D0FC594D1E9C107",
    "code": "-- IS_IN_ITEMSET\nlocal retval --[[ boolean ]] =\n\tIsInItemset(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "IsItemsetValid",
    "hash": "0xB1B1EA596344DFAB",
    "code": "-- IS_ITEMSET_VALID\nlocal retval --[[ boolean ]] =\n\tIsItemsetValid(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ITEMSET",
    "apiset": "API set: client",
    "name": "RemoveFromItemset",
    "hash": "0x25E68244B0177686",
    "code": "-- REMOVE_FROM_ITEMSET\nRemoveFromItemset(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "LoadingscreenGetLoadFreemode",
    "hash": "0xEF7D17BC6C85264C",
    "code": "-- _LOADINGSCREEN_GET_LOAD_FREEMODE\nlocal retval --[[ boolean ]] =\n\tLoadingscreenGetLoadFreemode()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "LoadingscreenGetLoadFreemodeWithEventName",
    "hash": "0x8AA464D4E0F6ACCD",
    "code": "-- _LOADINGSCREEN_GET_LOAD_FREEMODE_WITH_EVENT_NAME\nlocal retval --[[ boolean ]] =\n\tLoadingscreenGetLoadFreemodeWithEventName()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "LoadingscreenIsLoadingFreemode",
    "hash": "0xC6DC823253FBB366",
    "code": "-- _LOADINGSCREEN_IS_LOADING_FREEMODE\nlocal retval --[[ boolean ]] =\n\tLoadingscreenIsLoadingFreemode()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "LoadingscreenSetIsLoadingFreemode",
    "hash": "0xC7E7181C09F33B69",
    "code": "-- _LOADINGSCREEN_SET_IS_LOADING_FREEMODE\nLoadingscreenSetIsLoadingFreemode(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "LoadingscreenSetLoadFreemode",
    "hash": "0xB0C56BD3D808D863",
    "code": "-- _LOADINGSCREEN_SET_LOAD_FREEMODE\nLoadingscreenSetLoadFreemode(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "LoadingscreenSetLoadFreemodeWithEventName",
    "hash": "0xFC309E94546FCDB5",
    "code": "-- _LOADINGSCREEN_SET_LOAD_FREEMODE_WITH_EVENT_NAME\nLoadingscreenSetLoadFreemodeWithEventName(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only occurrence was false, in maintransition."
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "N_0xf2ca003f167e21d2",
    "hash": "0xF2CA003F167E21D2",
    "code": "-- 0xF2CA003F167E21D2\nlocal retval --[[ integer ]] =\n\tN_0xf2ca003f167e21d2()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: LOADINGSCREEN",
    "apiset": "API set: client",
    "name": "N_0xfa1e0e893d915215",
    "hash": "0xFA1E0E893D915215",
    "code": "-- 0xFA1E0E893D915215\nN_0xfa1e0e893d915215(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: LOCALIZATION",
    "apiset": "API set: client",
    "name": "GetCurrentLanguage",
    "hash": "0x2BDD44CC428A7EAE",
    "code": "-- GET_CURRENT_LANGUAGE\nlocal retval --[[ integer ]] =\n\tGetCurrentLanguage()",
    "parameters": [],
    "returns": [],
    "description": "0 = american (en-US)\n1 = french (fr-FR)\n2 = german (de-DE)\n3 = italian (it-IT)\n4 = spanish (es-ES)\n5 = brazilian (pt-BR)\n6 = polish (pl-PL)\n7 = russian (ru-RU)\n8 = korean (ko-KR)\n9 = chinesetrad (zh-TW)\n10 = japanese (ja-JP)\n11 = mexican (es-MX)\n12 = chinesesimp (zh-CN)"
  },
  {
    "namespace": "Namespace: LOCALIZATION",
    "apiset": "API set: client",
    "name": "LocalizationGetSystemDateFormat",
    "hash": "0xA8AE43AEC1A61314",
    "code": "-- _LOCALIZATION_GET_SYSTEM_DATE_FORMAT\nlocal retval --[[ integer ]] =\n\tLocalizationGetSystemDateFormat()",
    "parameters": [],
    "returns": [],
    "description": "Possible return values: 0, 1, 2"
  },
  {
    "namespace": "Namespace: LOCALIZATION",
    "apiset": "API set: client",
    "name": "LocalizationGetSystemLanguage",
    "hash": "0x497420E022796B3F",
    "code": "-- _LOCALIZATION_GET_SYSTEM_LANGUAGE\nlocal retval --[[ integer ]] =\n\tLocalizationGetSystemLanguage()",
    "parameters": [],
    "returns": [],
    "description": "Same return values as GET_CURRENT_LANGUAGE"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "Absf",
    "hash": "0x73D57CFFDD12C355",
    "code": "-- ABSF\nlocal retval --[[ number ]] =\n\tAbsf(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "Absi",
    "hash": "0xF0D31AD191A74F87",
    "code": "-- ABSI\nlocal retval --[[ integer ]] =\n\tAbsi(\n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "Acos",
    "hash": "0x1D08B970013C34B6",
    "code": "-- ACOS\nlocal retval --[[ number ]] =\n\tAcos(\n\t\tp0 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ActivityFeedCreate",
    "hash": "0x4DCDF92BF64236CD",
    "code": "-- ACTIVITY_FEED_CREATE\nActivityFeedCreate(\n\tcaptionString --[[ string ]], \n\tcondensedCaptionString --[[ string ]]\n)",
    "parameters": [
      "captionString: \n\nThe main text or caption for the activity feed post. This is the primary message displayed in the feed entry.",
      "condensedCaptionString: \n\nA shorter or condensed version of the caption, used in cases where space is limited or a brief summary is required."
    ],
    "returns": [],
    "description": "Parameters:\n\ncaptionString: \n\nThe main text or caption for the activity feed post. This is the primary message displayed in the feed entry.\n\ncondensedCaptionString: \n\nA shorter or condensed version of the caption, used in cases where space is limited or a brief summary is required.\n\nCreates and opens a new activity feed post to start filling in.\n\nNote: This is a PS4 related native, resulting in a nullsub on the PC platform. This native won't do anything when invoked."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddDispatchSpawnBlockingAngledArea",
    "hash": "0x918C7B2D2FF3928B",
    "code": "-- _ADD_DISPATCH_SPAWN_BLOCKING_ANGLED_AREA\nlocal retval --[[ Any ]] =\n\tAddDispatchSpawnBlockingAngledArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]]\n\t)",
    "parameters": [
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area"
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\nTo remove, see: REMOVE_DISPATCH_SPAWN_BLOCKING_AREA.\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddDispatchSpawnBlockingArea",
    "hash": "0x2D4259F1FEB81DA9",
    "code": "-- _ADD_DISPATCH_SPAWN_BLOCKING_AREA\nlocal retval --[[ Any ]] =\n\tAddDispatchSpawnBlockingArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddHospitalRestart",
    "hash": "0x1F464EF988465A81",
    "code": "-- ADD_HOSPITAL_RESTART\nlocal retval --[[ integer ]] =\n\tAddHospitalRestart(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the index of the newly created hospital spawn point.  \np3 might be radius?"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddPoliceRestart",
    "hash": "0x452736765B31FC4B",
    "code": "-- ADD_POLICE_RESTART\nlocal retval --[[ Any ]] =\n\tAddPoliceRestart(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddPopMultiplierArea",
    "hash": "0x67F6413D3220E18D",
    "code": "-- ADD_POP_MULTIPLIER_AREA\nlocal retval --[[ integer ]] =\n\tAddPopMultiplierArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tp6 --[[ number ]], \n\t\tp7 --[[ number ]], \n\t\tp8 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 10: BOOL p9"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddPopMultiplierSphere",
    "hash": "0x32C7A7E8C43A1F80",
    "code": "-- ADD_POP_MULTIPLIER_SPHERE\nlocal retval --[[ integer ]] =\n\tAddPopMultiplierSphere(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tpedMultiplier --[[ number ]], \n\t\tvehicleMultiplier --[[ number ]], \n\t\tp6 --[[ boolean ]], \n\t\tp7 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddReplayStatValue",
    "hash": "0x69FE6DC87BD2A5E9",
    "code": "-- ADD_REPLAY_STAT_VALUE\nAddReplayStatValue(\n\tvalue --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddStuntJump",
    "hash": "0x1A992DA297A4630C",
    "code": "-- ADD_STUNT_JUMP\nlocal retval --[[ integer ]] =\n\tAddStuntJump(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tx3 --[[ number ]], \n\t\ty3 --[[ number ]], \n\t\tz3 --[[ number ]], \n\t\tx4 --[[ number ]], \n\t\ty4 --[[ number ]], \n\t\tz4 --[[ number ]], \n\t\tcamX --[[ number ]], \n\t\tcamY --[[ number ]], \n\t\tcamZ --[[ number ]], \n\t\tunk1 --[[ integer ]], \n\t\tunk2 --[[ integer ]], \n\t\tunk3 --[[ integer ]]\n\t)",
    "parameters": [
      "x1: \n\nJump entry left far bottom corner coordinate X.",
      "y1: \n\nJump entry left far bottom corner coordinate Y.",
      "z1: \n\nJump entry left far bottom corner coordinate Z.",
      "x2: \n\nJump entry right near top corner coordinate X.",
      "y2: \n\nJump entry right near top corner coordinate Y.",
      "z2: \n\nJump entry right near top corner coordinate Z.",
      "x3: \n\nLanding zone end coordinate X.",
      "y3: \n\nLanding zone end coordinate Y.",
      "z3: \n\nLanding zone end coordinate Z.",
      "x4: \n\nLanding zone start coordinate X.",
      "y4: \n\nLanding zone start coordinate Y.",
      "z4: \n\nLanding zone start coordinate Z.",
      "camX: \n\nStuntcam (cinematic) coordinate x.",
      "camY: \n\nStuntcam (cinematic) coordinate y.",
      "camZ: \n\nStuntcam (cinematic) coordinate z.",
      "unk1: \n\nUnknown, always 150.",
      "unk2: \n\nUnknown, always 0.",
      "unk3: \n\nUnknown, always 0."
    ],
    "returns": [
      "The ID of the stunt jump that was added."
    ],
    "description": "Parameters:\n\nx1: \n\nJump entry left far bottom corner coordinate X.\n\ny1: \n\nJump entry left far bottom corner coordinate Y.\n\nz1: \n\nJump entry left far bottom corner coordinate Z.\n\nx2: \n\nJump entry right near top corner coordinate X.\n\ny2: \n\nJump entry right near top corner coordinate Y.\n\nz2: \n\nJump entry right near top corner coordinate Z.\n\nx3: \n\nLanding zone end coordinate X.\n\ny3: \n\nLanding zone end coordinate Y.\n\nz3: \n\nLanding zone end coordinate Z.\n\nx4: \n\nLanding zone start coordinate X.\n\ny4: \n\nLanding zone start coordinate Y.\n\nz4: \n\nLanding zone start coordinate Z.\n\ncamX: \n\nStuntcam (cinematic) coordinate x.\n\ncamY: \n\nStuntcam (cinematic) coordinate y.\n\ncamZ: \n\nStuntcam (cinematic) coordinate z.\n\nunk1: \n\nUnknown, always 150.\n\nunk2: \n\nUnknown, always 0.\n\nunk3: \n\nUnknown, always 0.\n\nReturns:\n\nThe ID of the stunt jump that was added.\n\nSee description of ADD_STUNT_JUMP_ANGLED for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddStuntJumpAngled",
    "hash": "0xBBE5D803A5360CBF",
    "code": "-- ADD_STUNT_JUMP_ANGLED\nlocal retval --[[ integer ]] =\n\tAddStuntJumpAngled(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tradius1 --[[ number ]], \n\t\tx3 --[[ number ]], \n\t\ty3 --[[ number ]], \n\t\tz3 --[[ number ]], \n\t\tx4 --[[ number ]], \n\t\ty4 --[[ number ]], \n\t\tz4 --[[ number ]], \n\t\tradius2 --[[ number ]], \n\t\tcamX --[[ number ]], \n\t\tcamY --[[ number ]], \n\t\tcamZ --[[ number ]], \n\t\tunk1 --[[ integer ]], \n\t\tunk2 --[[ integer ]], \n\t\tunk3 --[[ integer ]]\n\t)",
    "parameters": [
      "x1: \n\nEntry zone bottom left corner x.",
      "y1: \n\nEntry zone bottom left corner y.",
      "z1: \n\nEntry zone bottom left corner z.",
      "x2: \n\nEntry zone top right corner x.",
      "y2: \n\nEntry zone top right corner y.",
      "z2: \n\nEntry zone top right corner z.",
      "radius1: \n\nProbably a \"feather\" radius for entry zone, you need to enter the jump within the min/max coordinates, or within this radius of those two coordinates.",
      "x3: \n\nLanding zone start corner coordinate x.",
      "y3: \n\nLanding zone start corner coordinate y.",
      "z3: \n\nLanding zone start corner coordinate z.",
      "x4: \n\nLanding zone end corner coordinate x.",
      "y4: \n\nLanding zone end corner coordinate y.",
      "z4: \n\nLanding zone end corner coordinate z.",
      "radius2: \n\nProbably a \"feather\" radius for landing zone, you need to land within the min/max coordinates, or within this radius of those two coordinates.",
      "camX: \n\nStunt (cinematic) camera x position.",
      "camY: \n\nStunt (cinematic) camera y position.",
      "camZ: \n\nStunt (cinematic) camera z position.",
      "unk1: \n\nalways 150",
      "unk2: \n\nalways 0",
      "unk3: \n\nalways 0"
    ],
    "returns": [
      "The ID of the stuntjump that was created."
    ],
    "description": "Parameters:\n\nx1: \n\nEntry zone bottom left corner x.\n\ny1: \n\nEntry zone bottom left corner y.\n\nz1: \n\nEntry zone bottom left corner z.\n\nx2: \n\nEntry zone top right corner x.\n\ny2: \n\nEntry zone top right corner y.\n\nz2: \n\nEntry zone top right corner z.\n\nradius1: \n\nProbably a \"feather\" radius for entry zone, you need to enter the jump within the min/max coordinates, or within this radius of those two coordinates.\n\nx3: \n\nLanding zone start corner coordinate x.\n\ny3: \n\nLanding zone start corner coordinate y.\n\nz3: \n\nLanding zone start corner coordinate z.\n\nx4: \n\nLanding zone end corner coordinate x.\n\ny4: \n\nLanding zone end corner coordinate y.\n\nz4: \n\nLanding zone end corner coordinate z.\n\nradius2: \n\nProbably a \"feather\" radius for landing zone, you need to land within the min/max coordinates, or within this radius of those two coordinates.\n\ncamX: \n\nStunt (cinematic) camera x position.\n\ncamY: \n\nStunt (cinematic) camera y position.\n\ncamZ: \n\nStunt (cinematic) camera z position.\n\nunk1: \n\nalways 150\n\nunk2: \n\nalways 0\n\nunk3: \n\nalways 0\n\nReturns:\n\nThe ID of the stuntjump that was created.\n\nCreates a new stunt jump.\n\nThe radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP_ANGLED.\n\nInfo about the specific 'parameter sections':\n\nx1, y1, z1, x2, y2, z2 and radius1:\n\nFirst coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.\n\nx3, y3, z3, x4, y4, z4 and radius2:\n\nNext part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).\n\ncamX, camY and camZ:\n\nThe final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.\n\nunk1, unk2 and unk3:\n\nNot sure what these are for, but they're always 150, 0, 0 in decompiled scripts.\n\nVisualized example in-game:\n\nHere is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AddTacticalAnalysisPoint",
    "hash": "0xB8721407EE9C3FF6",
    "code": "-- _ADD_TACTICAL_ANALYSIS_POINT\nAddTacticalAnalysisPoint(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds a point related to CTacticalAnalysis"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AllowMissionCreatorWarp",
    "hash": "0xDEA36202FC3382DF",
    "code": "-- ALLOW_MISSION_CREATOR_WARP\nAllowMissionCreatorWarp(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AreProfileSettingsValid",
    "hash": "0x5AA3BEFA29F03AD4",
    "code": "-- ARE_PROFILE_SETTINGS_VALID\nlocal retval --[[ boolean ]] =\n\tAreProfileSettingsValid()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "AreStringsEqual",
    "hash": "0x0C515FAB3FF9EA92",
    "code": "-- ARE_STRINGS_EQUAL\nlocal retval --[[ boolean ]] =\n\tAreStringsEqual(\n\t\tstring1 --[[ string ]], \n\t\tstring2 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "Asin",
    "hash": "0xC843060B5765DCE7",
    "code": "-- ASIN\nlocal retval --[[ number ]] =\n\tAsin(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the inverse sine in radians of the specified value"
    ],
    "description": "Returns:\n\nReturns the inverse sine in radians of the specified value"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "Atan",
    "hash": "0xA9D1795CD5043663",
    "code": "-- ATAN\nlocal retval --[[ number ]] =\n\tAtan(\n\t\tp0 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "Atan2",
    "hash": "0x8927CBF9D22261A4",
    "code": "-- ATAN2\nlocal retval --[[ number ]] =\n\tAtan2(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "BeginReplayStats",
    "hash": "0xE0E500246FF73D66",
    "code": "-- BEGIN_REPLAY_STATS\nBeginReplayStats(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "BlockDispatchServiceResourceCreation",
    "hash": "0x9B2BD3773123EA2F",
    "code": "-- BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION\nBlockDispatchServiceResourceCreation(\n\tdispatchService --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "CancelOnscreenKeyboard",
    "hash": "0x58A39BE597CE99CD",
    "code": "-- CANCEL_ONSCREEN_KEYBOARD\nCancelOnscreenKeyboard()",
    "parameters": [],
    "returns": [],
    "description": "Closes the onscreen keyboard on console versions of the game.\n\nNOTE: Do not use this native in FiveM/PC, because UPDATE_ONSCREEN_KEYBOARD value doesn't get cleaned up and stays as 0. You should use FORCE_CLOSE_TEXT_INPUT_BOX instead."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "CancelStuntJump",
    "hash": "0xE6B7B0ACD4E4B75E",
    "code": "-- CANCEL_STUNT_JUMP\nCancelStuntJump()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "CleanupAsyncInstall",
    "hash": "0xC79AE21974B01FB2",
    "code": "-- _CLEANUP_ASYNC_INSTALL\nCleanupAsyncInstall()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearAngledAreaOfVehicles",
    "hash": "0x11DB3500F042A8AA",
    "code": "-- CLEAR_ANGLED_AREA_OF_VEHICLES\nClearAngledAreaOfVehicles(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\twidth --[[ number ]], \n\tp7 --[[ boolean ]], \n\tp8 --[[ boolean ]], \n\tp9 --[[ boolean ]], \n\tp10 --[[ boolean ]], \n\tp11 --[[ boolean ]]\n)",
    "parameters": [
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area",
      "p7:",
      "p8:",
      "p9:",
      "p10:",
      "p11:"
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\np7:\np8:\np9:\np10:\np11:\nNativeDB Added Parameter 13: Any p12"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearArea",
    "hash": "0xA56F01F3765B93A0",
    "code": "-- CLEAR_AREA\nClearArea(\n\tX --[[ number ]], \n\tY --[[ number ]], \n\tZ --[[ number ]], \n\tradius --[[ number ]], \n\tp4 --[[ boolean ]], \n\tignoreCopCars --[[ boolean ]], \n\tignoreObjects --[[ boolean ]], \n\tp7 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearAreaLeaveVehicleHealth",
    "hash": "0x957838AAF91BD12D",
    "code": "-- CLEAR_AREA_LEAVE_VEHICLE_HEALTH\nClearAreaLeaveVehicleHealth(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearAreaOfCops",
    "hash": "0x04F8FC8FCF58F88D",
    "code": "-- CLEAR_AREA_OF_COPS\nClearAreaOfCops(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tcreateNetEvent --[[ boolean ]]\n)",
    "parameters": [
      "x: \n\nThe x coordinate of where to clear cops.",
      "y: \n\nThe y coordinate of where to clear cops.",
      "z: \n\nThe z coordinate of where to clear cops.",
      "radius: \n\nThe area radius to clear cops.",
      "createNetEvent: \n\nspecifies whether a CClearAreaEvent event of should be created for online use."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe x coordinate of where to clear cops.\n\ny: \n\nThe y coordinate of where to clear cops.\n\nz: \n\nThe z coordinate of where to clear cops.\n\nradius: \n\nThe area radius to clear cops.\n\ncreateNetEvent: \n\nspecifies whether a CClearAreaEvent event of should be created for online use.\n\nClears an area of cops at the given coordinates and radius."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearAreaOfObjects",
    "hash": "0xDD9B9B385AAC7F5B",
    "code": "-- CLEAR_AREA_OF_OBJECTS\nClearAreaOfObjects(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearAreaOfPeds",
    "hash": "0xBE31FD6CE464AC59",
    "code": "-- CLEAR_AREA_OF_PEDS\nClearAreaOfPeds(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tcreateNetEvent --[[ boolean ]]\n)",
    "parameters": [
      "x: \n\nThe x coordinate of where to clear peds.",
      "y: \n\nThe y coordinate of where to clear peds.",
      "z: \n\nThe z coordinate of where to clear peds.",
      "radius: \n\nThe area radius to clear peds.",
      "createNetEvent: \n\nspecifies whether a CClearAreaEvent event of should be created for online use."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe x coordinate of where to clear peds.\n\ny: \n\nThe y coordinate of where to clear peds.\n\nz: \n\nThe z coordinate of where to clear peds.\n\nradius: \n\nThe area radius to clear peds.\n\ncreateNetEvent: \n\nspecifies whether a CClearAreaEvent event of should be created for online use.\n\nClears an area of peds at the given coordinates and radius."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearAreaOfProjectiles",
    "hash": "0x0A1CB9094635D1A6",
    "code": "-- CLEAR_AREA_OF_PROJECTILES\nClearAreaOfProjectiles(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tcreateNetEvent --[[ boolean ]]\n)",
    "parameters": [
      "x: \n\nThe x coordinate of where to clear projectiles.",
      "y: \n\nThe y coordinate of where to clear projectiles.",
      "z: \n\nThe z coordinate of where to clear projectiles.",
      "radius: \n\nThe area radius to clear projectiles.",
      "createNetEvent: \n\nspecifies whether a CClearAreaEvent event of should be created for online use."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe x coordinate of where to clear projectiles.\n\ny: \n\nThe y coordinate of where to clear projectiles.\n\nz: \n\nThe z coordinate of where to clear projectiles.\n\nradius: \n\nThe area radius to clear projectiles.\n\ncreateNetEvent: \n\nspecifies whether a CClearAreaEvent event of should be created for online use.\n\nClears an area of projectiles at the given coordinates and radius."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearAreaOfVehicles",
    "hash": "0x01C7B9B38428AEB6",
    "code": "-- CLEAR_AREA_OF_VEHICLES\nClearAreaOfVehicles(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ boolean ]], \n\tp8 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example: \t\tCLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);  \nNativeDB Added Parameter 10: BOOL p9"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearBit",
    "hash": "0xE80492A9AC099A93",
    "code": "-- CLEAR_BIT\nlocal address --[[ integer ]] =\n\tClearBit(\n\t\toffset --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This sets bit [offset] of [address] to off.\nExample:\nMISC::CLEAR_BIT(&bitAddress, 1);\nTo check if this bit has been enabled:\nMISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearCloudHat",
    "hash": "0x957E790EA1727B64",
    "code": "-- _CLEAR_CLOUD_HAT\nClearCloudHat()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearOverrideWeather",
    "hash": "0x338D2E3477711050",
    "code": "-- CLEAR_OVERRIDE_WEATHER\nClearOverrideWeather()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearReplayStats",
    "hash": "0x1B1AB132A16FDA55",
    "code": "-- CLEAR_REPLAY_STATS\nClearReplayStats()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearRestartCustomPosition",
    "hash": "0xA2716D40842EAF79",
    "code": "-- _CLEAR_RESTART_CUSTOM_POSITION\nClearRestartCustomPosition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearTacticalAnalysisPoints",
    "hash": "0xB3CD58CCA6CDA852",
    "code": "-- _CLEAR_TACTICAL_ANALYSIS_POINTS\nClearTacticalAnalysisPoints()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearWeatherTypeNowPersistNetwork",
    "hash": "0x0CF97F497FE7D048",
    "code": "-- CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK\nClearWeatherTypeNowPersistNetwork(\n\ttransitionTimeInMs --[[ integer ]]\n)",
    "parameters": [
      "transitionTimeInMs: \n\nTransition time in milliseconds."
    ],
    "returns": [],
    "description": "Parameters:\n\ntransitionTimeInMs: \n\nTransition time in milliseconds.\n\nClears the active weather type after a specific amount of time determined by transitionTimeInMs."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ClearWeatherTypePersist",
    "hash": "0xCCC39339BEF76CF5",
    "code": "-- CLEAR_WEATHER_TYPE_PERSIST\nClearWeatherTypePersist()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "CompareStrings",
    "hash": "0x1E34710ECD4AB0EB",
    "code": "-- COMPARE_STRINGS\nlocal retval --[[ integer ]] =\n\tCompareStrings(\n\t\tstr1 --[[ string ]], \n\t\tstr2 --[[ string ]], \n\t\tmatchCase --[[ boolean ]], \n\t\tmaxLength --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Compares two strings up to a specified number of characters.\nParameters:\nstr1 - String to be compared.\nstr2 - String to be compared.\nmatchCase - Comparison will be case-sensitive.\nmaxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.\nReturns:\nA value indicating the relationship between the strings:\n<0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)\n0 - The contents of both strings are equal.\n>0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)\nExamples:\nMISC::COMPARE_STRINGS(\"STRING\", \"string\", false, -1); // 0; equal\nMISC::COMPARE_STRINGS(\"TESTING\", \"test\", false, 4); // 0; equal\nMISC::COMPARE_STRINGS(\"R2D2\", \"R2xx\", false, 2); // 0; equal\nMISC::COMPARE_STRINGS(\"foo\", \"bar\", false, -1); // 4; 'f' > 'b'\nMISC::COMPARE_STRINGS(\"A\", \"A\", true, 1); // 0; equal\nWhen comparing case-sensitive strings, lower-case characters are greater than upper-case characters:\nMISC::COMPARE_STRINGS(\"A\", \"a\", true, 1); // -1; 'A' < 'a'\nMISC::COMPARE_STRINGS(\"a\", \"A\", true, 1); // 1; 'a' > 'A'"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "CopyMemory",
    "hash": "0x213AEB2B90CBA7AC",
    "code": "-- _COPY_MEMORY\nlocal dst --[[ Any ]] =\n\tCopyMemory(\n\t\tsrc --[[ Any ]], \n\t\tsize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "CreateIncident",
    "hash": "0x3F892CAF67444AE7",
    "code": "-- CREATE_INCIDENT\nlocal retval --[[ boolean ]], outIncidentID --[[ integer ]] =\n\tCreateIncident(\n\t\tdispatchService --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tnumUnits --[[ integer ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [
      "dispatchService: \n\nRefer to ENABLE_DISPATCH_SERVICE for dispatch types",
      "x:",
      "y:",
      "z:",
      "numUnits:",
      "radius:",
      "outIncidentID:"
    ],
    "returns": [],
    "description": "Parameters:\n\ndispatchService: \n\nRefer to ENABLE_DISPATCH_SERVICE for dispatch types\n\nx:\ny:\nz:\nnumUnits:\nradius:\noutIncidentID:\nNativeDB Added Parameter 8: Any p7\nNativeDB Added Parameter 9: Any p8"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "CreateIncidentWithEntity",
    "hash": "0x05983472F0494E60",
    "code": "-- CREATE_INCIDENT_WITH_ENTITY\nlocal retval --[[ boolean ]], outIncidentID --[[ integer ]] =\n\tCreateIncidentWithEntity(\n\t\tdispatchService --[[ integer ]], \n\t\tped --[[ Ped ]], \n\t\tnumUnits --[[ integer ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [
      "dispatchService: \n\nRefer to ENABLE_DISPATCH_SERVICE for dispatch types",
      "ped:",
      "numUnits:",
      "radius:",
      "outIncidentID:"
    ],
    "returns": [
      "Returns true if the incident was succesfully made"
    ],
    "description": "Parameters:\n\ndispatchService: \n\nRefer to ENABLE_DISPATCH_SERVICE for dispatch types\n\nped:\nnumUnits:\nradius:\noutIncidentID:\nReturns:\n\nReturns true if the incident was succesfully made\n\nNativeDB Added Parameter 6: Any p5\nNativeDB Added Parameter 7: Any p6"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DeleteIncident",
    "hash": "0x556C1AA270D5A207",
    "code": "-- DELETE_INCIDENT\nDeleteIncident(\n\tincidentId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Delete an incident with a given id.  \n=======================================================  \nCorrection, I have change this to int, instead of int*  \nas it doesn't use a pointer to the createdIncident.  \nIf you try it you will crash (or) freeze.  \n======================================================="
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DeleteStuntJump",
    "hash": "0xDC518000E39DAE1F",
    "code": "-- DELETE_STUNT_JUMP\nDeleteStuntJump(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DisableHospitalRestart",
    "hash": "0xC8535819C450EBA8",
    "code": "-- DISABLE_HOSPITAL_RESTART\nDisableHospitalRestart(\n\thospitalIndex --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DisablePoliceRestart",
    "hash": "0x23285DED6EBD7EA3",
    "code": "-- DISABLE_POLICE_RESTART\nDisablePoliceRestart(\n\tpoliceIndex --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Disables the spawn point at the police house on the specified index.\npoliceIndex: The police house index.\ntoggle: true to enable the spawn point, false to disable.\n- Nacorpio"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DisableStuntJumpSet",
    "hash": "0xA5272EBEDD4747F6",
    "code": "-- DISABLE_STUNT_JUMP_SET\nDisableStuntJumpSet(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DisplayOnscreenKeyboard",
    "hash": "0x00DC833F2568DBF6",
    "code": "-- DISPLAY_ONSCREEN_KEYBOARD\nDisplayOnscreenKeyboard(\n\tkeyboardType --[[ integer ]], \n\twindowTitle --[[ string ]], \n\tdescription --[[ string ]], \n\tdefaultText --[[ string ]], \n\tdefaultConcat1 --[[ string ]], \n\tdefaultConcat2 --[[ string ]], \n\tdefaultConcat3 --[[ string ]], \n\tmaxInputLength --[[ integer ]]\n)",
    "parameters": [
      "keyboardType: \n\nSee the list above. Default is 0.",
      "windowTitle: \n\nText label for the title of the box.",
      "description: \n\nHas no use on PC.",
      "defaultText: \n\nDefault text that is written in the input field.",
      "defaultConcat1:",
      "defaultConcat2:",
      "defaultConcat3:",
      "maxInputLength: \n\nMax number of characters that can be typed (2 - 256)."
    ],
    "returns": [],
    "description": "Parameters:\n\nkeyboardType: \n\nSee the list above. Default is 0.\n\nwindowTitle: \n\nText label for the title of the box.\n\ndescription: \n\nHas no use on PC.\n\ndefaultText: \n\nDefault text that is written in the input field.\n\ndefaultConcat1:\ndefaultConcat2:\ndefaultConcat3:\nmaxInputLength: \n\nMax number of characters that can be typed (2 - 256).\n\nDisplays a text input box.\n\nenum eKeyboardType\n{\n  ONSCREEN_KEYBOARD_ENGLISH = 0,\n  ONSCREEN_KEYBOARD_LOCALISED = 1,\n  ONSCREEN_KEYBOARD_PASSWORD = 2,\n  ONSCREEN_KEYBOARD_GAMERTAG = 3,\n  ONSCREEN_KEYBOARD_EMAIL = 4,\n  ONSCREEN_KEYBOARD_BASIC_ENGLISH = 5,\n  ONSCREEN_KEYBOARD_FILENAME = 6\n};"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DisplayOnscreenKeyboardWithLongerInitialString",
    "hash": "0xCA78CFA0366592FE",
    "code": "-- DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING\nDisplayOnscreenKeyboardWithLongerInitialString(\n\tkeyboardType --[[ integer ]], \n\twindowTitle --[[ string ]], \n\tdescription --[[ string ]], \n\tdefaultText --[[ string ]], \n\tdefaultConcat1 --[[ string ]], \n\tdefaultConcat2 --[[ string ]], \n\tdefaultConcat3 --[[ string ]], \n\tdefaultConcat4 --[[ string ]], \n\tdefaultConcat5 --[[ string ]], \n\tdefaultConcat6 --[[ string ]], \n\tdefaultConcat7 --[[ string ]], \n\tmaxInputLength --[[ integer ]]\n)",
    "parameters": [
      "keyboardType: \n\nSee DISPLAY_ONSCREEN_KEYBOARD",
      "windowTitle: \n\nText label of the window title.",
      "description: \n\nUnused on PC.",
      "defaultText: \n\nDefault text that is written in the input field.",
      "defaultConcat1:",
      "defaultConcat2:",
      "defaultConcat3:",
      "defaultConcat4:",
      "defaultConcat5:",
      "defaultConcat6:",
      "defaultConcat7:",
      "maxInputLength: \n\nValue between 2 - 500."
    ],
    "returns": [],
    "description": "Parameters:\n\nkeyboardType: \n\nSee DISPLAY_ONSCREEN_KEYBOARD\n\nwindowTitle: \n\nText label of the window title.\n\ndescription: \n\nUnused on PC.\n\ndefaultText: \n\nDefault text that is written in the input field.\n\ndefaultConcat1:\ndefaultConcat2:\ndefaultConcat3:\ndefaultConcat4:\ndefaultConcat5:\ndefaultConcat6:\ndefaultConcat7:\nmaxInputLength: \n\nValue between 2 - 500.\n\nDisplays the text input box with support for input with 500 characters."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DoAutoSave",
    "hash": "0x50EEAAD86232EE55",
    "code": "-- DO_AUTO_SAVE\nDoAutoSave()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DoesPopMultiplierAreaExist",
    "hash": "0x1327E2FE9746BAEE",
    "code": "-- DOES_POP_MULTIPLIER_AREA_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesPopMultiplierAreaExist(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "DoesPopMultiplierSphereExist",
    "hash": "0x171BAFB3C60389F4",
    "code": "-- DOES_POP_MULTIPLIER_SPHERE_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesPopMultiplierSphereExist(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "EnableDispatchService",
    "hash": "0xDC0F817884CDD856",
    "code": "-- ENABLE_DISPATCH_SERVICE\nEnableDispatchService(\n\tdispatchService --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "dispatchService: \n\nThe ID of the dispatch service to toggle.",
      "toggle: \n\nTrue to enable the dispatch service, false to disable the dispatch service."
    ],
    "returns": [],
    "description": "Parameters:\n\ndispatchService: \n\nThe ID of the dispatch service to toggle.\n\ntoggle: \n\nTrue to enable the dispatch service, false to disable the dispatch service.\n\nEnables or disables the specified 'dispatch service' type. 'Dispatch services' are used for spawning AI response peds/vehicles for events such as a fire in the street (type 3 - DT_FireDepartment), or gunfire in a gang area (type 11 - DT_Gangs).\n\nList of dispatch services:\n\nenum eDispatchType\n{\n\tDT_Invalid = 0,\n\tDT_PoliceAutomobile = 1,\n\tDT_PoliceHelicopter = 2,\n\tDT_FireDepartment = 3,\n\tDT_SwatAutomobile = 4,\n\tDT_AmbulanceDepartment = 5,\n\tDT_PoliceRiders = 6,\n\tDT_PoliceVehicleRequest = 7,\n\tDT_PoliceRoadBlock = 8,\n\tDT_PoliceAutomobileWaitPulledOver = 9,\n\tDT_PoliceAutomobileWaitCruising = 10,\n\tDT_Gangs = 11,\n\tDT_SwatHelicopter = 13,\n\tDT_PoliceBoat = 14,\n\tDT_ArmyVehicle = 15,\n\tDT_BikerBackup = 15\n};\n\n\nNote that 'dispatch service' has nothing to do with the police scanner (audio), to toggle that, use SET_AUDIO_FLAG with 'PoliceScannerDisabled'."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "EnableStuntJumpSet",
    "hash": "0xE369A5783B866016",
    "code": "-- ENABLE_STUNT_JUMP_SET\nEnableStuntJumpSet(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "EnableTennisMode",
    "hash": "0x28A04B411933F8A6",
    "code": "-- ENABLE_TENNIS_MODE\nEnableTennisMode(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the ped jump around like they're in a tennis match"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "EndReplayStats",
    "hash": "0xA23E821FBDF8A5F2",
    "code": "-- END_REPLAY_STATS\nEndReplayStats()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "FindSpawnPointInDirection",
    "hash": "0x6874E2190B0C1972",
    "code": "-- FIND_SPAWN_POINT_IN_DIRECTION\nlocal retval --[[ boolean ]], spawnPoint --[[ vector3 ]] =\n\tFindSpawnPointInDirection(\n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\tdirX --[[ number ]], \n\t\tdirY --[[ number ]], \n\t\tdirZ --[[ number ]], \n\t\tdistance --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Finds a position ahead of the player by predicting the players next actions.  \nThe positions match path finding node positions.  \nWhen roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ForceGameStatePlaying",
    "hash": "0xC0AA53F866B3134D",
    "code": "-- FORCE_GAME_STATE_PLAYING\nForceGameStatePlaying()",
    "parameters": [],
    "returns": [],
    "description": "Sets the localplayer playerinfo state back to playing (State 0)  \nStates are:  \n-1: \"Invalid\"  \n0: \"Playing\"  \n1: \"Died\"  \n2: \"Arrested\"  \n3: \"Failed Mission\"  \n4: \"Left Game\"  \n5: \"Respawn\"  \n6: \"In MP Cutscene\""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ForceLightningFlash",
    "hash": "0xF6062E089251C898",
    "code": "-- FORCE_LIGHTNING_FLASH\nForceLightningFlash()",
    "parameters": [],
    "returns": [],
    "description": "creates single lightning+thunder at random position"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetAllocatedStackSize",
    "hash": "0x8B3CA62B1EF19B62",
    "code": "-- GET_ALLOCATED_STACK_SIZE\nlocal retval --[[ integer ]] =\n\tGetAllocatedStackSize()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetAngleBetween_2dVectors",
    "hash": "0x186FC4BE848E1C92",
    "code": "-- GET_ANGLE_BETWEEN_2D_VECTORS\nlocal retval --[[ number ]] =\n\tGetAngleBetween_2dVectors(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetBaseElementMetadata",
    "hash": "0xB335F761606DB47C",
    "code": "-- _GET_BASE_ELEMENT_METADATA\nlocal retval --[[ boolean ]], p1 --[[ Any ]], p2 --[[ Any ]] =\n\tGetBaseElementMetadata(\n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetBenchmarkIterationsFromCommandLine",
    "hash": "0x4750FC27570311EC",
    "code": "-- _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE\nlocal retval --[[ integer ]] =\n\tGetBenchmarkIterationsFromCommandLine()",
    "parameters": [],
    "returns": [],
    "description": "Returns value of the '-benchmarkIterations' command line option."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetBenchmarkPassFromCommandLine",
    "hash": "0x1B2366C3F2A5C8DF",
    "code": "-- _GET_BENCHMARK_PASS_FROM_COMMAND_LINE\nlocal retval --[[ integer ]] =\n\tGetBenchmarkPassFromCommandLine()",
    "parameters": [],
    "returns": [],
    "description": "Returns value of the '-benchmarkPass' command line option."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetBenchmarkTime",
    "hash": "0xE599A503B3837E1B",
    "code": "-- _GET_BENCHMARK_TIME\nlocal retval --[[ number ]] =\n\tGetBenchmarkTime()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetBitsInRange",
    "hash": "0x53158863FCC0893A",
    "code": "-- GET_BITS_IN_RANGE\nlocal retval --[[ integer ]] =\n\tGetBitsInRange(\n\t\tvar --[[ integer ]], \n\t\trangeStart --[[ integer ]], \n\t\trangeEnd --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetCloudHatOpacity",
    "hash": "0x20AC25E781AE4A84",
    "code": "-- _GET_CLOUD_HAT_OPACITY\nlocal retval --[[ number ]] =\n\tGetCloudHatOpacity()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetCoordsOfProjectileTypeInArea",
    "hash": "0x8D7A43EC6A5FEA45",
    "code": "-- GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA\nlocal retval --[[ boolean ]], projectilePos --[[ vector3 ]] =\n\tGetCoordsOfProjectileTypeInArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tprojectileHash --[[ Hash ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetCoordsOfProjectileTypeWithinDistance",
    "hash": "0xDFB4138EEFED7B81",
    "code": "-- GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE\nlocal retval --[[ boolean ]], outCoords --[[ vector3 ]] =\n\tGetCoordsOfProjectileTypeWithinDistance(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tdistance --[[ number ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetDistanceBetweenCoords",
    "hash": "0xF1B760881820C952",
    "code": "-- GET_DISTANCE_BETWEEN_COORDS\nlocal retval --[[ number ]] =\n\tGetDistanceBetweenCoords(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tuseZ --[[ boolean ]]\n\t)",
    "parameters": [
      "x1: \n\nThe X coordinate of the first point.",
      "y1: \n\nThe Y coordinate of the first point.",
      "z1: \n\nThe Z coordinate of the first point.",
      "x2: \n\nThe X coordinate of the second point.",
      "y2: \n\nThe Y coordinate of the second point.",
      "z2: \n\nThe Z coordinate of the second point.",
      "useZ: \n\nWhether or not to use the Z coordinate."
    ],
    "returns": [
      "The distance between the passed points in units."
    ],
    "description": "Parameters:\n\nx1: \n\nThe X coordinate of the first point.\n\ny1: \n\nThe Y coordinate of the first point.\n\nz1: \n\nThe Z coordinate of the first point.\n\nx2: \n\nThe X coordinate of the second point.\n\ny2: \n\nThe Y coordinate of the second point.\n\nz2: \n\nThe Z coordinate of the second point.\n\nuseZ: \n\nWhether or not to use the Z coordinate.\n\nReturns:\n\nThe distance between the passed points in units.\n\nReturns the distance between two three-dimensional points, optionally ignoring the Z values. If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance. Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetFakeWantedLevel",
    "hash": "0x4C9296CBCD1B971E",
    "code": "-- GET_FAKE_WANTED_LEVEL\nlocal retval --[[ integer ]] =\n\tGetFakeWantedLevel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetFrameCount",
    "hash": "0xFC8202EFC642E6F2",
    "code": "-- GET_FRAME_COUNT\nlocal retval --[[ integer ]] =\n\tGetFrameCount()",
    "parameters": [],
    "returns": [
      "The number of the current frame being displayed."
    ],
    "description": "Returns:\n\nThe number of the current frame being displayed.\n\nGets the number of the current frame being displayed."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetFrameTime",
    "hash": "0x15C40837039FFAF7",
    "code": "-- GET_FRAME_TIME\nlocal retval --[[ number ]] =\n\tGetFrameTime()",
    "parameters": [],
    "returns": [
      "The frame time (in seconds) of the last frame."
    ],
    "description": "Returns:\n\nThe frame time (in seconds) of the last frame.\n\nGets the high precision frame time of the last frame in seconds.\n\nnote: the example above is way less precise."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetGameTimer",
    "hash": "0x9CD27B0045628463",
    "code": "-- GET_GAME_TIMER\nlocal retval --[[ integer ]] =\n\tGetGameTimer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetGlobalCharBuffer",
    "hash": "0x24DA7D7667FD7B09",
    "code": "-- _GET_GLOBAL_CHAR_BUFFER\nlocal retval --[[ string ]] =\n\tGetGlobalCharBuffer()",
    "parameters": [],
    "returns": [],
    "description": "Returns pointer to an empty string.\nGET_C*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetGroundZAndNormalFor_3dCoord",
    "hash": "0x8BDC7BFC57A81E76",
    "code": "-- GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD\nlocal retval --[[ boolean ]], groundZ --[[ number ]], normal --[[ vector3 ]] =\n\tGetGroundZAndNormalFor_3dCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX-coordinate of the point to check.",
      "y: \n\nY-coordinate of the point to check.",
      "z: \n\nZ-coordinate of the point to check.",
      "groundZ: \n\nA pointer to a float where the ground Z-coordinate will be stored if found.",
      "normal: \n\nA pointer to a Vector3 structure where the surface normal at the ground point will be stored."
    ],
    "returns": [
      "Returns true if ground is found below the given coordinates and the surface normal could be determined, otherwise false."
    ],
    "description": "Parameters:\n\nx: \n\nX-coordinate of the point to check.\n\ny: \n\nY-coordinate of the point to check.\n\nz: \n\nZ-coordinate of the point to check.\n\ngroundZ: \n\nA pointer to a float where the ground Z-coordinate will be stored if found.\n\nnormal: \n\nA pointer to a Vector3 structure where the surface normal at the ground point will be stored.\n\nReturns:\n\nReturns true if ground is found below the given coordinates and the surface normal could be determined, otherwise false.\n\nAttempts to identify the highest ground Z-coordinate and determine the corresponding surface normal directly beneath a specified 3D coordinate.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetGroundZExcludingObjectsFor_3dCoord",
    "hash": "0x9E82F0F362881B29",
    "code": "-- GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD\nlocal retval --[[ boolean ]], groundZ --[[ number ]] =\n\tGetGroundZExcludingObjectsFor_3dCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\twaterAsGround --[[ boolean ]]\n\t)",
    "parameters": [
      "x: \n\nX-coordinate of the point to check.",
      "y: \n\nY-coordinate of the point to check.",
      "z: \n\nZ-coordinate of the point to check.",
      "groundZ: \n\nA pointer to a float where the ground Z-coordinate will be stored if found.",
      "waterAsGround: \n\nIf set to true, water will be included in the check, and its height will be returned if it is higher than the ground level."
    ],
    "returns": [
      "Returns true if ground (or water, if specified) is found below the given coordinates, otherwise false."
    ],
    "description": "Parameters:\n\nx: \n\nX-coordinate of the point to check.\n\ny: \n\nY-coordinate of the point to check.\n\nz: \n\nZ-coordinate of the point to check.\n\ngroundZ: \n\nA pointer to a float where the ground Z-coordinate will be stored if found.\n\nwaterAsGround: \n\nIf set to true, water will be included in the check, and its height will be returned if it is higher than the ground level.\n\nReturns:\n\nReturns true if ground (or water, if specified) is found below the given coordinates, otherwise false.\n\nDetermines the highest ground Z-coordinate directly below a specified 3D coordinate, excluding any objects at that point. Optionally, water can be considered as ground when determining the highest point.\n\nNativeDB Added Parameter 6: BOOL ignoreDistToWaterLevelCheck - If set to true, the distance to the water level will be ignored when checking for water as ground. \nNativeDB Introduced: v505"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetGroundZFor_3dCoord",
    "hash": "0xC906A7DAB05C8D2B",
    "code": "-- GET_GROUND_Z_FOR_3D_COORD\nlocal retval --[[ boolean ]], groundZ --[[ number ]] =\n\tGetGroundZFor_3dCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tincludeWater --[[ boolean ]]\n\t)",
    "parameters": [
      "x: \n\nPosition on the X-axis to get ground elevation.",
      "y: \n\nPosition on the Y-axis to get ground elevation.",
      "z: \n\nPosition on the Z-axis to get ground elevation.",
      "groundZ:",
      "includeWater: \n\nDetermines if the top water level at the specified position should be considered the ground elevation. (It would only matter if the specified position is located above or under the water)"
    ],
    "returns": [
      "This native`s first return value (retval) will return true if the ground elevation has been found, and the second (groundZ) will return the z-coord which represents the ground elevation at the specified position."
    ],
    "description": "Parameters:\n\nx: \n\nPosition on the X-axis to get ground elevation.\n\ny: \n\nPosition on the Y-axis to get ground elevation.\n\nz: \n\nPosition on the Z-axis to get ground elevation.\n\ngroundZ:\nincludeWater: \n\nDetermines if the top water level at the specified position should be considered the ground elevation. (It would only matter if the specified position is located above or under the water)\n\nReturns:\n\nThis native`s first return value (retval) will return true if the ground elevation has been found, and the second (groundZ) will return the z-coord which represents the ground elevation at the specified position.\n\nThis native gets the ground level (ground elevation) and returns the Z coordinate that represents it. Note: This native can only calculate the elevation when the coordinates are within the render distance of the client.\n\nNativeDB Added Parameter 6: BOOL p5"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetHashKey",
    "hash": "0xD24D37CC275948CC",
    "code": "-- GET_HASH_KEY\nlocal retval --[[ Hash ]] =\n\tGetHashKey(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [
      "string: \n\nThe string to hash."
    ],
    "returns": [
      "The hash of string."
    ],
    "description": "Parameters:\n\nstring: \n\nThe string to hash.\n\nReturns:\n\nThe hash of string.\n\nThis native converts its past string to hash. It is hashed using jenkins one at a time method."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetHeadingFromVector_2d",
    "hash": "0x2FFB6B224F4B2926",
    "code": "-- GET_HEADING_FROM_VECTOR_2D\nlocal retval --[[ number ]] =\n\tGetHeadingFromVector_2d(\n\t\tdx --[[ number ]], \n\t\tdy --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "dx = x1 - x2\ndy = y1 - y2"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetIndexOfCurrentLevel",
    "hash": "0xCBAD6729F7B1F4FC",
    "code": "-- GET_INDEX_OF_CURRENT_LEVEL\nlocal retval --[[ integer ]] =\n\tGetIndexOfCurrentLevel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetIsAutoSaveOff",
    "hash": "0x6E04F06094C87047",
    "code": "-- GET_IS_AUTO_SAVE_OFF\nlocal retval --[[ boolean ]] =\n\tGetIsAutoSaveOff()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if profile setting 208 is equal to 0."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetIsPlayerInAnimalForm",
    "hash": "0x9689123E3F213AA5",
    "code": "-- _GET_IS_PLAYER_IN_ANIMAL_FORM\nlocal retval --[[ boolean ]] =\n\tGetIsPlayerInAnimalForm()",
    "parameters": [],
    "returns": [],
    "description": "Although we don't have a jenkins hash for this one, the name is 100% confirmed."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetLinePlaneIntersection",
    "hash": "0xF56DFB7B61BE7276",
    "code": "-- GET_LINE_PLANE_INTERSECTION\nlocal retval --[[ boolean ]], intersectionParameter --[[ number ]] =\n\tGetLinePlaneIntersection(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tplaneX --[[ number ]], \n\t\tplaneY --[[ number ]], \n\t\tplaneZ --[[ number ]], \n\t\tplaneNormalX --[[ number ]], \n\t\tplaneNormalY --[[ number ]], \n\t\tplaneNormalZ --[[ number ]]\n\t)",
    "parameters": [
      "x1: \n\nThe X-coordinate of the first point of the line segment.",
      "y1: \n\nThe Y-coordinate of the first point of the line segment.",
      "z1: \n\nThe Z-coordinate of the first point of the line segment. Together, x1, y1, and z1 define the starting point of the line segment.",
      "x2: \n\nThe X-coordinate of the second point of the line segment.",
      "y2: \n\nThe Y-coordinate of the second point of the line segment.",
      "z2: \n\nThe Z-coordinate of the second point of the line segment. Together, x2, y2, and z2 define the ending point of the line segment.",
      "planeX: \n\nThe X-coordinate of a point on the plane. This, along with planeY and planeZ, specifies a point that lies on the plane's surface.",
      "planeY: \n\nThe Y-coordinate of a point on the plane.",
      "planeZ: \n\nThe Z-coordinate of a point on the plane.",
      "planeNormalX: \n\nThe X-component of the plane's normal vector. The normal vector is perpendicular to the plane's surface and defines its orientation.",
      "planeNormalY: \n\nThe Y-component of the plane's normal vector.",
      "planeNormalZ: \n\nThe Z-component of the plane's normal vector. Together, planeNormalX, planeNormalY, and planeNormalZ fully describe the plane's orientation in 3D space.",
      "intersectionParameter: \n\nA pointer to a float. This parameter is used to return the value of t at which the line segment intersects the plane. The value of t is a scalar multiplier that can be used to calculate the exact intersection point on the line segment. If the line does not intersect the plane, the value of t is not meaningful."
    ],
    "returns": [
      "Returns true if the line segment intersects the plane, in which case the intersectionParameter will contain the intersection point's parameter value. Returns false if there is no intersection, making the intersectionParameter value irrelevant."
    ],
    "description": "Parameters:\n\nx1: \n\nThe X-coordinate of the first point of the line segment.\n\ny1: \n\nThe Y-coordinate of the first point of the line segment.\n\nz1: \n\nThe Z-coordinate of the first point of the line segment. Together, x1, y1, and z1 define the starting point of the line segment.\n\nx2: \n\nThe X-coordinate of the second point of the line segment.\n\ny2: \n\nThe Y-coordinate of the second point of the line segment.\n\nz2: \n\nThe Z-coordinate of the second point of the line segment. Together, x2, y2, and z2 define the ending point of the line segment.\n\nplaneX: \n\nThe X-coordinate of a point on the plane. This, along with planeY and planeZ, specifies a point that lies on the plane's surface.\n\nplaneY: \n\nThe Y-coordinate of a point on the plane.\n\nplaneZ: \n\nThe Z-coordinate of a point on the plane.\n\nplaneNormalX: \n\nThe X-component of the plane's normal vector. The normal vector is perpendicular to the plane's surface and defines its orientation.\n\nplaneNormalY: \n\nThe Y-component of the plane's normal vector.\n\nplaneNormalZ: \n\nThe Z-component of the plane's normal vector. Together, planeNormalX, planeNormalY, and planeNormalZ fully describe the plane's orientation in 3D space.\n\nintersectionParameter: \n\nA pointer to a float. This parameter is used to return the value of t at which the line segment intersects the plane. The value of t is a scalar multiplier that can be used to calculate the exact intersection point on the line segment. If the line does not intersect the plane, the value of t is not meaningful.\n\nReturns:\n\nReturns true if the line segment intersects the plane, in which case the intersectionParameter will contain the intersection point's parameter value. Returns false if there is no intersection, making the intersectionParameter value irrelevant.\n\nDetermines whether a line segment intersects a plane and, if so, returns the parameter value at which this intersection occurs.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetMissionFlag",
    "hash": "0xA33CDCCDA663159E",
    "code": "-- GET_MISSION_FLAG\nlocal retval --[[ boolean ]] =\n\tGetMissionFlag()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetModelDimensions",
    "hash": "0x03E8D3D5F549087A",
    "code": "-- GET_MODEL_DIMENSIONS\nlocal minimum --[[ vector3 ]], maximum --[[ vector3 ]] =\n\tGetModelDimensions(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the dimensions of a model.\nCalculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.\nExample from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetNextWeatherTypeHashName",
    "hash": "0x711327CD09C8F162",
    "code": "-- GET_NEXT_WEATHER_TYPE_HASH_NAME\nlocal retval --[[ Hash ]] =\n\tGetNextWeatherTypeHashName()",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetNumDispatchedUnitsForPlayer",
    "hash": "0xEB4A0C2D56441717",
    "code": "-- _GET_NUM_DISPATCHED_UNITS_FOR_PLAYER\nlocal retval --[[ integer ]] =\n\tGetNumDispatchedUnitsForPlayer(\n\t\tdispatchService --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetNumSuccessfulStuntJumps",
    "hash": "0x996DD1E1E02F1008",
    "code": "-- GET_NUM_SUCCESSFUL_STUNT_JUMPS\nlocal retval --[[ integer ]] =\n\tGetNumSuccessfulStuntJumps()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetNumberOfFreeStacksOfThisSize",
    "hash": "0xFEAD16FC8F9DFC0F",
    "code": "-- GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE\nlocal retval --[[ integer ]] =\n\tGetNumberOfFreeStacksOfThisSize(\n\t\tstackSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetOnscreenKeyboardResult",
    "hash": "0x8362B09B91893647",
    "code": "-- GET_ONSCREEN_KEYBOARD_RESULT\nlocal retval --[[ string ]] =\n\tGetOnscreenKeyboardResult()",
    "parameters": [],
    "returns": [],
    "description": "Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetPowerSavingModeDuration",
    "hash": "0xABB2FA71C83A1B72",
    "code": "-- _GET_POWER_SAVING_MODE_DURATION\nlocal retval --[[ integer ]] =\n\tGetPowerSavingModeDuration()",
    "parameters": [],
    "returns": [],
    "description": "Returns duration of how long the game has been in power-saving mode (aka \"constrained\") in milliseconds."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetPrevWeatherTypeHashName",
    "hash": "0x564B884A05EC45A3",
    "code": "-- GET_PREV_WEATHER_TYPE_HASH_NAME\nlocal retval --[[ Hash ]] =\n\tGetPrevWeatherTypeHashName()",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetProfileSetting",
    "hash": "0xC488FF2356EA7791",
    "code": "-- GET_PROFILE_SETTING\nlocal retval --[[ integer ]] =\n\tGetProfileSetting(\n\t\tprofileSetting --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetProjectileNearPed",
    "hash": "0x82FDE6A57EE4EE44",
    "code": "-- _GET_PROJECTILE_NEAR_PED\nlocal retval --[[ boolean ]], outCoords --[[ vector3 ]], outProjectile --[[ Object ]] =\n\tGetProjectileNearPed(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tdistance --[[ number ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetRainLevel",
    "hash": "0x96695E368AD855F3",
    "code": "-- GET_RAIN_LEVEL\nlocal retval --[[ number ]] =\n\tGetRainLevel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetRandomEventFlag",
    "hash": "0xD2D57F1D764117B1",
    "code": "-- GET_RANDOM_EVENT_FLAG\nlocal retval --[[ boolean ]] =\n\tGetRandomEventFlag()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetRandomFloatInRange",
    "hash": "0x313CE5879CEB6FCD",
    "code": "-- GET_RANDOM_FLOAT_IN_RANGE\nlocal retval --[[ number ]] =\n\tGetRandomFloatInRange(\n\t\tstartRange --[[ number ]], \n\t\tendRange --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetRandomIntInRange",
    "hash": "0xD53343AA4FB7DD28",
    "code": "-- GET_RANDOM_INT_IN_RANGE\nlocal retval --[[ integer ]] =\n\tGetRandomIntInRange(\n\t\tstartRange --[[ integer ]], \n\t\tendRange --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetRandomIntInRange_2",
    "hash": "0xF2D49816A804D134",
    "code": "-- _GET_RANDOM_INT_IN_RANGE_2\nlocal retval --[[ integer ]] =\n\tGetRandomIntInRange_2(\n\t\tstartRange --[[ integer ]], \n\t\tendRange --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetReplayStatAtIndex",
    "hash": "0x8098C8D6597AAE18",
    "code": "-- GET_REPLAY_STAT_AT_INDEX\nlocal retval --[[ integer ]] =\n\tGetReplayStatAtIndex(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetReplayStatCount",
    "hash": "0xDC9274A7EF6B2867",
    "code": "-- GET_REPLAY_STAT_COUNT\nlocal retval --[[ integer ]] =\n\tGetReplayStatCount()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetReplayStatMissionType",
    "hash": "0x2B626A0150E4D449",
    "code": "-- GET_REPLAY_STAT_MISSION_TYPE\nlocal retval --[[ integer ]] =\n\tGetReplayStatMissionType()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetSizeOfSaveData",
    "hash": "0xA09F896CE912481F",
    "code": "-- GET_SIZE_OF_SAVE_DATA\nlocal retval --[[ integer ]] =\n\tGetSizeOfSaveData(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetSnowLevel",
    "hash": "0xC5868A966E5BE3AE",
    "code": "-- GET_SNOW_LEVEL\nlocal retval --[[ number ]] =\n\tGetSnowLevel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetStatusOfMissionRepeatSave",
    "hash": "0x2B5E102E4A42F2BF",
    "code": "-- GET_STATUS_OF_MISSION_REPEAT_SAVE\nlocal retval --[[ integer ]] =\n\tGetStatusOfMissionRepeatSave()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetTennisSwingAnimComplete",
    "hash": "0x17DF68D720AA77F8",
    "code": "-- GET_TENNIS_SWING_ANIM_COMPLETE\nlocal retval --[[ boolean ]] =\n\tGetTennisSwingAnimComplete(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetTotalSuccessfulStuntJumps",
    "hash": "0x6856EC3D35C81EA4",
    "code": "-- GET_TOTAL_SUCCESSFUL_STUNT_JUMPS\nlocal retval --[[ integer ]] =\n\tGetTotalSuccessfulStuntJumps()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetWeatherTypeTransition",
    "hash": "0xF3BBE884A14BB413",
    "code": "-- _GET_WEATHER_TYPE_TRANSITION\nlocal weatherType1 --[[ Hash ]], weatherType2 --[[ Hash ]], percentWeather2 --[[ number ]] =\n\tGetWeatherTypeTransition()",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetWindDirection",
    "hash": "0x1F400FEF721170DA",
    "code": "-- GET_WIND_DIRECTION\nlocal retval --[[ vector3 ]] =\n\tGetWindDirection()",
    "parameters": [],
    "returns": [
      "The wind direction"
    ],
    "description": "Returns:\n\nThe wind direction\n\nUsed for hunting in singleplayer and for golfing in both sp and online. The GET_HEADING_FROM_VECTOR_2D native can be used to get the wind heading from the direction."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "GetWindSpeed",
    "hash": "0xA8CF1CC0AFCD3F12",
    "code": "-- GET_WIND_SPEED\nlocal retval --[[ number ]] =\n\tGetWindSpeed()",
    "parameters": [],
    "returns": [
      "The wind speed in meters per second"
    ],
    "description": "Returns:\n\nThe wind speed in meters per second"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "HasAsyncInstallFinished",
    "hash": "0x14832BF2ABA53FC5",
    "code": "-- _HAS_ASYNC_INSTALL_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasAsyncInstallFinished()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to always return true."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "HasBulletImpactedInArea",
    "hash": "0x9870ACFB89A90995",
    "code": "-- HAS_BULLET_IMPACTED_IN_AREA\nlocal retval --[[ boolean ]] =\n\tHasBulletImpactedInArea(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p3 - possibly radius?"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "HasBulletImpactedInBox",
    "hash": "0xDC8C5D7CFEAB8394",
    "code": "-- HAS_BULLET_IMPACTED_IN_BOX\nlocal retval --[[ boolean ]] =\n\tHasBulletImpactedInBox(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ boolean ]], \n\t\tp7 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "HasButtonCombinationJustBeenEntered",
    "hash": "0x071E2A839DE82D90",
    "code": "-- _HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED\nlocal retval --[[ boolean ]] =\n\tHasButtonCombinationJustBeenEntered(\n\t\thash --[[ Hash ]], \n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the \"amount\" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/\nINT_SCORES_SCORTED was a hash collision"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "HasCheatStringJustBeenEntered",
    "hash": "0x557E43C447E700A8",
    "code": "-- _HAS_CHEAT_STRING_JUST_BEEN_ENTERED\nlocal retval --[[ boolean ]] =\n\tHasCheatStringJustBeenEntered(\n\t\thash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Get inputted \"Cheat code\", for example:\nwhile (TRUE)\n{\n    if (MISC::_557E43C447E700A8(${fugitive}))\n    {\n       // Do something.\n    }\n    SYSTEM::WAIT(0);\n}\nCalling this will also set the last saved string hash to zero."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "HasResumedFromSuspend",
    "hash": "0xE8B9C0EC9E183F35",
    "code": "-- _HAS_RESUMED_FROM_SUSPEND\nlocal retval --[[ boolean ]] =\n\tHasResumedFromSuspend()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to return false."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "HaveCreditsReachedEnd",
    "hash": "0x075F1D57402C93BA",
    "code": "-- HAVE_CREDITS_REACHED_END\nlocal retval --[[ boolean ]] =\n\tHaveCreditsReachedEnd()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IgnoreNextRestart",
    "hash": "0x21FFB63D8C615361",
    "code": "-- IGNORE_NEXT_RESTART\nIgnoreNextRestart(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsAreaOccupied",
    "hash": "0xA61B4DF533DCB56E",
    "code": "-- IS_AREA_OCCUPIED\nlocal retval --[[ boolean ]] =\n\tIsAreaOccupied(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ boolean ]], \n\t\tp7 --[[ boolean ]], \n\t\tp8 --[[ boolean ]], \n\t\tp9 --[[ boolean ]], \n\t\tp10 --[[ boolean ]], \n\t\tp11 --[[ Any ]], \n\t\tp12 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsAussieVersion",
    "hash": "0x9F1935CA1F724008",
    "code": "-- IS_AUSSIE_VERSION\nlocal retval --[[ boolean ]] =\n\tIsAussieVersion()",
    "parameters": [],
    "returns": [],
    "description": "if (MISC::IS_AUSSIE_VERSION()) {\n    sub_127a9(&l_31, 1024); // l_31 |= 1024\n    l_129 = 3;\n    sub_129d2(\"AUSSIE VERSION IS TRUE!?!?!\"); // DEBUG\n}\nUsed to block some of the prostitute stuff due to laws in Australia."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsAutoSaveInProgress",
    "hash": "0x69240733738C19A0",
    "code": "-- IS_AUTO_SAVE_IN_PROGRESS\nlocal retval --[[ boolean ]] =\n\tIsAutoSaveInProgress()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsBitSet",
    "hash": "0xA921AA820C25702F",
    "code": "-- IS_BIT_SET\nlocal retval --[[ boolean ]] =\n\tIsBitSet(\n\t\taddress --[[ integer ]], \n\t\toffset --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns bit's boolean state from [offset] of [address].\nExample:\nMISC::IS_BIT_SET(bitAddress, 1);\nTo enable and disable bits, see:\nMISC::SET_BIT(&bitAddress, 1);   // enable\nMISC::CLEAR_BIT(&bitAddress, 1); // disable"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsBulletInAngledArea",
    "hash": "0x1A8B5F3C01E2B477",
    "code": "-- IS_BULLET_IN_ANGLED_AREA\nlocal retval --[[ boolean ]] =\n\tIsBulletInAngledArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area",
      "ownedByPlayer:"
    ],
    "returns": [
      "True if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area."
    ],
    "description": "Parameters:\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\nownedByPlayer:\nReturns:\n\nTrue if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area.\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area.\n\nFor projectiles, see: IS_PROJECTILE_TYPE_IN_ANGLED_AREA"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsBulletInArea",
    "hash": "0x3F2023999AD51C1F",
    "code": "-- IS_BULLET_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsBulletInArea(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsBulletInBox",
    "hash": "0xDE0F6D7450D37351",
    "code": "-- IS_BULLET_IN_BOX\nlocal retval --[[ boolean ]] =\n\tIsBulletInBox(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsCommandLineBenchmarkValueSet",
    "hash": "0xA049A5BE0F04F2F8",
    "code": "-- _IS_COMMAND_LINE_BENCHMARK_VALUE_SET\nlocal retval --[[ boolean ]] =\n\tIsCommandLineBenchmarkValueSet()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if command line option '-benchmark' is set."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsDurangoVersion",
    "hash": "0x4D982ADB1978442D",
    "code": "-- IS_DURANGO_VERSION\nlocal retval --[[ boolean ]] =\n\tIsDurangoVersion()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsFrontendFading",
    "hash": "0x7EA2B6AF97ECA6ED",
    "code": "-- IS_FRONTEND_FADING\nlocal retval --[[ boolean ]] =\n\tIsFrontendFading()",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsInPowerSavingMode",
    "hash": "0x684A41975F077262",
    "code": "-- _IS_IN_POWER_SAVING_MODE\nlocal retval --[[ boolean ]] =\n\tIsInPowerSavingMode()",
    "parameters": [],
    "returns": [],
    "description": "aka \"constrained\""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsIncidentValid",
    "hash": "0xC8BC6461E629BEAA",
    "code": "-- IS_INCIDENT_VALID\nlocal retval --[[ boolean ]] =\n\tIsIncidentValid(\n\t\tincidentId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "=======================================================  \nCorrection, I have change this to int, instead of int*  \nas it doesn't use a pointer to the createdIncident.  \nIf you try it you will crash (or) freeze.  \n======================================================="
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsJapaneseVersion",
    "hash": "0xB8C0BB75D8A77DB3",
    "code": "-- IS_JAPANESE_VERSION\nlocal retval --[[ boolean ]] =\n\tIsJapaneseVersion()",
    "parameters": [],
    "returns": [
      "Returns true when GTA:V is running with the Japanese executable."
    ],
    "description": "Returns:\n\nReturns true when GTA:V is running with the Japanese executable.\n\nNativeDB Introduced: 2545"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsMemoryCardInUse",
    "hash": "0x8A75CE2956274ADD",
    "code": "-- IS_MEMORY_CARD_IN_USE\nlocal retval --[[ boolean ]] =\n\tIsMemoryCardInUse()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsMinigameInProgress",
    "hash": "0x2B4A15E44DE0F478",
    "code": "-- IS_MINIGAME_IN_PROGRESS\nlocal retval --[[ boolean ]] =\n\tIsMinigameInProgress()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsNextWeatherType",
    "hash": "0x2FAA3A30BEC0F25D",
    "code": "-- IS_NEXT_WEATHER_TYPE\nlocal retval --[[ boolean ]] =\n\tIsNextWeatherType(\n\t\tweatherType --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsOrbisVersion",
    "hash": "0xA72BC0B675B1519E",
    "code": "-- IS_ORBIS_VERSION\nlocal retval --[[ boolean ]] =\n\tIsOrbisVersion()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsPcVersion",
    "hash": "0x48AF36444B965238",
    "code": "-- IS_PC_VERSION\nlocal retval --[[ boolean ]] =\n\tIsPcVersion()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 1."
    ],
    "description": "Returns:\n\nHard-coded to always return 1."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsPointObscuredByAMissionEntity",
    "hash": "0xE54E209C35FFA18D",
    "code": "-- IS_POINT_OBSCURED_BY_A_MISSION_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsPointObscuredByAMissionEntity(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsPopMultiplierAreaUnk",
    "hash": "0x1312F4B242609CE3",
    "code": "-- _IS_POP_MULTIPLIER_AREA_UNK\nlocal retval --[[ boolean ]] =\n\tIsPopMultiplierAreaUnk(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsPositionOccupied",
    "hash": "0xADCDE75E1C60F32D",
    "code": "-- IS_POSITION_OCCUPIED\nlocal retval --[[ boolean ]] =\n\tIsPositionOccupied(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\trange --[[ number ]], \n\t\tp4 --[[ boolean ]], \n\t\tcheckVehicles --[[ boolean ]], \n\t\tcheckPeds --[[ boolean ]], \n\t\tp7 --[[ boolean ]], \n\t\tp8 --[[ boolean ]], \n\t\tignoreEntity --[[ Entity ]], \n\t\tp10 --[[ boolean ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate of the position to check.",
      "y: \n\nY coordinate of the position to check.",
      "z: \n\nZ coordinate of the position to check.",
      "range: \n\nThe range, seems to not be very accurate during testing.",
      "p4: \n\nUnknown, when set to true it seems to always return true no matter what I try.",
      "checkVehicles: \n\nCheck for any vehicles in that area.",
      "checkPeds: \n\nCheck for any peds in that area.",
      "p7: \n\nUnknown.",
      "p8: \n\nUnknown.",
      "ignoreEntity: \n\nThis entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.",
      "p10: \n\nUnknown."
    ],
    "returns": [
      "Returns true if there is anything in that location matching the provided parameters."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate of the position to check.\n\ny: \n\nY coordinate of the position to check.\n\nz: \n\nZ coordinate of the position to check.\n\nrange: \n\nThe range, seems to not be very accurate during testing.\n\np4: \n\nUnknown, when set to true it seems to always return true no matter what I try.\n\ncheckVehicles: \n\nCheck for any vehicles in that area.\n\ncheckPeds: \n\nCheck for any peds in that area.\n\np7: \n\nUnknown.\n\np8: \n\nUnknown.\n\nignoreEntity: \n\nThis entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.\n\np10: \n\nUnknown.\n\nReturns:\n\nReturns true if there is anything in that location matching the provided parameters.\n\nThe BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsPrevWeatherType",
    "hash": "0x44F28F86433B10A9",
    "code": "-- IS_PREV_WEATHER_TYPE\nlocal retval --[[ boolean ]] =\n\tIsPrevWeatherType(\n\t\tweatherType --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsProjectileInArea",
    "hash": "0x5270A8FBC098C3F8",
    "code": "-- IS_PROJECTILE_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsProjectileInArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.  \nownedByPlayer = only projectiles fired by the player will be detected."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsProjectileTypeInAngledArea",
    "hash": "0xF0BC12401061DEA0",
    "code": "-- IS_PROJECTILE_TYPE_IN_ANGLED_AREA\nlocal retval --[[ boolean ]] =\n\tIsProjectileTypeInAngledArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]], \n\t\tp7 --[[ number ]], \n\t\tweaponHash --[[ Hash ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area",
      "p7:",
      "weaponHash:",
      "ownedByPlayer:"
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\np7:\nweaponHash:\nownedByPlayer:\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area.\n\nNativeDB Removed Parameter 7: float p7"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsProjectileTypeInArea",
    "hash": "0x2E0DC353342C4A6D",
    "code": "-- IS_PROJECTILE_TYPE_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsProjectileTypeInArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\ttype --[[ integer ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsProjectileTypeWithinDistance",
    "hash": "0x34318593248C8FB2",
    "code": "-- IS_PROJECTILE_TYPE_WITHIN_DISTANCE\nlocal retval --[[ boolean ]] =\n\tIsProjectileTypeWithinDistance(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tprojHash --[[ Hash ]], \n\t\tradius --[[ number ]], \n\t\townedByPlayer --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsPs3Version",
    "hash": "0xCCA1072C29D096C2",
    "code": "-- IS_PS3_VERSION\nlocal retval --[[ boolean ]] =\n\tIsPs3Version()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsSniperBulletInArea",
    "hash": "0xFEFCF11B01287125",
    "code": "-- IS_SNIPER_BULLET_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsSniperBulletInArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsSniperInverted",
    "hash": "0x61A23B7EDA9BDA24",
    "code": "-- IS_SNIPER_INVERTED\nlocal retval --[[ boolean ]] =\n\tIsSniperInverted()",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsSteamVersion",
    "hash": "0x0A27B2B6282F7169",
    "code": "-- IS_STEAM_VERSION\nlocal retval --[[ boolean ]] =\n\tIsSteamVersion()",
    "parameters": [],
    "returns": [
      "Returns true when GTA:V is running with the Steam executable."
    ],
    "description": "Returns:\n\nReturns true when GTA:V is running with the Steam executable.\n\nNativeDB Introduced: 2545"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsStringNull",
    "hash": "0xF22B6C47C6EAB066",
    "code": "-- IS_STRING_NULL\nlocal retval --[[ boolean ]] =\n\tIsStringNull(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsStringNullOrEmpty",
    "hash": "0xCA042B6957743895",
    "code": "-- IS_STRING_NULL_OR_EMPTY\nlocal retval --[[ boolean ]] =\n\tIsStringNullOrEmpty(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsStuntJumpInProgress",
    "hash": "0x7A3F19700A4D0525",
    "code": "-- IS_STUNT_JUMP_IN_PROGRESS\nlocal retval --[[ boolean ]] =\n\tIsStuntJumpInProgress()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsStuntJumpMessageShowing",
    "hash": "0x2272B0A1343129F4",
    "code": "-- IS_STUNT_JUMP_MESSAGE_SHOWING\nlocal retval --[[ boolean ]] =\n\tIsStuntJumpMessageShowing()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsTennisMode",
    "hash": "0x5D5479D115290C3F",
    "code": "-- IS_TENNIS_MODE\nlocal retval --[[ boolean ]] =\n\tIsTennisMode(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsThisAMinigameScript",
    "hash": "0x7B30F65D7B710098",
    "code": "-- IS_THIS_A_MINIGAME_SCRIPT\nlocal retval --[[ boolean ]] =\n\tIsThisAMinigameScript()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "IsXbox360Version",
    "hash": "0xF6201B4DAF662A9D",
    "code": "-- IS_XBOX360_VERSION\nlocal retval --[[ boolean ]] =\n\tIsXbox360Version()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "LandingMenuIsActive",
    "hash": "0x3BBBD13E5041A79E",
    "code": "-- _LANDING_MENU_IS_ACTIVE\nlocal retval --[[ boolean ]] =\n\tLandingMenuIsActive()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "LoadCloudHat",
    "hash": "0xFC4842A34657BFCB",
    "code": "-- LOAD_CLOUD_HAT\nLoadCloudHat(\n\tname --[[ string ]], \n\ttransitionTime --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The following cloudhats are useable:\naltostratus\nCirrus\ncirrocumulus\nClear 01\nCloudy 01\nContrails\nHorizon\nhorizonband1\nhorizonband2\nhorizonband3\nhorsey\nNimbus\nPuffs\nRAIN\nSnowy 01\nStormy 01\nstratoscumulus\nStripey\nshower\nWispy"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "NetworkSetScriptIsSafeForNetworkGame",
    "hash": "0x9243BAC96D64C050",
    "code": "-- NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME\nNetworkSetScriptIsSafeForNetworkGame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "NextOnscreenKeyboardResultWillDisplayUsingTheseFonts",
    "hash": "0x3ED1438C1F5C6612",
    "code": "-- NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS\nNextOnscreenKeyboardResultWillDisplayUsingTheseFonts(\n\tfontBitField --[[ integer ]]\n)",
    "parameters": [
      "fontBitField: \n\nSee the list above."
    ],
    "returns": [],
    "description": "Parameters:\n\nfontBitField: \n\nSee the list above.\n\nenum eFontBitField\n{\n  FONT_BIT_STANDARD = 1,\n  FONT_BIT_CURSIVE = 2,\n  FONT_BIT_ROCKSTAR_TAG = 4\n  FONT_BIT_LEADERBOARD = 8\n  FONT_BIT_CONDENSED = 16\n  FONT_BIT_FIXED_WIDTH_NUMBERS = 32\n  FONT_BIT_CONDENSED_NOT_GAMERNAME = 64\n  FONT_BIT_PRICEDOWN = 128\n};"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "OverrideSaveHouse",
    "hash": "0x1162EA8AE9D24EEA",
    "code": "-- OVERRIDE_SAVE_HOUSE\nlocal retval --[[ boolean ]], p6 --[[ vector3 ]], p7 --[[ number ]] =\n\tOverrideSaveHouse(\n\t\tp0 --[[ boolean ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "PauseDeathArrestRestart",
    "hash": "0x2C2B3493FBF51C71",
    "code": "-- PAUSE_DEATH_ARREST_RESTART\nPauseDeathArrestRestart(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "PlayTennisDiveAnim",
    "hash": "0x8FA9C42FC5D7C64B",
    "code": "-- PLAY_TENNIS_DIVE_ANIM\nPlayTennisDiveAnim(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "PlayTennisSwingAnim",
    "hash": "0xE266ED23311F24D4",
    "code": "-- PLAY_TENNIS_SWING_ANIM\nPlayTennisSwingAnim(\n\tped --[[ Ped ]], \n\tanimDict --[[ string ]], \n\tanimName --[[ string ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "PopulateNow",
    "hash": "0x7472BB270D7B4F3E",
    "code": "-- POPULATE_NOW\nPopulateNow()",
    "parameters": [],
    "returns": [],
    "description": "spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "PreloadCloudHat",
    "hash": "0x11B56FBBF7224868",
    "code": "-- PRELOAD_CLOUD_HAT\nPreloadCloudHat(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Found in the scripts:\nMISC::_11B56FBBF7224868(\"CONTRAILS\");"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "QueueMissionRepeatLoad",
    "hash": "0x72DE52178C291CB5",
    "code": "-- QUEUE_MISSION_REPEAT_LOAD\nlocal retval --[[ boolean ]] =\n\tQueueMissionRepeatLoad()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "QueueMissionRepeatSave",
    "hash": "0x44A0BDC559B35F6E",
    "code": "-- QUEUE_MISSION_REPEAT_SAVE\nlocal retval --[[ boolean ]] =\n\tQueueMissionRepeatSave()",
    "parameters": [],
    "returns": [
      "Returns 1 if the message isn't currently on screen."
    ],
    "description": "Returns:\n\nReturns 1 if the message isn't currently on screen.\n\nShows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "QuitGame",
    "hash": "0xEB6891F03362FB12",
    "code": "-- QUIT_GAME\nQuitGame()",
    "parameters": [],
    "returns": [],
    "description": "Quits the game."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterBoolToSave",
    "hash": "0xC8F4131414C835A1",
    "code": "-- REGISTER_BOOL_TO_SAVE\nlocal p0 --[[ Any ]] =\n\tRegisterBoolToSave(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterEnumToSave",
    "hash": "0x10C2FA78D0E128A1",
    "code": "-- REGISTER_ENUM_TO_SAVE\nlocal p0 --[[ Any ]] =\n\tRegisterEnumToSave(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterFloatToSave",
    "hash": "0x7CAEC29ECB5DFEBB",
    "code": "-- REGISTER_FLOAT_TO_SAVE\nlocal p0 --[[ Any ]] =\n\tRegisterFloatToSave(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterIntToSave",
    "hash": "0x34C9EE5986258415",
    "code": "-- REGISTER_INT_TO_SAVE\nlocal p0 --[[ Any ]] =\n\tRegisterIntToSave(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterInt64ToSave",
    "hash": "0xA735353C77334EA0",
    "code": "-- _REGISTER_INT64_TO_SAVE\nlocal p0 --[[ Any ]] =\n\tRegisterInt64ToSave(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterSaveHouse",
    "hash": "0xC0714D0A7EEECA54",
    "code": "-- REGISTER_SAVE_HOUSE\nlocal retval --[[ Any ]], p4 --[[ Any ]] =\n\tRegisterSaveHouse(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterTextLabelToSave",
    "hash": "0xEDB1232C5BEAE62F",
    "code": "-- REGISTER_TEXT_LABEL_TO_SAVE\nlocal p0 --[[ Any ]] =\n\tRegisterTextLabelToSave(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RegisterTextLabelToSave_2",
    "hash": "0x6F7794F28C6B2535",
    "code": "-- _REGISTER_TEXT_LABEL_TO_SAVE_2\nlocal p0 --[[ Any ]] =\n\tRegisterTextLabelToSave_2(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?\nMISC::_6F7794F28C6B2535(&a_0._f1, \"tlPlateText\");\nMISC::_6F7794F28C6B2535(&a_0._f1C, \"tlPlateText_pending\");\nMISC::_6F7794F28C6B2535(&a_0._f10B, \"tlCarAppPlateText\");\n\"tl\" prefix sounds like \"Text Label\""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RemoveDispatchSpawnBlockingArea",
    "hash": "0x264AC28B01B353A5",
    "code": "-- REMOVE_DISPATCH_SPAWN_BLOCKING_AREA\nRemoveDispatchSpawnBlockingArea(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RemovePopMultiplierArea",
    "hash": "0xB129E447A2EDA4BF",
    "code": "-- REMOVE_POP_MULTIPLIER_AREA\nRemovePopMultiplierArea(\n\tid --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RemovePopMultiplierSphere",
    "hash": "0xE6869BECDD8F2403",
    "code": "-- REMOVE_POP_MULTIPLIER_SPHERE\nRemovePopMultiplierSphere(\n\tid --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RemoveStealthKill",
    "hash": "0xA6A12939F16D85BE",
    "code": "-- _REMOVE_STEALTH_KILL\nRemoveStealthKill(\n\thash --[[ Hash ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Appears to remove stealth kill action from memory"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ResetBenchmarkRecording",
    "hash": "0x437138B6A830166A",
    "code": "-- _RESET_BENCHMARK_RECORDING\nResetBenchmarkRecording()",
    "parameters": [],
    "returns": [],
    "description": "Begins with RESET_*. Next character in the name is either D or E."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ResetDispatchIdealSpawnDistance",
    "hash": "0x77A84429DD9F0A15",
    "code": "-- RESET_DISPATCH_IDEAL_SPAWN_DISTANCE\nResetDispatchIdealSpawnDistance()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ResetDispatchSpawnBlockingAreas",
    "hash": "0xAC7BFD5C1D83EA75",
    "code": "-- RESET_DISPATCH_SPAWN_BLOCKING_AREAS\nResetDispatchSpawnBlockingAreas()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ResetDispatchSpawnLocation",
    "hash": "0x5896F2BD5683A4E1",
    "code": "-- _RESET_DISPATCH_SPAWN_LOCATION\nResetDispatchSpawnLocation()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ResetDispatchTimeBetweenSpawnAttempts",
    "hash": "0xEB2DB0CAD13154B3",
    "code": "-- RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS\nResetDispatchTimeBetweenSpawnAttempts(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "RestartGame",
    "hash": "0xE574A662ACAEFBB1",
    "code": "-- RESTART_GAME\nRestartGame()",
    "parameters": [],
    "returns": [],
    "description": "In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows the Disconnecting from GTA Online warning screen message and quits the game. After quitting, the game process is started again (as the name implies)."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SaveBenchmarkRecording",
    "hash": "0x37DEB0AA183FB6D8",
    "code": "-- _SAVE_BENCHMARK_RECORDING\nSaveBenchmarkRecording()",
    "parameters": [],
    "returns": [],
    "description": "Saves the benchmark recording to %USERPROFILE%\\Documents\\Rockstar Games\\GTA V\\Benchmarks and submits some metrics."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ScriptRaceGetPlayerSplitTime",
    "hash": "0x8EF5573A1F801A5C",
    "code": "-- SCRIPT_RACE_GET_PLAYER_SPLIT_TIME\nlocal retval --[[ boolean ]], p1 --[[ integer ]], p2 --[[ integer ]] =\n\tScriptRaceGetPlayerSplitTime(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ScriptRaceInit",
    "hash": "0x0A60017F841A54F2",
    "code": "-- SCRIPT_RACE_INIT\nScriptRaceInit(\n\tnumCheckpoints --[[ integer ]], \n\tnumLaps --[[ integer ]], \n\tnumPlayers --[[ integer ]], \n\tlocalPlayer --[[ Player ]]\n)",
    "parameters": [
      "numCheckpoints: \n\nThe total number of checkpoints in the race",
      "numLaps: \n\nThe total number of laps in the race.",
      "numPlayers: \n\nThe total number of players participating in the race.",
      "localPlayer: \n\nLocal player in the race."
    ],
    "returns": [],
    "description": "Parameters:\n\nnumCheckpoints: \n\nThe total number of checkpoints in the race\n\nnumLaps: \n\nThe total number of laps in the race.\n\nnumPlayers: \n\nThe total number of players participating in the race.\n\nlocalPlayer: \n\nLocal player in the race.\n\nInitializes a script race in GTA:Online and sets up the helper split time system.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ScriptRacePlayerHitCheckpoint",
    "hash": "0x1BB299305C3E8C13",
    "code": "-- SCRIPT_RACE_PLAYER_HIT_CHECKPOINT\nScriptRacePlayerHitCheckpoint(\n\tped --[[ Ped ]], \n\tcheckpoint --[[ integer ]], \n\tlap --[[ integer ]], \n\ttime --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe index of the Ped who hit the checkpoint.",
      "checkpoint: \n\nThe checkpoint number that the player has passed.",
      "lap: \n\nThe current lap that the player is on.",
      "time: \n\nThe time it took for the player to reach this checkpoint from the start of the race or the last checkpoint."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe index of the Ped who hit the checkpoint.\n\ncheckpoint: \n\nThe checkpoint number that the player has passed.\n\nlap: \n\nThe current lap that the player is on.\n\ntime: \n\nThe time it took for the player to reach this checkpoint from the start of the race or the last checkpoint.\n\nRecords that a player has successfully passed a checkpoint during a scripted race in GTA:Online. This native should be used after initializing the race with SCRIPT_RACE_INIT.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ScriptRaceShutdown",
    "hash": "0x1FF6BF9A63E5757F",
    "code": "-- SCRIPT_RACE_SHUTDOWN\nScriptRaceShutdown()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetBeastModeActive",
    "hash": "0x438822C279B73B93",
    "code": "-- _SET_BEAST_MODE_ACTIVE\nSetBeastModeActive(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetBit",
    "hash": "0x933D6A9EEC1BACD0",
    "code": "-- SET_BIT\nlocal address --[[ integer ]] =\n\tSetBit(\n\t\toffset --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This sets bit [offset] of [address] to on.\nThe offsets used are different bits to be toggled on and off, typically there is only one address used in a script.\nExample:\nMISC::SET_BIT(&bitAddress, 1);\nTo check if this bit has been enabled:\nMISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards\nPlease note, this method may assign a value to [address] when used."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetBitsInRange",
    "hash": "0x8EF07E15701D61ED",
    "code": "-- SET_BITS_IN_RANGE\nlocal var --[[ integer ]] =\n\tSetBitsInRange(\n\t\trangeStart --[[ integer ]], \n\t\trangeEnd --[[ integer ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetCloudSettingsOverride",
    "hash": "0x02DEAAC8F8EA7FE7",
    "code": "-- SET_CLOUD_SETTINGS_OVERRIDE\nSetCloudSettingsOverride(\n\toverrideSettingsName --[[ string ]]\n)",
    "parameters": [
      "overrideSettingsName: \n\nThe name of the cloud settings to use. Use a empty string to clear the override and return to the default settings."
    ],
    "returns": [],
    "description": "Parameters:\n\noverrideSettingsName: \n\nThe name of the cloud settings to use. Use a empty string to clear the override and return to the default settings.\n\nOverrides the cloud settings, which are normally controlled by the weather, with the specified named version. This native allows for custom cloud formations and behaviors that deviate from the default settings associated with the game's current weather conditions.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetCloudsAlpha",
    "hash": "0xF36199225D6D8C86",
    "code": "-- SET_CLOUDS_ALPHA\nSetCloudsAlpha(\n\topacity --[[ number ]]\n)",
    "parameters": [
      "opacity: \n\nThe opacity value to set for clouds."
    ],
    "returns": [],
    "description": "Parameters:\n\nopacity: \n\nThe opacity value to set for clouds.\n\nAllows modification of the cloud opacity. It can also be used in other contexts, such as when the player is in a switch state IS_PLAYER_SWITCH_IN_PROGRESS."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetCreditsActive",
    "hash": "0xB938B7E6D3C0620C",
    "code": "-- SET_CREDITS_ACTIVE\nSetCreditsActive(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetDispatchIdealSpawnDistance",
    "hash": "0x6FE601A64180D423",
    "code": "-- SET_DISPATCH_IDEAL_SPAWN_DISTANCE\nSetDispatchIdealSpawnDistance(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetDispatchSpawnLocation",
    "hash": "0xD10F442036302D50",
    "code": "-- SET_DISPATCH_SPAWN_LOCATION\nSetDispatchSpawnLocation(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetDispatchTimeBetweenSpawnAttempts",
    "hash": "0x44F7CBC1BEB3327D",
    "code": "-- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS\nSetDispatchTimeBetweenSpawnAttempts(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetDispatchTimeBetweenSpawnAttemptsMultiplier",
    "hash": "0x48838ED9937A15D1",
    "code": "-- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER\nSetDispatchTimeBetweenSpawnAttemptsMultiplier(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetExplosiveAmmoThisFrame",
    "hash": "0xA66C71C98D5F2CFB",
    "code": "-- SET_EXPLOSIVE_AMMO_THIS_FRAME\nSetExplosiveAmmoThisFrame(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetExplosiveMeleeThisFrame",
    "hash": "0xFF1BED81BFDC0FE0",
    "code": "-- SET_EXPLOSIVE_MELEE_THIS_FRAME\nSetExplosiveMeleeThisFrame(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetFadeInAfterDeathArrest",
    "hash": "0xDA66D2796BA33F12",
    "code": "-- SET_FADE_IN_AFTER_DEATH_ARREST\nSetFadeInAfterDeathArrest(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets whether the game should fade in after the player dies or is arrested."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetFadeInAfterLoad",
    "hash": "0xF3D78F59DFE18D79",
    "code": "-- SET_FADE_IN_AFTER_LOAD\nSetFadeInAfterLoad(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetFadeOutAfterArrest",
    "hash": "0x1E0B4DC0D990A4E7",
    "code": "-- SET_FADE_OUT_AFTER_ARREST\nSetFadeOutAfterArrest(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets whether the game should fade out after the player is arrested."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetFadeOutAfterDeath",
    "hash": "0x4A18E01DF2C87B86",
    "code": "-- SET_FADE_OUT_AFTER_DEATH\nSetFadeOutAfterDeath(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets whether the game should fade out after the player dies."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetFakeWantedLevel",
    "hash": "0x1454F2448DE30163",
    "code": "-- SET_FAKE_WANTED_LEVEL\nSetFakeWantedLevel(\n\tfakeWantedLevel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to \"override\" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.\nMax is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetFireAmmoThisFrame",
    "hash": "0x11879CDD803D30F4",
    "code": "-- SET_FIRE_AMMO_THIS_FRAME\nSetFireAmmoThisFrame(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetForcePlayerToJump",
    "hash": "0xA1183BCFEE0F93D1",
    "code": "-- _SET_FORCE_PLAYER_TO_JUMP\nSetForcePlayerToJump(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetGamePaused",
    "hash": "0x577D1284D6873711",
    "code": "-- SET_GAME_PAUSED\nSetGamePaused(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetGravityLevel",
    "hash": "0x740E14FAD5842351",
    "code": "-- SET_GRAVITY_LEVEL\nSetGravityLevel(\n\tlevel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eGravityLevel\n{\n    GRAV_EARTH = 0, // earth gravity 9.8m/s2\n    GRAV_MOON = 1, // moon gravity 2.4m/s2\n    GRAV_LOW = 2, // very low gravity\n    GRAV_ZERO = 3 // zero gravity\n}"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetIncidentRequestedUnits",
    "hash": "0xB08B85D860E7BA3C",
    "code": "-- SET_INCIDENT_REQUESTED_UNITS\nSetIncidentRequestedUnits(\n\tincidentId --[[ integer ]], \n\tdispatchService --[[ integer ]], \n\tnumUnits --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetIncidentUnk",
    "hash": "0xD261BA3E7E998072",
    "code": "-- _SET_INCIDENT_UNK\nSetIncidentUnk(\n\tincidentId --[[ integer ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_INCIDENT_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetInstancePriorityHint",
    "hash": "0xC5F0A8EBD3F361CE",
    "code": "-- SET_INSTANCE_PRIORITY_HINT\nSetInstancePriorityHint(\n\tflag --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetInstancePriorityMode",
    "hash": "0x9BAE5AD2508DF078",
    "code": "-- SET_INSTANCE_PRIORITY_MODE\nSetInstancePriorityMode(\n\ttoggle --[[ integer ]]\n)",
    "parameters": [
      "toggle: \n\ntoggles the instance priority mode"
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\ntoggles the instance priority mode\n\nSets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetMinigameInProgress",
    "hash": "0x19E00D7322C6F85B",
    "code": "-- SET_MINIGAME_IN_PROGRESS\nSetMinigameInProgress(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetMissionFlag",
    "hash": "0xC4301E5121A0ED73",
    "code": "-- SET_MISSION_FLAG\nSetMissionFlag(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If true, the player can't save the game.   \nIf the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.  \n^ also, if the mission flag is already set, the function does nothing at all"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetOverrideWeather",
    "hash": "0xA43D5C6FE51ADBEF",
    "code": "-- SET_OVERRIDE_WEATHER\nSetOverrideWeather(\n\tweatherType --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetPlayerIsInAnimalForm",
    "hash": "0x4EBB7E87AA0DBED4",
    "code": "-- _SET_PLAYER_IS_IN_ANIMAL_FORM\nSetPlayerIsInAnimalForm(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If toggle is true, the ped's head is shown in the pause menu\nIf toggle is false, the ped's head is not shown in the pause menu"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetPlayerRockstarEditorDisabled",
    "hash": "0x9D8D44ADBBA61EF2",
    "code": "-- _SET_PLAYER_ROCKSTAR_EDITOR_DISABLED\nSetPlayerRockstarEditorDisabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PLAYER_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetRainLevel",
    "hash": "0x643E26EA6E024D92",
    "code": "-- _SET_RAIN_LEVEL\nSetRainLevel(\n\tlevel --[[ number ]]\n)",
    "parameters": [
      "level: \n\nStrength of rain effects"
    ],
    "returns": [],
    "description": "Parameters:\n\nlevel: \n\nStrength of rain effects\n\nControls rain, rain sounds and the creation of puddles.\n\nWith an level higher than 0.5f, only the creation of puddles gets faster, rain and rain sound won't increase after that.\n\nWith an level of 0.0f rain and rain sounds are disabled and there won't be any new puddles.\n\nTo use the rain level of the current weather, call this native with -1f as level."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetRandomEventFlag",
    "hash": "0x971927086CFD2158",
    "code": "-- SET_RANDOM_EVENT_FLAG\nSetRandomEventFlag(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.  \nDoes nothing if the mission flag is set."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetRandomSeed",
    "hash": "0x444D98F98C11F3EC",
    "code": "-- SET_RANDOM_SEED\nSetRandomSeed(\n\tseed --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetRandomWeatherType",
    "hash": "0x8B05F884CF7E8020",
    "code": "-- SET_RANDOM_WEATHER_TYPE\nSetRandomWeatherType()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetRestartCustomPosition",
    "hash": "0x706B5EDCAA7FA663",
    "code": "-- _SET_RESTART_CUSTOM_POSITION\nSetRestartCustomPosition(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetRiotModeEnabled",
    "hash": "0x2587A48BC88DFADF",
    "code": "-- SET_RIOT_MODE_ENABLED\nSetRiotModeEnabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nTurn on or off riot mode. Set to true to enable riot mode."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nTurn on or off riot mode. Set to true to enable riot mode.\n\nActivates riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetSaveHouse",
    "hash": "0x4F548CABEAE553BC",
    "code": "-- SET_SAVE_HOUSE\nSetSaveHouse(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetSaveMenuActive",
    "hash": "0xC9BF75D28165FF77",
    "code": "-- SET_SAVE_MENU_ACTIVE\nSetSaveMenuActive(\n\tignoreVehicle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetSnowLevel",
    "hash": "0x7F06937B0CDCBC1A",
    "code": "-- _SET_SNOW_LEVEL\nSetSnowLevel(\n\tlevel --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetStuntJumpsCanTrigger",
    "hash": "0xD79185689F8FD5DF",
    "code": "-- SET_STUNT_JUMPS_CAN_TRIGGER\nSetStuntJumpsCanTrigger(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetSuperJumpThisFrame",
    "hash": "0x57FFF03E423A4C0B",
    "code": "-- SET_SUPER_JUMP_THIS_FRAME\nSetSuperJumpThisFrame(\n\tplayer --[[ Player ]]\n)",
    "parameters": [
      "player: \n\nThe player we are setting this for."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player we are setting this for.\n\nAllows the player to perform super jumps. This function must be called every frame for it to work. It basically OR's a flag for a single frame, allowing the ped to perform a super jump only when the flag is set."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetThisScriptCanBePaused",
    "hash": "0xAA391C728106F7AF",
    "code": "-- SET_THIS_SCRIPT_CAN_BE_PAUSED\nSetThisScriptCanBePaused(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetThisScriptCanRemoveBlipsCreatedByAnyScript",
    "hash": "0xB98236CAAECEF897",
    "code": "-- SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT\nSetThisScriptCanRemoveBlipsCreatedByAnyScript(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nBool indicating if the script that called this native can remove blips created by other scripts."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nBool indicating if the script that called this native can remove blips created by other scripts.\n\nNormally, blips can only be removed by the script or resource that created them. However, this native function allows a script to bypass this logic and remove blips from any script."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetTimeScale",
    "hash": "0x1D408577D440E81E",
    "code": "-- SET_TIME_SCALE\nSetTimeScale(\n\ttimeScale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Maximum value is 1.  \nAt a value of 0 the game will still run at a minimum time scale.  \nSlow Motion 1: 0.6  \nSlow Motion 2: 0.4  \nSlow Motion 3: 0.2"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWeatherTypeNow",
    "hash": "0x29B487C359E19889",
    "code": "-- SET_WEATHER_TYPE_NOW\nSetWeatherTypeNow(\n\tweatherType --[[ string ]]\n)",
    "parameters": [
      "weatherType: \n\nThe weather type to set. This should be one of the predefined weather type strings."
    ],
    "returns": [],
    "description": "Parameters:\n\nweatherType: \n\nThe weather type to set. This should be one of the predefined weather type strings.\n\nImmediately changes the game's weather to the specified type, which will then persist for one cycle before the game resumes its natural weather progression.\n\nNote: This native is not supported in networked sessions. Please refer to SET_OVERRIDE_WEATHER or SET_WEATHER_TYPE_NOW_PERSIST if you want to override weather in networked sessions.\n\nNativeDB Introduced: v323\n\nWeather Types:\n\nCLEAR\nEXTRASUNNY\nCLOUDS\nOVERCAST\nRAIN\nCLEARING\nTHUNDER\nSMOG\nFOGGY\nXMAS\nSNOW\nSNOWLIGHT\nBLIZZARD\nHALLOWEEN\nNEUTRAL\nRAIN_HALLOWEEN\nSNOW_HALLOWEEN"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWeatherTypeNowPersist",
    "hash": "0xED712CA327900C8A",
    "code": "-- SET_WEATHER_TYPE_NOW_PERSIST\nSetWeatherTypeNowPersist(\n\tweatherType --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWeatherTypeOvertimePersist",
    "hash": "0xFB5045B7C42B75BF",
    "code": "-- SET_WEATHER_TYPE_OVERTIME_PERSIST\nSetWeatherTypeOvertimePersist(\n\tweatherType --[[ string ]], \n\ttime --[[ number ]]\n)",
    "parameters": [
      "weatherType: \n\nThe weather type to override to.",
      "time: \n\nA float on how long to take to transition (in seconds)."
    ],
    "returns": [],
    "description": "Parameters:\n\nweatherType: \n\nThe weather type to override to.\n\ntime: \n\nA float on how long to take to transition (in seconds).\n\nRefer to SET_WEATHER_TYPE_NOW for weather types."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWeatherTypePersist",
    "hash": "0x704983DF373B198F",
    "code": "-- SET_WEATHER_TYPE_PERSIST\nSetWeatherTypePersist(\n\tweatherType --[[ string ]]\n)",
    "parameters": [
      "weatherType: \n\nThe weather type to be set as persistent. Refer to SET_WEATHER_TYPE_NOW for a list of weather type strings."
    ],
    "returns": [],
    "description": "Parameters:\n\nweatherType: \n\nThe weather type to be set as persistent. Refer to SET_WEATHER_TYPE_NOW for a list of weather type strings.\n\nSets the current weather type to persist indefinitely until changed.\n\nNote: This native is not supported in networked sessions. Please refer to SET_OVERRIDE_WEATHER or SET_WEATHER_TYPE_NOW_PERSIST if you want to override weather in networked sessions.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWeatherTypeTransition",
    "hash": "0x578C752848ECFA0C",
    "code": "-- _SET_WEATHER_TYPE_TRANSITION\nSetWeatherTypeTransition(\n\tweatherType1 --[[ Hash ]], \n\tweatherType2 --[[ Hash ]], \n\tpercentWeather2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Refer to SET_WEATHER_TYPE_NOW for weather types.\n\nMixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:  \nexecute \"NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(\"\"RAIN\"\"), Game.GetHashKey(\"\"SMOG\"\"), 0.50f);"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWind",
    "hash": "0xAC3A74E8384A9919",
    "code": "-- SET_WIND\nSetWind(\n\tspeed --[[ number ]]\n)",
    "parameters": [
      "speed: \n\nThe wind speed (clamped to between 0.0 and 1.0)"
    ],
    "returns": [],
    "description": "Parameters:\n\nspeed: \n\nThe wind speed (clamped to between 0.0 and 1.0)\n\nSets the the raw wind speed value. The wind speed will stay persistent until it is reset (see examples)."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWindDirection",
    "hash": "0xEB0F4468467B4528",
    "code": "-- SET_WIND_DIRECTION\nSetWindDirection(\n\tdirection --[[ number ]]\n)",
    "parameters": [
      "direction: \n\nthe wind direction in radians"
    ],
    "returns": [],
    "description": "Parameters:\n\ndirection: \n\nthe wind direction in radians\n\nSets the wind direction. The wind direction will stay persistent until it is reset (see examples)."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SetWindSpeed",
    "hash": "0xEE09ECEDBABE47FC",
    "code": "-- SET_WIND_SPEED\nSetWindSpeed(\n\tspeed --[[ number ]]\n)",
    "parameters": [
      "speed: \n\nwind speed in meters per second"
    ],
    "returns": [],
    "description": "Parameters:\n\nspeed: \n\nwind speed in meters per second\n\nUsing this native will clamp the wind speed value to a range of 0.0 - 12.0. The wind speed will stay persistent until it is reset (see examples)."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ShootSingleBulletBetweenCoords",
    "hash": "0x867654CBC7606F2C",
    "code": "-- SHOOT_SINGLE_BULLET_BETWEEN_COORDS\nShootSingleBulletBetweenCoords(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tdamage --[[ integer ]], \n\tpureAccuracy --[[ boolean ]], \n\tweaponHash --[[ Hash ]], \n\townerPed --[[ Ped ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [
      "x1: \n\nThe X coordinate to start the shot at.",
      "y1: \n\nThe Y coordinate to start the shot at.",
      "z1: \n\nThe Z coordinate to start the shot at.",
      "x2: \n\nThe X coordinate the shot should end up at.",
      "y2: \n\nThe Y coordinate the shot should end up at.",
      "z2: \n\nThe Z coordinate the shot should end up at.",
      "damage: \n\nThe amount of damage the bullet carries.",
      "pureAccuracy: \n\nWhether the bullet should have pinpoint accuracy.",
      "weaponHash: \n\nHash of the weapon the bullet is used as ammunition for.",
      "ownerPed: \n\nOwner of the bullet, e.g. if the bullet kills someone the kill feed shows 'X was shot by ownerPed.'",
      "isAudible: \n\nWhether the bullet should be audible. Optional, defaults to true",
      "isInvisible: \n\nWhether the bullet should be invisible. Optional, defaults to false",
      "speed: \n\nSpeed the bullet should fly at. Optional"
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nThe X coordinate to start the shot at.\n\ny1: \n\nThe Y coordinate to start the shot at.\n\nz1: \n\nThe Z coordinate to start the shot at.\n\nx2: \n\nThe X coordinate the shot should end up at.\n\ny2: \n\nThe Y coordinate the shot should end up at.\n\nz2: \n\nThe Z coordinate the shot should end up at.\n\ndamage: \n\nThe amount of damage the bullet carries.\n\npureAccuracy: \n\nWhether the bullet should have pinpoint accuracy.\n\nweaponHash: \n\nHash of the weapon the bullet is used as ammunition for.\n\nownerPed: \n\nOwner of the bullet, e.g. if the bullet kills someone the kill feed shows 'X was shot by ownerPed.'\n\nisAudible: \n\nWhether the bullet should be audible. Optional, defaults to true\n\nisInvisible: \n\nWhether the bullet should be invisible. Optional, defaults to false\n\nspeed: \n\nSpeed the bullet should fly at. Optional\n\nShoots a bullet from the first vector to the second vector. The weapon used as weaponHash should already be loaded via REQUEST_WEAPON_ASSET, otherwise the bullet may fail to materialise."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ShootSingleBulletBetweenCoordsIgnoreEntity",
    "hash": "0xE3A7742E0B7A2F8B",
    "code": "-- SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY\nShootSingleBulletBetweenCoordsIgnoreEntity(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tdamage --[[ integer ]], \n\tp7 --[[ boolean ]], \n\tweaponHash --[[ Hash ]], \n\townerPed --[[ Ped ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tspeed --[[ number ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "entity - entity to ignore  \nNativeDB Added Parameter 15: Any p14"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ShootSingleBulletBetweenCoordsIgnoreEntityNew",
    "hash": "0xBFE5756E7407064A",
    "code": "-- SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW\nShootSingleBulletBetweenCoordsIgnoreEntityNew(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tdamage --[[ integer ]], \n\tp7 --[[ boolean ]], \n\tweaponHash --[[ Hash ]], \n\townerPed --[[ Ped ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tspeed --[[ number ]], \n\tentity --[[ Entity ]], \n\tp14 --[[ boolean ]], \n\tp15 --[[ boolean ]], \n\tp16 --[[ boolean ]], \n\tp17 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 19: Any p18\nNativeDB Added Parameter 20: Any p19\nNativeDB Added Parameter 21: Any p20"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ShouldUseMetricMeasurements",
    "hash": "0xD3D15555431AB793",
    "code": "-- SHOULD_USE_METRIC_MEASUREMENTS\nlocal retval --[[ boolean ]] =\n\tShouldUseMetricMeasurements()",
    "parameters": [],
    "returns": [
      "Returns true if the game is using the metric measurement system, false if imperial is used."
    ],
    "description": "Returns:\n\nReturns true if the game is using the metric measurement system, false if imperial is used.\n\nReturns true if the game is using the metric measurement system (profile setting 227), false if imperial is used."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SlerpNearQuaternion",
    "hash": "0xF2F6A2FA49278625",
    "code": "-- SLERP_NEAR_QUATERNION\nlocal outX --[[ number ]], outY --[[ number ]], outZ --[[ number ]], outW --[[ number ]] =\n\tSlerpNearQuaternion(\n\t\tt --[[ number ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tw --[[ number ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tw1 --[[ number ]]\n\t)",
    "parameters": [
      "t: \n\nacceleration differenzial (am_rollercoaster.c func_134)",
      "x: \n\nrotation parameter (maybe X axys)",
      "y: \n\nrotation parameter (maybe X axys)",
      "z: \n\nrotation parameter (maybe X axys)",
      "w: \n\nrotation parameter (maybe X axys)",
      "x1: \n\nrotation parameter (maybe Y axys)",
      "y1: \n\nrotation parameter (maybe Y axys)",
      "z1: \n\nrotation parameter (maybe Y axys)",
      "w1: \n\nrotation parameter (maybe Y axys)",
      "outX: \n\noutput value calculated (X)",
      "outY: \n\noutput value calculated (Y)",
      "outZ: \n\noutput value calculated (Z)",
      "outW: \n\noutput value calculated (W)"
    ],
    "returns": [],
    "description": "Parameters:\n\nt: \n\nacceleration differenzial (am_rollercoaster.c func_134)\n\nx: \n\nrotation parameter (maybe X axys)\n\ny: \n\nrotation parameter (maybe X axys)\n\nz: \n\nrotation parameter (maybe X axys)\n\nw: \n\nrotation parameter (maybe X axys)\n\nx1: \n\nrotation parameter (maybe Y axys)\n\ny1: \n\nrotation parameter (maybe Y axys)\n\nz1: \n\nrotation parameter (maybe Y axys)\n\nw1: \n\nrotation parameter (maybe Y axys)\n\noutX: \n\noutput value calculated (X)\n\noutY: \n\noutput value calculated (Y)\n\noutZ: \n\noutput value calculated (Z)\n\noutW: \n\noutput value calculated (W)\n\nThis native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StartBenchmarkRecording",
    "hash": "0x92790862E36C2ADA",
    "code": "-- _START_BENCHMARK_RECORDING\nStartBenchmarkRecording()",
    "parameters": [],
    "returns": [],
    "description": "Begins with START_*. Next character in the name is either D or E."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StartSaveArrayWithSize",
    "hash": "0x60FE567DF1B1AF9D",
    "code": "-- START_SAVE_ARRAY_WITH_SIZE\nlocal p0 --[[ Any ]] =\n\tStartSaveArrayWithSize(\n\t\tsize --[[ integer ]], \n\t\tarrayName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StartSaveData",
    "hash": "0xA9575F812C6A7997",
    "code": "-- START_SAVE_DATA\nlocal p0 --[[ Any ]] =\n\tStartSaveData(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StartSaveStructWithSize",
    "hash": "0xBF737600CDDBEADD",
    "code": "-- START_SAVE_STRUCT_WITH_SIZE\nlocal p0 --[[ Any ]] =\n\tStartSaveStructWithSize(\n\t\tsize --[[ integer ]], \n\t\tstructName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StopBenchmarkRecording",
    "hash": "0xC7DB36C24634F52B",
    "code": "-- _STOP_BENCHMARK_RECORDING\nStopBenchmarkRecording()",
    "parameters": [],
    "returns": [],
    "description": "Begins with STOP_*. Next character in the name is either D or E."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StopSaveArray",
    "hash": "0x04456F95153C6BE4",
    "code": "-- STOP_SAVE_ARRAY\nStopSaveArray()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StopSaveData",
    "hash": "0x74E20C9145FB66FD",
    "code": "-- STOP_SAVE_DATA\nStopSaveData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StopSaveStruct",
    "hash": "0xEB1774DF12BB9F12",
    "code": "-- STOP_SAVE_STRUCT\nStopSaveStruct()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "StringToInt",
    "hash": "0x5A5F40FE637EB584",
    "code": "-- STRING_TO_INT\nlocal retval --[[ boolean ]], outInteger --[[ integer ]] =\n\tStringToInt(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.  \nIf all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "SupressRandomEventThisFrame",
    "hash": "0x1EAE0A6E978894A2",
    "code": "-- SUPRESS_RANDOM_EVENT_THIS_FRAME\nSupressRandomEventThisFrame(\n\teventType --[[ integer ]], \n\tenable --[[ boolean ]]\n)",
    "parameters": [
      "eventType: \n\nThe type of the event to be suppressed or enabled. Use the eEventType enum for specific event types.",
      "enable: \n\nSet to false to suppress the event for this frame; set to true to enable it."
    ],
    "returns": [],
    "description": "Parameters:\n\neventType: \n\nThe type of the event to be suppressed or enabled. Use the eEventType enum for specific event types.\n\nenable: \n\nSet to false to suppress the event for this frame; set to true to enable it.\n\nSuppresses or enables a specific type of random event for the current frame.\n\nenum eEventType {\n    RC_PED_STEAL_VEHICLE = 0,\n    RC_PED_JAY_WALK_LIGHT = 1,\n    RC_COP_PURSUE = 2,\n    RC_COP_PURSUE_VEHICLE_FLEE_SPAWNED = 3,\n    RC_COP_VEHICLE_DRIVING_FAST = 4,\n    RC_COP_VEHICLE_DRIVING_SLOW = 5,\n    RC_DRIVER_RECKLESS = 6,\n    RC_DRIVER_PRO = 7,\n    RC_PED_PURSUE_WHEN_HIT_BY_CAR = 8\n}"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "Tan",
    "hash": "0x632106CC96E82E91",
    "code": "-- TAN\nlocal retval --[[ number ]] =\n\tTan(\n\t\tp0 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "TerminateAllScriptsWithThisName",
    "hash": "0x9DC711BC69C548DF",
    "code": "-- TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME\nTerminateAllScriptsWithThisName(\n\tscriptName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "For a full list, see here."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "ToggleShowOptionalStuntJumpCamera",
    "hash": "0xFB80AB299D2EE1BD",
    "code": "-- TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA\nToggleShowOptionalStuntJumpCamera(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nSet to true to enable the optional stunt jump camera angles, or false to disable them and use the default camera view."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nSet to true to enable the optional stunt jump camera angles, or false to disable them and use the default camera view.\n\nEnable/disable optional stunt camera.\n\nNativeDB Introduced: v757"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "UiStartedEndUserBenchmark",
    "hash": "0xEA2F2061875EED90",
    "code": "-- UI_STARTED_END_USER_BENCHMARK\nlocal retval --[[ boolean ]] =\n\tUiStartedEndUserBenchmark()",
    "parameters": [],
    "returns": [
      "Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE, false otherwise."
    ],
    "description": "Returns:\n\nReturns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE, false otherwise.\n\nReturns whether the In-Game Pause Menu Launched the Benchmark Tests."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "UnloadCloudHat",
    "hash": "0xA74802FB8D0B7814",
    "code": "-- UNLOAD_CLOUD_HAT\nUnloadCloudHat(\n\tname --[[ string ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Called 4 times in the b617d scripts:\nMISC::_A74802FB8D0B7814(\"CONTRAILS\", 0);"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "UpdateOnscreenKeyboard",
    "hash": "0x0CF2B696BBF945AE",
    "code": "-- UPDATE_ONSCREEN_KEYBOARD\nlocal retval --[[ integer ]] =\n\tUpdateOnscreenKeyboard()",
    "parameters": [],
    "returns": [
      "Returns a value from the list above."
    ],
    "description": "Returns:\n\nReturns a value from the list above.\n\nReturns the current state of the text input box.\n\nenum eOSKStatus\n{\n  OSK_INVALID = -1,\n  OSK_PENDING = 0,\n  OSK_SUCCESS = 1,\n  OSK_CANCELLED = 2,\n  OSK_FAILED = 3\n};"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "UsingMissionCreator",
    "hash": "0xF14878FC50BEC6EE",
    "code": "-- USING_MISSION_CREATOR\nUsingMissionCreator(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideFadeIn",
    "hash": "0xA8434F1DFF41D6E7",
    "code": "-- WATER_OVERRIDE_FADE_IN\nWaterOverrideFadeIn(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideFadeOut",
    "hash": "0xC3C221ADDDE31A11",
    "code": "-- WATER_OVERRIDE_FADE_OUT\nWaterOverrideFadeOut(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetOceannoiseminamplitude",
    "hash": "0x31727907B2C43C55",
    "code": "-- WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE\nWaterOverrideSetOceannoiseminamplitude(\n\tminAmplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetOceanwaveamplitude",
    "hash": "0x405591EC8FD9096D",
    "code": "-- WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE\nWaterOverrideSetOceanwaveamplitude(\n\tamplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetOceanwavemaxamplitude",
    "hash": "0xB3E6360DDE733E82",
    "code": "-- WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE\nWaterOverrideSetOceanwavemaxamplitude(\n\tmaxAmplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetOceanwaveminamplitude",
    "hash": "0xF751B16FB32ABC1D",
    "code": "-- WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE\nWaterOverrideSetOceanwaveminamplitude(\n\tminAmplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetRipplebumpiness",
    "hash": "0x7C9C0B1EEB1F9072",
    "code": "-- WATER_OVERRIDE_SET_RIPPLEBUMPINESS\nWaterOverrideSetRipplebumpiness(\n\tbumpiness --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetRippledisturb",
    "hash": "0xB9854DFDE0D833D6",
    "code": "-- WATER_OVERRIDE_SET_RIPPLEDISTURB\nWaterOverrideSetRippledisturb(\n\tdisturb --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetRipplemaxbumpiness",
    "hash": "0x9F5E6BB6B34540DA",
    "code": "-- WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS\nWaterOverrideSetRipplemaxbumpiness(\n\tmaxBumpiness --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetRippleminbumpiness",
    "hash": "0x6216B116083A7CB4",
    "code": "-- WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS\nWaterOverrideSetRippleminbumpiness(\n\tminBumpiness --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetShorewaveamplitude",
    "hash": "0xB8F87EAD7533B176",
    "code": "-- WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE\nWaterOverrideSetShorewaveamplitude(\n\tamplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetShorewavemaxamplitude",
    "hash": "0xA7A1127490312C36",
    "code": "-- WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE\nWaterOverrideSetShorewavemaxamplitude(\n\tmaxAmplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetShorewaveminamplitude",
    "hash": "0xC3EAD29AB273ECE8",
    "code": "-- WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE\nWaterOverrideSetShorewaveminamplitude(\n\tminAmplitude --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "WaterOverrideSetStrength",
    "hash": "0xC54A08C85AE4D410",
    "code": "-- WATER_OVERRIDE_SET_STRENGTH\nWaterOverrideSetStrength(\n\tstrength --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This seems to edit the water wave, intensity around your current location.  \n0.0f = Normal  \n1.0f = So Calm and Smooth, a boat will stay still.  \n3.0f = Really Intense."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x06462a961e94b67c",
    "hash": "0x06462A961E94B67C",
    "code": "-- 0x06462A961E94B67C\nN_0x06462a961e94b67c()",
    "parameters": [],
    "returns": [],
    "description": "CLEAR_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x1178e104409fe58c",
    "hash": "0x1178E104409FE58C",
    "code": "-- 0x1178E104409FE58C\nN_0x1178e104409fe58c(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x19bfed045c647c49",
    "hash": "0x19BFED045C647C49",
    "code": "-- 0x19BFED045C647C49\nlocal retval --[[ boolean ]] =\n\tN_0x19bfed045c647c49(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_TENNIS_*; references 0xFBFEC0E9 = interruptswing"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x2107a3773771186d",
    "hash": "0x2107A3773771186D",
    "code": "-- 0x2107A3773771186D\nlocal retval --[[ boolean ]] =\n\tN_0x2107a3773771186d()",
    "parameters": [],
    "returns": [],
    "description": "HAS_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x21c235bc64831e5a",
    "hash": "0x21C235BC64831E5A",
    "code": "-- 0x21C235BC64831E5A\nlocal retval --[[ vector3 ]] =\n\tN_0x21c235bc64831e5a(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ number ]], \n\t\tp7 --[[ number ]], \n\t\tp8 --[[ number ]], \n\t\tp9 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_C*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x23227df0b2115469",
    "hash": "0x23227DF0B2115469",
    "code": "-- 0x23227DF0B2115469\nN_0x23227df0b2115469()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x31125fd509d9043f",
    "hash": "0x31125FD509D9043F",
    "code": "-- 0x31125FD509D9043F\nlocal p0 --[[ Any ]] =\n\tN_0x31125fd509d9043f()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x39455bf4f4f55186",
    "hash": "0x39455BF4F4F55186",
    "code": "-- 0x39455BF4F4F55186\nlocal retval --[[ Any ]] =\n\tN_0x39455bf4f4f55186(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]], \n\t\tp7 --[[ Any ]], \n\t\tp8 --[[ Any ]], \n\t\tp9 --[[ Any ]], \n\t\tp10 --[[ Any ]], \n\t\tp11 --[[ Any ]], \n\t\tp12 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x397baa01068baa96",
    "hash": "0x397BAA01068BAA96",
    "code": "-- 0x397BAA01068BAA96\nlocal retval --[[ integer ]] =\n\tN_0x397baa01068baa96()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x48f069265a0e4bec",
    "hash": "0x48F069265A0E4BEC",
    "code": "-- 0x48F069265A0E4BEC\nlocal p0 --[[ Any ]] =\n\tN_0x48f069265a0e4bec(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only found 3 times in decompiled scripts. Not a whole lot to go off of.\nMISC::_48F069265A0E4BEC(a_0, \"Movie_Name_For_This_Player\");\nMISC::_48F069265A0E4BEC(&a_0._fB, \"Ringtone_For_This_Player\");\nMISC::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is \"MPATMLOGSCRS0\" thru \"MPATMLOGSCRS15\""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x54f157e0336a3822",
    "hash": "0x54F157E0336A3822",
    "code": "-- 0x54F157E0336A3822\nN_0x54f157e0336a3822(\n\tped --[[ Ped ]], \n\tp1 --[[ string ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the scripts:\nMISC::_54F157E0336A3822(sub_aa49(a_0), \"ForcedStopDirection\", v_E);\nRelated to tennis mode.\nSET_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x5b1f2e327b6b6fe1",
    "hash": "0x5B1F2E327B6B6FE1",
    "code": "-- 0x5B1F2E327B6B6FE1\nlocal retval --[[ Any ]] =\n\tN_0x5b1f2e327b6b6fe1()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x65d2ebb47e1cec21",
    "hash": "0x65D2EBB47E1CEC21",
    "code": "-- 0x65D2EBB47E1CEC21\nN_0x65d2ebb47e1cec21(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets GtaThread+0x14A\n\nSET_S*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x693478acbd7f18e7",
    "hash": "0x693478ACBD7F18E7",
    "code": "-- 0x693478ACBD7F18E7\nN_0x693478acbd7f18e7()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x6f2135b6129620c1",
    "hash": "0x6F2135B6129620C1",
    "code": "-- 0x6F2135B6129620C1\nN_0x6f2135b6129620c1(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets bit 3 in GtaThread+0x150\n\nSET_T*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x6fddf453c0c756ec",
    "hash": "0x6FDDF453C0C756EC",
    "code": "-- 0x6FDDF453C0C756EC\nlocal retval --[[ boolean ]] =\n\tN_0x6fddf453c0c756ec()",
    "parameters": [],
    "returns": [],
    "description": "HAS_*\nProbably something like \"has game been started for the first time\"."
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x703cc7f60cbb2b57",
    "hash": "0x703CC7F60CBB2B57",
    "code": "-- 0x703CC7F60CBB2B57\nN_0x703cc7f60cbb2b57(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x7ec6f9a478a6a512",
    "hash": "0x7EC6F9A478A6A512",
    "code": "-- 0x7EC6F9A478A6A512\nN_0x7ec6f9a478a6a512()",
    "parameters": [],
    "returns": [],
    "description": "Possibly used to clear scenario points.\n\nCLEAR_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x7f8f6405f4777af6",
    "hash": "0x7F8F6405F4777AF6",
    "code": "-- 0x7F8F6405F4777AF6\nlocal retval --[[ number ]] =\n\tN_0x7f8f6405f4777af6(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ number ]], \n\t\tp7 --[[ number ]], \n\t\tp8 --[[ number ]], \n\t\tp9 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x8269816f6cfd40f8",
    "hash": "0x8269816F6CFD40F8",
    "code": "-- 0x8269816F6CFD40F8\nlocal p0 --[[ Any ]] =\n\tN_0x8269816f6cfd40f8(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only found 2 times in decompiled scripts. Not a whole lot to go off of.\nMISC::_8269816F6CFD40F8(&a_0._f1F5A._f6[0/*8*/], \"TEMPSTAT_LABEL\"); // gets saved in a struct called \"g_SaveData_STRING_ScriptSaves\"\nMISC::_8269816F6CFD40F8(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is \"Name0\" thru \"Name9\", gets saved in a struct called \"OUTFIT_Name\""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x8951eb9c6906d3c8",
    "hash": "0x8951EB9C6906D3C8",
    "code": "-- 0x8951EB9C6906D3C8\nN_0x8951eb9c6906d3c8()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x8d74e26f54b4e5c3",
    "hash": "0x8D74E26F54B4E5C3",
    "code": "-- 0x8D74E26F54B4E5C3\nN_0x8d74e26f54b4e5c3(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "I*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x916ca67d26fd1e37",
    "hash": "0x916CA67D26FD1E37",
    "code": "-- 0x916CA67D26FD1E37\nN_0x916ca67d26fd1e37(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing (it's a nullsub). Seems to be PS4 specific.\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0x97e7e2c04245115b",
    "hash": "0x97E7E2C04245115B",
    "code": "-- 0x97E7E2C04245115B\nN_0x97e7e2c04245115b(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xa0ad167e4b39d9a2",
    "hash": "0xA0AD167E4B39D9A2",
    "code": "-- 0xA0AD167E4B39D9A2\nlocal retval --[[ Any ]] =\n\tN_0xa0ad167e4b39d9a2(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]], \n\t\tp7 --[[ Any ]], \n\t\tp8 --[[ Any ]], \n\t\tp9 --[[ Any ]], \n\t\tp10 --[[ Any ]], \n\t\tp11 --[[ Any ]], \n\t\tp12 --[[ Any ]], \n\t\tp13 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xa4a0065e39c9f25c",
    "hash": "0xA4A0065E39C9F25C",
    "code": "-- 0xA4A0065E39C9F25C\nlocal retval --[[ boolean ]], p0 --[[ vector3 ]], p1 --[[ number ]], fadeInAfterLoad --[[ boolean ]], p3 --[[ boolean ]] =\n\tN_0xa4a0065e39c9f25c()",
    "parameters": [],
    "returns": [],
    "description": "GET_SAVE_*\n\nGET_SAVE_UNLESS_CUSTOM_DOT ?"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xb51b9ab9ef81868c",
    "hash": "0xB51B9AB9EF81868C",
    "code": "-- 0xB51B9AB9EF81868C\nN_0xb51b9ab9ef81868c(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xba4b8d83bdc75551",
    "hash": "0xBA4B8D83BDC75551",
    "code": "-- 0xBA4B8D83BDC75551\nN_0xba4b8d83bdc75551(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xd10282b6e3751ba0",
    "hash": "0xD10282B6E3751BA0",
    "code": "-- 0xD10282B6E3751BA0\nlocal retval --[[ Any ]] =\n\tN_0xd10282b6e3751ba0()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xd642319c54aadeb6",
    "hash": "0xD642319C54AADEB6",
    "code": "-- 0xD642319C54AADEB6\nlocal retval --[[ Any ]] =\n\tN_0xd642319c54aadeb6()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xd9f692d349249528",
    "hash": "0xD9F692D349249528",
    "code": "-- 0xD9F692D349249528\nN_0xd9f692d349249528()",
    "parameters": [],
    "returns": [],
    "description": "RESET_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xe3d969d2785ffb5e",
    "hash": "0xE3D969D2785FFB5E",
    "code": "-- 0xE3D969D2785FFB5E\nN_0xe3d969d2785ffb5e()",
    "parameters": [],
    "returns": [],
    "description": "sets something to 1"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xe532ec1a63231b4f",
    "hash": "0xE532EC1A63231B4F",
    "code": "-- 0xE532EC1A63231B4F\nN_0xe532ec1a63231b4f(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_*"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xe95b0c7d5ba3b96b",
    "hash": "0xE95B0C7D5BA3B96B",
    "code": "-- 0xE95B0C7D5BA3B96B\nlocal retval --[[ boolean ]] =\n\tN_0xe95b0c7d5ba3b96b(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Related to tennis mode. Checks for 0x0FCED5ADF = swung"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xeb078ca2b5e82add",
    "hash": "0xEB078CA2B5E82ADD",
    "code": "-- 0xEB078CA2B5E82ADD\nN_0xeb078ca2b5e82add(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xeb2104e905c6f2e9",
    "hash": "0xEB2104E905C6F2E9",
    "code": "-- 0xEB2104E905C6F2E9\nlocal retval --[[ Any ]] =\n\tN_0xeb2104e905c6f2e9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xebd3205a207939ed",
    "hash": "0xEBD3205A207939ED",
    "code": "-- 0xEBD3205A207939ED\nlocal p0 --[[ Any ]] =\n\tN_0xebd3205a207939ed()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xfa3ffb0eebc288a3",
    "hash": "0xFA3FFB0EEBC288A3",
    "code": "-- 0xFA3FFB0EEBC288A3\nN_0xfa3ffb0eebc288a3(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xfaa457ef263e8763",
    "hash": "0xFAA457EF263E8763",
    "code": "-- 0xFAA457EF263E8763\nlocal p0 --[[ Any ]] =\n\tN_0xfaa457ef263e8763(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Another unknown label type...\nMISC::_FAA457EF263E8763(a_0, \"Thumb_label\");\nMISC::_FAA457EF263E8763(&a_0._f10, \"Photo_label\");\nMISC::_FAA457EF263E8763(a_0, \"GXTlabel\");\nMISC::_FAA457EF263E8763(&a_0._f21, \"StringComp\");\nMISC::_FAA457EF263E8763(&a_0._f43, \"SecondStringComp\");\nMISC::_FAA457EF263E8763(&a_0._f53, \"ThirdStringComp\");\nMISC::_FAA457EF263E8763(&a_0._f32, \"SenderStringComp\");\nMISC::_FAA457EF263E8763(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is \"LastJobTL_0_1\" thru \"LastJobTL_2_1\", gets saved in a struct called \"LAST_JobGamer_TL\"\nMISC::_FAA457EF263E8763(&a_0._f4B, \"PAID_PLAYER\");\nMISC::_FAA457EF263E8763(&a_0._f5B, \"RADIO_STATION\");"
  },
  {
    "namespace": "Namespace: MISC",
    "apiset": "API set: client",
    "name": "N_0xfb00ca71da386228",
    "hash": "0xFB00CA71DA386228",
    "code": "-- 0xFB00CA71DA386228\nN_0xfb00ca71da386228()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CanPhoneBeSeenOnScreen",
    "hash": "0xC4E2813898C97A4B",
    "code": "-- CAN_PHONE_BE_SEEN_ON_SCREEN\nlocal retval --[[ boolean ]] =\n\tCanPhoneBeSeenOnScreen()",
    "parameters": [],
    "returns": [],
    "description": "This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.  \nI can confirm the above. This function is hard-coded to always return 1."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamActivate",
    "hash": "0xFDE8F069C542D126",
    "code": "-- CELL_CAM_ACTIVATE\nCellCamActivate(\n\tactive --[[ boolean ]], \n\tbGoFirstPerson --[[ boolean ]]\n)",
    "parameters": [
      "active: \n\nToggle whether the camera should be active.",
      "bGoFirstPerson: \n\nUnused parameter."
    ],
    "returns": [],
    "description": "Parameters:\n\nactive: \n\nToggle whether the camera should be active.\n\nbGoFirstPerson: \n\nUnused parameter.\n\nActivates the cellphone camera. Make sure you have a mobile phone created with CREATE_MOBILE_PHONE or else the camera will not work."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamActivateSelfieMode",
    "hash": "0x015C49A93E3E086E",
    "code": "-- CELL_CAM_ACTIVATE_SELFIE_MODE\nCellCamActivateSelfieMode(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nTrue to activate and false to deactivate the selfie mode."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nTrue to activate and false to deactivate the selfie mode.\n\nToggles the selfie mode on the cellphone camera. Only visible when the cell phone camera is active."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamIsCharVisibleNoFaceCheck",
    "hash": "0x439E9BC95B7E7FBE",
    "code": "-- CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK\nlocal retval --[[ boolean ]] =\n\tCellCamIsCharVisibleNoFaceCheck(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamMoveFinger",
    "hash": "0x95C9E72F3D7DEC9B",
    "code": "-- _CELL_CAM_MOVE_FINGER\nCellCamMoveFinger(\n\tdirection --[[ integer ]]\n)",
    "parameters": [
      "direction: \n\nThe direction to swipe to, refer to eCellInput enum."
    ],
    "returns": [],
    "description": "Parameters:\n\ndirection: \n\nThe direction to swipe to, refer to eCellInput enum.\n\nMoves the character's finger in a swiping motion when holding a cellphone in their hand through the use of the CREATE_MOBILE_PHONE native.\n\nenum eCellInput {\n    CELL_INPUT_NONE = 0,\n    CELL_INPUT_UP = 1,\n    CELL_INPUT_DOWN = 2,\n    CELL_INPUT_LEFT = 3,\n    CELL_INPUT_RIGHT = 4,\n    CELL_INPUT_SELECT = 5\n}"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetDistance",
    "hash": "0x53F4892D18EC90A4",
    "code": "-- _CELL_CAM_SET_DISTANCE\nCellCamSetDistance(\n\tp0 --[[ number ]]\n)",
    "parameters": [
      "p0: \n\nValue from -1.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nValue from -1.0 to 1.0"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetHeadHeight",
    "hash": "0x466DA42C89865553",
    "code": "-- _CELL_CAM_SET_HEAD_HEIGHT\nCellCamSetHeadHeight(\n\tp0 --[[ number ]]\n)",
    "parameters": [
      "p0: \n\nValue from -1.0 to 0.0"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nValue from -1.0 to 0.0"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetHeadPitch",
    "hash": "0xD6ADE981781FCA09",
    "code": "-- _CELL_CAM_SET_HEAD_PITCH\nCellCamSetHeadPitch(\n\tp0 --[[ number ]]\n)",
    "parameters": [
      "p0: \n\nValue from -1.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nValue from -1.0 to 1.0"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetHeadRoll",
    "hash": "0xF1E22DC13F5EEBAD",
    "code": "-- _CELL_CAM_SET_HEAD_ROLL\nCellCamSetHeadRoll(\n\tp0 --[[ number ]]\n)",
    "parameters": [
      "p0: \n\nValue from -1.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nValue from -1.0 to 1.0"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetHorizontalOffset",
    "hash": "0x1B0B4AEED5B9B41C",
    "code": "-- _CELL_CAM_SET_HORIZONTAL_OFFSET\nCellCamSetHorizontalOffset(\n\tp0 --[[ number ]]\n)",
    "parameters": [
      "p0: \n\nValue from -1.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nValue from -1.0 to 1.0"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetLean",
    "hash": "0x44E44169EF70138E",
    "code": "-- _CELL_CAM_SET_LEAN\nCellCamSetLean(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "if the bool \"Toggle\" is \"true\" so the phone is lean.  \nif the bool \"Toggle\" is \"false\" so the phone is not lean."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetRoll",
    "hash": "0x15E69E2802C24B8D",
    "code": "-- _CELL_CAM_SET_ROLL\nCellCamSetRoll(\n\tp0 --[[ number ]]\n)",
    "parameters": [
      "p0: \n\nValue from -1.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nValue from -1.0 to 1.0"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CellCamSetVerticalOffset",
    "hash": "0x3117D84EFA60F77B",
    "code": "-- _CELL_CAM_SET_VERTICAL_OFFSET\nCellCamSetVerticalOffset(\n\tp0 --[[ number ]]\n)",
    "parameters": [
      "p0: \n\nValue from 0.0 to 2.0"
    ],
    "returns": [],
    "description": "Parameters:\n\np0: \n\nValue from 0.0 to 2.0"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "CreateMobilePhone",
    "hash": "0xA4E8E696C532FBC7",
    "code": "-- CREATE_MOBILE_PHONE\nCreateMobilePhone(\n\tphoneType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Creates a mobile phone of the specified type.  \nPossible phone types:  \n0 - Default phone / Michael's phone  \n1 - Trevor's phone  \n2 - Franklin's phone  \n4 - Prologue phone  \nThese values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "DestroyMobilePhone",
    "hash": "0x3BC861DF703E5097",
    "code": "-- DESTROY_MOBILE_PHONE\nDestroyMobilePhone()",
    "parameters": [],
    "returns": [],
    "description": "Destroys the currently active mobile phone."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "GetMobilePhonePosition",
    "hash": "0x584FDFDA48805B86",
    "code": "-- GET_MOBILE_PHONE_POSITION\nlocal position --[[ vector3 ]] =\n\tGetMobilePhonePosition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "GetMobilePhoneRenderId",
    "hash": "0xB4A53E05F68B6FA1",
    "code": "-- GET_MOBILE_PHONE_RENDER_ID\nlocal renderId --[[ integer ]] =\n\tGetMobilePhoneRenderId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "GetMobilePhoneRotation",
    "hash": "0x1CEFB61F193070AE",
    "code": "-- GET_MOBILE_PHONE_ROTATION\nlocal rotation --[[ vector3 ]] =\n\tGetMobilePhoneRotation(\n\t\tp1 --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "ScriptIsMovingMobilePhoneOffscreen",
    "hash": "0xF511F759238A5122",
    "code": "-- SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN\nScriptIsMovingMobilePhoneOffscreen(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If bool Toggle = true so the mobile is hide to screen.  \nIf bool Toggle = false so the mobile is show to screen."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "SetMobilePhoneDofState",
    "hash": "0x375A706A5C2FD084",
    "code": "-- SET_MOBILE_PHONE_DOF_STATE\nSetMobilePhoneDofState(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\ntrue/false to toggle DOF."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\ntrue/false to toggle DOF.\n\nToggles depth of field on the cellphone camera."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "SetMobilePhonePosition",
    "hash": "0x693A5C6D6734085B",
    "code": "-- SET_MOBILE_PHONE_POSITION\nSetMobilePhonePosition(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "SetMobilePhoneRotation",
    "hash": "0xBB779C0CA917E865",
    "code": "-- SET_MOBILE_PHONE_ROTATION\nSetMobilePhoneRotation(\n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Last parameter is unknown and always zero."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "SetMobilePhoneScale",
    "hash": "0xCBDD322A73D6D932",
    "code": "-- SET_MOBILE_PHONE_SCALE\nSetMobilePhoneScale(\n\tscale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone."
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "N_0xa2ccbe62cd4c91a4",
    "hash": "0xA2CCBE62CD4C91A4",
    "code": "-- 0xA2CCBE62CD4C91A4\nlocal toggle --[[ integer ]] =\n\tN_0xa2ccbe62cd4c91a4()",
    "parameters": [],
    "returns": [],
    "description": "Needs more research. If the \"phone_cam12\" filter is applied, this function is called with \"TRUE\"; otherwise, \"FALSE\".\nExample (XBOX 360):\n// check current filter selection\nif (MISC::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), \"phone_cam12\") != 0)\n{\n    MOBILE::_0xC273BB4D(0); // FALSE\n}\nelse\n{\n    MOBILE::_0xC273BB4D(1); // TRUE\n}"
  },
  {
    "namespace": "Namespace: MOBILE",
    "apiset": "API set: client",
    "name": "N_0xac2890471901861c",
    "hash": "0xAC2890471901861C",
    "code": "-- 0xAC2890471901861C\nN_0xac2890471901861c(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "CanPayGoon",
    "hash": "0x9777734DAD16992F",
    "code": "-- _CAN_PAY_GOON\nlocal retval --[[ boolean ]] =\n\tCanPayGoon()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0\nNativeDB Added Parameter 2: int p1\nNativeDB Added Parameter 3: int amount\nNativeDB Added Parameter 4: int* p3"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "DepositVc",
    "hash": "0xE260E0BB9CD995AC",
    "code": "-- DEPOSIT_VC\nlocal retval --[[ boolean ]] =\n\tDepositVc(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing and always returns false."
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyAirstrike",
    "hash": "0x763B4BD305338F19",
    "code": "-- NETWORK_BUY_AIRSTRIKE\nNetworkBuyAirstrike(\n\tcost --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 = 0 (always)  \np2 = 1 (always)"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyBackupGang",
    "hash": "0xA3EDDAA42411D3B9",
    "code": "-- NETWORK_BUY_BACKUP_GANG\nNetworkBuyBackupGang(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyBounty",
    "hash": "0x7B718E197453F2D9",
    "code": "-- NETWORK_BUY_BOUNTY\nNetworkBuyBounty(\n\tamount --[[ integer ]], \n\tvictim --[[ Player ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 is just an assumption. p2 was false and p3 was true."
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyContraband",
    "hash": "0x30FD873ECE50E9F6",
    "code": "-- _NETWORK_BUY_CONTRABAND\nNetworkBuyContraband(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ Hash ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyFairgroundRide",
    "hash": "0x8A7B3952DD64D2B5",
    "code": "-- NETWORK_BUY_FAIRGROUND_RIDE\nNetworkBuyFairgroundRide(\n\tamountSpent --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.  \nThe last 3 parameters are,   \n2,0,1 in the am_ferriswheel.c  \n1,0,1 in the am_rollercoaster.c"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyHealthcare",
    "hash": "0xD9B067E55253E3DD",
    "code": "-- NETWORK_BUY_HEALTHCARE\nNetworkBuyHealthcare(\n\tcost --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyHeliStrike",
    "hash": "0x81AA4610E3FD3A69",
    "code": "-- NETWORK_BUY_HELI_STRIKE\nNetworkBuyHeliStrike(\n\tcost --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 = 0 (always)  \np2 = 1 (always)"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyItem",
    "hash": "0xF0077C797F66A355",
    "code": "-- NETWORK_BUY_ITEM\nNetworkBuyItem(\n\tamount --[[ integer ]], \n\titem --[[ Hash ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ boolean ]], \n\titem_name --[[ string ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyLotteryTicket",
    "hash": "0xD987F2489969668C",
    "code": "-- NETWORK_BUY_LOTTERY_TICKET\nNetworkBuyLotteryTicket(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuyProperty",
    "hash": "0x650A08A280870AF6",
    "code": "-- NETWORK_BUY_PROPERTY\nNetworkBuyProperty(\n\tpropertyCost --[[ integer ]], \n\tpropertyName --[[ Hash ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkBuySmokes",
    "hash": "0x75AF80E61248EEBD",
    "code": "-- NETWORK_BUY_SMOKES\nNetworkBuySmokes(\n\tp0 --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCanBet",
    "hash": "0x3A54E33660DED67F",
    "code": "-- NETWORK_CAN_BET\nlocal retval --[[ boolean ]] =\n\tNetworkCanBet(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCanBuyLotteryTicket",
    "hash": "0xC62DD18375C99130",
    "code": "-- NETWORK_CAN_BUY_LOTTERY_TICKET\nlocal retval --[[ boolean ]] =\n\tNetworkCanBuyLotteryTicket(\n\t\tcost --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCanReceivePlayerCash",
    "hash": "0x5D17BE59D2123284",
    "code": "-- NETWORK_CAN_RECEIVE_PLAYER_CASH\nlocal retval --[[ boolean ]] =\n\tNetworkCanReceivePlayerCash(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCanShareJobCash",
    "hash": "0x1C2473301B1C66BA",
    "code": "-- NETWORK_CAN_SHARE_JOB_CASH\nlocal retval --[[ boolean ]] =\n\tNetworkCanShareJobCash()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCanSpendMoney",
    "hash": "0xAB3CAA6B422164DA",
    "code": "-- NETWORK_CAN_SPEND_MONEY\nlocal retval --[[ boolean ]] =\n\tNetworkCanSpendMoney(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCanSpendMoney_2",
    "hash": "0x7303E27CC6532080",
    "code": "-- _NETWORK_CAN_SPEND_MONEY_2\nlocal retval --[[ boolean ]], p4 --[[ Any ]] =\n\tNetworkCanSpendMoney_2(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]], \n\t\tp5 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_CAN_R??? or NETWORK_CAN_S???  \nNativeDB Added Parameter 7: Any p6"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCasinoCanGamble",
    "hash": "0xF62F6D9528358FE4",
    "code": "-- _NETWORK_CASINO_CAN_GAMBLE\nlocal retval --[[ boolean ]] =\n\tNetworkCasinoCanGamble(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCasinoCanPurchaseChipsWithPvc",
    "hash": "0x394DCDB9E836B7A9",
    "code": "-- _NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC\nlocal retval --[[ boolean ]] =\n\tNetworkCasinoCanPurchaseChipsWithPvc()",
    "parameters": [],
    "returns": [],
    "description": "Same as 0x8968D4D8C6C40C11. NETWORK_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCasinoCanPurchaseChipsWithPvc_2",
    "hash": "0x8968D4D8C6C40C11",
    "code": "-- _NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC_2\nlocal retval --[[ boolean ]] =\n\tNetworkCasinoCanPurchaseChipsWithPvc_2()",
    "parameters": [],
    "returns": [],
    "description": "Same as 0x394DCDB9E836B7A9. NETWORK_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCasinoCanUseGamblingType",
    "hash": "0x158C16F5E4CF41F8",
    "code": "-- _NETWORK_CASINO_CAN_USE_GAMBLING_TYPE\nlocal retval --[[ boolean ]] =\n\tNetworkCasinoCanUseGamblingType(\n\t\thash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GTAO_CASINO_HOUSE GTAO_CASINO_INSIDETRACK GTAO_CASINO_LUCKYWHEEL GTAO_CASINO_BLACKJACK GTAO_CASINO_ROULETTE GTAO_CASINO_SLOTS GTAO_CASINO_PURCHASE_CHIPS NETWORK_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCasinoPurchaseChips",
    "hash": "0x3BD101471C7F9EEC",
    "code": "-- _NETWORK_CASINO_PURCHASE_CHIPS\nlocal retval --[[ boolean ]] =\n\tNetworkCasinoPurchaseChips(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkCasinoSellChips",
    "hash": "0xED44897CB336F480",
    "code": "-- _NETWORK_CASINO_SELL_CHIPS\nlocal retval --[[ boolean ]] =\n\tNetworkCasinoSellChips(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_C*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkClearCharacterWallet",
    "hash": "0xA921DED15FDF28F5",
    "code": "-- NETWORK_CLEAR_CHARACTER_WALLET\nNetworkClearCharacterWallet(\n\tcharacterSlot --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkDeductCash",
    "hash": "0x18B7AE224B087E26",
    "code": "-- _NETWORK_DEDUCT_CASH\nNetworkDeductCash(\n\tamount --[[ integer ]], \n\tp1 --[[ string ]], \n\tp2 --[[ string ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkDeleteCharacter",
    "hash": "0x05A50AF38947EB8D",
    "code": "-- NETWORK_DELETE_CHARACTER\nNetworkDeleteCharacter(\n\tcharacterSlot --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnBoss",
    "hash": "0x08B0CA7A6AB3AC32",
    "code": "-- _NETWORK_EARN_BOSS\nNetworkEarnBoss(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnBossAgency",
    "hash": "0x0CB1BE0633C024A8",
    "code": "-- _NETWORK_EARN_BOSS_AGENCY\nNetworkEarnBossAgency(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnBountyHunterReward",
    "hash": "0xF6B170F9A02E9E87",
    "code": "-- _NETWORK_EARN_BOUNTY_HUNTER_REWARD\nNetworkEarnBountyHunterReward(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnCasinoHeist",
    "hash": "0x72E7C7B9615FA3C3",
    "code": "-- _NETWORK_EARN_CASINO_HEIST\nNetworkEarnCasinoHeist(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnCasinoHeistBonus",
    "hash": "0x3EC7471E6909798A",
    "code": "-- _NETWORK_EARN_CASINO_HEIST_BONUS\nNetworkEarnCasinoHeistBonus(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnCollectableCompletedCollection",
    "hash": "0x5C9B198AF5A54FA6",
    "code": "-- _NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION\nNetworkEarnCollectableCompletedCollection(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFmbbWageBonus",
    "hash": "0xFFFBA1B1F7C0B6F4",
    "code": "-- _NETWORK_EARN_FMBB_WAGE_BONUS\nNetworkEarnFmbbWageBonus(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromAiTargetKill",
    "hash": "0x515B4A22E4D3C6D7",
    "code": "-- NETWORK_EARN_FROM_AI_TARGET_KILL\nNetworkEarnFromAiTargetKill(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "DSPORT"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromAmbientJob",
    "hash": "0xFB6DB092FBAE29E6",
    "code": "-- NETWORK_EARN_FROM_AMBIENT_JOB\nlocal p2 --[[ Any ]] =\n\tNetworkEarnFromAmbientJob(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example for p1: \"AM_DISTRACT_COPS\""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromArenaCareerProgression",
    "hash": "0x0F99F70C61F14619",
    "code": "-- _NETWORK_EARN_FROM_ARENA_CAREER_PROGRESSION\nNetworkEarnFromArenaCareerProgression(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromArenaSkillLevelProgression",
    "hash": "0xE08256F972C7BB2C",
    "code": "-- _NETWORK_EARN_FROM_ARENA_SKILL_LEVEL_PROGRESSION\nNetworkEarnFromArenaSkillLevelProgression(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromArenaWar",
    "hash": "0x631F1CB8FB4130AA",
    "code": "-- _NETWORK_EARN_FROM_ARENA_WAR\nNetworkEarnFromArenaWar(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromArmourTruck",
    "hash": "0xF514621E8EA463D0",
    "code": "-- _NETWORK_EARN_FROM_ARMOUR_TRUCK\nNetworkEarnFromArmourTruck(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "For the money bags that drop a max of $40,000. Often called 40k bags.\nMost likely NETWORK_EARN_FROM_ROB***"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromAssassinateTargetKilled",
    "hash": "0xFA700D8A9905F78A",
    "code": "-- _NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED\nNetworkEarnFromAssassinateTargetKilled(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromAssassinateTargetKilled_2",
    "hash": "0x5E7AE8AABE8B7C0D",
    "code": "-- _NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED_2\nNetworkEarnFromAssassinateTargetKilled_2(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromAutoshopBusiness",
    "hash": "0x36A7FD5A7194B03E",
    "code": "-- _NETWORK_EARN_FROM_AUTOSHOP_BUSINESS\nNetworkEarnFromAutoshopBusiness(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromAutoshopIncome",
    "hash": "0xC66D1CF99ED7FE25",
    "code": "-- _NETWORK_EARN_FROM_AUTOSHOP_INCOME\nNetworkEarnFromAutoshopIncome(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBbEventBonus",
    "hash": "0xFDD8D2440DAF1590",
    "code": "-- _NETWORK_EARN_FROM_BB_EVENT_BONUS\nNetworkEarnFromBbEventBonus(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBbEventCargo",
    "hash": "0xA82959062361B259",
    "code": "-- _NETWORK_EARN_FROM_BB_EVENT_CARGO\nNetworkEarnFromBbEventCargo(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBendJob",
    "hash": "0x61326EE6DF15B0CA",
    "code": "-- NETWORK_EARN_FROM_BEND_JOB\nNetworkEarnFromBendJob(\n\tamount --[[ integer ]], \n\theistHash --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBetting",
    "hash": "0x827A5BA1A44ACA6D",
    "code": "-- NETWORK_EARN_FROM_BETTING\nNetworkEarnFromBetting(\n\tamount --[[ integer ]], \n\tp1 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBikeShopBusiness",
    "hash": "0x2C5809EB9DF57257",
    "code": "-- _NETWORK_EARN_FROM_BIKE_SHOP_BUSINESS\nNetworkEarnFromBikeShopBusiness(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBikerIncome",
    "hash": "0x71BEC32FA466E105",
    "code": "-- _NETWORK_EARN_FROM_BIKER_INCOME\nNetworkEarnFromBikerIncome(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBounty",
    "hash": "0x131BB5DA15453ACF",
    "code": "-- NETWORK_EARN_FROM_BOUNTY\nlocal networkHandle --[[ integer ]], p2 --[[ Any ]] =\n\tNetworkEarnFromBounty(\n\t\tamount --[[ integer ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBusinessBattle",
    "hash": "0x42FCE14F50F27291",
    "code": "-- _NETWORK_EARN_FROM_BUSINESS_BATTLE\nNetworkEarnFromBusinessBattle(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBusinessHubSell",
    "hash": "0x0B39CF0D53F1C883",
    "code": "-- _NETWORK_EARN_FROM_BUSINESS_HUB_SELL\nNetworkEarnFromBusinessHubSell(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBusinessHubSource",
    "hash": "0x59498BC8B1C8B15C",
    "code": "-- _NETWORK_EARN_FROM_BUSINESS_HUB_SOURCE\nNetworkEarnFromBusinessHubSource(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromBusinessProduct",
    "hash": "0x8586789730B10CAF",
    "code": "-- _NETWORK_EARN_FROM_BUSINESS_PRODUCT\nNetworkEarnFromBusinessProduct(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCarclubMembership",
    "hash": "0xBC6227792A188E2E",
    "code": "-- _NETWORK_EARN_FROM_CARCLUB_MEMBERSHIP\nNetworkEarnFromCarclubMembership(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCashingOut",
    "hash": "0xEFE9C9A1651B81E6",
    "code": "-- _NETWORK_EARN_FROM_CASHING_OUT\nNetworkEarnFromCashingOut(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCasinoAward",
    "hash": "0x973A9781A34F8DEB",
    "code": "-- _NETWORK_EARN_FROM_CASINO_AWARD\nNetworkEarnFromCasinoAward(\n\tamount --[[ integer ]], \n\thash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCasinoMissionParticipation",
    "hash": "0x09E8F18641BE2575",
    "code": "-- _NETWORK_EARN_FROM_CASINO_MISSION_PARTICIPATION\nNetworkEarnFromCasinoMissionParticipation(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCasinoMissionReward",
    "hash": "0x566FD402B25787DE",
    "code": "-- _NETWORK_EARN_FROM_CASINO_MISSION_REWARD\nNetworkEarnFromCasinoMissionReward(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCasinoStoryMissionReward",
    "hash": "0xAC95ED552157E092",
    "code": "-- _NETWORK_EARN_FROM_CASINO_STORY_MISSION_REWARD\nNetworkEarnFromCasinoStoryMissionReward(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromChallengeWin",
    "hash": "0x2B171E6B2F64D8DF",
    "code": "-- NETWORK_EARN_FROM_CHALLENGE_WIN\nlocal p1 --[[ Any ]] =\n\tNetworkEarnFromChallengeWin(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromClubManagementParticipation",
    "hash": "0xA75EAC69F59E96E7",
    "code": "-- _NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION\nNetworkEarnFromClubManagementParticipation(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCollectablesActionFigures",
    "hash": "0x5517F90043466049",
    "code": "-- _NETWORK_EARN_FROM_COLLECTABLES_ACTION_FIGURES\nNetworkEarnFromCollectablesActionFigures(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCollectionItem",
    "hash": "0x84FF63BD4966F33D",
    "code": "-- _NETWORK_EARN_FROM_COLLECTION_ITEM\nNetworkEarnFromCollectionItem(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCompleteCollection",
    "hash": "0x83AD64F53F4E9483",
    "code": "-- _NETWORK_EARN_FROM_COMPLETE_COLLECTION\nNetworkEarnFromCompleteCollection(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromContraband",
    "hash": "0xECA658CE2A4E5A72",
    "code": "-- _NETWORK_EARN_FROM_CONTRABAND\nNetworkEarnFromContraband(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCrateDrop",
    "hash": "0xB1CC1B9EC3007A2A",
    "code": "-- NETWORK_EARN_FROM_CRATE_DROP\nNetworkEarnFromCrateDrop(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromCriminalMastermindBonus",
    "hash": "0xFA009A62990671D4",
    "code": "-- _NETWORK_EARN_FROM_CRIMINAL_MASTERMIND_BONUS\nNetworkEarnFromCriminalMastermindBonus(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromDailyObjectiveEvent",
    "hash": "0x5128DF14A5BB86FC",
    "code": "-- _NETWORK_EARN_FROM_DAILY_OBJECTIVE_EVENT\nNetworkEarnFromDailyObjectiveEvent(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromDailyObjectives",
    "hash": "0x6EA318C91C1A8786",
    "code": "-- NETWORK_EARN_FROM_DAILY_OBJECTIVES\nNetworkEarnFromDailyObjectives(\n\tp0 --[[ integer ]], \n\tp1 --[[ string ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromDarChallenge",
    "hash": "0xCAC672087B4A24AB",
    "code": "-- _NETWORK_EARN_FROM_DAR_CHALLENGE\nNetworkEarnFromDarChallenge(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromDestroyingContraband",
    "hash": "0x84C0116D012E8FC2",
    "code": "-- _NETWORK_EARN_FROM_DESTROYING_CONTRABAND\nNetworkEarnFromDestroyingContraband(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromDoomsdayFinaleBonus",
    "hash": "0x128A747F4A230952",
    "code": "-- _NETWORK_EARN_FROM_DOOMSDAY_FINALE_BONUS\nNetworkEarnFromDoomsdayFinaleBonus(\n\tamount --[[ integer ]], \n\tvehicleHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromFmbbBossWork",
    "hash": "0x1FDA0AA679C9919B",
    "code": "-- _NETWORK_EARN_FROM_FMBB_BOSS_WORK\nNetworkEarnFromFmbbBossWork(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromFmbbPhonecallMission",
    "hash": "0xC5156361F26E2212",
    "code": "-- _NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION\nNetworkEarnFromFmbbPhonecallMission(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangPickup",
    "hash": "0xA03D4ACE0A3284CE",
    "code": "-- _NETWORK_EARN_FROM_GANG_PICKUP\nNetworkEarnFromGangPickup(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangopsAwards",
    "hash": "0xA9A31475F530DFDA",
    "code": "-- _NETWORK_EARN_FROM_GANGOPS_AWARDS\nNetworkEarnFromGangopsAwards(\n\tamount --[[ integer ]], \n\tunk --[[ string ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangopsElite",
    "hash": "0x2597A0D4A4FC2C77",
    "code": "-- _NETWORK_EARN_FROM_GANGOPS_ELITE\nNetworkEarnFromGangopsElite(\n\tamount --[[ integer ]], \n\tunk --[[ string ]], \n\tactIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangopsJobsFinale",
    "hash": "0x1C121FC9545E0D52",
    "code": "-- _NETWORK_EARN_FROM_GANGOPS_JOBS_FINALE\nNetworkEarnFromGangopsJobsFinale(\n\tamount --[[ integer ]], \n\tunk --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangopsJobsPrepParticipation",
    "hash": "0xED26584F6BDCBBFD",
    "code": "-- _NETWORK_EARN_FROM_GANGOPS_JOBS_PREP_PARTICIPATION\nNetworkEarnFromGangopsJobsPrepParticipation(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangopsJobsSetup",
    "hash": "0xA9160796D47A2CF8",
    "code": "-- _NETWORK_EARN_FROM_GANGOPS_JOBS_SETUP\nNetworkEarnFromGangopsJobsSetup(\n\tamount --[[ integer ]], \n\tunk --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangopsWages",
    "hash": "0x2DCB19ABAB0380A8",
    "code": "-- _NETWORK_EARN_FROM_GANGOPS_WAGES\nNetworkEarnFromGangopsWages(\n\tamount --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromGangopsWagesBonus",
    "hash": "0x15BB2A5C757EB91F",
    "code": "-- _NETWORK_EARN_FROM_GANGOPS_WAGES_BONUS\nNetworkEarnFromGangopsWagesBonus(\n\tamount --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromHackerTruckMission",
    "hash": "0xE8815FE993896AD3",
    "code": "-- _NETWORK_EARN_FROM_HACKER_TRUCK_MISSION\nNetworkEarnFromHackerTruckMission(\n\tp0 --[[ Any ]], \n\tamount --[[ integer ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromHoldups",
    "hash": "0x45B8154E077D9E4D",
    "code": "-- NETWORK_EARN_FROM_HOLDUPS\nNetworkEarnFromHoldups(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromImportExport",
    "hash": "0xF92A014A634442D6",
    "code": "-- NETWORK_EARN_FROM_IMPORT_EXPORT\nNetworkEarnFromImportExport(\n\tamount --[[ integer ]], \n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromJob",
    "hash": "0xB2CC4836834E8A98",
    "code": "-- NETWORK_EARN_FROM_JOB\nNetworkEarnFromJob(\n\tamount --[[ integer ]], \n\tp1 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromJobBonus",
    "hash": "0x6816FB4416760775",
    "code": "-- NETWORK_EARN_FROM_JOB_BONUS\nlocal p1 --[[ Any ]], p2 --[[ Any ]] =\n\tNetworkEarnFromJobBonus(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromJobX2",
    "hash": "0xDEBBF584665411D0",
    "code": "-- _NETWORK_EARN_FROM_JOB_X2\nNetworkEarnFromJobX2(\n\tamount --[[ integer ]], \n\tp1 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromNotBadsport",
    "hash": "0x4337511FA8221D36",
    "code": "-- NETWORK_EARN_FROM_NOT_BADSPORT\nNetworkEarnFromNotBadsport(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromPersonalVehicle",
    "hash": "0x3F4D00167E41E0AD",
    "code": "-- NETWORK_EARN_FROM_PERSONAL_VEHICLE\nNetworkEarnFromPersonalVehicle(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromPickup",
    "hash": "0xED1517D3AF17C698",
    "code": "-- NETWORK_EARN_FROM_PICKUP\nNetworkEarnFromPickup(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromPremiumJob",
    "hash": "0xC8407624CEF2354B",
    "code": "-- _NETWORK_EARN_FROM_PREMIUM_JOB\nNetworkEarnFromPremiumJob(\n\tamount --[[ integer ]], \n\tp1 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromProperty",
    "hash": "0x849648349D77F5C5",
    "code": "-- NETWORK_EARN_FROM_PROPERTY\nNetworkEarnFromProperty(\n\tamount --[[ integer ]], \n\tpropertyName --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromRcTimeTrial",
    "hash": "0xDFF49EE984E7AAE8",
    "code": "-- _NETWORK_EARN_FROM_RC_TIME_TRIAL\nNetworkEarnFromRcTimeTrial(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromRdrBonus",
    "hash": "0x7A5349B773584675",
    "code": "-- _NETWORK_EARN_FROM_RDR_BONUS\nNetworkEarnFromRdrBonus(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromRockstar",
    "hash": "0x02CE1D6AC0FC73EA",
    "code": "-- NETWORK_EARN_FROM_ROCKSTAR\nNetworkEarnFromRockstar(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromSellBase",
    "hash": "0x0E1E2FF3F4EC11AA",
    "code": "-- _NETWORK_EARN_FROM_SELL_BASE\nNetworkEarnFromSellBase(\n\tamount --[[ integer ]], \n\tbaseNameHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromSellBunker",
    "hash": "0x9251B6ABF2D0A5B4",
    "code": "-- _NETWORK_EARN_FROM_SELL_BUNKER\nNetworkEarnFromSellBunker(\n\tamount --[[ integer ]], \n\tbunkerHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromSellingVehicle",
    "hash": "0x8BCB27A057DF7B7F",
    "code": "-- _NETWORK_EARN_FROM_SELLING_VEHICLE\nNetworkEarnFromSellingVehicle(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1\nNativeDB Added Parameter 3: Any p2\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromSightseeing",
    "hash": "0x45087AE480B233AC",
    "code": "-- _NETWORK_EARN_FROM_SIGHTSEEING\nNetworkEarnFromSightseeing(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromSmuggling",
    "hash": "0xDEE612F2D71B0308",
    "code": "-- _NETWORK_EARN_FROM_SMUGGLING\nNetworkEarnFromSmuggling(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromSpinTheWheelCash",
    "hash": "0x676C48776CACBB5A",
    "code": "-- _NETWORK_EARN_FROM_SPIN_THE_WHEEL_CASH\nNetworkEarnFromSpinTheWheelCash(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromTargetRefund",
    "hash": "0x5B669CF2299A271F",
    "code": "-- _NETWORK_EARN_FROM_TARGET_REFUND\nNetworkEarnFromTargetRefund(\n\tamount --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromTimeTrialWin",
    "hash": "0x0819DB99FD2FBBD8",
    "code": "-- _NETWORK_EARN_FROM_TIME_TRIAL_WIN\nNetworkEarnFromTimeTrialWin(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromTunerAward",
    "hash": "0xB846F547D3792DF6",
    "code": "-- _NETWORK_EARN_FROM_TUNER_AWARD\nNetworkEarnFromTunerAward(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromTunerFinale",
    "hash": "0xBCB266247193AC61",
    "code": "-- _NETWORK_EARN_FROM_TUNER_FINALE\nNetworkEarnFromTunerFinale(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromUpgradeAutoshopLocation",
    "hash": "0xC10322A8D3E061EE",
    "code": "-- _NETWORK_EARN_FROM_UPGRADE_AUTOSHOP_LOCATION\nNetworkEarnFromUpgradeAutoshopLocation(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromVehicle",
    "hash": "0xB539BD8A4C1EECF8",
    "code": "-- NETWORK_EARN_FROM_VEHICLE\nNetworkEarnFromVehicle(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromVehicleAutoshop",
    "hash": "0x533073E8A596008C",
    "code": "-- _NETWORK_EARN_FROM_VEHICLE_AUTOSHOP\nNetworkEarnFromVehicleAutoshop(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromVehicleAutoshopBonus",
    "hash": "0xFE65AFE7308E32B2",
    "code": "-- _NETWORK_EARN_FROM_VEHICLE_AUTOSHOP_BONUS\nNetworkEarnFromVehicleAutoshopBonus(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromVehicleExport",
    "hash": "0xEDEAD9A91EC768B3",
    "code": "-- _NETWORK_EARN_FROM_VEHICLE_EXPORT\nNetworkEarnFromVehicleExport(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromWagePayment",
    "hash": "0x35F8DA0E8A31EF1B",
    "code": "-- _NETWORK_EARN_FROM_WAGE_PAYMENT\nNetworkEarnFromWagePayment(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromWagePaymentBonus",
    "hash": "0x005ACA7100BD101D",
    "code": "-- _NETWORK_EARN_FROM_WAGE_PAYMENT_BONUS\nNetworkEarnFromWagePaymentBonus(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnFromWarehouse",
    "hash": "0x3E4ADAFF1830F146",
    "code": "-- _NETWORK_EARN_FROM_WAREHOUSE\nNetworkEarnFromWarehouse()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int amount\nNativeDB Added Parameter 2: int id"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnGoon",
    "hash": "0xCDA1C62BE2777802",
    "code": "-- _NETWORK_EARN_GOON\nNetworkEarnGoon(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnIslandHeist",
    "hash": "0xD21D111C46BA9F15",
    "code": "-- _NETWORK_EARN_ISLAND_HEIST\nNetworkEarnIslandHeist(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnJobBonusFirstTimeBonus",
    "hash": "0x11B0A20C493F7E36",
    "code": "-- _NETWORK_EARN_JOB_BONUS_FIRST_TIME_BONUS\nNetworkEarnJobBonusFirstTimeBonus(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkEarnJobBonusHeistAward",
    "hash": "0x9D4FDBB035229669",
    "code": "-- _NETWORK_EARN_JOB_BONUS_HEIST_AWARD\nNetworkEarnJobBonusHeistAward(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetEvcBalance",
    "hash": "0x5D1E75F91C07DEE5",
    "code": "-- NETWORK_GET_EVC_BALANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetEvcBalance()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetIsHighEarner",
    "hash": "0xFB2456B2040A6A67",
    "code": "-- _NETWORK_GET_IS_HIGH_EARNER\nlocal retval --[[ boolean ]] =\n\tNetworkGetIsHighEarner()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetPvcBalance",
    "hash": "0x4F54F3B6C202FB4E",
    "code": "-- NETWORK_GET_PVC_BALANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetPvcBalance()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetPvcTransferBalance",
    "hash": "0x13A8DE2FD77D04F3",
    "code": "-- NETWORK_GET_PVC_TRANSFER_BALANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetPvcTransferBalance()",
    "parameters": [],
    "returns": [],
    "description": "Same as 0xEA560AC9EEB1E19B.\nSame as 0xEA560AC9EEB1E19B.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetRemainingTransferBalance",
    "hash": "0xEA560AC9EEB1E19B",
    "code": "-- NETWORK_GET_REMAINING_TRANSFER_BALANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetRemainingTransferBalance()",
    "parameters": [],
    "returns": [],
    "description": "Same as 0x13A8DE2FD77D04F3.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetStringBankBalance",
    "hash": "0xA6FA3979BED01B81",
    "code": "-- NETWORK_GET_STRING_BANK_BALANCE\nlocal retval --[[ string ]] =\n\tNetworkGetStringBankBalance()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetStringBankWalletBalance",
    "hash": "0x700AF71AE615E6DD",
    "code": "-- NETWORK_GET_STRING_BANK_WALLET_BALANCE\nlocal retval --[[ string ]] =\n\tNetworkGetStringBankWalletBalance()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetStringWalletBalance",
    "hash": "0xF9B10B529DCFB33B",
    "code": "-- NETWORK_GET_STRING_WALLET_BALANCE\nlocal retval --[[ string ]] =\n\tNetworkGetStringWalletBalance(\n\t\tcharacterSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetVcBalance",
    "hash": "0x5CBAD97E059E1B94",
    "code": "-- NETWORK_GET_VC_BALANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetVcBalance()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetVcBankBalance",
    "hash": "0x76EF28DA05EA395A",
    "code": "-- NETWORK_GET_VC_BANK_BALANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetVcBankBalance()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetVcBankBalanceIsNotLessThan",
    "hash": "0xA31FD6A0865B6D14",
    "code": "-- _NETWORK_GET_VC_BANK_BALANCE_IS_NOT_LESS_THAN\nlocal retval --[[ boolean ]] =\n\tNetworkGetVcBankBalanceIsNotLessThan(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if bank balance >= amount.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetVcBankWalletBalanceIsNotLessThan",
    "hash": "0xDC18531D7019A535",
    "code": "-- _NETWORK_GET_VC_BANK_WALLET_BALANCE_IS_NOT_LESS_THAN\nlocal retval --[[ boolean ]] =\n\tNetworkGetVcBankWalletBalanceIsNotLessThan(\n\t\tamount --[[ integer ]], \n\t\tcharacterSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if bank balance + wallet balance >= amount."
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetVcWalletBalance",
    "hash": "0xA40F9C2623F6A8B5",
    "code": "-- NETWORK_GET_VC_WALLET_BALANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetVcWalletBalance(\n\t\tcharacterSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGetVcWalletBalanceIsNotLessThan",
    "hash": "0xED5AB8860415BABA",
    "code": "-- _NETWORK_GET_VC_WALLET_BALANCE_IS_NOT_LESS_THAN\nlocal retval --[[ boolean ]] =\n\tNetworkGetVcWalletBalanceIsNotLessThan(\n\t\tamount --[[ integer ]], \n\t\tcharacterSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if wallet balance >= amount.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkGivePlayerJobshareCash",
    "hash": "0xFB18DF9CB95E0105",
    "code": "-- NETWORK_GIVE_PLAYER_JOBSHARE_CASH\nlocal networkHandle --[[ integer ]] =\n\tNetworkGivePlayerJobshareCash(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkInitializeCash",
    "hash": "0x3DA5ECD1A56CBA6D",
    "code": "-- NETWORK_INITIALIZE_CASH\nNetworkInitializeCash(\n\twallet --[[ integer ]], \n\tbank --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkManualDeleteCharacter",
    "hash": "0x821418C727FCACD7",
    "code": "-- _NETWORK_MANUAL_DELETE_CHARACTER\nNetworkManualDeleteCharacter(\n\tcharacterSlot --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkMoneyCanBet",
    "hash": "0x81404F3DC124FE5B",
    "code": "-- NETWORK_MONEY_CAN_BET\nlocal retval --[[ boolean ]] =\n\tNetworkMoneyCanBet(\n\t\tamount --[[ integer ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkPayEmployeeWage",
    "hash": "0x5FD5ED82CBBE9989",
    "code": "-- NETWORK_PAY_EMPLOYEE_WAGE\nNetworkPayEmployeeWage(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkPayMatchEntryFee",
    "hash": "0x9346E14F2AF74D46",
    "code": "-- NETWORK_PAY_MATCH_ENTRY_FEE\nNetworkPayMatchEntryFee(\n\tamount --[[ integer ]], \n\tmatchId --[[ string ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkPayUtilityBill",
    "hash": "0xAFE08B35EC0C9EAE",
    "code": "-- NETWORK_PAY_UTILITY_BILL\nNetworkPayUtilityBill(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkReceivePlayerJobshareCash",
    "hash": "0x56A3B51944C50598",
    "code": "-- NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH\nlocal networkHandle --[[ integer ]] =\n\tNetworkReceivePlayerJobshareCash(\n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkRefundCash",
    "hash": "0xF9C812CD7C46E817",
    "code": "-- NETWORK_REFUND_CASH\nNetworkRefundCash(\n\tindex --[[ integer ]], \n\tcontext --[[ string ]], \n\treason --[[ string ]], \n\tunk --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "index  \n-------  \nSee function sub_1005 in am_boat_taxi.ysc  \ncontext  \n----------  \n\"BACKUP_VAGOS\"  \n\"BACKUP_LOST\"  \n\"BACKUP_FAMILIES\"  \n\"HIRE_MUGGER\"  \n\"HIRE_MERCENARY\"  \n\"BUY_CARDROPOFF\"  \n\"HELI_PICKUP\"  \n\"BOAT_PICKUP\"  \n\"CLEAR_WANTED\"  \n\"HEAD_2_HEAD\"  \n\"CHALLENGE\"  \n\"SHARE_LAST_JOB\"  \n\"DEFAULT\"  \nreason  \n---------  \n\"NOTREACHTARGET\"  \n\"TARGET_ESCAPE\"  \n\"DELIVERY_FAIL\"  \n\"NOT_USED\"  \n\"TEAM_QUIT\"  \n\"SERVER_ERROR\"  \n\"RECEIVE_LJ_L\"  \n\"CHALLENGE_PLAYER_LEFT\"  \n\"DEFAULT\"  \nunk  \n-----  \nUnknown bool value"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkRivalDeliveryCompleted",
    "hash": "0x1B882107C23A9022",
    "code": "-- _NETWORK_RIVAL_DELIVERY_COMPLETED\nNetworkRivalDeliveryCompleted(\n\tearnedMoney --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentAmmoDrop",
    "hash": "0xB162DC95C0A3317B",
    "code": "-- NETWORK_SPENT_AMMO_DROP\nNetworkSpentAmmoDrop(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentArcadeGame",
    "hash": "0xEAD3D81F2C3A1458",
    "code": "-- _NETWORK_SPENT_ARCADE_GAME\nNetworkSpentArcadeGame(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentArcadeGeneric",
    "hash": "0x43AA7FAC4E6D6687",
    "code": "-- _NETWORK_SPENT_ARCADE_GENERIC\nNetworkSpentArcadeGeneric(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentArenaJoinSpectator",
    "hash": "0x14EAEA58F93B55AF",
    "code": "-- _NETWORK_SPENT_ARENA_JOIN_SPECTATOR\nNetworkSpentArenaJoinSpectator(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentArenaPremium",
    "hash": "0x619496D837EFD920",
    "code": "-- _NETWORK_SPENT_ARENA_PREMIUM\nNetworkSpentArenaPremium(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentArenaSpectatorBox",
    "hash": "0x7049BF858601DC0F",
    "code": "-- _NETWORK_SPENT_ARENA_SPECTATOR_BOX\nNetworkSpentArenaSpectatorBox(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentArrestBail",
    "hash": "0x812F5488B1B2A299",
    "code": "-- NETWORK_SPENT_ARREST_BAIL\nNetworkSpentArrestBail(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentAutoshopModifications",
    "hash": "0x9BEA350D7C48061B",
    "code": "-- _NETWORK_SPENT_AUTOSHOP_MODIFICATIONS\nNetworkSpentAutoshopModifications(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentAutoshopPropertyUtilityFee",
    "hash": "0xB40F96D6D252839B",
    "code": "-- _NETWORK_SPENT_AUTOSHOP_PROPERTY_UTILITY_FEE\nNetworkSpentAutoshopPropertyUtilityFee(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBaService",
    "hash": "0xD7CCCBA28C4ECAF0",
    "code": "-- _NETWORK_SPENT_BA_SERVICE\nNetworkSpentBaService(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBallisticEquipment",
    "hash": "0x5D97630A8A0EF123",
    "code": "-- _NETWORK_SPENT_BALLISTIC_EQUIPMENT\nNetworkSpentBallisticEquipment(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBankInterest",
    "hash": "0xCA230C9682556CF1",
    "code": "-- NETWORK_SPENT_BANK_INTEREST\nNetworkSpentBankInterest(\n\tp0 --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBeachPartyGeneric",
    "hash": "0x54ABA22FA6371249",
    "code": "-- _NETWORK_SPENT_BEACH_PARTY_GENERIC\nNetworkSpentBeachPartyGeneric(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBetting",
    "hash": "0x1C436FD11FFA692F",
    "code": "-- NETWORK_SPENT_BETTING\nNetworkSpentBetting(\n\tamount --[[ integer ]], \n\tp1 --[[ integer ]], \n\tmatchId --[[ string ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBikeShopModify",
    "hash": "0x923AEA8E78F8DF0B",
    "code": "-- _NETWORK_SPENT_BIKE_SHOP_MODIFY\nNetworkSpentBikeShopModify(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBoatPickup",
    "hash": "0x524EE43A37232C00",
    "code": "-- NETWORK_SPENT_BOAT_PICKUP\nNetworkSpentBoatPickup(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBoss",
    "hash": "0xFFBE02CD385356BD",
    "code": "-- _NETWORK_SPENT_BOSS\nlocal retval --[[ boolean ]] =\n\tNetworkSpentBoss()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int amount\nNativeDB Added Parameter 2: BOOL p1\nNativeDB Added Parameter 3: BOOL p2"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBounty",
    "hash": "0x29B260B84947DFCC",
    "code": "-- NETWORK_SPENT_BOUNTY\nNetworkSpentBounty(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBountyHunterMission",
    "hash": "0x1BEA0CD93470BB1F",
    "code": "-- _NETWORK_SPENT_BOUNTY_HUNTER_MISSION\nNetworkSpentBountyHunterMission(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBullShark",
    "hash": "0xA6DD8458CE24012C",
    "code": "-- NETWORK_SPENT_BULL_SHARK\nNetworkSpentBullShark(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBusiness",
    "hash": "0x0035BB914316F1E3",
    "code": "-- _NETWORK_SPENT_BUSINESS\nNetworkSpentBusiness(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyArena",
    "hash": "0x40D5DA9550B7CB46",
    "code": "-- _NETWORK_SPENT_BUY_ARENA\nNetworkSpentBuyArena(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyAutoshop",
    "hash": "0xEEB7E5D1FEB20869",
    "code": "-- _NETWORK_SPENT_BUY_AUTOSHOP\nNetworkSpentBuyAutoshop(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyBase",
    "hash": "0x4EA3F425C7744D21",
    "code": "-- _NETWORK_SPENT_BUY_BASE\nNetworkSpentBuyBase(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyBunker",
    "hash": "0x12D148D26538D0F9",
    "code": "-- _NETWORK_SPENT_BUY_BUNKER\nNetworkSpentBuyBunker(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyCasino",
    "hash": "0x34A6FC4D06C4DA0F",
    "code": "-- _NETWORK_SPENT_BUY_CASINO\nlocal data --[[ Any ]] =\n\tNetworkSpentBuyCasino(\n\t\tamount --[[ integer ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyOfftheradar",
    "hash": "0xA628A745E2275C5D",
    "code": "-- NETWORK_SPENT_BUY_OFFTHERADAR\nNetworkSpentBuyOfftheradar(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyPassiveMode",
    "hash": "0x6D3A430D1A809179",
    "code": "-- NETWORK_SPENT_BUY_PASSIVE_MODE\nNetworkSpentBuyPassiveMode(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyRevealPlayers",
    "hash": "0x6E176F1B18BC0637",
    "code": "-- NETWORK_SPENT_BUY_REVEAL_PLAYERS\nNetworkSpentBuyRevealPlayers(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyTiltrotor",
    "hash": "0x0CCE73BC7A11E885",
    "code": "-- _NETWORK_SPENT_BUY_TILTROTOR\nNetworkSpentBuyTiltrotor(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyTruck",
    "hash": "0xAC272C0AE01B4BD8",
    "code": "-- _NETWORK_SPENT_BUY_TRUCK\nNetworkSpentBuyTruck(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentBuyWantedlevel",
    "hash": "0xE1B13771A843C4F6",
    "code": "-- NETWORK_SPENT_BUY_WANTEDLEVEL\nlocal p1 --[[ Any ]] =\n\tNetworkSpentBuyWantedlevel(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCallPlayer",
    "hash": "0xACDE7185B374177C",
    "code": "-- NETWORK_SPENT_CALL_PLAYER\nlocal p1 --[[ Any ]] =\n\tNetworkSpentCallPlayer(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCarclub",
    "hash": "0x925227803A0EAA1B",
    "code": "-- _NETWORK_SPENT_CARCLUB\nNetworkSpentCarclub(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCarclubMembership",
    "hash": "0x1464E17207CD36E2",
    "code": "-- _NETWORK_SPENT_CARCLUB_MEMBERSHIP\nNetworkSpentCarclubMembership(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCarclubTakeover",
    "hash": "0xD1E46824E6FB92B5",
    "code": "-- _NETWORK_SPENT_CARCLUB_TAKEOVER\nNetworkSpentCarclubTakeover(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCargoSourcing",
    "hash": "0x948705F6F9C50824",
    "code": "-- _NETWORK_SPENT_CARGO_SOURCING\nNetworkSpentCargoSourcing(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCarwash",
    "hash": "0xEC03C719DB2F4306",
    "code": "-- NETWORK_SPENT_CARWASH\nNetworkSpentCarwash(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCashDrop",
    "hash": "0x289016EC778D60E0",
    "code": "-- NETWORK_SPENT_CASH_DROP\nNetworkSpentCashDrop(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCasinoClubGeneric",
    "hash": "0xC991C255AA6D90B2",
    "code": "-- _NETWORK_SPENT_CASINO_CLUB_GENERIC\nNetworkSpentCasinoClubGeneric(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCasinoGeneric",
    "hash": "0x88BF9B612B84D3C3",
    "code": "-- _NETWORK_SPENT_CASINO_GENERIC\nNetworkSpentCasinoGeneric(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCasinoHeist",
    "hash": "0xD30E8392F407C328",
    "code": "-- _NETWORK_SPENT_CASINO_HEIST\nNetworkSpentCasinoHeist(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]], \n\tp10 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCasinoHeistSkipMission",
    "hash": "0x487009DD91D93429",
    "code": "-- _NETWORK_SPENT_CASINO_HEIST_SKIP_MISSION\nNetworkSpentCasinoHeistSkipMission(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCasinoMembership",
    "hash": "0xFBBE0570EDF39D46",
    "code": "-- _NETWORK_SPENT_CASINO_MEMBERSHIP\nNetworkSpentCasinoMembership(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentCinema",
    "hash": "0x6B38ECB05A63A685",
    "code": "-- NETWORK_SPENT_CINEMA\nNetworkSpentCinema(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentEmployAssassins",
    "hash": "0x5BBBD92186E1F1C5",
    "code": "-- _NETWORK_SPENT_EMPLOY_ASSASSINS\nNetworkSpentEmployAssassins(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentFromBank",
    "hash": "0xB9F7A469460E7A4A",
    "code": "-- _NETWORK_SPENT_FROM_BANK\nNetworkSpentFromBank(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentFromRockstar",
    "hash": "0x6A445B64ED7ABEB5",
    "code": "-- NETWORK_SPENT_FROM_ROCKSTAR\nNetworkSpentFromRockstar(\n\tbank --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentGangopsCannon",
    "hash": "0x771ADB0E7635B7BF",
    "code": "-- _NETWORK_SPENT_GANGOPS_CANNON\nNetworkSpentGangopsCannon(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentGangopsStartMission",
    "hash": "0xDA947AE8880D5C18",
    "code": "-- _NETWORK_SPENT_GANGOPS_START_MISSION\nNetworkSpentGangopsStartMission(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentGangopsStartStrand",
    "hash": "0xA19EC0786E326E06",
    "code": "-- _NETWORK_SPENT_GANGOPS_START_STRAND\nNetworkSpentGangopsStartStrand(\n\ttype --[[ integer ]], \n\tamount --[[ integer ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentGangopsTripSkip",
    "hash": "0x5ECE6FD7B4EC8D6A",
    "code": "-- _NETWORK_SPENT_GANGOPS_TRIP_SKIP\nNetworkSpentGangopsTripSkip(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentGunrunningContactService",
    "hash": "0x2CEB0E0BC2A77C05",
    "code": "-- _NETWORK_SPENT_GUNRUNNING_CONTACT_SERVICE\nNetworkSpentGunrunningContactService(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentHangarStaffCharges",
    "hash": "0xB1F1346FD57685D7",
    "code": "-- _NETWORK_SPENT_HANGAR_STAFF_CHARGES\nNetworkSpentHangarStaffCharges(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentHangarUtilityCharges",
    "hash": "0xB18AC2ECBB15CB6A",
    "code": "-- _NETWORK_SPENT_HANGAR_UTILITY_CHARGES\nNetworkSpentHangarUtilityCharges(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentHeliPickup",
    "hash": "0x7BF1D73DB2ECA492",
    "code": "-- NETWORK_SPENT_HELI_PICKUP\nNetworkSpentHeliPickup(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentHireMercenary",
    "hash": "0xE7B80E2BF9D80BD6",
    "code": "-- NETWORK_SPENT_HIRE_MERCENARY\nNetworkSpentHireMercenary(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentHireMugger",
    "hash": "0xE404BFB981665BF0",
    "code": "-- NETWORK_SPENT_HIRE_MUGGER\nNetworkSpentHireMugger(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only used once in a script (am_contact_requests)  \np1 = 0  \np2 = 1"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentHoldups",
    "hash": "0xD9B86B9872039763",
    "code": "-- NETWORK_SPENT_HOLDUPS\nNetworkSpentHoldups(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentImAbility",
    "hash": "0x93AA4165CB67E925",
    "code": "-- _NETWORK_SPENT_IM_ABILITY\nNetworkSpentImAbility(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentImportExportRepair",
    "hash": "0xC1952F3773BA18FE",
    "code": "-- _NETWORK_SPENT_IMPORT_EXPORT_REPAIR\nNetworkSpentImportExportRepair(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentInStripclub",
    "hash": "0xEE99784E4467689C",
    "code": "-- NETWORK_SPENT_IN_STRIPCLUB\nNetworkSpentInStripclub(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentIslandHeist",
    "hash": "0xE86689E5F82DE429",
    "code": "-- _NETWORK_SPENT_ISLAND_HEIST\nNetworkSpentIslandHeist(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentJobSkip",
    "hash": "0x28F174A67B8D0C2F",
    "code": "-- _NETWORK_SPENT_JOB_SKIP\nNetworkSpentJobSkip(\n\tamount --[[ integer ]], \n\tmatchId --[[ string ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentJukebox",
    "hash": "0x5BCDE0F640C773D2",
    "code": "-- _NETWORK_SPENT_JUKEBOX\nNetworkSpentJukebox(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentMakeItRain",
    "hash": "0xE5F5A060439C2F5D",
    "code": "-- _NETWORK_SPENT_MAKE_IT_RAIN\nNetworkSpentMakeItRain(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentMoveYacht",
    "hash": "0xE7DF4E0545DFB56E",
    "code": "-- _NETWORK_SPENT_MOVE_YACHT\nNetworkSpentMoveYacht(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentNightclubBarDrink",
    "hash": "0xDD21B016E4289465",
    "code": "-- _NETWORK_SPENT_NIGHTCLUB_BAR_DRINK\nNetworkSpentNightclubBarDrink(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentNightclubEntryFee",
    "hash": "0x876056684281655D",
    "code": "-- _NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE\nNetworkSpentNightclubEntryFee(\n\tplayer --[[ Player ]], \n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentNoCops",
    "hash": "0xD5BB406F4E04019F",
    "code": "-- NETWORK_SPENT_NO_COPS\nNetworkSpentNoCops(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentOrderBodyguardVehicle",
    "hash": "0xE8B0B270B6E7C76E",
    "code": "-- _NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE\nNetworkSpentOrderBodyguardVehicle(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentOrderWarehouseVehicle",
    "hash": "0x05F04155A226FBBF",
    "code": "-- _NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE\nNetworkSpentOrderWarehouseVehicle(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPaServiceDancer",
    "hash": "0xB49ECA122467D05F",
    "code": "-- _NETWORK_SPENT_PA_SERVICE_DANCER\nNetworkSpentPaServiceDancer(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPaServiceHeliPickup",
    "hash": "0x0FE8E1FCD2B86B33",
    "code": "-- _NETWORK_SPENT_PA_SERVICE_HELI_PICKUP\nNetworkSpentPaServiceHeliPickup(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPayBoss",
    "hash": "0xDBC966A01C02BCA7",
    "code": "-- _NETWORK_SPENT_PAY_BOSS\nNetworkSpentPayBoss(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPayGoon",
    "hash": "0x08A1B82B91900682",
    "code": "-- _NETWORK_SPENT_PAY_GOON\nNetworkSpentPayGoon(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPayVehicleInsurancePremium",
    "hash": "0x9FF28D88C766E3E8",
    "code": "-- NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM\nlocal networkHandle --[[ integer ]] =\n\tNetworkSpentPayVehicleInsurancePremium(\n\t\tamount --[[ integer ]], \n\t\tvehicleModel --[[ Hash ]], \n\t\tnotBankrupt --[[ boolean ]], \n\t\thasTheMoney --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "According to how I understood this in the freemode script alone,\nThe first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.\nThe second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.\nThe third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, \"Previous_Owner\").\nThe fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.\nThe fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,\nbool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost."
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPlayerHealthcare",
    "hash": "0x7C99101F7FCE2EE5",
    "code": "-- NETWORK_SPENT_PLAYER_HEALTHCARE\nNetworkSpentPlayerHealthcare(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentProstitutes",
    "hash": "0xB21B89501CFAC79E",
    "code": "-- NETWORK_SPENT_PROSTITUTES\nNetworkSpentProstitutes(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPurchaseHangar",
    "hash": "0xCCB339CC970452DA",
    "code": "-- _NETWORK_SPENT_PURCHASE_HANGAR\nNetworkSpentPurchaseHangar(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentPurchaseWarehouse",
    "hash": "0x33981D6804E62F49",
    "code": "-- _NETWORK_SPENT_PURCHASE_WAREHOUSE\nNetworkSpentPurchaseWarehouse(\n\tamount --[[ integer ]], \n\tdata --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentRdrhatchetBonus",
    "hash": "0xE284D46FFDB82E36",
    "code": "-- _NETWORK_SPENT_RDRHATCHET_BONUS\nNetworkSpentRdrhatchetBonus(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentRehireDj",
    "hash": "0xF6C8A544E4CF14FC",
    "code": "-- _NETWORK_SPENT_REHIRE_DJ\nNetworkSpentRehireDj(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentRenameOrganization",
    "hash": "0xFC4EE00A7B3BFB76",
    "code": "-- _NETWORK_SPENT_RENAME_ORGANIZATION\nNetworkSpentRenameOrganization(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentRequestHeist",
    "hash": "0x9D26502BB97BFE62",
    "code": "-- NETWORK_SPENT_REQUEST_HEIST\nNetworkSpentRequestHeist(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentRequestJob",
    "hash": "0x8204DA7934DF3155",
    "code": "-- NETWORK_SPENT_REQUEST_JOB\nNetworkSpentRequestJob(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentRobbedByMugger",
    "hash": "0x995A65F15F581359",
    "code": "-- NETWORK_SPENT_ROBBED_BY_MUGGER\nNetworkSpentRobbedByMugger(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentSalesDisplay",
    "hash": "0x7E2F4E8F44CAF4E0",
    "code": "-- _NETWORK_SPENT_SALES_DISPLAY\nNetworkSpentSalesDisplay(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentSpinTheWheelPayment",
    "hash": "0x9A5BD1D0000B339C",
    "code": "-- _NETWORK_SPENT_SPIN_THE_WHEEL_PAYMENT\nNetworkSpentSpinTheWheelPayment(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604\n\nNativeDB Removed Parameter 4: BOOL p3"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentSubmarine",
    "hash": "0x6C8BC1488527AAAB",
    "code": "-- _NETWORK_SPENT_SUBMARINE\nNetworkSpentSubmarine(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentTaxi",
    "hash": "0x17C3A7D31EAE39F9",
    "code": "-- NETWORK_SPENT_TAXI\nNetworkSpentTaxi(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentTelescope",
    "hash": "0x7FE61782AD94CC09",
    "code": "-- NETWORK_SPENT_TELESCOPE\nNetworkSpentTelescope(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeArena",
    "hash": "0x037ABB06825D7AB1",
    "code": "-- _NETWORK_SPENT_UPGRADE_ARENA\nNetworkSpentUpgradeArena(\n\tamount --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeAutoshop",
    "hash": "0xDD829AA198FDC46C",
    "code": "-- _NETWORK_SPENT_UPGRADE_AUTOSHOP\nNetworkSpentUpgradeAutoshop(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeBase",
    "hash": "0x3DD3F33A5D55EA6F",
    "code": "-- _NETWORK_SPENT_UPGRADE_BASE\nNetworkSpentUpgradeBase(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeBunker",
    "hash": "0x0C82D21A77C22D49",
    "code": "-- _NETWORK_SPENT_UPGRADE_BUNKER\nNetworkSpentUpgradeBunker(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeCasino",
    "hash": "0x4740D62BC1B4EBEA",
    "code": "-- _NETWORK_SPENT_UPGRADE_CASINO\nlocal data --[[ Any ]] =\n\tNetworkSpentUpgradeCasino(\n\t\tamount --[[ integer ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeHangar",
    "hash": "0x615EB504B0788DAF",
    "code": "-- _NETWORK_SPENT_UPGRADE_HANGAR\nNetworkSpentUpgradeHangar(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeSub",
    "hash": "0x89049A84065CE68E",
    "code": "-- _NETWORK_SPENT_UPGRADE_SUB\nNetworkSpentUpgradeSub(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeTiltrotor",
    "hash": "0x165E135D6DFA2907",
    "code": "-- _NETWORK_SPENT_UPGRADE_TILTROTOR\nNetworkSpentUpgradeTiltrotor(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentUpgradeTruck",
    "hash": "0x365E877C61D6988B",
    "code": "-- _NETWORK_SPENT_UPGRADE_TRUCK\nNetworkSpentUpgradeTruck(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentVehicleExportMods",
    "hash": "0xA75CCF58A60A5FD1",
    "code": "-- _NETWORK_SPENT_VEHICLE_EXPORT_MODS\nNetworkSpentVehicleExportMods(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentVehicleRequested",
    "hash": "0x02D24A35A9CC3503",
    "code": "-- _NETWORK_SPENT_VEHICLE_REQUESTED\nNetworkSpentVehicleRequested(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentVipUtilityCharges",
    "hash": "0x5182A339A3474510",
    "code": "-- _NETWORK_SPENT_VIP_UTILITY_CHARGES\nNetworkSpentVipUtilityCharges(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "NetworkSpentWager",
    "hash": "0xD99DB210089617FE",
    "code": "-- _NETWORK_SPENT_WAGER\nNetworkSpentWager(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "ProcessCashGift",
    "hash": "0x20194D48EAEC9A41",
    "code": "-- PROCESS_CASH_GIFT\nlocal retval --[[ string ]], p0 --[[ integer ]], p1 --[[ integer ]] =\n\tProcessCashGift(\n\t\tp2 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "WithdrawVc",
    "hash": "0xF70EFA14FE091429",
    "code": "-- WITHDRAW_VC\nlocal retval --[[ integer ]] =\n\tWithdrawVc(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing and always returns 0."
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x08e8eeadfd0dc4a0",
    "hash": "0x08E8EEADFD0DC4A0",
    "code": "-- 0x08E8EEADFD0DC4A0\nlocal retval --[[ boolean ]] =\n\tN_0x08e8eeadfd0dc4a0(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns false if amount > wallet balance or daily transfer limit has been hit.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x0d30eb83668e63c5",
    "hash": "0x0D30EB83668E63C5",
    "code": "-- 0x0D30EB83668E63C5\nN_0x0d30eb83668e63c5(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x0dd362f14f18942a",
    "hash": "0x0DD362F14F18942A",
    "code": "-- 0x0DD362F14F18942A\nN_0x0dd362f14f18942a(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x112209ce0290c03a",
    "hash": "0x112209CE0290C03A",
    "code": "-- 0x112209CE0290C03A\nN_0x112209ce0290c03a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x1dc9b749e7ae282b",
    "hash": "0x1DC9B749E7AE282B",
    "code": "-- 0x1DC9B749E7AE282B\nN_0x1dc9b749e7ae282b(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x226c284c830d0ca8",
    "hash": "0x226C284C830D0CA8",
    "code": "-- 0x226C284C830D0CA8\nN_0x226c284c830d0ca8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x2a7cec72c3443bcc",
    "hash": "0x2A7CEC72C3443BCC",
    "code": "-- 0x2A7CEC72C3443BCC\nN_0x2a7cec72c3443bcc(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x2a93c46aab1eacc9",
    "hash": "0x2A93C46AAB1EACC9",
    "code": "-- 0x2A93C46AAB1EACC9\nN_0x2a93c46aab1eacc9(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x2afc2d19b50797f2",
    "hash": "0x2AFC2D19B50797F2",
    "code": "-- 0x2AFC2D19B50797F2\nN_0x2afc2d19b50797f2(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x2fab6614ce22e196",
    "hash": "0x2FAB6614CE22E196",
    "code": "-- 0x2FAB6614CE22E196\nN_0x2fab6614ce22e196(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x31ba138f6304fb9f",
    "hash": "0x31BA138F6304FB9F",
    "code": "-- 0x31BA138F6304FB9F\nN_0x31ba138f6304fb9f(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x4128464231e3ca0b",
    "hash": "0x4128464231E3CA0B",
    "code": "-- 0x4128464231E3CA0B\nN_0x4128464231e3ca0b(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x4c3b75694f7e0d9c",
    "hash": "0x4C3B75694F7E0D9C",
    "code": "-- 0x4C3B75694F7E0D9C\nN_0x4c3b75694f7e0d9c(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x5574637681911fda",
    "hash": "0x5574637681911FDA",
    "code": "-- 0x5574637681911FDA\nN_0x5574637681911fda(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x55a1e095db052fa5",
    "hash": "0x55A1E095DB052FA5",
    "code": "-- 0x55A1E095DB052FA5\nN_0x55a1e095db052fa5(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x5f456788b05faeac",
    "hash": "0x5F456788B05FAEAC",
    "code": "-- 0x5F456788B05FAEAC\nN_0x5f456788b05faeac(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x65482bfd0923c8a1",
    "hash": "0x65482BFD0923C8A1",
    "code": "-- 0x65482BFD0923C8A1\nN_0x65482bfd0923c8a1(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x675d19c6067cae08",
    "hash": "0x675D19C6067CAE08",
    "code": "-- 0x675D19C6067CAE08\nN_0x675d19c6067cae08(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x69ef772b192614c1",
    "hash": "0x69EF772B192614C1",
    "code": "-- 0x69EF772B192614C1\nN_0x69ef772b192614c1(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x6b7e4fb50d5f3d65",
    "hash": "0x6B7E4FB50D5F3D65",
    "code": "-- 0x6B7E4FB50D5F3D65\nN_0x6b7e4fb50d5f3d65(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x6fcf8ddea146c45b",
    "hash": "0x6FCF8DDEA146C45B",
    "code": "-- 0x6FCF8DDEA146C45B\nlocal retval --[[ boolean ]] =\n\tN_0x6fcf8ddea146c45b(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 1."
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x6fd97159fe3c971a",
    "hash": "0x6FD97159FE3C971A",
    "code": "-- 0x6FD97159FE3C971A\nN_0x6fd97159fe3c971a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x7c4fccd2e4deb394",
    "hash": "0x7C4FCCD2E4DEB394",
    "code": "-- 0x7C4FCCD2E4DEB394\nlocal retval --[[ boolean ]] =\n\tN_0x7c4fccd2e4deb394()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x870289a558348378",
    "hash": "0x870289A558348378",
    "code": "-- 0x870289A558348378\nN_0x870289a558348378(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x8e243837643d9583",
    "hash": "0x8E243837643D9583",
    "code": "-- 0x8E243837643D9583\nN_0x8e243837643d9583(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x90cd7c6871fbf1b4",
    "hash": "0x90CD7C6871FBF1B4",
    "code": "-- 0x90CD7C6871FBF1B4\nN_0x90cd7c6871fbf1b4(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x998e18ceb44487fc",
    "hash": "0x998E18CEB44487FC",
    "code": "-- 0x998E18CEB44487FC\nN_0x998e18ceb44487fc(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0x9b5016a6433a68c5",
    "hash": "0x9B5016A6433A68C5",
    "code": "-- 0x9B5016A6433A68C5\nlocal retval --[[ Any ]] =\n\tN_0x9b5016a6433a68c5()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to return 0.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xa51338e0dccd4065",
    "hash": "0xA51338E0DCCD4065",
    "code": "-- 0xA51338E0DCCD4065\nN_0xa51338e0dccd4065(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xa51b086b0b2c0f7a",
    "hash": "0xA51B086B0B2C0F7A",
    "code": "-- 0xA51B086B0B2C0F7A\nN_0xa51b086b0b2c0f7a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xa95cfb4e02390842",
    "hash": "0xA95CFB4E02390842",
    "code": "-- 0xA95CFB4E02390842\nN_0xa95cfb4e02390842(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xa95f667a755725da",
    "hash": "0xA95F667A755725DA",
    "code": "-- 0xA95F667A755725DA\nN_0xa95f667a755725da(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xb4c2ec463672474e",
    "hash": "0xB4C2EC463672474E",
    "code": "-- 0xB4C2EC463672474E\nN_0xb4c2ec463672474e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xb4deae67f35e2acd",
    "hash": "0xB4DEAE67F35E2ACD",
    "code": "-- 0xB4DEAE67F35E2ACD\nN_0xb4deae67f35e2acd(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xb5b58e24868cb09e",
    "hash": "0xB5B58E24868CB09E",
    "code": "-- 0xB5B58E24868CB09E\nN_0xb5b58e24868cb09e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xbd0efb25cca8f97a",
    "hash": "0xBD0EFB25CCA8F97A",
    "code": "-- 0xBD0EFB25CCA8F97A\nN_0xbd0efb25cca8f97a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xc6e74cf8c884c880",
    "hash": "0xC6E74CF8C884C880",
    "code": "-- 0xC6E74CF8C884C880\nN_0xc6e74cf8c884c880(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xcd0f5b5d932ae473",
    "hash": "0xCD0F5B5D932AE473",
    "code": "-- 0xCD0F5B5D932AE473\nN_0xcd0f5b5d932ae473()",
    "parameters": [],
    "returns": [],
    "description": "Does nothing (it's a nullsub).\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xcd4d66b43b1dd28d",
    "hash": "0xCD4D66B43B1DD28D",
    "code": "-- 0xCD4D66B43B1DD28D\nN_0xcd4d66b43b1dd28d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xd29334ed1a256dbf",
    "hash": "0xD29334ED1A256DBF",
    "code": "-- 0xD29334ED1A256DBF\nN_0xd29334ed1a256dbf(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xde68e30d89f97132",
    "hash": "0xDE68E30D89F97132",
    "code": "-- 0xDE68E30D89F97132\nN_0xde68e30d89f97132(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xe0f82d68c7039158",
    "hash": "0xE0F82D68C7039158",
    "code": "-- 0xE0F82D68C7039158\nN_0xe0f82d68c7039158(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xe154b48b68ef72bc",
    "hash": "0xE154B48B68EF72BC",
    "code": "-- 0xE154B48B68EF72BC\nlocal retval --[[ boolean ]] =\n\tN_0xe154b48b68ef72bc(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 1."
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xe23adc6fcb1f29ae",
    "hash": "0xE23ADC6FCB1F29AE",
    "code": "-- 0xE23ADC6FCB1F29AE\nN_0xe23adc6fcb1f29ae(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xe2bb399d90942091",
    "hash": "0xE2BB399D90942091",
    "code": "-- 0xE2BB399D90942091\nN_0xe2bb399d90942091(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xe2e244ab823b4483",
    "hash": "0xE2E244AB823B4483",
    "code": "-- 0xE2E244AB823B4483\nN_0xe2e244ab823b4483(\n\tamount --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xed5fd7af10f5e262",
    "hash": "0xED5FD7AF10F5E262",
    "code": "-- 0xED5FD7AF10F5E262\nN_0xed5fd7af10f5e262(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xed76d195e6e3bf7f",
    "hash": "0xED76D195E6E3BF7F",
    "code": "-- 0xED76D195E6E3BF7F\nN_0xed76d195e6e3bf7f(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: MONEY",
    "apiset": "API set: client",
    "name": "N_0xfa07759e6fddd7cf",
    "hash": "0xFA07759E6FDDD7CF",
    "code": "-- 0xFA07759E6FDDD7CF\nN_0xfa07759e6fddd7cf(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverBasketAddItem",
    "hash": "0xF30980718C8ED876",
    "code": "-- _NET_GAMESERVER_BASKET_ADD_ITEM\nlocal retval --[[ boolean ]], itemData --[[ Any ]] =\n\tNetGameserverBasketAddItem(\n\t\tquantity --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverBasketApplyServerData",
    "hash": "0xE1A0450ED46A7812",
    "code": "-- _NET_GAMESERVER_BASKET_APPLY_SERVER_DATA\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tNetGameserverBasketApplyServerData(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverBasketDelete",
    "hash": "0xFA336E7F40C0A0D0",
    "code": "-- _NET_GAMESERVER_BASKET_DELETE\nlocal retval --[[ boolean ]] =\n\tNetGameserverBasketDelete()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v372"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverBasketEnd",
    "hash": "0xA65568121DF2EA26",
    "code": "-- _NET_GAMESERVER_BASKET_END\nlocal retval --[[ boolean ]] =\n\tNetGameserverBasketEnd()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverBasketIsFull",
    "hash": "0x27F76CC6C55AD30E",
    "code": "-- _NET_GAMESERVER_BASKET_IS_FULL\nlocal retval --[[ boolean ]] =\n\tNetGameserverBasketIsFull()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverBasketStart",
    "hash": "0x279F08B1A4B29B7E",
    "code": "-- _NET_GAMESERVER_BASKET_START\nlocal retval --[[ boolean ]], transactionId --[[ integer ]] =\n\tNetGameserverBasketStart(\n\t\tcategoryHash --[[ Hash ]], \n\t\tactionHash --[[ Hash ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverBeginService",
    "hash": "0x3C5FD37B5499582E",
    "code": "-- _NET_GAMESERVER_BEGIN_SERVICE\nlocal retval --[[ boolean ]], transactionId --[[ integer ]] =\n\tNetGameserverBeginService(\n\t\tcategoryHash --[[ Hash ]], \n\t\titemHash --[[ Hash ]], \n\t\tactionTypeHash --[[ Hash ]], \n\t\tvalue --[[ integer ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverCatalogIsReady",
    "hash": "0x3C4487461E9B0DCB",
    "code": "-- _NET_GAMESERVER_CATALOG_IS_READY\nlocal retval --[[ boolean ]] =\n\tNetGameserverCatalogIsReady()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverCatalogItemExists",
    "hash": "0xBD4D7EAF8A30F637",
    "code": "-- _NET_GAMESERVER_CATALOG_ITEM_EXISTS\nlocal retval --[[ boolean ]] =\n\tNetGameserverCatalogItemExists(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverCatalogItemExistsHash",
    "hash": "0x247F0F73A182EA0B",
    "code": "-- _NET_GAMESERVER_CATALOG_ITEM_EXISTS_HASH\nlocal retval --[[ boolean ]] =\n\tNetGameserverCatalogItemExistsHash(\n\t\thash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverCheckoutStart",
    "hash": "0x39BE7CEA8D9CC8E6",
    "code": "-- _NET_GAMESERVER_CHECKOUT_START\nlocal retval --[[ boolean ]] =\n\tNetGameserverCheckoutStart(\n\t\ttransactionId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverDeleteCharacterSlot",
    "hash": "0x51F1A8E48C3D2F6D",
    "code": "-- _NET_GAMESERVER_DELETE_CHARACTER_SLOT\nlocal retval --[[ boolean ]] =\n\tNetGameserverDeleteCharacterSlot(\n\t\tslot --[[ integer ]], \n\t\ttransfer --[[ boolean ]], \n\t\treason --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverDeleteCharacterSlotGetStatus",
    "hash": "0x0A6D923DFFC9BD89",
    "code": "-- _NET_GAMESERVER_DELETE_CHARACTER_SLOT_GET_STATUS\nlocal retval --[[ integer ]] =\n\tNetGameserverDeleteCharacterSlotGetStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverDeleteSetTelemetryNonceSeed",
    "hash": "0x112CEF1615A1139F",
    "code": "-- _NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED\nlocal retval --[[ boolean ]] =\n\tNetGameserverDeleteSetTelemetryNonceSeed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverEndService",
    "hash": "0xE2A99A9B524BEFFF",
    "code": "-- _NET_GAMESERVER_END_SERVICE\nlocal retval --[[ boolean ]] =\n\tNetGameserverEndService(\n\t\ttransactionId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverGetBalance",
    "hash": "0x35A1B3E1D1315CFA",
    "code": "-- _NET_GAMESERVER_GET_BALANCE\nlocal retval --[[ boolean ]] =\n\tNetGameserverGetBalance(\n\t\tinventory --[[ boolean ]], \n\t\tplayerbalance --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Note: only one of the arguments can be set to true at a time"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverGetCatalogState",
    "hash": "0xCF38DAFBB49EDE5E",
    "code": "-- _NET_GAMESERVER_GET_CATALOG_STATE\nlocal retval --[[ boolean ]], state --[[ integer ]] =\n\tNetGameserverGetCatalogState()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverGetPrice",
    "hash": "0xC27009422FCCA88D",
    "code": "-- _NET_GAMESERVER_GET_PRICE\nlocal retval --[[ integer ]] =\n\tNetGameserverGetPrice(\n\t\titemHash --[[ Hash ]], \n\t\tcategoryHash --[[ Hash ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "bool is always true in game scripts"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverGetTransactionManagerData",
    "hash": "0x897433D292B44130",
    "code": "-- _NET_GAMESERVER_GET_TRANSACTION_MANAGER_DATA\nlocal retval --[[ boolean ]], p0 --[[ integer ]], p1 --[[ boolean ]] =\n\tNetGameserverGetTransactionManagerData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverIsCatalogValid",
    "hash": "0x2B949A1E6AEC8F6A",
    "code": "-- _NET_GAMESERVER_IS_CATALOG_VALID\nlocal retval --[[ boolean ]] =\n\tNetGameserverIsCatalogValid()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverIsSessionRefreshPending",
    "hash": "0x810E8431C0614BF9",
    "code": "-- _NET_GAMESERVER_IS_SESSION_REFRESH_PENDING\nlocal retval --[[ boolean ]] =\n\tNetGameserverIsSessionRefreshPending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverIsSessionValid",
    "hash": "0xB24F0944DA203D9E",
    "code": "-- _NET_GAMESERVER_IS_SESSION_VALID\nlocal retval --[[ boolean ]] =\n\tNetGameserverIsSessionValid(\n\t\tcharSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverSessionApplyReceivedData",
    "hash": "0x2F41D51BA3BCD1F1",
    "code": "-- _NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA\nlocal retval --[[ boolean ]] =\n\tNetGameserverSessionApplyReceivedData(\n\t\tcharSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverSetTelemetryNonceSeed",
    "hash": "0x9507D4271988E1AE",
    "code": "-- _NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED\nlocal retval --[[ boolean ]] =\n\tNetGameserverSetTelemetryNonceSeed(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverStartSession",
    "hash": "0xA135AC892A58FC07",
    "code": "-- _NET_GAMESERVER_START_SESSION\nlocal retval --[[ boolean ]] =\n\tNetGameserverStartSession(\n\t\tcharSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverTransferBankToWallet",
    "hash": "0xD47A2C1BA117471D",
    "code": "-- _NET_GAMESERVER_TRANSFER_BANK_TO_WALLET\nlocal retval --[[ boolean ]] =\n\tNetGameserverTransferBankToWallet(\n\t\tcharSlot --[[ integer ]], \n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverTransferCashGetStatus",
    "hash": "0x23789E777D14CE44",
    "code": "-- _NET_GAMESERVER_TRANSFER_CASH_GET_STATUS\nlocal retval --[[ integer ]] =\n\tNetGameserverTransferCashGetStatus()",
    "parameters": [],
    "returns": [],
    "description": "Same as 0x350AA5EBC03D3BD2"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverTransferCashGetStatus_2",
    "hash": "0x350AA5EBC03D3BD2",
    "code": "-- _NET_GAMESERVER_TRANSFER_CASH_GET_STATUS_2\nlocal retval --[[ integer ]] =\n\tNetGameserverTransferCashGetStatus_2()",
    "parameters": [],
    "returns": [],
    "description": "Same as 0x23789E777D14CE44"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverTransferCashSetTelemetryNonceSeed",
    "hash": "0x498C1E05CE5F7877",
    "code": "-- _NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED\nlocal retval --[[ boolean ]] =\n\tNetGameserverTransferCashSetTelemetryNonceSeed()",
    "parameters": [],
    "returns": [],
    "description": "Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverTransferWalletToBank",
    "hash": "0xC2F7FE5309181C7D",
    "code": "-- _NET_GAMESERVER_TRANSFER_WALLET_TO_BANK\nlocal retval --[[ boolean ]] =\n\tNetGameserverTransferWalletToBank(\n\t\tcharSlot --[[ integer ]], \n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "NetGameserverUseServerTransactions",
    "hash": "0x7D2708796355B20B",
    "code": "-- _NET_GAMESERVER_USE_SERVER_TRANSACTIONS\nlocal retval --[[ boolean ]] =\n\tNetGameserverUseServerTransactions()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x0395cb47b022e62c",
    "hash": "0x0395CB47B022E62C",
    "code": "-- 0x0395CB47B022E62C\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tN_0x0395cb47b022e62c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x170910093218c8b9",
    "hash": "0x170910093218C8B9",
    "code": "-- 0x170910093218C8B9\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tN_0x170910093218c8b9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x357b152ef96c30b6",
    "hash": "0x357B152EF96C30B6",
    "code": "-- 0x357B152EF96C30B6\nlocal retval --[[ Any ]] =\n\tN_0x357b152ef96c30b6()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x613f125ba3bd2eb9",
    "hash": "0x613F125BA3BD2EB9",
    "code": "-- 0x613F125BA3BD2EB9\nlocal retval --[[ boolean ]] =\n\tN_0x613f125ba3bd2eb9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x72eb7ba9b69bf6ab",
    "hash": "0x72EB7BA9B69BF6AB",
    "code": "-- 0x72EB7BA9B69BF6AB\nlocal retval --[[ boolean ]] =\n\tN_0x72eb7ba9b69bf6ab()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x74a0fd0688f1ee45",
    "hash": "0x74A0FD0688F1EE45",
    "code": "-- 0x74A0FD0688F1EE45\nlocal retval --[[ integer ]] =\n\tN_0x74a0fd0688f1ee45(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NET_GAMESERVER_*"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x79edac677ca62f81",
    "hash": "0x79EDAC677CA62F81",
    "code": "-- 0x79EDAC677CA62F81\nlocal retval --[[ boolean ]] =\n\tN_0x79edac677ca62f81(\n\t\ttransactionId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NET_GAMESERVER_*\n\nChecks if the transaction status is equal to 3.\n\nNativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0x85f6c9aba1de2bcf",
    "hash": "0x85F6C9ABA1DE2BCF",
    "code": "-- 0x85F6C9ABA1DE2BCF\nlocal retval --[[ Any ]] =\n\tN_0x85f6c9aba1de2bcf()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0xc13c38e47ea5df31",
    "hash": "0xC13C38E47EA5DF31",
    "code": "-- 0xC13C38E47EA5DF31\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tN_0xc13c38e47ea5df31()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0xc830417d630a50f9",
    "hash": "0xC830417D630A50F9",
    "code": "-- 0xC830417D630A50F9\nlocal retval --[[ boolean ]] =\n\tN_0xc830417d630a50f9(\n\t\ttransactionId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NET_GAMESERVER_*\n\nChecks if the transaction status is equal to 1.\n\nNativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: NETSHOPPING",
    "apiset": "API set: client",
    "name": "N_0xe3e5a7c64ca2c6ed",
    "hash": "0xE3E5A7C64CA2C6ED",
    "code": "-- 0xE3E5A7C64CA2C6ED\nlocal retval --[[ Any ]] =\n\tN_0xe3e5a7c64ca2c6ed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ActivateDamageTrackerOnNetworkId",
    "hash": "0xD45B1FFCCD52FF19",
    "code": "-- ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID\nActivateDamageTrackerOnNetworkId(\n\tnetID --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ActivateDamageTrackerOnPlayer",
    "hash": "0xBEC0816FF5ACBCDA",
    "code": "-- _ACTIVATE_DAMAGE_TRACKER_ON_PLAYER\nActivateDamageTrackerOnPlayer(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "BadSportPlayerLeftDetected",
    "hash": "0xEC5E3AF5289DCA81",
    "code": "-- BAD_SPORT_PLAYER_LEFT_DETECTED\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tBadSportPlayerLeftDetected(\n\t\tevent --[[ integer ]], \n\t\tamountReceived --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CanRegisterMissionEntities",
    "hash": "0x69778E7564BADE6D",
    "code": "-- CAN_REGISTER_MISSION_ENTITIES\nlocal retval --[[ boolean ]] =\n\tCanRegisterMissionEntities(\n\t\tped_amt --[[ integer ]], \n\t\tvehicle_amt --[[ integer ]], \n\t\tobject_amt --[[ integer ]], \n\t\tpickup_amt --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CanRegisterMissionObjects",
    "hash": "0x800DD4721A8B008B",
    "code": "-- CAN_REGISTER_MISSION_OBJECTS\nlocal retval --[[ boolean ]] =\n\tCanRegisterMissionObjects(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CanRegisterMissionPeds",
    "hash": "0xBCBF4FEF9FA5D781",
    "code": "-- CAN_REGISTER_MISSION_PEDS\nlocal retval --[[ boolean ]] =\n\tCanRegisterMissionPeds(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CanRegisterMissionPickups",
    "hash": "0x0A49D1CB6E34AF72",
    "code": "-- _CAN_REGISTER_MISSION_PICKUPS\nlocal retval --[[ boolean ]] =\n\tCanRegisterMissionPickups(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CanRegisterMissionVehicles",
    "hash": "0x7277F1F2E085EE74",
    "code": "-- CAN_REGISTER_MISSION_VEHICLES\nlocal retval --[[ boolean ]] =\n\tCanRegisterMissionVehicles(\n\t\tamount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ClearLaunchParams",
    "hash": "0x966DD84FB6A46017",
    "code": "-- _CLEAR_LAUNCH_PARAMS\nClearLaunchParams()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CloudCheckAvailability",
    "hash": "0x4F18196C8D38768D",
    "code": "-- CLOUD_CHECK_AVAILABILITY\nCloudCheckAvailability()",
    "parameters": [],
    "returns": [],
    "description": "Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CloudDeleteMemberFile",
    "hash": "0xC64DED7EF0D2FE37",
    "code": "-- CLOUD_DELETE_MEMBER_FILE\nlocal retval --[[ integer ]] =\n\tCloudDeleteMemberFile(\n\t\tp0 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CloudDidRequestSucceed",
    "hash": "0x3A3D5568AF297CD5",
    "code": "-- CLOUD_DID_REQUEST_SUCCEED\nlocal retval --[[ boolean ]] =\n\tCloudDidRequestSucceed(\n\t\thandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CloudGetAvailabilityCheckResult",
    "hash": "0x0B0CC10720653F3B",
    "code": "-- CLOUD_GET_AVAILABILITY_CHECK_RESULT\nlocal retval --[[ boolean ]] =\n\tCloudGetAvailabilityCheckResult()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CloudHasRequestCompleted",
    "hash": "0x4C61B39930D045DA",
    "code": "-- CLOUD_HAS_REQUEST_COMPLETED\nlocal retval --[[ boolean ]] =\n\tCloudHasRequestCompleted(\n\t\thandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "CloudIsCheckingAvailability",
    "hash": "0xC7ABAC5DE675EE3B",
    "code": "-- CLOUD_IS_CHECKING_AVAILABILITY\nlocal retval --[[ boolean ]] =\n\tCloudIsCheckingAvailability()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ConvertPosixTime",
    "hash": "0xAC97AF97FA68E5D5",
    "code": "-- CONVERT_POSIX_TIME\nlocal timeStructure --[[ Any ]] =\n\tConvertPosixTime(\n\t\tposixTime --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Takes the specified time and writes it to the structure specified in the second argument.  \nstruct date_time  \n{ \n    alignas(8) int year;  \n    alignas(8) int month;  \n    alignas(8) int day;  \n    alignas(8) int hour;  \n    alignas(8) int minute;  \n    alignas(8) int second;  \n};"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FacebookDoUnkCheck",
    "hash": "0xA75E2B6733DA5142",
    "code": "-- _FACEBOOK_DO_UNK_CHECK\nlocal retval --[[ boolean ]] =\n\tFacebookDoUnkCheck()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FacebookIsAvailable",
    "hash": "0x43865688AE10F0D7",
    "code": "-- _FACEBOOK_IS_AVAILABLE\nlocal retval --[[ boolean ]] =\n\tFacebookIsAvailable()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FacebookIsSendingData",
    "hash": "0x62B9FEC9A11F10EF",
    "code": "-- _FACEBOOK_IS_SENDING_DATA\nlocal retval --[[ boolean ]] =\n\tFacebookIsSendingData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FacebookSetCreateCharacterComplete",
    "hash": "0xDC48473142545431",
    "code": "-- _FACEBOOK_SET_CREATE_CHARACTER_COMPLETE\nlocal retval --[[ boolean ]] =\n\tFacebookSetCreateCharacterComplete()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FacebookSetHeistComplete",
    "hash": "0x098AB65B9ED9A9EC",
    "code": "-- _FACEBOOK_SET_HEIST_COMPLETE\nlocal retval --[[ boolean ]] =\n\tFacebookSetHeistComplete(\n\t\theistName --[[ string ]], \n\t\tcashEarned --[[ integer ]], \n\t\txpEarned --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FacebookSetMilestoneComplete",
    "hash": "0x0AE1F1653B554AB9",
    "code": "-- _FACEBOOK_SET_MILESTONE_COMPLETE\nlocal retval --[[ boolean ]] =\n\tFacebookSetMilestoneComplete(\n\t\tmilestoneId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "milestoneId:  \n0 = \"percentcomplete\"  \n1 = \"storycomplete\"  \n2 = \"vehicles\"  \n3 = \"properties\"  \n4 = \"psych\"  \n5 = \"mapreveal\"  \n6 = \"prologue\""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FadeOutLocalPlayer",
    "hash": "0x416DBD4CD6ED8DD2",
    "code": "-- FADE_OUT_LOCAL_PLAYER\nFadeOutLocalPlayer(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to not work in SP."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FilloutPmPlayerList",
    "hash": "0xCBBD7C4991B64809",
    "code": "-- FILLOUT_PM_PLAYER_LIST\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tFilloutPmPlayerList(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "FilloutPmPlayerListWithNames",
    "hash": "0x716B6DB9D1886106",
    "code": "-- FILLOUT_PM_PLAYER_LIST_WITH_NAMES\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tFilloutPmPlayerListWithNames(\n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCloudTimeAsInt",
    "hash": "0x9A73240B49945C76",
    "code": "-- GET_CLOUD_TIME_AS_INT\nlocal retval --[[ integer ]] =\n\tGetCloudTimeAsInt()",
    "parameters": [],
    "returns": [
      "An int representing the cloud time."
    ],
    "description": "Returns:\n\nAn int representing the cloud time.\n\nReturns POSIX timestamp.\n\nRenamed from _GET_POSIX_TIME to GET_CLOUD_TIME_AS_INT because of conflicting native names (0xDA488F299A5B164E)"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCloudTimeAsString",
    "hash": "0xF12E6CD06C73D69E",
    "code": "-- _GET_CLOUD_TIME_AS_STRING\nlocal retval --[[ string ]] =\n\tGetCloudTimeAsString()",
    "parameters": [],
    "returns": [],
    "description": "Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X)."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCommerceItemCat",
    "hash": "0x6F44CBF56D79FAC0",
    "code": "-- GET_COMMERCE_ITEM_CAT\nlocal retval --[[ string ]] =\n\tGetCommerceItemCat(\n\t\tindex --[[ integer ]], \n\t\tindex2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "index2 is unused"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCommerceItemId",
    "hash": "0x662635855957C411",
    "code": "-- GET_COMMERCE_ITEM_ID\nlocal retval --[[ string ]] =\n\tGetCommerceItemId(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCommerceItemName",
    "hash": "0xB4271092CA7EDF48",
    "code": "-- GET_COMMERCE_ITEM_NAME\nlocal retval --[[ string ]] =\n\tGetCommerceItemName(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCommerceItemNumCats",
    "hash": "0x2A7776C709904AB0",
    "code": "-- GET_COMMERCE_ITEM_NUM_CATS\nlocal retval --[[ integer ]] =\n\tGetCommerceItemNumCats(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCommerceItemTexturename",
    "hash": "0x722F5D28B61C5EA8",
    "code": "-- GET_COMMERCE_ITEM_TEXTURENAME\nlocal retval --[[ string ]] =\n\tGetCommerceItemTexturename(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 3: int p2"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetCommerceProductPrice",
    "hash": "0xCA94551B50B4932C",
    "code": "-- GET_COMMERCE_PRODUCT_PRICE\nlocal retval --[[ string ]] =\n\tGetCommerceProductPrice(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetMaxNumNetworkObjects",
    "hash": "0xC7BE335216B5EC7C",
    "code": "-- GET_MAX_NUM_NETWORK_OBJECTS\nlocal retval --[[ integer ]] =\n\tGetMaxNumNetworkObjects()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetMaxNumNetworkPeds",
    "hash": "0x0C1F7D49C39D2289",
    "code": "-- GET_MAX_NUM_NETWORK_PEDS\nlocal retval --[[ integer ]] =\n\tGetMaxNumNetworkPeds()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetMaxNumNetworkPickups",
    "hash": "0xA72835064DD63E4C",
    "code": "-- GET_MAX_NUM_NETWORK_PICKUPS\nlocal retval --[[ integer ]] =\n\tGetMaxNumNetworkPickups()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetMaxNumNetworkVehicles",
    "hash": "0x0AFCE529F69B21FF",
    "code": "-- GET_MAX_NUM_NETWORK_VEHICLES\nlocal retval --[[ integer ]] =\n\tGetMaxNumNetworkVehicles()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNetworkTime",
    "hash": "0x7A5487FE9FAA6B48",
    "code": "-- GET_NETWORK_TIME\nlocal retval --[[ integer ]] =\n\tGetNetworkTime()",
    "parameters": [],
    "returns": [
      "Returns the network time this tick, if you want a tick-agnostic version use GetNetworkTimeAccurate."
    ],
    "description": "Returns:\n\nReturns the network time this tick, if you want a tick-agnostic version use GetNetworkTimeAccurate."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNetworkTimeAccurate",
    "hash": "0x89023FBBF9200E9F",
    "code": "-- GET_NETWORK_TIME_ACCURATE\nlocal retval --[[ integer ]] =\n\tGetNetworkTimeAccurate()",
    "parameters": [],
    "returns": [
      "Returns the network time as an integer"
    ],
    "description": "Returns:\n\nReturns the network time as an integer\n\nReturns the same value as GetNetworkTime in freemode, but as opposed to GetNetworkTime it always gets the most recent time, instead of once per tick.\n\nCould be used for benchmarking since it can return times in ticks."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNumCommerceItems",
    "hash": "0xF2EAC213D5EA0623",
    "code": "-- GET_NUM_COMMERCE_ITEMS\nlocal retval --[[ integer ]] =\n\tGetNumCommerceItems()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNumCreatedMissionObjects",
    "hash": "0x12B6281B6C6706C0",
    "code": "-- GET_NUM_CREATED_MISSION_OBJECTS\nlocal retval --[[ integer ]] =\n\tGetNumCreatedMissionObjects(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNumCreatedMissionPeds",
    "hash": "0xCB215C4B56A7FAE7",
    "code": "-- GET_NUM_CREATED_MISSION_PEDS\nlocal retval --[[ integer ]] =\n\tGetNumCreatedMissionPeds(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNumCreatedMissionVehicles",
    "hash": "0x0CD9AB83489430EA",
    "code": "-- GET_NUM_CREATED_MISSION_VEHICLES\nlocal retval --[[ integer ]] =\n\tGetNumCreatedMissionVehicles(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNumReservedMissionObjects",
    "hash": "0xAA81B5F10BC43AC2",
    "code": "-- GET_NUM_RESERVED_MISSION_OBJECTS\nlocal retval --[[ integer ]] =\n\tGetNumReservedMissionObjects(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 appears to be for MP  \nNativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNumReservedMissionPeds",
    "hash": "0x1F13D5AE5CB17E17",
    "code": "-- GET_NUM_RESERVED_MISSION_PEDS\nlocal retval --[[ integer ]] =\n\tGetNumReservedMissionPeds(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 appears to be for MP  \nNativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetNumReservedMissionVehicles",
    "hash": "0xCF3A965906452031",
    "code": "-- GET_NUM_RESERVED_MISSION_VEHICLES\nlocal retval --[[ integer ]] =\n\tGetNumReservedMissionVehicles(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 appears to be for MP  \nNativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetOnlineVersion",
    "hash": "0xFCA9373EF340AC0A",
    "code": "-- _GET_ONLINE_VERSION\nlocal retval --[[ string ]] =\n\tGetOnlineVersion()",
    "parameters": [],
    "returns": [],
    "description": "Online version is defined here: update\\update.rpf\\common\\data\\version.txt\nExample:\n[ONLINE_VERSION_NUMBER]\n1.33\n_GET_ONLINE_VERSION() will return \"1.33\""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetStatusOfTextureDownload",
    "hash": "0x8BD6C6DEA20E82C6",
    "code": "-- GET_STATUS_OF_TEXTURE_DOWNLOAD\nlocal retval --[[ integer ]] =\n\tGetStatusOfTextureDownload(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "0 = succeeded\n1 = pending\n2 = failed"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetTimeAsString",
    "hash": "0x9E23B1777A927DAD",
    "code": "-- GET_TIME_AS_STRING\nlocal retval --[[ string ]] =\n\tGetTimeAsString(\n\t\ttime --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetTimeDifference",
    "hash": "0xA2C6FC031D46FFF0",
    "code": "-- GET_TIME_DIFFERENCE\nlocal retval --[[ integer ]] =\n\tGetTimeDifference(\n\t\ttimeA --[[ integer ]], \n\t\ttimeB --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Subtracts the second argument from the first."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "GetTimeOffset",
    "hash": "0x017008CCDAD48503",
    "code": "-- GET_TIME_OFFSET\nlocal retval --[[ integer ]] =\n\tGetTimeOffset(\n\t\ttimeA --[[ integer ]], \n\t\ttimeB --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Adds the first argument to the second."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "HasNetworkTimeStarted",
    "hash": "0x46718ACEEDEAFC84",
    "code": "-- HAS_NETWORK_TIME_STARTED\nlocal retval --[[ boolean ]] =\n\tHasNetworkTimeStarted()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsCommerceDataValid",
    "hash": "0xEA14EEF5B7CD2C30",
    "code": "-- IS_COMMERCE_DATA_VALID\nlocal retval --[[ boolean ]] =\n\tIsCommerceDataValid()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsCommerceStoreOpen",
    "hash": "0x2EAC52B4019E2782",
    "code": "-- IS_COMMERCE_STORE_OPEN\nlocal retval --[[ boolean ]] =\n\tIsCommerceStoreOpen()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsDamageTrackerActiveOnNetworkId",
    "hash": "0x6E192E33AD436366",
    "code": "-- IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID\nlocal retval --[[ boolean ]] =\n\tIsDamageTrackerActiveOnNetworkId(\n\t\tnetID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsDamageTrackerActiveOnPlayer",
    "hash": "0xB2092A1EAA7FD45F",
    "code": "-- _IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER\nlocal retval --[[ boolean ]] =\n\tIsDamageTrackerActiveOnPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsEntityGhostedToLocalPlayer",
    "hash": "0x21D04D7BC538C146",
    "code": "-- _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER\nlocal retval --[[ boolean ]] =\n\tIsEntityGhostedToLocalPlayer(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsNetworkIdOwnedByParticipant",
    "hash": "0xA1607996431332DF",
    "code": "-- IS_NETWORK_ID_OWNED_BY_PARTICIPANT\nlocal retval --[[ boolean ]] =\n\tIsNetworkIdOwnedByParticipant(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsPlayerInCutscene",
    "hash": "0xE73092F4157CD126",
    "code": "-- IS_PLAYER_IN_CUTSCENE\nlocal retval --[[ boolean ]] =\n\tIsPlayerInCutscene(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsSphereVisibleToAnotherMachine",
    "hash": "0xD82CF8E64C8729D8",
    "code": "-- IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE\nlocal retval --[[ boolean ]] =\n\tIsSphereVisibleToAnotherMachine(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsSphereVisibleToPlayer",
    "hash": "0xDC3A310219E5DA62",
    "code": "-- IS_SPHERE_VISIBLE_TO_PLAYER\nlocal retval --[[ boolean ]] =\n\tIsSphereVisibleToPlayer(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsStoreAvailableToUser",
    "hash": "0x883D79C4071E18B3",
    "code": "-- IS_STORE_AVAILABLE_TO_USER\nlocal retval --[[ boolean ]] =\n\tIsStoreAvailableToUser()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsTimeEqualTo",
    "hash": "0xF5BC95857BD6D512",
    "code": "-- IS_TIME_EQUAL_TO\nlocal retval --[[ boolean ]] =\n\tIsTimeEqualTo(\n\t\ttimeA --[[ integer ]], \n\t\ttimeB --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the two times are equal; otherwise returns false."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsTimeLessThan",
    "hash": "0xCB2CF5148012C8D0",
    "code": "-- IS_TIME_LESS_THAN\nlocal retval --[[ boolean ]] =\n\tIsTimeLessThan(\n\t\ttimeA --[[ integer ]], \n\t\ttimeB --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Subtracts the second argument from the first, then returns whether the result is negative."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "IsTimeMoreThan",
    "hash": "0xDE350F8651E4346C",
    "code": "-- IS_TIME_MORE_THAN\nlocal retval --[[ boolean ]] =\n\tIsTimeMoreThan(\n\t\ttimeA --[[ integer ]], \n\t\ttimeB --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Subtracts the first argument from the second, then returns whether the result is negative."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetToEnt",
    "hash": "0xBFFEAB45A9A9094A",
    "code": "-- NET_TO_ENT\nlocal retval --[[ Entity ]] =\n\tNetToEnt(\n\t\tnetHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gets the entity id of a network id"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetToObj",
    "hash": "0xD8515F5FEA14CB3F",
    "code": "-- NET_TO_OBJ\nlocal retval --[[ Object ]] =\n\tNetToObj(\n\t\tnetHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gets the object id of a network id"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetToPed",
    "hash": "0xBDCD95FC216A8B3E",
    "code": "-- NET_TO_PED\nlocal retval --[[ Ped ]] =\n\tNetToPed(\n\t\tnetHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gets the ped id of a network id"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetToVeh",
    "hash": "0x367B936610BA360C",
    "code": "-- NET_TO_VEH\nlocal retval --[[ Vehicle ]] =\n\tNetToVeh(\n\t\tnetHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAcceptInvite",
    "hash": "0x62A0296C1BB1CEB3",
    "code": "-- _NETWORK_ACCEPT_INVITE\nlocal retval --[[ boolean ]] =\n\tNetworkAcceptInvite()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_RE*\n\nTriggers a CEventNetworkInviteConfirmed event"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAcceptPresenceInvite",
    "hash": "0xFA91550DF9318B22",
    "code": "-- NETWORK_ACCEPT_PRESENCE_INVITE\nlocal retval --[[ boolean ]] =\n\tNetworkAcceptPresenceInvite(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAccessTunableBool",
    "hash": "0xAA6A47A573ABB75A",
    "code": "-- NETWORK_ACCESS_TUNABLE_BOOL\nlocal retval --[[ boolean ]] =\n\tNetworkAccessTunableBool(\n\t\ttunableContext --[[ string ]], \n\t\ttunableName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAccessTunableBoolHash",
    "hash": "0xEA16B69D93D71A45",
    "code": "-- NETWORK_ACCESS_TUNABLE_BOOL_HASH\nlocal retval --[[ boolean ]] =\n\tNetworkAccessTunableBoolHash(\n\t\ttunableContext --[[ Hash ]], \n\t\ttunableName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAccessTunableFloat",
    "hash": "0xE5608CA7BC163A5F",
    "code": "-- NETWORK_ACCESS_TUNABLE_FLOAT\nlocal retval --[[ boolean ]], value --[[ number ]] =\n\tNetworkAccessTunableFloat(\n\t\ttunableContext --[[ string ]], \n\t\ttunableName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAccessTunableFloatHash",
    "hash": "0x972BC203BBC4C4D5",
    "code": "-- NETWORK_ACCESS_TUNABLE_FLOAT_HASH\nlocal retval --[[ boolean ]], value --[[ number ]] =\n\tNetworkAccessTunableFloatHash(\n\t\ttunableContext --[[ Hash ]], \n\t\ttunableName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAccessTunableInt",
    "hash": "0x8BE1146DFD5D4468",
    "code": "-- NETWORK_ACCESS_TUNABLE_INT\nlocal retval --[[ boolean ]], value --[[ integer ]] =\n\tNetworkAccessTunableInt(\n\t\ttunableContext --[[ string ]], \n\t\ttunableName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAccessTunableIntHash",
    "hash": "0x40FCE03E50E8DBE8",
    "code": "-- NETWORK_ACCESS_TUNABLE_INT_HASH\nlocal retval --[[ boolean ]], value --[[ integer ]] =\n\tNetworkAccessTunableIntHash(\n\t\ttunableContext --[[ Hash ]], \n\t\ttunableName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkActionFollowInvite",
    "hash": "0xC88156EBB786F8D5",
    "code": "-- NETWORK_ACTION_FOLLOW_INVITE\nlocal retval --[[ Any ]] =\n\tNetworkActionFollowInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddEntityAngledArea",
    "hash": "0x376C6375BA60293A",
    "code": "-- NETWORK_ADD_ENTITY_ANGLED_AREA\nlocal retval --[[ Any ]] =\n\tNetworkAddEntityAngledArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]]\n\t)",
    "parameters": [
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area"
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\nTo remove, see: NETWORK_REMOVE_ENTITY_AREA.\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddEntityArea",
    "hash": "0x494C8FB299290269",
    "code": "-- NETWORK_ADD_ENTITY_AREA\nlocal retval --[[ Any ]] =\n\tNetworkAddEntityArea(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddEntityDisplayedBoundaries",
    "hash": "0x25B99872D588A101",
    "code": "-- NETWORK_ADD_ENTITY_DISPLAYED_BOUNDARIES\nlocal retval --[[ Any ]] =\n\tNetworkAddEntityDisplayedBoundaries(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddEntityToSynchronisedScene",
    "hash": "0xF2404D68CBC855FA",
    "code": "-- NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE\nNetworkAddEntityToSynchronisedScene(\n\tentity --[[ Entity ]], \n\tnetScene --[[ integer ]], \n\tanimDict --[[ string ]], \n\tanimName --[[ string ]], \n\tblendIn --[[ number ]], \n\tblendOut --[[ number ]], \n\tflag --[[ integer ]]\n)",
    "parameters": [
      "entity: \n\nEntity handle to add to the scene.",
      "netScene: \n\nWhich network scene to add this entity to (Returned by NETWORK_CREATE_SYNCHRONISED_SCENE)",
      "animDict: \n\nAnimation dictionary to play on this entity.",
      "animName: \n\nAnimation clip from the dictionary to play on this entity.",
      "blendIn: \n\nBlend in speed of the animation. Default is 8.0.",
      "blendOut: \n\nBlend out speed of the animation. Default is -8.0.",
      "flag: \n\nSynchronized scene flags. See NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE for more info."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nEntity handle to add to the scene.\n\nnetScene: \n\nWhich network scene to add this entity to (Returned by NETWORK_CREATE_SYNCHRONISED_SCENE)\n\nanimDict: \n\nAnimation dictionary to play on this entity.\n\nanimName: \n\nAnimation clip from the dictionary to play on this entity.\n\nblendIn: \n\nBlend in speed of the animation. Default is 8.0.\n\nblendOut: \n\nBlend out speed of the animation. Default is -8.0.\n\nflag: \n\nSynchronized scene flags. See NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE for more info.\n\nAdds an entity to a network synchronised scene."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddFollowers",
    "hash": "0x236406F60CF216D6",
    "code": "-- NETWORK_ADD_FOLLOWERS\nlocal p0 --[[ integer ]] =\n\tNetworkAddFollowers(\n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ".."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddFriend",
    "hash": "0x8E02D73914064223",
    "code": "-- NETWORK_ADD_FRIEND\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkAddFriend(\n\t\tmessage --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddMapEntityToSynchronisedScene",
    "hash": "0x45F35C0EDC33B03B",
    "code": "-- NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE\nNetworkAddMapEntityToSynchronisedScene(\n\tnetScene --[[ integer ]], \n\tmodelHash --[[ Hash ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tanimDict --[[ string ]], \n\tanimName --[[ string ]], \n\tblendInSpeed --[[ number ]], \n\tblendOutSpeed --[[ number ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [
      "netScene: \n\nNet scene ID returned by NETWORK_CREATE_SYNCHRONISED_SCENE",
      "modelHash: \n\nModel hash of the object the script should look for.",
      "x: \n\nObject X coord.",
      "y: \n\nObject Y coord.",
      "z: \n\nObject Z coord.",
      "animDict: \n\nAnim dictionary to play on this object.",
      "animName: \n\nAnim name to play on this object.",
      "blendInSpeed: \n\nFloat representing how quickly the animation should be blended into. Default is 8.0.",
      "blendOutSpeed: \n\nFloat representing how quickly the animation should be blended out of. Default is -8.0",
      "flags: \n\nSee NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE."
    ],
    "returns": [],
    "description": "Parameters:\n\nnetScene: \n\nNet scene ID returned by NETWORK_CREATE_SYNCHRONISED_SCENE\n\nmodelHash: \n\nModel hash of the object the script should look for.\n\nx: \n\nObject X coord.\n\ny: \n\nObject Y coord.\n\nz: \n\nObject Z coord.\n\nanimDict: \n\nAnim dictionary to play on this object.\n\nanimName: \n\nAnim name to play on this object.\n\nblendInSpeed: \n\nFloat representing how quickly the animation should be blended into. Default is 8.0.\n\nblendOutSpeed: \n\nFloat representing how quickly the animation should be blended out of. Default is -8.0\n\nflags: \n\nSee NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE.\n\nAdds a map entity to a network synchronized scene. This native function is utilized only once as of game build 2944 within the casino_slots script. Please note that it's only possible to add a single map entity to synchronised scenes.\n\nIt's advisable to initially locate the object and retrieve its actual coordinates using GET_CLOSEST_OBJECT_OF_TYPE.\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddPedToSynchronisedScene",
    "hash": "0x742A637471BCECD9",
    "code": "-- NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE\nNetworkAddPedToSynchronisedScene(\n\tped --[[ Ped ]], \n\tnetScene --[[ integer ]], \n\tanimDict --[[ string ]], \n\tanimClip --[[ string ]], \n\tblendInSpeed --[[ number ]], \n\tblendOutSpeed --[[ number ]], \n\tsyncedSceneFlags --[[ integer ]], \n\tragdollFlags --[[ integer ]], \n\tmoverBlendInDelta --[[ number ]], \n\tikFlags --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nPed handle to add.",
      "netScene: \n\nNetwork scene handle (Returned by NETWORK_CREATE_SYNCHRONISED_SCENE)",
      "animDict: \n\nDictionary of the animation that the ped will play. Network synchronised scenes don't require the animation dictionary to be loaded, unlike TASK_SYNCHRONIZED_SCENE.",
      "animClip: \n\nClip name from the anim dictionary that the ped will play.",
      "blendInSpeed: \n\nBlend in speed. The lower the value, the slower the blend in speed is. Default is 8.0.",
      "blendOutSpeed: \n\nBlend out speed. This should be the negative value of blendInSpeed. Default is -8.0.",
      "syncedSceneFlags: \n\nSynchronized scene flags bit field from the above table.",
      "ragdollFlags: \n\nRagdoll blocking flags. Default is 0.",
      "moverBlendInDelta: \n\nDetermines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is 1000.0.",
      "ikFlags: \n\nInverse kinematics flags. Default is 0."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed handle to add.\n\nnetScene: \n\nNetwork scene handle (Returned by NETWORK_CREATE_SYNCHRONISED_SCENE)\n\nanimDict: \n\nDictionary of the animation that the ped will play. Network synchronised scenes don't require the animation dictionary to be loaded, unlike TASK_SYNCHRONIZED_SCENE.\n\nanimClip: \n\nClip name from the anim dictionary that the ped will play.\n\nblendInSpeed: \n\nBlend in speed. The lower the value, the slower the blend in speed is. Default is 8.0.\n\nblendOutSpeed: \n\nBlend out speed. This should be the negative value of blendInSpeed. Default is -8.0.\n\nsyncedSceneFlags: \n\nSynchronized scene flags bit field from the above table.\n\nragdollFlags: \n\nRagdoll blocking flags. Default is 0.\n\nmoverBlendInDelta: \n\nDetermines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is 1000.0.\n\nikFlags: \n\nInverse kinematics flags. Default is 0.\n\nAdds a ped to a networked synchronised scene.\n\nSynchronized scene playback flags (Also works in other NETWORK_ADD_*_TO_SYNCHRONISED_SCENE natives):\n\nValue\tName\tNotes\n0\tNone\tNo flag set.\n1\tUSE_PHYSICS\tAllows the ped to have physics during the scene.\n2\tTAG_SYNC_OUT\tThe task will do a tag synchronized blend out with the movement behaviour of the ped.\n4\tDONT_INTERRUPT\tThe scene will not be interrupted by external events.\n8\tON_ABORT_STOP_SCENE\tThe scene will be stopped if the scripted task is aborted.\n16\tABORT_ON_WEAPON_DAMAGE\tThe scene will be stopped if the ped is damaged by a weapon.\n32\tBLOCK_MOVER_UPDATE\tThe task will not update the mover.\n64\tLOOP_WITHIN_SCENE\tAnimations within this scene will be looped until the scene is finished.\n128\tPRESERVE_VELOCITY\tThe task will keep it's velocity when the scene is cleaned up/stopped. Do note that the USE_PHYSICS flag must also be present.\n256\tEXPAND_PED_CAPSULE_FROM_SKELETON\tThe task will apply the ExpandPedCapsuleFromSkeleton reset flag to the ped (See SET_PED_RESET_FLAG).\n512\tACTIVATE_RAGDOLL_ON_COLLISION\tThe ped will be ragdoll if it comes in contact with an object.\n1024\tHIDE_WEAPON\tThe ped's current weapon will be hidden during the scene.\n2048\tABORT_ON_DEATH\tThe synchronised scene will be aborted if the ped dies.\n4096\tVEHICLE_ABORT_ON_LARGE_IMPACT\tIf the scene is running on a vehicle, then it will be aborted if the vehicle takes a heavy collision with another vehicle.\n8192\tVEHICLE_ALLOW_PLAYER_ENTRY\tIf the scene is on a vehicle, it allows players to enter it.\n16384\tPROCESS_ATTACHMENTS_ON_START\tAttachments will be processed at the start of the scene.\n32768\tNET_ON_EARLY_NON_PED_STOP_RETURN_TO_START\tA non-ped entity will be returned to their starting position if the scene finishes early.\n65536\tSET_PED_OUT_OF_VEHICLE_AT_START\tIf the ped is in a vehicle when the scene starts, it will be set out of the vehicle.\n131072\tNET_DISREGARD_ATTACHMENT_CHECKS\tAttachment checks will be disregarded when the scene is running.\n\nThese flags can be combined with the | operator."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddPedToSynchronisedSceneWithIk",
    "hash": "0xA5EAFE473E45C442",
    "code": "-- NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK\nNetworkAddPedToSynchronisedSceneWithIk(\n\tped --[[ Ped ]], \n\tnetSceneID --[[ integer ]], \n\tanimDict --[[ string ]], \n\tanimClip --[[ string ]], \n\tblendIn --[[ number ]], \n\tblendOut --[[ number ]], \n\tsceneFlags --[[ integer ]], \n\tragdollFlags --[[ integer ]], \n\tmoverBlendInDelta --[[ number ]], \n\tikFlags --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nIndex of the ped to add to the scene.",
      "netSceneID: \n\nNetwork scene ID returned by NETWORK_CREATE_SYNCHRONISED_SCENE.",
      "animDict: \n\nWhich anim dictionary to use on this ped.",
      "animClip: \n\nWhich clip from the anim dictionary to use on this ped.",
      "blendIn: \n\nBlend in speed of the animation. Default is 8.0.",
      "blendOut: \n\nBlend out speed of the animation. Default is -8.0.",
      "sceneFlags: \n\nSynchronized scene flags. See NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE.",
      "ragdollFlags: \n\nRagdoll blocking flags. Default is 0.",
      "moverBlendInDelta: \n\nDetermines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is 1000.0.",
      "ikFlags: \n\nInverse kinematics flags. Default is 0."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nIndex of the ped to add to the scene.\n\nnetSceneID: \n\nNetwork scene ID returned by NETWORK_CREATE_SYNCHRONISED_SCENE.\n\nanimDict: \n\nWhich anim dictionary to use on this ped.\n\nanimClip: \n\nWhich clip from the anim dictionary to use on this ped.\n\nblendIn: \n\nBlend in speed of the animation. Default is 8.0.\n\nblendOut: \n\nBlend out speed of the animation. Default is -8.0.\n\nsceneFlags: \n\nSynchronized scene flags. See NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE.\n\nragdollFlags: \n\nRagdoll blocking flags. Default is 0.\n\nmoverBlendInDelta: \n\nDetermines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is 1000.0.\n\nikFlags: \n\nInverse kinematics flags. Default is 0.\n\nAdds a ped to a networked synchronized scene but extends NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE to support IK flags. There is barely any difference between this and NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE.\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAddSynchronisedSceneCamera",
    "hash": "0xCF8BD3B0BD6D42D7",
    "code": "-- NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA\nNetworkAddSynchronisedSceneCamera(\n\tnetScene --[[ integer ]], \n\tanimDict --[[ string ]], \n\tanimName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAllocateTunablesRegistrationDataMap",
    "hash": "0xFAFC23AEE23868DB",
    "code": "-- _NETWORK_ALLOCATE_TUNABLES_REGISTRATION_DATA_MAP\nlocal retval --[[ boolean ]] =\n\tNetworkAllocateTunablesRegistrationDataMap()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAllowRemoteAttachmentModification",
    "hash": "0x267C78C60E806B9A",
    "code": "-- NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION\nNetworkAllowRemoteAttachmentModification(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nEntity handle to allow remote attachment for.",
      "toggle: \n\ntrue/false."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nEntity handle to allow remote attachment for.\n\ntoggle: \n\ntrue/false.\n\nAllows scripts to use attachment commands on entities (eg. ATTACH_ENTITY_TO_ENTITY) that are not controlled by the client.\n\nNote: This is only local and does not affect entities on other machines. This is used by the ferris wheel script to sync players on carts."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAmIBlockedByGamer",
    "hash": "0x15337C7C268A27B2",
    "code": "-- NETWORK_AM_I_BLOCKED_BY_GAMER\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkAmIBlockedByGamer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAmIBlockedByPlayer",
    "hash": "0x87F395D957D4353D",
    "code": "-- NETWORK_AM_I_BLOCKED_BY_PLAYER\nlocal retval --[[ boolean ]] =\n\tNetworkAmIBlockedByPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAmIMutedByGamer",
    "hash": "0xDF02A2C93F1F26DA",
    "code": "-- NETWORK_AM_I_MUTED_BY_GAMER\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkAmIMutedByGamer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAmIMutedByPlayer",
    "hash": "0x9D6981DFC91A8604",
    "code": "-- NETWORK_AM_I_MUTED_BY_PLAYER\nlocal retval --[[ boolean ]] =\n\tNetworkAmIMutedByPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkApplyCachedPlayerHeadBlendData",
    "hash": "0x99B72C7ABDE5C910",
    "code": "-- NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA\nlocal retval --[[ boolean ]] =\n\tNetworkApplyCachedPlayerHeadBlendData(\n\t\tped --[[ Ped ]], \n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkApplyPedScarData",
    "hash": "0xE66C690248F11150",
    "code": "-- NETWORK_APPLY_PED_SCAR_DATA\nNetworkApplyPedScarData(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkApplyTransitionParameter",
    "hash": "0x521638ADA1BA0D18",
    "code": "-- NETWORK_APPLY_TRANSITION_PARAMETER\nNetworkApplyTransitionParameter(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkApplyTransitionParameterString",
    "hash": "0xEBEFC2E77084F599",
    "code": "-- NETWORK_APPLY_TRANSITION_PARAMETER_STRING\nNetworkApplyTransitionParameterString(\n\tp0 --[[ integer ]], \n\tstring --[[ string ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkApplyVoiceProximityOverride",
    "hash": "0xDBD2056652689917",
    "code": "-- NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE\nNetworkApplyVoiceProximityOverride(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAreCutsceneEntities",
    "hash": "0x66D6A5E9C511214A",
    "code": "-- _NETWORK_ARE_CUTSCENE_ENTITIES\nlocal retval --[[ boolean ]] =\n\tNetworkAreCutsceneEntities()",
    "parameters": [],
    "returns": [],
    "description": "Getter for SET_NETWORK_CUTSCENE_ENTITIES.\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAreHandlesTheSame",
    "hash": "0x57DBA049E110F217",
    "code": "-- NETWORK_ARE_HANDLES_THE_SAME\nlocal retval --[[ boolean ]], netHandle1 --[[ integer ]], netHandle2 --[[ integer ]] =\n\tNetworkAreHandlesTheSame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAreSocialClubPoliciesCurrent",
    "hash": "0xBA9775570DB788CF",
    "code": "-- NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT\nlocal retval --[[ boolean ]] =\n\tNetworkAreSocialClubPoliciesCurrent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAreTransitionDetailsValid",
    "hash": "0x2615AA2A695930C1",
    "code": "-- NETWORK_ARE_TRANSITION_DETAILS_VALID\nlocal retval --[[ boolean ]] =\n\tNetworkAreTransitionDetailsValid(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkAttachSynchronisedSceneToEntity",
    "hash": "0x478DCBD2A98B705A",
    "code": "-- NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY\nNetworkAttachSynchronisedSceneToEntity(\n\tnetScene --[[ integer ]], \n\tentity --[[ Entity ]], \n\tbone --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkBail",
    "hash": "0x95914459A87EBA28",
    "code": "-- NETWORK_BAIL\nNetworkBail()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0\nNativeDB Added Parameter 2: int p1\nNativeDB Added Parameter 3: int p2"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkBailTransition",
    "hash": "0xEAA572036990CD1B",
    "code": "-- NETWORK_BAIL_TRANSITION\nNetworkBailTransition()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0\nNativeDB Added Parameter 2: int p1\nNativeDB Added Parameter 3: int p2"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkBailTransitionQuickmatch",
    "hash": "0x023782EFC70585EE",
    "code": "-- _NETWORK_BAIL_TRANSITION_QUICKMATCH\nNetworkBailTransitionQuickmatch()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkBlockInvites",
    "hash": "0x34F9E9049454A7A0",
    "code": "-- NETWORK_BLOCK_INVITES\nNetworkBlockInvites(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkBlockJoinQueueInvites",
    "hash": "0xCFEB8AF24FC1D0BB",
    "code": "-- NETWORK_BLOCK_JOIN_QUEUE_INVITES\nNetworkBlockJoinQueueInvites(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkBlockKickedPlayers",
    "hash": "0x6B07B9CE4D390375",
    "code": "-- _NETWORK_BLOCK_KICKED_PLAYERS\nNetworkBlockKickedPlayers(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCacheLocalPlayerHeadBlendData",
    "hash": "0xBD0BE0BFC927EAC1",
    "code": "-- NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA\nNetworkCacheLocalPlayerHeadBlendData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanAccessMultiplayer",
    "hash": "0xAF50DA1A3F8B1BA4",
    "code": "-- NETWORK_CAN_ACCESS_MULTIPLAYER\nlocal retval --[[ boolean ]], loadingState --[[ integer ]] =\n\tNetworkCanAccessMultiplayer()",
    "parameters": [],
    "returns": [],
    "description": "11 - Need to download tunables.  \n12 - Need to download background script.  \nReturns 1 if the multiplayer is loaded, otherwhise 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanBail",
    "hash": "0x580CE4438479CC61",
    "code": "-- NETWORK_CAN_BAIL\nlocal retval --[[ boolean ]] =\n\tNetworkCanBail()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanCommunicateWithGamer",
    "hash": "0xA150A4F065806B1F",
    "code": "-- NETWORK_CAN_COMMUNICATE_WITH_GAMER\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkCanCommunicateWithGamer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanCommunicateWithGamer_2",
    "hash": "0x8F5D1AD832AEB06C",
    "code": "-- _NETWORK_CAN_COMMUNICATE_WITH_GAMER_2\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkCanCommunicateWithGamer_2()",
    "parameters": [],
    "returns": [],
    "description": "Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER\n\nNETWORK_CAN_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanEnterMultiplayer",
    "hash": "0x7E782A910C362C25",
    "code": "-- NETWORK_CAN_ENTER_MULTIPLAYER\nlocal retval --[[ boolean ]] =\n\tNetworkCanEnterMultiplayer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanGamerPlayMultiplayerWithMe",
    "hash": "0x135F9B7B7ADD2185",
    "code": "-- _NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkCanGamerPlayMultiplayerWithMe()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanPlayMultiplayerWithGamer",
    "hash": "0x07DD29D5E22763F1",
    "code": "-- _NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkCanPlayMultiplayerWithGamer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanSessionEnd",
    "hash": "0x4EEBC3694E49C572",
    "code": "-- NETWORK_CAN_SESSION_END\nlocal retval --[[ boolean ]] =\n\tNetworkCanSessionEnd()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanSetWaypoint",
    "hash": "0xC927EC229934AF60",
    "code": "-- NETWORK_CAN_SET_WAYPOINT\nlocal retval --[[ boolean ]] =\n\tNetworkCanSetWaypoint()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCanViewGamerUserContent",
    "hash": "0xB57A49545BA53CE7",
    "code": "-- _NETWORK_CAN_VIEW_GAMER_USER_CONTENT\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkCanViewGamerUserContent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCancelRespawnSearch",
    "hash": "0xFB8F2A6F3DF08CBE",
    "code": "-- NETWORK_CANCEL_RESPAWN_SEARCH\nNetworkCancelRespawnSearch()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkChangeTransitionSlots",
    "hash": "0xEEEDA5E6D7080987",
    "code": "-- NETWORK_CHANGE_TRANSITION_SLOTS\nNetworkChangeTransitionSlots(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCheckCommunicationPrivileges",
    "hash": "0x83F28CE49FBBFFBA",
    "code": "-- NETWORK_CHECK_COMMUNICATION_PRIVILEGES\nlocal retval --[[ boolean ]] =\n\tNetworkCheckCommunicationPrivileges(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCheckDataManagerSucceededForHandle",
    "hash": "0x44B37CDCAE765AAE",
    "code": "-- NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkCheckDataManagerSucceededForHandle(\n\t\tfriendDataIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if the friendDataIndex in the friend data manager contains the data for the specified networkHandle"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCheckUserContentPrivileges",
    "hash": "0x595F028698072DD9",
    "code": "-- NETWORK_CHECK_USER_CONTENT_PRIVILEGES\nlocal retval --[[ boolean ]] =\n\tNetworkCheckUserContentPrivileges(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanAnimation",
    "hash": "0x729E3401F0430686",
    "code": "-- _NETWORK_CLAN_ANIMATION\nlocal retval --[[ boolean ]] =\n\tNetworkClanAnimation(\n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only documented..."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanAnyDownloadMembershipPending",
    "hash": "0xB3F64A6A91432477",
    "code": "-- NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING\nlocal retval --[[ boolean ]] =\n\tNetworkClanAnyDownloadMembershipPending()",
    "parameters": [],
    "returns": [
      "True if there are any pending downloads, false otherwise."
    ],
    "description": "Returns:\n\nTrue if there are any pending downloads, false otherwise."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanDownloadMembership",
    "hash": "0xA989044E70010ABE",
    "code": "-- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkClanDownloadMembership()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanDownloadMembershipPending",
    "hash": "0x5B9E023DC6EBEDC0",
    "code": "-- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkClanDownloadMembershipPending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanGetEmblemTxdName",
    "hash": "0x5835D9CD92E83184",
    "code": "-- NETWORK_CLAN_GET_EMBLEM_TXD_NAME\nlocal retval --[[ boolean ]], netHandle --[[ Any ]] =\n\tNetworkClanGetEmblemTxdName(\n\t\ttxdName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanGetLocalMembershipsCount",
    "hash": "0x1F471B79ACC90BEF",
    "code": "-- NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT\nlocal retval --[[ integer ]] =\n\tNetworkClanGetLocalMembershipsCount()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanGetMembership",
    "hash": "0xC8BC2011F67B3411",
    "code": "-- NETWORK_CLAN_GET_MEMBERSHIP\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]], clanMembership --[[ integer ]] =\n\tNetworkClanGetMembership(\n\t\tmembershipIndex --[[ integer ]]\n\t)",
    "parameters": [
      "networkHandle: \n\nA player network handle.",
      "clanMembership: \n\nOutput buffer for the membership data. Also known as \"desc\".",
      "membershipIndex: \n\nIf the player has multiple crews/memberships, use [0-9], or -1 to get the active crew/membership."
    ],
    "returns": [
      "Returns true on success, false otherwise."
    ],
    "description": "Parameters:\n\nnetworkHandle: \n\nA player network handle.\n\nclanMembership: \n\nOutput buffer for the membership data. Also known as \"desc\".\n\nmembershipIndex: \n\nIf the player has multiple crews/memberships, use [0-9], or -1 to get the active crew/membership.\n\nReturns:\n\nReturns true on success, false otherwise.\n\nRetrieves a membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP).\n\nTest C++ code: https://pastebin.com/CD8wni4C"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanGetMembershipCount",
    "hash": "0xAAB11F6C4ADBC2C1",
    "code": "-- NETWORK_CLAN_GET_MEMBERSHIP_COUNT\nlocal retval --[[ integer ]], p0 --[[ integer ]] =\n\tNetworkClanGetMembershipCount()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanGetMembershipDesc",
    "hash": "0x48DE78AF2C8885B8",
    "code": "-- NETWORK_CLAN_GET_MEMBERSHIP_DESC\nlocal retval --[[ boolean ]], memberDesc --[[ integer ]] =\n\tNetworkClanGetMembershipDesc(\n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanGetMembershipValid",
    "hash": "0x48A59CF88D43DF0E",
    "code": "-- NETWORK_CLAN_GET_MEMBERSHIP_VALID\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkClanGetMembershipValid(\n\t\tmembershipIndex --[[ integer ]]\n\t)",
    "parameters": [
      "networkHandle: \n\nA player network handle.",
      "membershipIndex: \n\nIf the player has multiple crews/memberships, use [0-9], or -1 to get the active crew/membership."
    ],
    "returns": [
      "Returns true if valid, false otherwise."
    ],
    "description": "Parameters:\n\nnetworkHandle: \n\nA player network handle.\n\nmembershipIndex: \n\nIf the player has multiple crews/memberships, use [0-9], or -1 to get the active crew/membership.\n\nReturns:\n\nReturns true if valid, false otherwise.\n\nChecks if a crew/membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP) is valid."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanGetUiFormattedTag",
    "hash": "0xF45352426FF3A4F0",
    "code": "-- NETWORK_CLAN_GET_UI_FORMATTED_TAG\nlocal clanDesc --[[ integer ]] =\n\tNetworkClanGetUiFormattedTag(\n\t\tbufferSize --[[ integer ]], \n\t\tformattedTag --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "bufferSize is 35 in the scripts."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanIsEmblemReady",
    "hash": "0xA134777FF7F33331",
    "code": "-- NETWORK_CLAN_IS_EMBLEM_READY\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tNetworkClanIsEmblemReady(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanIsRockstarClan",
    "hash": "0x7543BB439F63792B",
    "code": "-- NETWORK_CLAN_IS_ROCKSTAR_CLAN\nlocal retval --[[ boolean ]], clanDesc --[[ integer ]] =\n\tNetworkClanIsRockstarClan(\n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "bufferSize is 35 in the scripts."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanJoin",
    "hash": "0x9FAAA4F4FC71F87F",
    "code": "-- NETWORK_CLAN_JOIN\nlocal retval --[[ boolean ]] =\n\tNetworkClanJoin(\n\t\tclanDesc --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanPlayerGetDesc",
    "hash": "0xEEE6EACBE8874FBA",
    "code": "-- NETWORK_CLAN_PLAYER_GET_DESC\nlocal retval --[[ boolean ]], clanDesc --[[ integer ]], networkHandle --[[ integer ]] =\n\tNetworkClanPlayerGetDesc(\n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "bufferSize is 35 in the scripts.  \nbufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.  \nthe answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]  \npastebin.com/cSZniHak"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanPlayerIsActive",
    "hash": "0xB124B57F571D8F18",
    "code": "-- NETWORK_CLAN_PLAYER_IS_ACTIVE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkClanPlayerIsActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanReleaseEmblem",
    "hash": "0x113E6E3E50E286B0",
    "code": "-- NETWORK_CLAN_RELEASE_EMBLEM\nNetworkClanReleaseEmblem(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanRemoteMembershipsAreInCache",
    "hash": "0xBB6E6FEE99D866B2",
    "code": "-- NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE\nlocal retval --[[ boolean ]], p0 --[[ integer ]] =\n\tNetworkClanRemoteMembershipsAreInCache()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanRequestEmblem",
    "hash": "0x13518FF1C6B28938",
    "code": "-- NETWORK_CLAN_REQUEST_EMBLEM\nlocal retval --[[ boolean ]] =\n\tNetworkClanRequestEmblem(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClanServiceIsValid",
    "hash": "0x579CCED0265D4896",
    "code": "-- NETWORK_CLAN_SERVICE_IS_VALID\nlocal retval --[[ boolean ]] =\n\tNetworkClanServiceIsValid()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearClockTimeOverride",
    "hash": "0xD972DF67326F966E",
    "code": "-- NETWORK_CLEAR_CLOCK_TIME_OVERRIDE\nNetworkClearClockTimeOverride()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearFollowInvite",
    "hash": "0x439BFDE3CD0610F6",
    "code": "-- NETWORK_CLEAR_FOLLOW_INVITE\nlocal retval --[[ Any ]] =\n\tNetworkClearFollowInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearFollowers",
    "hash": "0x058F43EC59A8631A",
    "code": "-- NETWORK_CLEAR_FOLLOWERS\nNetworkClearFollowers()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearFoundGamers",
    "hash": "0x6D14CCEE1B40381A",
    "code": "-- NETWORK_CLEAR_FOUND_GAMERS\nNetworkClearFoundGamers()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearGetGamerStatus",
    "hash": "0x86E0660E4F5C956D",
    "code": "-- NETWORK_CLEAR_GET_GAMER_STATUS\nNetworkClearGetGamerStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearGroupActivity",
    "hash": "0x1888694923EF4591",
    "code": "-- NETWORK_CLEAR_GROUP_ACTIVITY\nNetworkClearGroupActivity()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearPropertyId",
    "hash": "0xC2B82527CA77053E",
    "code": "-- NETWORK_CLEAR_PROPERTY_ID\nNetworkClearPropertyId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearTransitionCreatorHandle",
    "hash": "0xFB3272229A82C759",
    "code": "-- NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE\nNetworkClearTransitionCreatorHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearVoiceChannel",
    "hash": "0xE036A705F989E049",
    "code": "-- NETWORK_CLEAR_VOICE_CHANNEL\nNetworkClearVoiceChannel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkClearVoiceProximityOverride",
    "hash": "0xF03755696450470C",
    "code": "-- NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE\nNetworkClearVoiceProximityOverride()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCloseTransitionMatchmaking",
    "hash": "0x43F4DBA69710E01E",
    "code": "-- NETWORK_CLOSE_TRANSITION_MATCHMAKING\nNetworkCloseTransitionMatchmaking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkConcealEntity",
    "hash": "0x1632BE0AC1E62876",
    "code": "-- _NETWORK_CONCEAL_ENTITY\nNetworkConcealEntity(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkConcealPlayer",
    "hash": "0xBBDF066252829606",
    "code": "-- NETWORK_CONCEAL_PLAYER\nNetworkConcealPlayer(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]], \n\tbAllowDamagingWhileConcealed --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is what R* uses to hide players in MP interiors.\n\nTo manage player visibility with NetworkConcealPlayer, here’s a solid approach:\n\nGeneral Population (players not in any instance):\n\nUse NetworkConcealPlayer to hide players who are in any instance. This way, general population players won’t see or interact with instance players.\n\nInstance Players (players in a specific instance):\n\nUse NetworkConcealPlayer to hide players who aren’t in the same instance. Instance players can still see and interact with the general population but not with players in other instances.\n\nThis setup keeps instance players separate from each other while allowing interaction with the general population."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkCreateSynchronisedScene",
    "hash": "0x7CD6BC4C2BBDD526",
    "code": "-- NETWORK_CREATE_SYNCHRONISED_SCENE\nlocal retval --[[ integer ]] =\n\tNetworkCreateSynchronisedScene(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\trotationOrder --[[ integer ]], \n\t\tholdLastFrame --[[ boolean ]], \n\t\tlooped --[[ boolean ]], \n\t\tphaseToStopScene --[[ number ]], \n\t\tphaseToStartScene --[[ number ]], \n\t\tanimSpeed --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX coord of the scene position (If the scene is for an object, the position should be of the object's coordinates most of the time)",
      "y: \n\nY coord of the scene position.",
      "z: \n\nZ coord of the scene position.",
      "xRot: \n\nValue x of the scene rotation.",
      "yRot: \n\nValue y of the scene rotation.",
      "zRot: \n\nValue z of the scene rotation (It's heading).",
      "rotationOrder: \n\nRotation order. Default is 2.",
      "holdLastFrame: \n\nIf true, the scene stays on the last frame once it finishes, making GetSynchronizedScenePhase keep returning 1.0. Script is expected to clean up it's memory and stop the animation if this is passed as true and the phase reaches 1.0.",
      "looped: \n\nIf true, the scene will be looped and holdLastFrame will be disregarded.",
      "phaseToStopScene: \n\nWhich phase (from 0.0 to 1.0 to stop the scene. Default is 1.0)",
      "phaseToStartScene: \n\nWhich phase (from 0.0 to 1.0 to start the scene. Default is 0.0)",
      "animSpeed: \n\nSpeed of the animation. Default is 1.0"
    ],
    "returns": [
      "Returns the network synchronized scene's handle. You can get information regarding the phase, rate etc of this synchronised scene by using local synchronized scene natives (e.g GET_SYNCHRONIZED_SCENE_PHASE). Do note that you need to get the local scene handle from the network scene handle (using NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID) and then pass the returned value to the local synchronized scene info natives."
    ],
    "description": "Parameters:\n\nx: \n\nX coord of the scene position (If the scene is for an object, the position should be of the object's coordinates most of the time)\n\ny: \n\nY coord of the scene position.\n\nz: \n\nZ coord of the scene position.\n\nxRot: \n\nValue x of the scene rotation.\n\nyRot: \n\nValue y of the scene rotation.\n\nzRot: \n\nValue z of the scene rotation (It's heading).\n\nrotationOrder: \n\nRotation order. Default is 2.\n\nholdLastFrame: \n\nIf true, the scene stays on the last frame once it finishes, making GetSynchronizedScenePhase keep returning 1.0. Script is expected to clean up it's memory and stop the animation if this is passed as true and the phase reaches 1.0.\n\nlooped: \n\nIf true, the scene will be looped and holdLastFrame will be disregarded.\n\nphaseToStopScene: \n\nWhich phase (from 0.0 to 1.0 to stop the scene. Default is 1.0)\n\nphaseToStartScene: \n\nWhich phase (from 0.0 to 1.0 to start the scene. Default is 0.0)\n\nanimSpeed: \n\nSpeed of the animation. Default is 1.0\n\nReturns:\n\nReturns the network synchronized scene's handle. You can get information regarding the phase, rate etc of this synchronised scene by using local synchronized scene natives (e.g GET_SYNCHRONIZED_SCENE_PHASE). Do note that you need to get the local scene handle from the network scene handle (using NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID) and then pass the returned value to the local synchronized scene info natives.\n\nCreates a networked synchronized scene. Be sure to actually start the scene with NETWORK_START_SYNCHRONISED_SCENE after you're done adding peds or entities to the scene."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDidFindGamersSucceed",
    "hash": "0xF9B83B77929D8863",
    "code": "-- NETWORK_DID_FIND_GAMERS_SUCCEED\nlocal retval --[[ boolean ]] =\n\tNetworkDidFindGamersSucceed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDidGetGamerStatusSucceed",
    "hash": "0x5AE17C6B0134B7F1",
    "code": "-- NETWORK_DID_GET_GAMER_STATUS_SUCCEED\nlocal retval --[[ boolean ]] =\n\tNetworkDidGetGamerStatusSucceed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDisableInvincibleFlashing",
    "hash": "0x9DD368BF06983221",
    "code": "-- NETWORK_DISABLE_INVINCIBLE_FLASHING\nNetworkDisableInvincibleFlashing(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDisableLeaveRemotePedBehind",
    "hash": "0xC505036A35AFD01B",
    "code": "-- NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND\nNetworkDisableLeaveRemotePedBehind(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDisableProximityMigration",
    "hash": "0x407091CF6037118E",
    "code": "-- NETWORK_DISABLE_PROXIMITY_MIGRATION\nNetworkDisableProximityMigration(\n\tnetID --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDisplaynamesFromHandlesStart",
    "hash": "0xD66C9E72B3CC4982",
    "code": "-- _NETWORK_DISPLAYNAMES_FROM_HANDLES_START\nlocal retval --[[ integer ]], p0 --[[ Any ]] =\n\tNetworkDisplaynamesFromHandlesStart(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to return -1."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoTransitionQuickmatch",
    "hash": "0x71FB0EBCD4915D56",
    "code": "-- NETWORK_DO_TRANSITION_QUICKMATCH\nlocal retval --[[ boolean ]] =\n\tNetworkDoTransitionQuickmatch(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 5: Any p4\nNativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoTransitionQuickmatchAsync",
    "hash": "0xA091A5E44F0072E5",
    "code": "-- NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC\nlocal retval --[[ boolean ]] =\n\tNetworkDoTransitionQuickmatchAsync(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 5: Any p4\nNativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoTransitionQuickmatchWithGroup",
    "hash": "0x9C4AB58491FDC98A",
    "code": "-- NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP\nlocal retval --[[ boolean ]], p4 --[[ Any ]] =\n\tNetworkDoTransitionQuickmatchWithGroup(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp5 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 7: Any p6\nNativeDB Added Parameter 8: Any p7"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoTransitionToFreemode",
    "hash": "0x3AAD8B2FCA1E289F",
    "code": "-- NETWORK_DO_TRANSITION_TO_FREEMODE\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkDoTransitionToFreemode(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ boolean ]], \n\t\tplayers --[[ integer ]], \n\t\tp4 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p2 is true 3/4 of the occurrences I found.  \n'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoTransitionToGame",
    "hash": "0x3E9BB38102A589B0",
    "code": "-- NETWORK_DO_TRANSITION_TO_GAME\nlocal retval --[[ boolean ]] =\n\tNetworkDoTransitionToGame(\n\t\tp0 --[[ boolean ]], \n\t\tmaxPlayers --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoTransitionToNewFreemode",
    "hash": "0x9E80A5BA8109F974",
    "code": "-- NETWORK_DO_TRANSITION_TO_NEW_FREEMODE\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tNetworkDoTransitionToNewFreemode(\n\t\tplayers --[[ integer ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoTransitionToNewGame",
    "hash": "0x4665F51EFED00034",
    "code": "-- NETWORK_DO_TRANSITION_TO_NEW_GAME\nlocal retval --[[ boolean ]] =\n\tNetworkDoTransitionToNewGame(\n\t\tp0 --[[ boolean ]], \n\t\tmaxPlayers --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoesEntityExistWithNetworkId",
    "hash": "0x18A47D074708FD68",
    "code": "-- NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID\nlocal retval --[[ boolean ]] =\n\tNetworkDoesEntityExistWithNetworkId(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoesNetworkIdExist",
    "hash": "0x38CE16C96BD11344",
    "code": "-- NETWORK_DOES_NETWORK_ID_EXIST\nlocal retval --[[ boolean ]] =\n\tNetworkDoesNetworkIdExist(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoesTunableExist",
    "hash": "0x85E5F8B9B898B20A",
    "code": "-- NETWORK_DOES_TUNABLE_EXIST\nlocal retval --[[ boolean ]] =\n\tNetworkDoesTunableExist(\n\t\ttunableContext --[[ string ]], \n\t\ttunableName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkDoesTunableExistHash",
    "hash": "0xE4E53E1419D81127",
    "code": "-- NETWORK_DOES_TUNABLE_EXIST_HASH\nlocal retval --[[ boolean ]] =\n\tNetworkDoesTunableExistHash(\n\t\ttunableContext --[[ Hash ]], \n\t\ttunableName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkEndTutorialSession",
    "hash": "0xD0AFAFF5A51D72F7",
    "code": "-- NETWORK_END_TUTORIAL_SESSION\nNetworkEndTutorialSession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkEntityAreaDoesExist",
    "hash": "0xE64A3CA08DFA37A9",
    "code": "-- NETWORK_ENTITY_AREA_DOES_EXIST\nlocal retval --[[ boolean ]] =\n\tNetworkEntityAreaDoesExist(\n\t\tareaHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkEntityAreaIsOccupied",
    "hash": "0x4A2D4E8BF4265B0F",
    "code": "-- NETWORK_ENTITY_AREA_IS_OCCUPIED\nlocal retval --[[ boolean ]] =\n\tNetworkEntityAreaIsOccupied(\n\t\tareaHandle --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkExplodeHeli",
    "hash": "0x2A5E0621DD815A9A",
    "code": "-- NETWORK_EXPLODE_HELI\nNetworkExplodeHeli(\n\theli --[[ Vehicle ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tnetScriptEntityId --[[ integer ]]\n)",
    "parameters": [
      "heli: \n\nHeli to explode",
      "isAudible:",
      "isInvisible:",
      "netScriptEntityId:"
    ],
    "returns": [],
    "description": "Parameters:\n\nheli: \n\nHeli to explode\n\nisAudible:\nisInvisible:\nnetScriptEntityId:"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkExplodeVehicle",
    "hash": "0x301A42153C9AD707",
    "code": "-- NETWORK_EXPLODE_VEHICLE\nNetworkExplodeVehicle(\n\tvehicle --[[ Vehicle ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "In the console script dumps, this is only referenced once.   \nNETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);  \n^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.  \nWhich as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?  \nam_plane_takedown.c   \nnetwork_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);  \narmenian2.c   \nnetwork_explode_vehicle(Local_80[6 <2>], 1, 0, 0);  \nfm_horde_controler.c  \nnetwork_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);  \nfm_mission_controller.c, has 6 hits so not going to list them.  \nSide note, setting the first parameter to 0 seems to mute sound or so?  \nSeems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkFadeInEntity",
    "hash": "0x1F4ED342ACEFE62D",
    "code": "-- NETWORK_FADE_IN_ENTITY\nNetworkFadeInEntity(\n\tentity --[[ Entity ]], \n\tbNetwork --[[ boolean ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to fade in",
      "bNetwork: \n\nWhen set to true the fade in will be networked."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to fade in\n\nbNetwork: \n\nWhen set to true the fade in will be networked.\n\nFade the given entity back in, usually used after the entity has been faded out with NETWORK_FADE_OUT_ENTITY\n\nWhen used on a entity which isn't invisible or faded out then the native will still work, it will just instanly make the ped invisible before fading in.\n\nAdditional Parameters:\n\nflash: If set to true the entity will flash while fading in."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkFadeOutEntity",
    "hash": "0xDE564951F95E09ED",
    "code": "-- NETWORK_FADE_OUT_ENTITY\nNetworkFadeOutEntity(\n\tentity --[[ Entity ]], \n\tnormal --[[ boolean ]], \n\tslow --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "normal - transition like when your coming out of LSC  \nslow - transition like when you walk into a mission"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkFindGamersInCrew",
    "hash": "0xE532D6811B3A4D2A",
    "code": "-- NETWORK_FIND_GAMERS_IN_CREW\nlocal retval --[[ boolean ]] =\n\tNetworkFindGamersInCrew(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkFindMatchedGamers",
    "hash": "0xF7B2CFDE5C9F700D",
    "code": "-- NETWORK_FIND_MATCHED_GAMERS\nlocal retval --[[ boolean ]] =\n\tNetworkFindMatchedGamers(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkFinishBroadcastingData",
    "hash": "0x64F62AFB081E260D",
    "code": "-- NETWORK_FINISH_BROADCASTING_DATA\nNetworkFinishBroadcastingData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkForceLocalUseOfSyncedSceneCamera",
    "hash": "0xC9B43A33D09CADA7",
    "code": "-- NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA\nNetworkForceLocalUseOfSyncedSceneCamera(\n\tsceneId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGamerHasHeadset",
    "hash": "0xF2FD55CB574BCC55",
    "code": "-- NETWORK_GAMER_HAS_HEADSET\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkGamerHasHeadset()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGamertagFromHandlePending",
    "hash": "0xB071E27958EF4CF0",
    "code": "-- NETWORK_GAMERTAG_FROM_HANDLE_PENDING\nlocal retval --[[ boolean ]] =\n\tNetworkGamertagFromHandlePending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGamertagFromHandleStart",
    "hash": "0x9F0C0A981D73FA56",
    "code": "-- NETWORK_GAMERTAG_FROM_HANDLE_START\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkGamertagFromHandleStart()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGamertagFromHandleSucceeded",
    "hash": "0xFD00798DBA7523DD",
    "code": "-- NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED\nlocal retval --[[ boolean ]] =\n\tNetworkGamertagFromHandleSucceeded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetActivityPlayerNum",
    "hash": "0x73E2B500410DA5A2",
    "code": "-- NETWORK_GET_ACTIVITY_PLAYER_NUM\nlocal retval --[[ integer ]] =\n\tNetworkGetActivityPlayerNum(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetAgeGroup",
    "hash": "0x9614B71F8ADB982B",
    "code": "-- NETWORK_GET_AGE_GROUP\nlocal retval --[[ integer ]] =\n\tNetworkGetAgeGroup()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetAverageLatencyForPlayer",
    "hash": "0xD414BE129BB81B32",
    "code": "-- _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER\nlocal retval --[[ number ]] =\n\tNetworkGetAverageLatencyForPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetAverageLatencyForPlayer_2",
    "hash": "0x0E3A041ED6AC2B45",
    "code": "-- _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2\nlocal retval --[[ number ]] =\n\tNetworkGetAverageLatencyForPlayer_2(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetAveragePacketLossForPlayer",
    "hash": "0x350C23949E43686C",
    "code": "-- _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER\nlocal retval --[[ number ]] =\n\tNetworkGetAveragePacketLossForPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_GET_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetBackgroundLoadingRecipients",
    "hash": "0x97A770BEEF227E2B",
    "code": "-- NETWORK_GET_BACKGROUND_LOADING_RECIPIENTS\nlocal retval --[[ boolean ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tNetworkGetBackgroundLoadingRecipients(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetContentModifierListId",
    "hash": "0x187382F8A3E0A6C3",
    "code": "-- NETWORK_GET_CONTENT_MODIFIER_LIST_ID\nlocal retval --[[ integer ]] =\n\tNetworkGetContentModifierListId(\n\t\tcontentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return the content modifier id (the tunables context if you want) of a specific content.  \nIt takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.  \nThe mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'  \n'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetCurrentlySelectedGamerHandleFromInviteMenu",
    "hash": "0x74881E6BCAE2327C",
    "code": "-- NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkGetCurrentlySelectedGamerHandleFromInviteMenu()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetDestroyerOfEntity",
    "hash": "0x4CACA84440FA26F6",
    "code": "-- _NETWORK_GET_DESTROYER_OF_ENTITY\nlocal retval --[[ boolean ]], weaponHash --[[ Hash ]] =\n\tNetworkGetDestroyerOfEntity(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetDestroyerOfNetworkId",
    "hash": "0x7A1ADEEF01740A24",
    "code": "-- NETWORK_GET_DESTROYER_OF_NETWORK_ID\nlocal retval --[[ integer ]], weaponHash --[[ Hash ]] =\n\tNetworkGetDestroyerOfNetworkId(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetDisplaynamesFromHandles",
    "hash": "0x58CC181719256197",
    "code": "-- _NETWORK_GET_DISPLAYNAMES_FROM_HANDLES\nlocal retval --[[ integer ]] =\n\tNetworkGetDisplaynamesFromHandles(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetEntityFromNetworkId",
    "hash": "0xCE4E5D9B0A4FF560",
    "code": "-- NETWORK_GET_ENTITY_FROM_NETWORK_ID\nlocal retval --[[ Entity ]] =\n\tNetworkGetEntityFromNetworkId(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [
      "netId: \n\nthe network id of the entity"
    ],
    "returns": [
      "The local entity handle of the network id"
    ],
    "description": "Parameters:\n\nnetId: \n\nthe network id of the entity\n\nReturns:\n\nThe local entity handle of the network id\n\nGet the local entity handle of the given network id\n\nThrough this native you can get back the entity that you previously converted to netid with NetworkGetNetworkIdFromEntity or with the ToNet natives"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetEntityIsLocal",
    "hash": "0x0991549DE4D64762",
    "code": "-- NETWORK_GET_ENTITY_IS_LOCAL\nlocal retval --[[ boolean ]] =\n\tNetworkGetEntityIsLocal(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetEntityIsNetworked",
    "hash": "0xC7827959479DCC78",
    "code": "-- NETWORK_GET_ENTITY_IS_NETWORKED\nlocal retval --[[ boolean ]] =\n\tNetworkGetEntityIsNetworked(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetEntityKillerOfPlayer",
    "hash": "0x42B2DAA6B596F5F8",
    "code": "-- NETWORK_GET_ENTITY_KILLER_OF_PLAYER\nlocal retval --[[ Entity ]], weaponHash --[[ Hash ]] =\n\tNetworkGetEntityKillerOfPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetEntityNetScriptId",
    "hash": "0x815F18AD865F057F",
    "code": "-- _NETWORK_GET_ENTITY_NET_SCRIPT_ID\nlocal retval --[[ integer ]] =\n\tNetworkGetEntityNetScriptId(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetFoundGamer",
    "hash": "0x9DCFF2AFB68B3476",
    "code": "-- NETWORK_GET_FOUND_GAMER\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkGetFoundGamer(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetFriendCount",
    "hash": "0x203F1CFD823B27A4",
    "code": "-- NETWORK_GET_FRIEND_COUNT\nlocal retval --[[ integer ]] =\n\tNetworkGetFriendCount()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetFriendName",
    "hash": "0xE11EBBB2A783FE8B",
    "code": "-- NETWORK_GET_FRIEND_NAME\nlocal retval --[[ string ]] =\n\tNetworkGetFriendName(\n\t\tfriendIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetFriendNameFromIndex",
    "hash": "0x4164F227D052E293",
    "code": "-- _NETWORK_GET_FRIEND_NAME_FROM_INDEX\nlocal retval --[[ string ]] =\n\tNetworkGetFriendNameFromIndex(\n\t\tfriendIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetGamerStatusFromQueue",
    "hash": "0x2CC848A861D01493",
    "code": "-- NETWORK_GET_GAMER_STATUS_FROM_QUEUE\nlocal retval --[[ boolean ]] =\n\tNetworkGetGamerStatusFromQueue()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetGamerStatusResult",
    "hash": "0x02A8BEC6FD9AF660",
    "code": "-- NETWORK_GET_GAMER_STATUS_RESULT\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkGetGamerStatusResult(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetGamertagFromHandle",
    "hash": "0x426141162EBE5CDB",
    "code": "-- NETWORK_GET_GAMERTAG_FROM_HANDLE\nlocal retval --[[ string ]], networkHandle --[[ integer ]] =\n\tNetworkGetGamertagFromHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetGlobalMultiplayerClock",
    "hash": "0x6D03BFBD643B2A02",
    "code": "-- NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK\nlocal hours --[[ integer ]], minutes --[[ integer ]], seconds --[[ integer ]] =\n\tNetworkGetGlobalMultiplayerClock()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetHostOfScript",
    "hash": "0x1D6A14F1F9A736FC",
    "code": "-- NETWORK_GET_HOST_OF_SCRIPT\nlocal retval --[[ Player ]] =\n\tNetworkGetHostOfScript(\n\t\tscriptName --[[ string ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "scriptName examples:  \n\"freemode\", \"AM_CR_SecurityVan\", ...  \nMost of the time, these values are used:  \np1 = -1  \np2 = 0"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetHostOfThisScript",
    "hash": "0xC7B4D79B01FA7A5C",
    "code": "-- NETWORK_GET_HOST_OF_THIS_SCRIPT\nlocal retval --[[ Player ]] =\n\tNetworkGetHostOfThisScript()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetInstanceIdOfThisScript",
    "hash": "0x638A3A81733086DB",
    "code": "-- NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT\nlocal retval --[[ integer ]] =\n\tNetworkGetInstanceIdOfThisScript()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetLastVelocityReceived",
    "hash": "0x33DE49EDF4DDE77A",
    "code": "-- _NETWORK_GET_LAST_VELOCITY_RECEIVED\nlocal retval --[[ vector3 ]] =\n\tNetworkGetLastVelocityReceived(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used by NetBlender"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetLocalHandle",
    "hash": "0xE86051786B66CD8E",
    "code": "-- NETWORK_GET_LOCAL_HANDLE\nlocal networkHandle --[[ integer ]] =\n\tNetworkGetLocalHandle(\n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Retrieves the local player's NetworkHandle* and stores it in the given buffer.  \n* Currently unknown struct"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetLocalSceneFromNetworkId",
    "hash": "0x02C40BF885C567B6",
    "code": "-- NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID\nlocal retval --[[ integer ]] =\n\tNetworkGetLocalSceneFromNetworkId(\n\t\tnetSceneId --[[ integer ]]\n\t)",
    "parameters": [
      "netSceneId: \n\nNetwork synchronised scene ID (returned by NETWORK_CREATE_SYNCHRONISED_SCENE)."
    ],
    "returns": [
      "Local synchronized scene ID. This value can be used with natives such as: GET_SYNCHRONIZED_SCENE_PHASE, GET_SYNCHRONIZED_SCENE_RATE, IS_SYNCHRONIZED_SCENE_RUNNING and more."
    ],
    "description": "Parameters:\n\nnetSceneId: \n\nNetwork synchronised scene ID (returned by NETWORK_CREATE_SYNCHRONISED_SCENE).\n\nReturns:\n\nLocal synchronized scene ID. This value can be used with natives such as: GET_SYNCHRONIZED_SCENE_PHASE, GET_SYNCHRONIZED_SCENE_RATE, IS_SYNCHRONIZED_SCENE_RUNNING and more.\n\nReturns a local synchronized scene handle of a networked synchronised scene."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetMaxFriends",
    "hash": "0xAFEBB0D5D8F687D2",
    "code": "-- NETWORK_GET_MAX_FRIENDS\nlocal retval --[[ integer ]] =\n\tNetworkGetMaxFriends()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetMaxNumParticipants",
    "hash": "0xA6C90FBC38E395EE",
    "code": "-- NETWORK_GET_MAX_NUM_PARTICIPANTS\nlocal retval --[[ integer ]] =\n\tNetworkGetMaxNumParticipants()",
    "parameters": [],
    "returns": [],
    "description": "Seems to always return 0, but it's used in quite a few loops.\nfor (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)\n    {\n        if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)\n        {\n            var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNetworkIdFromEntity",
    "hash": "0xA11700682F3AD45C",
    "code": "-- NETWORK_GET_NETWORK_ID_FROM_ENTITY\nlocal retval --[[ integer ]] =\n\tNetworkGetNetworkIdFromEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "entity: \n\nthe handle of the entity from which the network id should be taken"
    ],
    "returns": [
      "The network id of the given entity"
    ],
    "description": "Parameters:\n\nentity: \n\nthe handle of the entity from which the network id should be taken\n\nReturns:\n\nThe network id of the given entity\n\nGet the network id of the given entity\n\nAn entity network id represents a given entity for other clients, it's a handle shared between clients, can be reconverted to a client entity handle.\\ These (entity network IDs) can and will be reused, the network id will not change. If you need to refer to an entity across machines (clients, or the server), you should use its network id.\n\nRead more at Network and local IDs"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNumBodyTrackers",
    "hash": "0xD38C4A6D047C019D",
    "code": "-- _NETWORK_GET_NUM_BODY_TRACKERS\nlocal retval --[[ integer ]] =\n\tNetworkGetNumBodyTrackers()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNumConnectedPlayers",
    "hash": "0xA4A79DD2D9600654",
    "code": "-- NETWORK_GET_NUM_CONNECTED_PLAYERS\nlocal retval --[[ integer ]] =\n\tNetworkGetNumConnectedPlayers()",
    "parameters": [],
    "returns": [],
    "description": "Returns the amount of players connected in the current session. Only works when connected to a session/server."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNumFoundGamers",
    "hash": "0xA1B043EE79A916FB",
    "code": "-- NETWORK_GET_NUM_FOUND_GAMERS\nlocal retval --[[ integer ]] =\n\tNetworkGetNumFoundGamers()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNumParticipants",
    "hash": "0x18D0456E86604654",
    "code": "-- NETWORK_GET_NUM_PARTICIPANTS\nlocal retval --[[ integer ]] =\n\tNetworkGetNumParticipants()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNumPresenceInvites",
    "hash": "0xCEFA968912D0F78D",
    "code": "-- NETWORK_GET_NUM_PRESENCE_INVITES\nlocal retval --[[ integer ]] =\n\tNetworkGetNumPresenceInvites()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNumScriptParticipants",
    "hash": "0x3658E8CD94FC121A",
    "code": "-- NETWORK_GET_NUM_SCRIPT_PARTICIPANTS\nlocal retval --[[ integer ]], p0 --[[ Any ]] =\n\tNetworkGetNumScriptParticipants(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetNumUnackedForPlayer",
    "hash": "0xFF8FCF9FFC458A1C",
    "code": "-- _NETWORK_GET_NUM_UNACKED_FOR_PLAYER\nlocal retval --[[ integer ]] =\n\tNetworkGetNumUnackedForPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetOldestResendCountForPlayer",
    "hash": "0x52C1EADAF7B10302",
    "code": "-- _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER\nlocal retval --[[ integer ]] =\n\tNetworkGetOldestResendCountForPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_GET_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetParticipantIndex",
    "hash": "0x1B84DF6AF2A46938",
    "code": "-- NETWORK_GET_PARTICIPANT_INDEX\nlocal retval --[[ integer ]] =\n\tNetworkGetParticipantIndex(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlatformPartyMembers",
    "hash": "0x120364DE2845DAF8",
    "code": "-- NETWORK_GET_PLATFORM_PARTY_MEMBERS\nlocal retval --[[ integer ]], data --[[ Any ]] =\n\tNetworkGetPlatformPartyMembers(\n\t\tdataSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlatformPartyUnk",
    "hash": "0x01ABCE5E7CBDA196",
    "code": "-- _NETWORK_GET_PLATFORM_PARTY_UNK\nlocal retval --[[ integer ]] =\n\tNetworkGetPlatformPartyUnk()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlayerCoords",
    "hash": "0x125E6D638B8605D4",
    "code": "-- _NETWORK_GET_PLAYER_COORDS\nlocal retval --[[ vector3 ]] =\n\tNetworkGetPlayerCoords(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [
      "player: \n\nThe player id, MUST be another player."
    ],
    "returns": [
      "A Vector3 containing the coordinates of another player."
    ],
    "description": "Parameters:\n\nplayer: \n\nThe player id, MUST be another player.\n\nReturns:\n\nA Vector3 containing the coordinates of another player.\n\nReturns the coordinates of another player.\n\nDoes not work if you enter your own player id as p0 (will return (0.0, 0.0, 0.0) in that case)."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlayerFromGamerHandle",
    "hash": "0xCE5F689CF5A0A49D",
    "code": "-- NETWORK_GET_PLAYER_FROM_GAMER_HANDLE\nlocal retval --[[ Player ]], networkHandle --[[ integer ]] =\n\tNetworkGetPlayerFromGamerHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlayerIndex",
    "hash": "0x24FB80D107371267",
    "code": "-- NETWORK_GET_PLAYER_INDEX\nlocal retval --[[ integer ]] =\n\tNetworkGetPlayerIndex(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlayerIndexFromPed",
    "hash": "0x6C0E2E0125610278",
    "code": "-- NETWORK_GET_PLAYER_INDEX_FROM_PED\nlocal retval --[[ Player ]] =\n\tNetworkGetPlayerIndexFromPed(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the Player associated to a given Ped when in an online session."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlayerLoudness",
    "hash": "0x21A1684A25C2867F",
    "code": "-- NETWORK_GET_PLAYER_LOUDNESS\nlocal retval --[[ number ]] =\n\tNetworkGetPlayerLoudness(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlayerOwnsWaypoint",
    "hash": "0x82377B65E943F72D",
    "code": "-- NETWORK_GET_PLAYER_OWNS_WAYPOINT\nlocal retval --[[ boolean ]] =\n\tNetworkGetPlayerOwnsWaypoint(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPlayerTutorialSessionInstance",
    "hash": "0x3B39236746714134",
    "code": "-- NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE\nlocal retval --[[ integer ]] =\n\tNetworkGetPlayerTutorialSessionInstance(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPositionHashOfThisScript",
    "hash": "0x257ED0FADF750BCF",
    "code": "-- _NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT\nlocal retval --[[ Any ]] =\n\tNetworkGetPositionHashOfThisScript()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInviteContentId",
    "hash": "0x24409FC4C55CB22D",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_CONTENT_ID\nlocal retval --[[ string ]] =\n\tNetworkGetPresenceInviteContentId(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInviteFromAdmin",
    "hash": "0x3DBF2DF0AEB7D289",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN\nlocal retval --[[ boolean ]] =\n\tNetworkGetPresenceInviteFromAdmin(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInviteHandle",
    "hash": "0x38D5B0FEBB086F75",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_HANDLE\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tNetworkGetPresenceInviteHandle(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInviteId",
    "hash": "0xDFF09646E12EC386",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_ID\nlocal retval --[[ Any ]] =\n\tNetworkGetPresenceInviteId(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInviteInviter",
    "hash": "0x4962CC4AA2F345B7",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_INVITER\nlocal retval --[[ string ]] =\n\tNetworkGetPresenceInviteInviter(\n\t\tinviteIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "The Name of the inviter."
    ],
    "description": "Returns:\n\nThe Name of the inviter.\n\nReturns the Name of the inviter of the specific selected Invite."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInviteIsTournament",
    "hash": "0x8806CEBFABD3CE05",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT\nlocal retval --[[ boolean ]] =\n\tNetworkGetPresenceInviteIsTournament(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInvitePlaylistCurrent",
    "hash": "0x728C4CC7920CD102",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT\nlocal retval --[[ Any ]] =\n\tNetworkGetPresenceInvitePlaylistCurrent(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInvitePlaylistLength",
    "hash": "0xD39B3FFF8FFDD5BF",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH\nlocal retval --[[ Any ]] =\n\tNetworkGetPresenceInvitePlaylistLength(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPresenceInviteSessionId",
    "hash": "0x26E1CD96B0903D60",
    "code": "-- NETWORK_GET_PRESENCE_INVITE_SESSION_ID\nlocal retval --[[ Hash ]] =\n\tNetworkGetPresenceInviteSessionId(\n\t\tinviteIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "A hash of the session id."
    ],
    "description": "Returns:\n\nA hash of the session id.\n\nThe Native returns a hash of the session id as string from the specific invite index!"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPrimaryClanDataCancel",
    "hash": "0x042E4B70B93E6054",
    "code": "-- NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL\nNetworkGetPrimaryClanDataCancel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPrimaryClanDataClear",
    "hash": "0x9AA46BADAD0E27ED",
    "code": "-- NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR\nlocal retval --[[ Any ]] =\n\tNetworkGetPrimaryClanDataClear()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPrimaryClanDataNew",
    "hash": "0xC080FF658B2E41DA",
    "code": "-- NETWORK_GET_PRIMARY_CLAN_DATA_NEW\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tNetworkGetPrimaryClanDataNew()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPrimaryClanDataPending",
    "hash": "0xB5074DB804E28CE7",
    "code": "-- NETWORK_GET_PRIMARY_CLAN_DATA_PENDING\nlocal retval --[[ Any ]] =\n\tNetworkGetPrimaryClanDataPending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPrimaryClanDataStart",
    "hash": "0xCE86D8191B762107",
    "code": "-- NETWORK_GET_PRIMARY_CLAN_DATA_START\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkGetPrimaryClanDataStart(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetPrimaryClanDataSuccess",
    "hash": "0x5B4F04F19376A0BA",
    "code": "-- NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS\nlocal retval --[[ Any ]] =\n\tNetworkGetPrimaryClanDataSuccess()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetRandomInt",
    "hash": "0x599E4FA1F87EB5FF",
    "code": "-- NETWORK_GET_RANDOM_INT\nlocal retval --[[ integer ]] =\n\tNetworkGetRandomInt()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetRandomIntRanged",
    "hash": "0xE30CF56F1EFA5F43",
    "code": "-- NETWORK_GET_RANDOM_INT_RANGED\nlocal retval --[[ integer ]] =\n\tNetworkGetRandomIntRanged(\n\t\trangeStart --[[ integer ]], \n\t\trangeEnd --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same as GET_RANDOM_INT_IN_RANGE"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetRespawnResult",
    "hash": "0x371EA43692861CF1",
    "code": "-- NETWORK_GET_RESPAWN_RESULT\nlocal coordinates --[[ vector3 ]], heading --[[ number ]] =\n\tNetworkGetRespawnResult(\n\t\trandomInt --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range.."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetRespawnResultFlags",
    "hash": "0x6C34F1208B8923FD",
    "code": "-- NETWORK_GET_RESPAWN_RESULT_FLAGS\nlocal retval --[[ Any ]] =\n\tNetworkGetRespawnResultFlags(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetRosPrivilege_24",
    "hash": "0x593570C289A77688",
    "code": "-- _NETWORK_GET_ROS_PRIVILEGE_24\nlocal retval --[[ boolean ]] =\n\tNetworkGetRosPrivilege_24()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetRosPrivilege_25",
    "hash": "0x91B87C55093DE351",
    "code": "-- _NETWORK_GET_ROS_PRIVILEGE_25\nlocal retval --[[ boolean ]] =\n\tNetworkGetRosPrivilege_25()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetRosPrivilege_9",
    "hash": "0x66B59CFFD78467AF",
    "code": "-- _NETWORK_GET_ROS_PRIVILEGE_9\nlocal retval --[[ boolean ]] =\n\tNetworkGetRosPrivilege_9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetScriptStatus",
    "hash": "0x57D158647A6BFABF",
    "code": "-- NETWORK_GET_SCRIPT_STATUS\nlocal retval --[[ integer ]] =\n\tNetworkGetScriptStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetTalkerProximity",
    "hash": "0x84F0F13120B4E098",
    "code": "-- NETWORK_GET_TALKER_PROXIMITY\nlocal retval --[[ number ]] =\n\tNetworkGetTalkerProximity()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetTargetingMode",
    "hash": "0xDFFA5BE8381C3314",
    "code": "-- _NETWORK_GET_TARGETING_MODE\nlocal retval --[[ integer ]] =\n\tNetworkGetTargetingMode()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetThisScriptIsNetworkScript",
    "hash": "0x2910669969E9535E",
    "code": "-- NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT\nlocal retval --[[ boolean ]] =\n\tNetworkGetThisScriptIsNetworkScript()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetTimeoutTime",
    "hash": "0x5ED0356A0CE3A34F",
    "code": "-- NETWORK_GET_TIMEOUT_TIME\nlocal retval --[[ integer ]] =\n\tNetworkGetTimeoutTime()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetTotalNumPlayers",
    "hash": "0xCF61D4B4702EE9EB",
    "code": "-- NETWORK_GET_TOTAL_NUM_PLAYERS\nlocal retval --[[ integer ]] =\n\tNetworkGetTotalNumPlayers()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetTransitionHost",
    "hash": "0x65042B9774C4435E",
    "code": "-- NETWORK_GET_TRANSITION_HOST\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkGetTransitionHost()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetTransitionMembers",
    "hash": "0x73B000F7FBC55829",
    "code": "-- NETWORK_GET_TRANSITION_MEMBERS\nlocal retval --[[ integer ]], data --[[ Any ]] =\n\tNetworkGetTransitionMembers(\n\t\tdataCount --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns count."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetTunableCloudCrc",
    "hash": "0x10BD227A753B0D84",
    "code": "-- NETWORK_GET_TUNABLE_CLOUD_CRC\nlocal retval --[[ integer ]] =\n\tNetworkGetTunableCloudCrc()",
    "parameters": [],
    "returns": [],
    "description": "Actually returns the version (TUNABLE_VERSION)"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkGetUnreliableResendCountForPlayer",
    "hash": "0x3765C3A3E8192E10",
    "code": "-- _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER\nlocal retval --[[ integer ]] =\n\tNetworkGetUnreliableResendCountForPlayer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHandleFromFriend",
    "hash": "0xD45CB817D7E177D2",
    "code": "-- NETWORK_HANDLE_FROM_FRIEND\nlocal networkHandle --[[ integer ]] =\n\tNetworkHandleFromFriend(\n\t\tfriendIndex --[[ integer ]], \n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHandleFromMemberId",
    "hash": "0xA0FD21BED61E5C4C",
    "code": "-- NETWORK_HANDLE_FROM_MEMBER_ID\nlocal networkHandle --[[ integer ]] =\n\tNetworkHandleFromMemberId(\n\t\tmemberId --[[ string ]], \n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.  \n* Currently unknown struct"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHandleFromPlayer",
    "hash": "0x388EB2B86C73B6B3",
    "code": "-- NETWORK_HANDLE_FROM_PLAYER\nlocal networkHandle --[[ integer ]] =\n\tNetworkHandleFromPlayer(\n\t\tplayer --[[ Player ]], \n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.  \n* Currently unknown struct  \nExample:  \nstd::vector<UINT64> GetPlayerNetworkHandle(Player player) {  \n    const int size = 13;  \n    uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();  \n    NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);  \n    for (int i = 0; i < size; i++) {  \n        Log::Msg(\"networkhandle[%i]: %llx\", i, buffer[i]);  \n    }  \n    std::vector<UINT64> result(buffer, buffer + sizeof(buffer));  \n    return result;  \n}"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHandleFromUserId",
    "hash": "0xDCD51DD8F87AEC5C",
    "code": "-- NETWORK_HANDLE_FROM_USER_ID\nlocal networkHandle --[[ integer ]] =\n\tNetworkHandleFromUserId(\n\t\tuserId --[[ string ]], \n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.  \n* Currently unknown struct"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasAgeRestrictedProfile",
    "hash": "0x1353F87E89946207",
    "code": "-- _NETWORK_HAS_AGE_RESTRICTED_PROFILE\nlocal retval --[[ boolean ]] =\n\tNetworkHasAgeRestrictedProfile()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasCachedPlayerHeadBlendData",
    "hash": "0x237D5336A9A54108",
    "code": "-- NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA\nlocal retval --[[ boolean ]] =\n\tNetworkHasCachedPlayerHeadBlendData(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasControlOfDoor",
    "hash": "0xCB3C68ADB06195DF",
    "code": "-- NETWORK_HAS_CONTROL_OF_DOOR\nlocal retval --[[ boolean ]] =\n\tNetworkHasControlOfDoor(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasControlOfEntity",
    "hash": "0x01BF60A500E28887",
    "code": "-- NETWORK_HAS_CONTROL_OF_ENTITY\nlocal retval --[[ boolean ]] =\n\tNetworkHasControlOfEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasControlOfNetworkId",
    "hash": "0x4D36070FE0215186",
    "code": "-- NETWORK_HAS_CONTROL_OF_NETWORK_ID\nlocal retval --[[ boolean ]] =\n\tNetworkHasControlOfNetworkId(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasControlOfPickup",
    "hash": "0x5BC9495F0B3B6FA6",
    "code": "-- NETWORK_HAS_CONTROL_OF_PICKUP\nlocal retval --[[ boolean ]] =\n\tNetworkHasControlOfPickup(\n\t\tpickup --[[ Pickup ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasEntityBeenRegisteredWithThisThread",
    "hash": "0xB07D3185E11657A5",
    "code": "-- NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD\nlocal retval --[[ boolean ]] =\n\tNetworkHasEntityBeenRegisteredWithThisThread(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasFollowInvite",
    "hash": "0x76D9B976C4C09FDE",
    "code": "-- NETWORK_HAS_FOLLOW_INVITE\nlocal retval --[[ boolean ]] =\n\tNetworkHasFollowInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasGameBeenAltered",
    "hash": "0x659CF2EF7F550C4F",
    "code": "-- _NETWORK_HAS_GAME_BEEN_ALTERED\nlocal retval --[[ boolean ]] =\n\tNetworkHasGameBeenAltered()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if dinput8.dll is present in the game directory.\nYou will get following error message if that is true: \"You are attempting to access GTA Online servers with an altered version of the game.\""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasHeadset",
    "hash": "0xE870F9F1F7B4F1FA",
    "code": "-- NETWORK_HAS_HEADSET\nlocal retval --[[ boolean ]] =\n\tNetworkHasHeadset()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasInviteBeenAcked",
    "hash": "0x71DC455F5CD1C2B1",
    "code": "-- NETWORK_HAS_INVITE_BEEN_ACKED\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkHasInviteBeenAcked()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasInvitedGamer",
    "hash": "0x4D86CD31E8976ECE",
    "code": "-- NETWORK_HAS_INVITED_GAMER\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkHasInvitedGamer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasInvitedGamerToTransition",
    "hash": "0x7284A47B3540E6CF",
    "code": "-- NETWORK_HAS_INVITED_GAMER_TO_TRANSITION\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkHasInvitedGamerToTransition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasPendingInvite",
    "hash": "0xAC8C7B9B88C4A668",
    "code": "-- NETWORK_HAS_PENDING_INVITE\nlocal retval --[[ boolean ]] =\n\tNetworkHasPendingInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasPlayerStartedTransition",
    "hash": "0x9AC9CCBFA8C29795",
    "code": "-- NETWORK_HAS_PLAYER_STARTED_TRANSITION\nlocal retval --[[ boolean ]] =\n\tNetworkHasPlayerStartedTransition(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasReceivedHostBroadcastData",
    "hash": "0x5D10B3795F3FC886",
    "code": "-- NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA\nlocal retval --[[ boolean ]] =\n\tNetworkHasReceivedHostBroadcastData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasRosPrivilege",
    "hash": "0xA699957E60D80214",
    "code": "-- NETWORK_HAS_ROS_PRIVILEGE\nlocal retval --[[ boolean ]] =\n\tNetworkHasRosPrivilege(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "index is always 18 in scripts"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasRosPrivilegeEndDate",
    "hash": "0xC22912B1D85F26B1",
    "code": "-- NETWORK_HAS_ROS_PRIVILEGE_END_DATE\nlocal retval --[[ boolean ]], banType --[[ integer ]], timeData --[[ vector3 ]] =\n\tNetworkHasRosPrivilegeEndDate(\n\t\tprivilege --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasSocialClubAccount",
    "hash": "0x67A5589628E0CFF6",
    "code": "-- NETWORK_HAS_SOCIAL_CLUB_ACCOUNT\nlocal retval --[[ boolean ]] =\n\tNetworkHasSocialClubAccount()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasSocialNetworkingSharingPriv",
    "hash": "0x76BF03FADBF154F5",
    "code": "-- NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV\nlocal retval --[[ boolean ]] =\n\tNetworkHasSocialNetworkingSharingPriv()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasTransitionInviteBeenAcked",
    "hash": "0x3F9990BF5F22759C",
    "code": "-- NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkHasTransitionInviteBeenAcked()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasValidRosCredentials",
    "hash": "0x85443FF4C328F53B",
    "code": "-- NETWORK_HAS_VALID_ROS_CREDENTIALS\nlocal retval --[[ boolean ]] =\n\tNetworkHasValidRosCredentials()",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHasViewGamerUserContentResult",
    "hash": "0xCCA4318E1AB03F1F",
    "code": "-- _NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkHasViewGamerUserContentResult()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHashFromGamerHandle",
    "hash": "0x58575AC3CF2CA8EC",
    "code": "-- NETWORK_HASH_FROM_GAMER_HANDLE\nlocal retval --[[ Hash ]], networkHandle --[[ integer ]] =\n\tNetworkHashFromGamerHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHashFromPlayerHandle",
    "hash": "0xBC1D768F2F5D6C05",
    "code": "-- NETWORK_HASH_FROM_PLAYER_HANDLE\nlocal retval --[[ Hash ]] =\n\tNetworkHashFromPlayerHandle(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveCommunicationPrivileges",
    "hash": "0xAEEF48CDF5B6CE7C",
    "code": "-- NETWORK_HAVE_COMMUNICATION_PRIVILEGES\nlocal retval --[[ boolean ]] =\n\tNetworkHaveCommunicationPrivileges(\n\t\tp0 --[[ integer ]], \n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveOnlinePrivilege_2",
    "hash": "0x5EA784D197556507",
    "code": "-- _NETWORK_HAVE_ONLINE_PRIVILEGE_2\nlocal retval --[[ boolean ]] =\n\tNetworkHaveOnlinePrivilege_2()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveOnlinePrivileges",
    "hash": "0x25CB5A9F37BFD063",
    "code": "-- NETWORK_HAVE_ONLINE_PRIVILEGES\nlocal retval --[[ boolean ]] =\n\tNetworkHaveOnlinePrivileges()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveRosBannedPriv",
    "hash": "0x8020A73847E0CA7D",
    "code": "-- NETWORK_HAVE_ROS_BANNED_PRIV\nlocal retval --[[ boolean ]] =\n\tNetworkHaveRosBannedPriv()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveRosCreateTicketPriv",
    "hash": "0xA0AD7E2AF5349F61",
    "code": "-- NETWORK_HAVE_ROS_CREATE_TICKET_PRIV\nlocal retval --[[ boolean ]] =\n\tNetworkHaveRosCreateTicketPriv()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveRosLeaderboardWritePriv",
    "hash": "0x422D396F80A96547",
    "code": "-- NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV\nlocal retval --[[ boolean ]] =\n\tNetworkHaveRosLeaderboardWritePriv()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveRosMultiplayerPriv",
    "hash": "0x5F91D5D0B36AA310",
    "code": "-- NETWORK_HAVE_ROS_MULTIPLAYER_PRIV\nlocal retval --[[ boolean ]] =\n\tNetworkHaveRosMultiplayerPriv()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveRosSocialClubPriv",
    "hash": "0x606E4D3E3CCCF3EB",
    "code": "-- NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV\nlocal retval --[[ boolean ]] =\n\tNetworkHaveRosSocialClubPriv()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHaveUserContentPrivileges",
    "hash": "0x72D918C99BCACC54",
    "code": "-- NETWORK_HAVE_USER_CONTENT_PRIVILEGES\nlocal retval --[[ boolean ]] =\n\tNetworkHaveUserContentPrivileges(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkHostTransition",
    "hash": "0xA60BB5CE242BB254",
    "code": "-- NETWORK_HOST_TRANSITION\nlocal retval --[[ boolean ]] =\n\tNetworkHostTransition(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ integer ]], \n\t\tp3 --[[ integer ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ boolean ]], \n\t\tp6 --[[ boolean ]], \n\t\tp7 --[[ integer ]], \n\t\tp8 --[[ Any ]], \n\t\tp9 --[[ integer ]]\n\t)",
    "parameters": [
      "p0: \n\nUnknown int",
      "p1: \n\nUnknown int",
      "p2: \n\nUnknown int",
      "p3: \n\nUnknown int",
      "p4: \n\nUnknown always 0 in decompiled scripts",
      "p5: \n\nBOOL purpose unknown, both 0 and 1 are used in decompiled scripts.",
      "p6: \n\nBOOL purpose unknown, both 0 and 1 are used in decompiled scripts.",
      "p7: \n\nUnknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.",
      "p8: \n\nUnknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.",
      "p9: \n\nUnknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?"
    ],
    "returns": [
      "Probably a bool indicating if the transition was created."
    ],
    "description": "Parameters:\n\np0: \n\nUnknown int\n\np1: \n\nUnknown int\n\np2: \n\nUnknown int\n\np3: \n\nUnknown int\n\np4: \n\nUnknown always 0 in decompiled scripts\n\np5: \n\nBOOL purpose unknown, both 0 and 1 are used in decompiled scripts.\n\np6: \n\nBOOL purpose unknown, both 0 and 1 are used in decompiled scripts.\n\np7: \n\nUnknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.\n\np8: \n\nUnknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.\n\np9: \n\nUnknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?\n\nReturns:\n\nProbably a bool indicating if the transition was created.\n\nFrom what I can tell it looks like it does the following:\n\nCreates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.\n\nYou also need to use NetworkJoinTransition(Player player) and NetworkLaunchTransition()."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkInviteGamers",
    "hash": "0x9D80CD1D0E6327DE",
    "code": "-- NETWORK_INVITE_GAMERS\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tNetworkInviteGamers(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkInviteGamersToTransition",
    "hash": "0x4A595C32F77DFF76",
    "code": "-- NETWORK_INVITE_GAMERS_TO_TRANSITION\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkInviteGamersToTransition(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsActivitySession",
    "hash": "0x05095437424397FA",
    "code": "-- NETWORK_IS_ACTIVITY_SESSION\nlocal retval --[[ boolean ]] =\n\tNetworkIsActivitySession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsActivitySpectator",
    "hash": "0x12103B9E0C9F92FB",
    "code": "-- NETWORK_IS_ACTIVITY_SPECTATOR\nlocal retval --[[ boolean ]] =\n\tNetworkIsActivitySpectator()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsActivitySpectatorFromHandle",
    "hash": "0x2763BBAA72A7BCB9",
    "code": "-- NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsActivitySpectatorFromHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsAddingFriend",
    "hash": "0x6EA101606F6E4D81",
    "code": "-- NETWORK_IS_ADDING_FRIEND\nlocal retval --[[ Any ]] =\n\tNetworkIsAddingFriend()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsCableConnected",
    "hash": "0xEFFB25453D8600F9",
    "code": "-- NETWORK_IS_CABLE_CONNECTED\nlocal retval --[[ boolean ]] =\n\tNetworkIsCableConnected()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsChattingInPlatformParty",
    "hash": "0x8DE9945BCC9AEC52",
    "code": "-- NETWORK_IS_CHATTING_IN_PLATFORM_PARTY\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsChattingInPlatformParty()",
    "parameters": [],
    "returns": [],
    "description": "This would be nice to see if someone is in party chat, but 2 sad notes.  \n1) It only becomes true if said person is speaking in that party at the time.  \n2) It will never, become true unless you are in that party with said person."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsClockTimeOverridden",
    "hash": "0xD7C95D322FF57522",
    "code": "-- NETWORK_IS_CLOCK_TIME_OVERRIDDEN\nlocal retval --[[ boolean ]] =\n\tNetworkIsClockTimeOverridden()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsCloudAvailable",
    "hash": "0x9A4CF4F48AD77302",
    "code": "-- NETWORK_IS_CLOUD_AVAILABLE\nlocal retval --[[ boolean ]] =\n\tNetworkIsCloudAvailable()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsCloudBackgroundScriptRequestPending",
    "hash": "0x8132C0EB8B2B3293",
    "code": "-- NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING\nlocal retval --[[ boolean ]] =\n\tNetworkIsCloudBackgroundScriptRequestPending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsConnectionEndpointRelayServer",
    "hash": "0x16D3D49902F697BB",
    "code": "-- _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER\nlocal retval --[[ boolean ]] =\n\tNetworkIsConnectionEndpointRelayServer(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_IS_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsDoorNetworked",
    "hash": "0xC01E93FAC20C3346",
    "code": "-- NETWORK_IS_DOOR_NETWORKED\nlocal retval --[[ boolean ]] =\n\tNetworkIsDoorNetworked(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsEntityConcealed",
    "hash": "0x71302EC70689052A",
    "code": "-- _NETWORK_IS_ENTITY_CONCEALED\nlocal retval --[[ boolean ]] =\n\tNetworkIsEntityConcealed(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Note: This only works for vehicles, which appears to be a bug (since the setter does work for every entity type and the name is 99% correct)."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsEntityFading",
    "hash": "0x422F32CC7E56ABAD",
    "code": "-- NETWORK_IS_ENTITY_FADING\nlocal retval --[[ boolean ]] =\n\tNetworkIsEntityFading(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsFindingGamers",
    "hash": "0xDDDF64C91BFCF0AA",
    "code": "-- NETWORK_IS_FINDING_GAMERS\nlocal retval --[[ boolean ]] =\n\tNetworkIsFindingGamers()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsFriend",
    "hash": "0x1A24A179F9B31654",
    "code": "-- NETWORK_IS_FRIEND\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsFriend()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsFriendHandleOnline",
    "hash": "0x87EB7A3FFCB314DB",
    "code": "-- _NETWORK_IS_FRIEND_HANDLE_ONLINE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsFriendHandleOnline()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsFriendInMultiplayer",
    "hash": "0x57005C18827F3A28",
    "code": "-- NETWORK_IS_FRIEND_IN_MULTIPLAYER\nlocal retval --[[ boolean ]] =\n\tNetworkIsFriendInMultiplayer(\n\t\tfriendName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsFriendInSameTitle",
    "hash": "0x2EA9A3BEDF3F17B8",
    "code": "-- NETWORK_IS_FRIEND_IN_SAME_TITLE\nlocal retval --[[ boolean ]] =\n\tNetworkIsFriendInSameTitle(\n\t\tfriendName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsFriendIndexOnline",
    "hash": "0xBAD8F2A42B844821",
    "code": "-- NETWORK_IS_FRIEND_INDEX_ONLINE\nlocal retval --[[ boolean ]] =\n\tNetworkIsFriendIndexOnline(\n\t\tfriendIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsFriendOnline",
    "hash": "0x425A44533437B64D",
    "code": "-- NETWORK_IS_FRIEND_ONLINE\nlocal retval --[[ boolean ]] =\n\tNetworkIsFriendOnline(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsGameInProgress",
    "hash": "0x10FAB35428CCC9D7",
    "code": "-- NETWORK_IS_GAME_IN_PROGRESS\nlocal retval --[[ boolean ]] =\n\tNetworkIsGameInProgress()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsGamerBlockedByMe",
    "hash": "0xE944C4F5AF1B5883",
    "code": "-- NETWORK_IS_GAMER_BLOCKED_BY_ME\nlocal retval --[[ boolean ]], networkHandle --[[ Any ]] =\n\tNetworkIsGamerBlockedByMe()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsGamerInMySession",
    "hash": "0x0F10B05DDF8D16E9",
    "code": "-- NETWORK_IS_GAMER_IN_MY_SESSION\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsGamerInMySession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsGamerMutedByMe",
    "hash": "0xCE60DE011B6C7978",
    "code": "-- NETWORK_IS_GAMER_MUTED_BY_ME\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsGamerMutedByMe()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsGamerTalking",
    "hash": "0x71C33B22606CD88A",
    "code": "-- NETWORK_IS_GAMER_TALKING\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsGamerTalking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsGettingGamerStatus",
    "hash": "0x94A8394D150B013A",
    "code": "-- NETWORK_IS_GETTING_GAMER_STATUS\nlocal retval --[[ boolean ]] =\n\tNetworkIsGettingGamerStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsHandleValid",
    "hash": "0x6F79B93B0A8E4133",
    "code": "-- NETWORK_IS_HANDLE_VALID\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsHandleValid(\n\t\tbufferSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsHost",
    "hash": "0x8DB296B814EDDA07",
    "code": "-- NETWORK_IS_HOST\nlocal retval --[[ boolean ]] =\n\tNetworkIsHost()",
    "parameters": [],
    "returns": [],
    "description": "If you are host, returns true else returns false."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsHostOfThisScript",
    "hash": "0x83CD99A1E6061AB5",
    "code": "-- NETWORK_IS_HOST_OF_THIS_SCRIPT\nlocal retval --[[ boolean ]] =\n\tNetworkIsHostOfThisScript()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInMpCutscene",
    "hash": "0x6CC27C9FA2040220",
    "code": "-- NETWORK_IS_IN_MP_CUTSCENE\nlocal retval --[[ boolean ]] =\n\tNetworkIsInMpCutscene()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInParty",
    "hash": "0x966C2BC2A7FE3F30",
    "code": "-- NETWORK_IS_IN_PARTY\nlocal retval --[[ boolean ]] =\n\tNetworkIsInParty()",
    "parameters": [],
    "returns": [],
    "description": "Note according to IDA TU27 X360(Console),  \nThis native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.  \nSide note: This location just stops where it's at once jumped to.  \nScreenshot for side note,   \nh t t p ://i.imgur.com/m2ci1mF.png  \nh t t p://i.imgur.com/Z0Wx2B6.png"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInPlatformParty",
    "hash": "0x2FC5650B0271CB57",
    "code": "-- NETWORK_IS_IN_PLATFORM_PARTY\nlocal retval --[[ boolean ]] =\n\tNetworkIsInPlatformParty()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to return false."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInPlatformPartyChat",
    "hash": "0xFD8B834A8BA05048",
    "code": "-- NETWORK_IS_IN_PLATFORM_PARTY_CHAT\nlocal retval --[[ boolean ]] =\n\tNetworkIsInPlatformPartyChat()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to return false."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInSession",
    "hash": "0xCA97246103B63917",
    "code": "-- NETWORK_IS_IN_SESSION\nlocal retval --[[ boolean ]] =\n\tNetworkIsInSession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInSpectatorMode",
    "hash": "0x048746E388762E11",
    "code": "-- NETWORK_IS_IN_SPECTATOR_MODE\nlocal retval --[[ boolean ]] =\n\tNetworkIsInSpectatorMode()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInTransition",
    "hash": "0x68049AEFF83D8F0A",
    "code": "-- NETWORK_IS_IN_TRANSITION\nlocal retval --[[ boolean ]] =\n\tNetworkIsInTransition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInTutorialSession",
    "hash": "0xADA24309FE08DACF",
    "code": "-- NETWORK_IS_IN_TUTORIAL_SESSION\nlocal retval --[[ boolean ]] =\n\tNetworkIsInTutorialSession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsInactiveProfile",
    "hash": "0x7E58745504313A2E",
    "code": "-- NETWORK_IS_INACTIVE_PROFILE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsInactiveProfile()",
    "parameters": [],
    "returns": [
      "Returns true if the networkHandle is signed in on the same machine, but is not the main player."
    ],
    "description": "Returns:\n\nReturns true if the networkHandle is signed in on the same machine, but is not the main player.\n\nChecks if the networkHandle is the same as any other user that is signed in on the local machine. For example, if your console has two or more users signed in (on different controllers), the profile that is not controlling the game would be \"inactive\"."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsLocalPlayerInvincible",
    "hash": "0x8A8694B48715B000",
    "code": "-- NETWORK_IS_LOCAL_PLAYER_INVINCIBLE\nlocal retval --[[ boolean ]] =\n\tNetworkIsLocalPlayerInvincible()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsLocalTalking",
    "hash": "0xC0D2AF00BCC234CA",
    "code": "-- NETWORK_IS_LOCAL_TALKING\nlocal retval --[[ boolean ]] =\n\tNetworkIsLocalTalking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsMultiplayerDisabled",
    "hash": "0x9747292807126EDA",
    "code": "-- NETWORK_IS_MULTIPLAYER_DISABLED\nlocal retval --[[ boolean ]] =\n\tNetworkIsMultiplayerDisabled()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsNetworkIdAClone",
    "hash": "0x7242F8B741CE1086",
    "code": "-- _NETWORK_IS_NETWORK_ID_A_CLONE\nlocal retval --[[ boolean ]] =\n\tNetworkIsNetworkIdAClone(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [
      "netId: \n\nThe network id for an object or entity."
    ],
    "returns": [
      "Probably a bool, returns 1 if you don't have control over the netId entity."
    ],
    "description": "Parameters:\n\nnetId: \n\nThe network id for an object or entity.\n\nReturns:\n\nProbably a bool, returns 1 if you don't have control over the netId entity.\n\nReturns true if the specified network id is controlled by someone else."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsOfflineInvitePending",
    "hash": "0x74698374C45701D2",
    "code": "-- NETWORK_IS_OFFLINE_INVITE_PENDING\nlocal retval --[[ boolean ]] =\n\tNetworkIsOfflineInvitePending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsParticipantActive",
    "hash": "0x6FF8FF40B6357D45",
    "code": "-- NETWORK_IS_PARTICIPANT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tNetworkIsParticipantActive(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPartyMember",
    "hash": "0x676ED266AADD31E0",
    "code": "-- NETWORK_IS_PARTY_MEMBER\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsPartyMember()",
    "parameters": [],
    "returns": [],
    "description": "Note according to IDA TU27 X360(Console),  \nThis native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.  \nSide note: This location just stops where it's at once jumped to.  \nScreenshot for side note,   \nh t t p ://i.imgur.com/m2ci1mF.png  \nh t t p://i.imgur.com/Z0Wx2B6.png"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPendingFriend",
    "hash": "0x0BE73DA6984A6E33",
    "code": "-- NETWORK_IS_PENDING_FRIEND\nlocal retval --[[ Any ]] =\n\tNetworkIsPendingFriend(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerAParticipant",
    "hash": "0x3CA58F6CB7CBD784",
    "code": "-- NETWORK_IS_PLAYER_A_PARTICIPANT\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerAParticipant(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerAParticipantOnScript",
    "hash": "0x1AD5B71586B94820",
    "code": "-- NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerAParticipantOnScript(\n\t\tplayer1 --[[ Player ]], \n\t\tscript --[[ string ]], \n\t\tplayer2 --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerActive",
    "hash": "0xB8DFD30D6973E135",
    "code": "-- NETWORK_IS_PLAYER_ACTIVE\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerActive(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerBlockedByMe",
    "hash": "0x57AF1F8E27483721",
    "code": "-- NETWORK_IS_PLAYER_BLOCKED_BY_ME\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerBlockedByMe(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerConcealed",
    "hash": "0x919B3C98ED8292F9",
    "code": "-- NETWORK_IS_PLAYER_CONCEALED\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerConcealed(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerConnected",
    "hash": "0x93DC1BE4E1ABE9D1",
    "code": "-- NETWORK_IS_PLAYER_CONNECTED\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerConnected(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerEqualToIndex",
    "hash": "0x9DE986FC9A87C474",
    "code": "-- _NETWORK_IS_PLAYER_EQUAL_TO_INDEX\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerEqualToIndex(\n\t\tplayer --[[ Player ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_ARE_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerFading",
    "hash": "0x631DC5DFF4B110E3",
    "code": "-- NETWORK_IS_PLAYER_FADING\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerFading(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerInMpCutscene",
    "hash": "0x63F9EE203C3619F2",
    "code": "-- NETWORK_IS_PLAYER_IN_MP_CUTSCENE\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerInMpCutscene(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerMutedByMe",
    "hash": "0x8C71288AE68EDE39",
    "code": "-- NETWORK_IS_PLAYER_MUTED_BY_ME\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerMutedByMe(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPlayerTalking",
    "hash": "0x031E11F3D447647E",
    "code": "-- NETWORK_IS_PLAYER_TALKING\nlocal retval --[[ boolean ]] =\n\tNetworkIsPlayerTalking(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returns true if someone is screaming or talking in a microphone"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsPsnAvailable",
    "hash": "0x8D11E61A4ABF49CC",
    "code": "-- _NETWORK_IS_PSN_AVAILABLE\nlocal retval --[[ boolean ]] =\n\tNetworkIsPsnAvailable()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsScriptActive",
    "hash": "0x9D40DF90FAD26098",
    "code": "-- NETWORK_IS_SCRIPT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tNetworkIsScriptActive(\n\t\tscriptName --[[ string ]], \n\t\tplayer --[[ Player ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsScriptActiveByHash",
    "hash": "0xDA7DE67F5FE5EE13",
    "code": "-- _NETWORK_IS_SCRIPT_ACTIVE_BY_HASH\nlocal retval --[[ boolean ]] =\n\tNetworkIsScriptActiveByHash(\n\t\tscriptHash --[[ Hash ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2245"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsSessionActive",
    "hash": "0xD83C2B94E7508980",
    "code": "-- NETWORK_IS_SESSION_ACTIVE\nlocal retval --[[ boolean ]] =\n\tNetworkIsSessionActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsSessionBusy",
    "hash": "0xF4435D66A8E2905E",
    "code": "-- NETWORK_IS_SESSION_BUSY\nlocal retval --[[ boolean ]] =\n\tNetworkIsSessionBusy()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsSessionStarted",
    "hash": "0x9DE624D2FC4B603F",
    "code": "-- NETWORK_IS_SESSION_STARTED\nlocal retval --[[ boolean ]] =\n\tNetworkIsSessionStarted()",
    "parameters": [],
    "returns": [],
    "description": "This checks if player is playing on gta online or not.  \nPlease add an if and block your mod if this is \"true\"."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsSignedIn",
    "hash": "0x054354A99211EB96",
    "code": "-- NETWORK_IS_SIGNED_IN\nlocal retval --[[ boolean ]] =\n\tNetworkIsSignedIn()",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the player is signed into Social Club."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsSignedOnline",
    "hash": "0x1077788E268557C2",
    "code": "-- NETWORK_IS_SIGNED_ONLINE\nlocal retval --[[ boolean ]] =\n\tNetworkIsSignedOnline()",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the game is not in offline mode.  \nseemed not to work for some ppl"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTextChatActive",
    "hash": "0x5FCF4D7069B09026",
    "code": "-- _NETWORK_IS_TEXT_CHAT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tNetworkIsTextChatActive()",
    "parameters": [],
    "returns": [],
    "description": "Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsThisScriptMarked",
    "hash": "0xD1110739EEADB592",
    "code": "-- _NETWORK_IS_THIS_SCRIPT_MARKED\nlocal retval --[[ boolean ]] =\n\tNetworkIsThisScriptMarked(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionBusy",
    "hash": "0x520F3282A53D26B7",
    "code": "-- NETWORK_IS_TRANSITION_BUSY\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionBusy()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionClosedCrew",
    "hash": "0x0DBD5D7E3C5BEC3B",
    "code": "-- NETWORK_IS_TRANSITION_CLOSED_CREW\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionClosedCrew()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionClosedFriends",
    "hash": "0x6512765E3BE78C50",
    "code": "-- NETWORK_IS_TRANSITION_CLOSED_FRIENDS\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionClosedFriends()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionHost",
    "hash": "0x0B824797C9BF2159",
    "code": "-- NETWORK_IS_TRANSITION_HOST\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionHost()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionHostFromHandle",
    "hash": "0x6B5C83BA3EFE6A10",
    "code": "-- NETWORK_IS_TRANSITION_HOST_FROM_HANDLE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkIsTransitionHostFromHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionMatchmaking",
    "hash": "0x292564C735375EDF",
    "code": "-- NETWORK_IS_TRANSITION_MATCHMAKING\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionMatchmaking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionOpenToMatchmaking",
    "hash": "0x37A4494483B9F5C9",
    "code": "-- NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionOpenToMatchmaking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionPrivate",
    "hash": "0x5A6AA44FF8E931E6",
    "code": "-- NETWORK_IS_TRANSITION_PRIVATE\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionPrivate()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionSolo",
    "hash": "0x5DC577201723960A",
    "code": "-- NETWORK_IS_TRANSITION_SOLO\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionSolo()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionStarted",
    "hash": "0x53FA83401D9C07FE",
    "code": "-- NETWORK_IS_TRANSITION_STARTED\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionStarted()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionToGame",
    "hash": "0x9D7696D8F4FA6CB7",
    "code": "-- NETWORK_IS_TRANSITION_TO_GAME\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionToGame()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTransitionVisibilityLocked",
    "hash": "0xD0A484CB2F829FBE",
    "code": "-- NETWORK_IS_TRANSITION_VISIBILITY_LOCKED\nlocal retval --[[ boolean ]] =\n\tNetworkIsTransitionVisibilityLocked()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTunableCloudRequestPending",
    "hash": "0x0467C11ED88B7D28",
    "code": "-- NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING\nlocal retval --[[ boolean ]] =\n\tNetworkIsTunableCloudRequestPending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkIsTutorialSessionChangePending",
    "hash": "0x35F0B98A8387274D",
    "code": "-- NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING\nlocal retval --[[ boolean ]] =\n\tNetworkIsTutorialSessionChangePending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkJoinGroupActivity",
    "hash": "0xA06509A691D12BE4",
    "code": "-- NETWORK_JOIN_GROUP_ACTIVITY\nlocal retval --[[ Any ]] =\n\tNetworkJoinGroupActivity()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkJoinPreviouslyFailedSession",
    "hash": "0x59DF79317F85A7E0",
    "code": "-- NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION\nlocal retval --[[ boolean ]] =\n\tNetworkJoinPreviouslyFailedSession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkJoinPreviouslyFailedTransition",
    "hash": "0xFFE1E5B792D92B34",
    "code": "-- NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION\nlocal retval --[[ boolean ]] =\n\tNetworkJoinPreviouslyFailedTransition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkJoinTransition",
    "hash": "0x9D060B08CD63321A",
    "code": "-- NETWORK_JOIN_TRANSITION\nlocal retval --[[ boolean ]] =\n\tNetworkJoinTransition(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "int handle[76];  \nNETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);  \nPlayer uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);  \nNETWORK_JOIN_TRANSITION(uVar2);  \n\t\tnothing doin."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkLaunchTransition",
    "hash": "0x2DCF46CB1A4F0884",
    "code": "-- NETWORK_LAUNCH_TRANSITION\nlocal retval --[[ boolean ]] =\n\tNetworkLaunchTransition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkLeaveTransition",
    "hash": "0xD23A1A815D21DB19",
    "code": "-- NETWORK_LEAVE_TRANSITION\nlocal retval --[[ boolean ]] =\n\tNetworkLeaveTransition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkMarkTransitionGamerAsFullyJoined",
    "hash": "0x5728BB6D63E3FF1D",
    "code": "-- NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkMarkTransitionGamerAsFullyJoined()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkMemberIdFromGamerHandle",
    "hash": "0xC82630132081BB6F",
    "code": "-- NETWORK_MEMBER_ID_FROM_GAMER_HANDLE\nlocal retval --[[ string ]], networkHandle --[[ integer ]] =\n\tNetworkMemberIdFromGamerHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOpenTransitionMatchmaking",
    "hash": "0x2B3A8F7CA3A38FDE",
    "code": "-- NETWORK_OPEN_TRANSITION_MATCHMAKING\nNetworkOpenTransitionMatchmaking()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideChatRestrictions",
    "hash": "0x3039AE5AD2C9C0C4",
    "code": "-- NETWORK_OVERRIDE_CHAT_RESTRICTIONS\nNetworkOverrideChatRestrictions(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Could possibly bypass being muted or automatically muted"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideClockMillisecondsPerGameMinute",
    "hash": "0x42BF1D2E723B6D7E",
    "code": "-- _NETWORK_OVERRIDE_CLOCK_MILLISECONDS_PER_GAME_MINUTE\nNetworkOverrideClockMillisecondsPerGameMinute(\n\tms --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideClockTime",
    "hash": "0xE679E3E06E363892",
    "code": "-- NETWORK_OVERRIDE_CLOCK_TIME\nNetworkOverrideClockTime(\n\thours --[[ integer ]], \n\tminutes --[[ integer ]], \n\tseconds --[[ integer ]]\n)",
    "parameters": [
      "hours: \n\nThe hour to set (0-23).",
      "minutes: \n\nThe minute to set (0-59).",
      "seconds: \n\nThe second to set (0-59)."
    ],
    "returns": [],
    "description": "Parameters:\n\nhours: \n\nThe hour to set (0-23).\n\nminutes: \n\nThe minute to set (0-59).\n\nseconds: \n\nThe second to set (0-59).\n\nOverrides the game clock time for the local player, allowing for manipulation of the in-game time. This native is effective in both multiplayer and singleplayer modes.\n\nNote: Passing wrong data (e.g. hours above 23) will cause the game to crash."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideCoordsAndHeading",
    "hash": "0xA7E30DE9272B6D49",
    "code": "-- NETWORK_OVERRIDE_COORDS_AND_HEADING\nNetworkOverrideCoordsAndHeading(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideReceiveRestrictions",
    "hash": "0xDDF73E2B1FEC5AB4",
    "code": "-- NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS\nNetworkOverrideReceiveRestrictions(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "R* uses this to hear all player when spectating.   \nIt allows you to hear other online players when their chat is on none, crew and or friends"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideReceiveRestrictionsAll",
    "hash": "0x0FF2862B61A58AF9",
    "code": "-- NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL\nNetworkOverrideReceiveRestrictionsAll(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p0 is always false in scripts."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideSendRestrictions",
    "hash": "0x97DD4C5944CC2E6A",
    "code": "-- NETWORK_OVERRIDE_SEND_RESTRICTIONS\nNetworkOverrideSendRestrictions(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is used alongside the native,\n'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideSendRestrictionsAll",
    "hash": "0x57B192B4D4AD23D5",
    "code": "-- NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL\nNetworkOverrideSendRestrictionsAll(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideTeamRestrictions",
    "hash": "0x6F697A66CE78674E",
    "code": "-- NETWORK_OVERRIDE_TEAM_RESTRICTIONS\nNetworkOverrideTeamRestrictions(\n\tteam --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkOverrideTransitionChat",
    "hash": "0xAF66059A131AA269",
    "code": "-- NETWORK_OVERRIDE_TRANSITION_CHAT\nNetworkOverrideTransitionChat(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPedForceGameStateUpdate",
    "hash": "0xF0BC9BCD24A511D5",
    "code": "-- _NETWORK_PED_FORCE_GAME_STATE_UPDATE\nNetworkPedForceGameStateUpdate(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerGetCheaterReason",
    "hash": "0x172F75B6EE2233BA",
    "code": "-- NETWORK_PLAYER_GET_CHEATER_REASON\nlocal retval --[[ integer ]] =\n\tNetworkPlayerGetCheaterReason()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerGetName",
    "hash": "0x7718D2E2060837D2",
    "code": "-- NETWORK_PLAYER_GET_NAME\nlocal retval --[[ string ]] =\n\tNetworkPlayerGetName(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the name of a given player. Returns \"**Invalid**\" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerGetUserid",
    "hash": "0x4927FC39CD0869A0",
    "code": "-- NETWORK_PLAYER_GET_USERID\nlocal retval --[[ string ]], userID --[[ integer ]] =\n\tNetworkPlayerGetUserid(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Takes a 24 char buffer. Returns the buffer or \"**Invalid**\" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerHasHeadset",
    "hash": "0x3FB99A8B08D18FD6",
    "code": "-- NETWORK_PLAYER_HAS_HEADSET\nlocal retval --[[ boolean ]] =\n\tNetworkPlayerHasHeadset(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerIndexIsCheater",
    "hash": "0x565E430DB3B05BEC",
    "code": "-- NETWORK_PLAYER_INDEX_IS_CHEATER\nlocal retval --[[ boolean ]] =\n\tNetworkPlayerIndexIsCheater(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerIsBadsport",
    "hash": "0x19D8DA0E5A68045A",
    "code": "-- NETWORK_PLAYER_IS_BADSPORT\nlocal retval --[[ boolean ]] =\n\tNetworkPlayerIsBadsport()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerIsCheater",
    "hash": "0x655B91F1495A9090",
    "code": "-- NETWORK_PLAYER_IS_CHEATER\nlocal retval --[[ boolean ]] =\n\tNetworkPlayerIsCheater()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkPlayerIsRockstarDev",
    "hash": "0x544ABDDA3B409B6D",
    "code": "-- NETWORK_PLAYER_IS_ROCKSTAR_DEV\nlocal retval --[[ boolean ]] =\n\tNetworkPlayerIsRockstarDev(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if a specific value (BYTE) in CPlayerInfo is nonzero.  \nReturns always false in Singleplayer.  \nNo longer used for dev checks since first mods were released on PS3 & 360.  \nR* now checks with the is_dlc_present native for the dlc hash 2532323046,  \nif that is present it will unlock dev stuff."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkQueryRespawnResults",
    "hash": "0x3C891A251567DFCE",
    "code": "-- NETWORK_QUERY_RESPAWN_RESULTS\nlocal retval --[[ Any ]], p0 --[[ Any ]] =\n\tNetworkQueryRespawnResults()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkQueueGamerForStatus",
    "hash": "0x85A0EF54A500882C",
    "code": "-- NETWORK_QUEUE_GAMER_FOR_STATUS\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkQueueGamerForStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkQuitMpToDesktop",
    "hash": "0x45A83257ED02D9BC",
    "code": "-- NETWORK_QUIT_MP_TO_DESKTOP\nNetworkQuitMpToDesktop()",
    "parameters": [],
    "returns": [],
    "description": "Forces the \"Are you sure you want to quit Grand Theft Auto V?\" warning message (Same as when you Alt+F4) to show. Doesn't work in singleplayer."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRegisterEntityAsNetworked",
    "hash": "0x06FAACD625D80CAA",
    "code": "-- NETWORK_REGISTER_ENTITY_AS_NETWORKED\nNetworkRegisterEntityAsNetworked(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRegisterHostBroadcastVariables",
    "hash": "0x3E9B2F01C50DF595",
    "code": "-- NETWORK_REGISTER_HOST_BROADCAST_VARIABLES\nlocal vars --[[ integer ]] =\n\tNetworkRegisterHostBroadcastVariables(\n\t\tnumVars --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRegisterPlayerBroadcastVariables",
    "hash": "0x3364AA97340CA215",
    "code": "-- NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES\nlocal vars --[[ integer ]] =\n\tNetworkRegisterPlayerBroadcastVariables(\n\t\tnumVars --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRegisterTunableBoolHash",
    "hash": "0x697F508861875B42",
    "code": "-- _NETWORK_REGISTER_TUNABLE_BOOL_HASH\nlocal retval --[[ boolean ]], value --[[ boolean ]] =\n\tNetworkRegisterTunableBoolHash(\n\t\tcontextHash --[[ Hash ]], \n\t\tnameHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRegisterTunableFloatHash",
    "hash": "0x1950DAE9848A4739",
    "code": "-- _NETWORK_REGISTER_TUNABLE_FLOAT_HASH\nlocal retval --[[ boolean ]], value --[[ number ]] =\n\tNetworkRegisterTunableFloatHash(\n\t\tcontextHash --[[ Hash ]], \n\t\tnameHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRegisterTunableIntHash",
    "hash": "0x3A8B55FDA4C8DDEF",
    "code": "-- _NETWORK_REGISTER_TUNABLE_INT_HASH\nlocal retval --[[ boolean ]], value --[[ integer ]] =\n\tNetworkRegisterTunableIntHash(\n\t\tcontextHash --[[ Hash ]], \n\t\tnameHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRemoveAllTransitionInvite",
    "hash": "0x726E0375C7A26368",
    "code": "-- NETWORK_REMOVE_ALL_TRANSITION_INVITE\nNetworkRemoveAllTransitionInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRemoveEntityArea",
    "hash": "0x93CF869BAA0C4874",
    "code": "-- NETWORK_REMOVE_ENTITY_AREA\nlocal retval --[[ boolean ]] =\n\tNetworkRemoveEntityArea(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRemovePresenceInvite",
    "hash": "0xF0210268DB0974B1",
    "code": "-- NETWORK_REMOVE_PRESENCE_INVITE\nlocal retval --[[ boolean ]] =\n\tNetworkRemovePresenceInvite(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRemoveTransitionInvite",
    "hash": "0x7524B431B2E6F7EE",
    "code": "-- NETWORK_REMOVE_TRANSITION_INVITE\nlocal p0 --[[ Any ]] =\n\tNetworkRemoveTransitionInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkReportMyself",
    "hash": "0x5626D9D6810730D5",
    "code": "-- _NETWORK_REPORT_MYSELF\nNetworkReportMyself()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRequestCloudBackgroundScripts",
    "hash": "0x924426BFFD82E915",
    "code": "-- NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS\nlocal retval --[[ boolean ]] =\n\tNetworkRequestCloudBackgroundScripts()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRequestCloudTunables",
    "hash": "0x42FB3B532D526E6C",
    "code": "-- NETWORK_REQUEST_CLOUD_TUNABLES\nNetworkRequestCloudTunables()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRequestControlOfDoor",
    "hash": "0x870DDFD5A4A796E4",
    "code": "-- NETWORK_REQUEST_CONTROL_OF_DOOR\nlocal retval --[[ boolean ]] =\n\tNetworkRequestControlOfDoor(\n\t\tdoorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRequestControlOfEntity",
    "hash": "0xB69317BF5E782347",
    "code": "-- NETWORK_REQUEST_CONTROL_OF_ENTITY\nlocal retval --[[ boolean ]] =\n\tNetworkRequestControlOfEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRequestControlOfNetworkId",
    "hash": "0xA670B3662FAFFBD0",
    "code": "-- NETWORK_REQUEST_CONTROL_OF_NETWORK_ID\nlocal retval --[[ boolean ]] =\n\tNetworkRequestControlOfNetworkId(\n\t\tnetId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkResetBodyTracker",
    "hash": "0x72433699B4E6DD64",
    "code": "-- NETWORK_RESET_BODY_TRACKER\nNetworkResetBodyTracker()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkRespawnCoords",
    "hash": "0x9769F811D1785B03",
    "code": "-- _NETWORK_RESPAWN_COORDS\nNetworkRespawnCoords(\n\tplayer --[[ Player ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p4 and p5 are always 0 in scripts"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkResurrectLocalPlayer",
    "hash": "0xEA23C49EAA83ACFB",
    "code": "-- NETWORK_RESURRECT_LOCAL_PLAYER\nNetworkResurrectLocalPlayer(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\tnInvincibilityTime --[[ integer ]], \n\tbLeaveDeadPed --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Revives our local player who was previously dead.\n\nNote: Call this once you resurrect the player (this does not need to be called every frame).\n\nenum ePlayerSpawnLocation {\n  // system will decide\n  SPAWN_LOCATION_AUTOMATIC = 0,\n  SPAWN_LOCATION_NEAR_DEATH = 1,\n  SPAWN_LOCATION_NEAR_TEAM_MATES = 2,\n  // script defined area\n  SPAWN_LOCATION_MISSION_AREA = 3,\n  SPAWN_LOCATION_NEAR_OTHER_PLAYERS = 4,\n  SPAWN_LOCATION_NEAR_CURRENT_POSITION = 5,\n  SPAWN_LOCATION_AT_CURRENT_POSITION = 6,\n  SPAWN_LOCATION_NET_TEST_BED = 7,\n  SPAWN_LOCATION_CUSTOM_SPAWN_POINTS = 8,\n  SPAWN_LOCATION_OUTSIDE_SIMEON_GARAGE = 9,\n  SPAWN_LOCATION_NEAR_SPECIFIC_COORDS = 10,\n  SPAWN_LOCATION_AT_SPECIFIC_COORDS = 11,\n  SPAWN_LOCATION_AT_AIRPORT_ARRIVALS = 12,\n  SPAWN_LOCATION_AT_SPECIFIC_COORDS_IF_POSSIBLE = 13,\n  SPAWN_LOCATION_IN_SPECIFIC_ANGLED_AREA = 14,\n  SPAWN_LOCATION_NEAREST_RESPAWN_POINT = 15,\n  SPAWN_LOCATION_AT_SPECIFIC_COORDS_RACE_CORONA = 16,\n  SPAWN_LOCATION_INSIDE_GARAGE = 17,\n  SPAWN_LOCATION_INSIDE_PROPERTY = 18,\n  SPAWN_LOCATION_INSIDE_PROPERTY_OR_GARAGE = 19,\n  SPAWN_LOCATION_NEAR_DEATH_IMPROMPTU = 20,\n  SPAWN_LOCATION_NEAR_CURRENT_POSITION_SPREAD_OUT = 21,\n  SPAWN_LOCATION_NEAREST_RESPAWN_POINT_TO_SPECIFIC_COORDS = 22,\n  SPAWN_LOCATION_NEAREST_HOSPITAL = 23,\n  SPAWN_LOCATION_NEAREST_POLICE_STATION = 24,\n  SPAWN_LOCATION_NEAREST_HOTEL_TO_SPECIFIC_COORDS = 25,\n  SPAWN_LOCATION_MISSION_AREA_NEAR_CURRENT_POSITION = 26,\n  SPAWN_LOCATION_PRIVATE_YACHT = 27,\n  SPAWN_LOCATION_PRIVATE_YACHT_APARTMENT = 28,\n  SPAWN_LOCATION_PRIVATE_FRIEND_YACHT = 29,\n  SPAWN_LOCATION_PRIVATE_YACHT_NEAR_SHORE = 30,\n  SPAWN_LOCATION_NEAR_GANG_BOSS = 31,\n  SPAWN_LOCATION_NEAR_SPECIFIC_COORDS_WITH_GANG = 32,\n  SPAWN_LOCATION_GANG_DM = 33,\n  SPAWN_LOCATION_GANG_BOSS_PRIVATE_YACHT = 34,\n  SPAWN_LOCATION_OFFICE = 35,\n  SPAWN_LOCATION_CLUBHOUSE = 36,\n  SPAWN_LOCATION_NEAR_CURRENT_POSITION_AS_POSSIBLE = 37,\n  SPAWN_LOCATION_NEAR_CURRENT_PERCEIVED_POSITION = 38,\n  SPAWN_LOCATION_IE_WAREHOUSE = 39,\n  SPAWN_LOCATION_BUNKER = 40,\n  SPAWN_LOCATION_HANGAR = 41,\n  SPAWN_LOCATION_DEFUNCT_BASE = 42,\n  SPAWN_LOCATION_NIGHTCLUB = 43,\n  SPAWN_LOCATION_ARENA_GARAGE = 44,\n  SPAWN_LOCATION_CASINO = 45,\n  SPAWN_LOCATION_CASINO_APARTMENT = 46,\n  SPAWN_LOCATION_CASINO_OUTSIDE = 47,\n  SPAWN_LOCATION_ARCADE = 48,\n  SPAWN_LOCATION_CASINO_NIGHTCLUB = 49,\n  SPAWN_LOCATION_SUBMARINE = 50,\n  SPAWN_LOCATION_HEIST_ISLAND_NEAR_DEATH = 51,\n  SPAWN_LOCATION_HEIST_ISLAND_BEACH_PARTY = 52,\n  SPAWN_LOCATION_LAND_NEAR_SUBMARINE = 53,\n  SPAWN_LOCATION_CAR_MEET = 54,\n  SPAWN_LOCATION_AUTO_SHOP = 55,\n  SPAWN_LOCATION_FIXER_HQ = 56,\n  SPAWN_LOCATION_SITTING_SMOKING = 57,\n  SPAWN_LOCATION_DRUNK_WAKE_UP_MUSIC_STUDIO = 58,\n  SPAWN_LOCATION_MUSIC_STUDIO = 59,\n  TOTAL_SPAWN_LOCATIONS = 60\n};\n\nenum eSpawnReason {\n  SPAWN_REASON_DEATH = 0,\n  SPAWN_REASON_TRANSITION,\n  SPAWN_REASON_MANUAL,\n  SPAWN_REASON_RESTORE_CHARACTER,\n  SPAWN_REASON_IN_VEHICLE\n};\n\nAdded parameters\nbUnpauseRenderPhases: This boolean parameter will unpause the render phases when set to true.\niSpawnLocation: This integer parameter sets the player's spawn location metric for telemetry. See ePlayerSpawnLocation enum.\niSpawnReason: This integer parameter sets the player's spawn reason metric for telemetry. See eSpawnReason enum."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSeedRandomNumberGenerator",
    "hash": "0xF1B84178F8674195",
    "code": "-- NETWORK_SEED_RANDOM_NUMBER_GENERATOR\nNetworkSeedRandomNumberGenerator(\n\tseed --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSendInviteViaPresence",
    "hash": "0xC3C7A6AFDB244624",
    "code": "-- NETWORK_SEND_INVITE_VIA_PRESENCE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]], p1 --[[ Any ]] =\n\tNetworkSendInviteViaPresence(\n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSendPresenceTransitionInvite",
    "hash": "0xC116FF9B4D488291",
    "code": "-- _NETWORK_SEND_PRESENCE_TRANSITION_INVITE\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tNetworkSendPresenceTransitionInvite(\n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "String \"NETWORK_SEND_PRESENCE_TRANSITION_INVITE\" is contained in the function in ida so this one is correct."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSendTextMessage",
    "hash": "0x3A214F2EC889B100",
    "code": "-- NETWORK_SEND_TEXT_MESSAGE\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkSendTextMessage(\n\t\tmessage --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Message is limited to 64 characters."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSendTransitionGamerInstruction",
    "hash": "0x31D1D2B858D25E6B",
    "code": "-- NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION\nlocal retval --[[ boolean ]], networkHandle --[[ integer ]] =\n\tNetworkSendTransitionGamerInstruction(\n\t\tp1 --[[ string ]], \n\t\tp2 --[[ integer ]], \n\t\tp3 --[[ integer ]], \n\t\tp4 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "the first arg seems to be the network player handle (&handle) and the second var is pretty much always \"\" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1  \ndoes this send an invite to a player?"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionActivityQuickmatch",
    "hash": "0xBE3E347A87ACEB82",
    "code": "-- NETWORK_SESSION_ACTIVITY_QUICKMATCH\nlocal retval --[[ boolean ]] =\n\tNetworkSessionActivityQuickmatch(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionAddActiveMatchmakingGroup",
    "hash": "0xCAE55F48D3D7875C",
    "code": "-- NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP\nNetworkSessionAddActiveMatchmakingGroup(\n\tgroupId --[[ integer ]]\n)",
    "parameters": [
      "groupId: \n\nAn identifier value between zero and four"
    ],
    "returns": [],
    "description": "Parameters:\n\ngroupId: \n\nAn identifier value between zero and four"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionBlockJoinRequests",
    "hash": "0xA73667484D7037C3",
    "code": "-- NETWORK_SESSION_BLOCK_JOIN_REQUESTS\nNetworkSessionBlockJoinRequests(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionCancelInvite",
    "hash": "0x2FBF47B1B36D36F9",
    "code": "-- NETWORK_SESSION_CANCEL_INVITE\nNetworkSessionCancelInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionChangeSlots",
    "hash": "0xB4AB419E0D86ACAE",
    "code": "-- NETWORK_SESSION_CHANGE_SLOTS\nNetworkSessionChangeSlots(\n\tp0 --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionCrewMatchmaking",
    "hash": "0x94BC51E9449D917F",
    "code": "-- NETWORK_SESSION_CREW_MATCHMAKING\nlocal retval --[[ boolean ]] =\n\tNetworkSessionCrewMatchmaking(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ integer ]], \n\t\tmaxPlayers --[[ integer ]], \n\t\tp4 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionEnd",
    "hash": "0xA02E59562D711006",
    "code": "-- NETWORK_SESSION_END\nlocal retval --[[ boolean ]] =\n\tNetworkSessionEnd(\n\t\tp0 --[[ boolean ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 is always false and p1 varies.  \nNETWORK_SESSION_END(0, 1)  \nNETWORK_SESSION_END(0, 0)  \nResults in: \"Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later.\""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionEnter",
    "hash": "0x330ED4D05491934F",
    "code": "-- NETWORK_SESSION_ENTER\nlocal retval --[[ Any ]] =\n\tNetworkSessionEnter(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tmaxPlayers --[[ integer ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "unknown params  \np0 = 0, 2, or 999 (The global is 999 by default.)  \np1 = 0 (Always in every script it's found in atleast.)  \np2 = 0, 3, or 4 (Based on a var that is determined by a function.)  \np3 = maxPlayers (It's obvious in x360 scripts it's always 18)  \np4 = 0 (Always in every script it's found in atleast.)  \np5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)  \np5 is reset to 0 if,  \nGlobal_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionForceCancelInvite",
    "hash": "0xA29177F7703B5644",
    "code": "-- NETWORK_SESSION_FORCE_CANCEL_INVITE\nNetworkSessionForceCancelInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionFriendMatchmaking",
    "hash": "0x2CFC76E0D087C994",
    "code": "-- NETWORK_SESSION_FRIEND_MATCHMAKING\nlocal retval --[[ boolean ]] =\n\tNetworkSessionFriendMatchmaking(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]], \n\t\tmaxPlayers --[[ integer ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionGetInviter",
    "hash": "0xE57397B4A3429DD0",
    "code": "-- NETWORK_SESSION_GET_INVITER\nlocal networkHandle --[[ integer ]] =\n\tNetworkSessionGetInviter()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionGetKickVote",
    "hash": "0xD6D09A6F32F49EF1",
    "code": "-- NETWORK_SESSION_GET_KICK_VOTE\nlocal retval --[[ boolean ]] =\n\tNetworkSessionGetKickVote(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionGetMatchmakingGroupFree",
    "hash": "0x56CE820830EF040B",
    "code": "-- NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE\nlocal retval --[[ integer ]] =\n\tNetworkSessionGetMatchmakingGroupFree(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionGetPrivateSlots",
    "hash": "0x53AFD64C6758F2F9",
    "code": "-- NETWORK_SESSION_GET_PRIVATE_SLOTS\nlocal retval --[[ integer ]] =\n\tNetworkSessionGetPrivateSlots()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionHost",
    "hash": "0x6F3D4ED9BEE4E61D",
    "code": "-- NETWORK_SESSION_HOST\nlocal retval --[[ boolean ]] =\n\tNetworkSessionHost(\n\t\tp0 --[[ integer ]], \n\t\tmaxPlayers --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionHostClosed",
    "hash": "0xED34C0C02C098BB7",
    "code": "-- NETWORK_SESSION_HOST_CLOSED\nlocal retval --[[ boolean ]] =\n\tNetworkSessionHostClosed(\n\t\tp0 --[[ integer ]], \n\t\tmaxPlayers --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionHostFriendsOnly",
    "hash": "0xB9CFD27A5D578D83",
    "code": "-- NETWORK_SESSION_HOST_FRIENDS_ONLY\nlocal retval --[[ boolean ]] =\n\tNetworkSessionHostFriendsOnly(\n\t\tp0 --[[ integer ]], \n\t\tmaxPlayers --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionHostSinglePlayer",
    "hash": "0xC74C33FCA52856D5",
    "code": "-- NETWORK_SESSION_HOST_SINGLE_PLAYER\nNetworkSessionHostSinglePlayer(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Loads up the map that is loaded when beeing in mission creator  \nPlayer gets placed in a mix between online/offline mode  \np0 is always 2 in R* scripts.  \nAppears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionIsClosedCrew",
    "hash": "0x74732C6CA90DA2B4",
    "code": "-- NETWORK_SESSION_IS_CLOSED_CREW\nlocal retval --[[ boolean ]] =\n\tNetworkSessionIsClosedCrew()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionIsClosedFriends",
    "hash": "0xFBCFA2EA2E206890",
    "code": "-- NETWORK_SESSION_IS_CLOSED_FRIENDS\nlocal retval --[[ boolean ]] =\n\tNetworkSessionIsClosedFriends()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionIsInVoiceSession",
    "hash": "0x855BC38818F6F684",
    "code": "-- NETWORK_SESSION_IS_IN_VOICE_SESSION\nlocal retval --[[ boolean ]] =\n\tNetworkSessionIsInVoiceSession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionIsPrivate",
    "hash": "0xCEF70AA5B3F89BA1",
    "code": "-- NETWORK_SESSION_IS_PRIVATE\nlocal retval --[[ boolean ]] =\n\tNetworkSessionIsPrivate()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionIsSolo",
    "hash": "0xF3929C2379B60CCE",
    "code": "-- NETWORK_SESSION_IS_SOLO\nlocal retval --[[ boolean ]] =\n\tNetworkSessionIsSolo()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionIsVisible",
    "hash": "0xBA416D68C631496A",
    "code": "-- NETWORK_SESSION_IS_VISIBLE\nlocal retval --[[ boolean ]] =\n\tNetworkSessionIsVisible()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionIsVoiceSessionBusy",
    "hash": "0xEF0912DDF7C4CB4B",
    "code": "-- NETWORK_SESSION_IS_VOICE_SESSION_BUSY\nlocal retval --[[ boolean ]] =\n\tNetworkSessionIsVoiceSessionBusy()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionJoinInvite",
    "hash": "0xC6F8AB8A4189CF3A",
    "code": "-- NETWORK_SESSION_JOIN_INVITE\nNetworkSessionJoinInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionKickPlayer",
    "hash": "0xFA8904DC5F304220",
    "code": "-- NETWORK_SESSION_KICK_PLAYER\nNetworkSessionKickPlayer(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only works as host."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionLeaveSinglePlayer",
    "hash": "0x3442775428FD2DAA",
    "code": "-- NETWORK_SESSION_LEAVE_SINGLE_PLAYER\nNetworkSessionLeaveSinglePlayer()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionMarkVisible",
    "hash": "0x271CC6AB59EBF9A5",
    "code": "-- NETWORK_SESSION_MARK_VISIBLE\nNetworkSessionMarkVisible(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionSetMatchmakingGroup",
    "hash": "0x49EC8030F5015F8B",
    "code": "-- NETWORK_SESSION_SET_MATCHMAKING_GROUP\nNetworkSessionSetMatchmakingGroup(\n\tmatchmakingGroup --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionSetMatchmakingGroupMax",
    "hash": "0x8B6A4DD0AF9CE215",
    "code": "-- NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX\nNetworkSessionSetMatchmakingGroupMax(\n\tplayerType --[[ integer ]], \n\tplayerCount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "playerTypes:\n0 = regular joiner\n4 = spectator\n8 = unknown"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionSetMatchmakingMentalState",
    "hash": "0xF1EEA2DDA9FFA69D",
    "code": "-- NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE\nNetworkSessionSetMatchmakingMentalState(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionSetMatchmakingPropertyId",
    "hash": "0x3F52E880AAF6C8CA",
    "code": "-- NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID\nNetworkSessionSetMatchmakingPropertyId(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionValidateJoin",
    "hash": "0xC19F6C8E7865A6FF",
    "code": "-- NETWORK_SESSION_VALIDATE_JOIN\nNetworkSessionValidateJoin(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionVoiceConnectToPlayer",
    "hash": "0xABD5E88B8A2D3DB2",
    "code": "-- NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER\nlocal globalPtr --[[ Any ]] =\n\tNetworkSessionVoiceConnectToPlayer()",
    "parameters": [],
    "returns": [],
    "description": "Only one occurence in the scripts:\nauto sub_cb43(auto a_0, auto a_1) {\n    if (g_2594CB._f1) {\n        if (NETWORK::_855BC38818F6F684()) {\n            NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);\n            g_2594CB._f14/*{13}*/ = a_0._fB93;\n            g_2594CB._f4/*\"64\"*/ = a_1;\n            return 1;\n        }\n    }\n    return 0;\n}\nother:\nlooks like it passes a player in the paramater\nContains string \"NETWORK_VOICE_CONNECT_TO_PLAYER\" in ida"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionVoiceHost",
    "hash": "0x9C1556705F864230",
    "code": "-- NETWORK_SESSION_VOICE_HOST\nNetworkSessionVoiceHost()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionVoiceLeave",
    "hash": "0x6793E42BE02B575D",
    "code": "-- NETWORK_SESSION_VOICE_LEAVE\nNetworkSessionVoiceLeave()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionVoiceRespondToRequest",
    "hash": "0x7F8413B7FC2AA6B9",
    "code": "-- NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST\nNetworkSessionVoiceRespondToRequest(\n\tp0 --[[ boolean ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionVoiceSetTimeout",
    "hash": "0x5B8ED3DB018927B1",
    "code": "-- NETWORK_SESSION_VOICE_SET_TIMEOUT\nNetworkSessionVoiceSetTimeout(\n\ttimeout --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSessionWasInvited",
    "hash": "0x23DFB504655D0CE4",
    "code": "-- NETWORK_SESSION_WAS_INVITED\nlocal retval --[[ boolean ]] =\n\tNetworkSessionWasInvited()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetActivityPlayerMax",
    "hash": "0x0E4F77F7B9D74D84",
    "code": "-- NETWORK_SET_ACTIVITY_PLAYER_MAX\nNetworkSetActivityPlayerMax(\n\tplayerCount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetActivitySpectator",
    "hash": "0x75138790B4359A74",
    "code": "-- NETWORK_SET_ACTIVITY_SPECTATOR\nNetworkSetActivitySpectator(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetActivitySpectatorMax",
    "hash": "0x9D277B76D1D12222",
    "code": "-- NETWORK_SET_ACTIVITY_SPECTATOR_MAX\nNetworkSetActivitySpectatorMax(\n\tmaxSpectators --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetChoiceMigrateOptions",
    "hash": "0x5C707A667DF8B9FA",
    "code": "-- NETWORK_SET_CHOICE_MIGRATE_OPTIONS\nNetworkSetChoiceMigrateOptions(\n\ttoggle --[[ boolean ]], \n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetCurrentDataManagerHandle",
    "hash": "0x796A87B3B68D1F3D",
    "code": "-- _NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkSetCurrentDataManagerHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetCurrentMissionId",
    "hash": "0x2C863ACDCD12B3DB",
    "code": "-- _NETWORK_SET_CURRENT_MISSION_ID\nNetworkSetCurrentMissionId(\n\tmissionId --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetCurrentSpawnSetting",
    "hash": "0xAA6D5451DC3448B6",
    "code": "-- _NETWORK_SET_CURRENT_SPAWN_SETTING\nNetworkSetCurrentSpawnSetting(\n\tmpSettingSpawn --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eMpSettingSpawn\n{\n\tMP_SETTING_SPAWN_NULL = 0,\n\tMP_SETTING_SPAWN_PROPERTY = 1,\n\tMP_SETTING_SPAWN_LAST_POSITION = 2,\n\tMP_SETTING_SPAWN_GARAGE = 3,\n\tMP_SETTING_SPAWN_RANDOM = 4,\n\tMP_SETTING_SPAWN_PRIVATE_YACHT = 5,\n\tMP_SETTING_SPAWN_OFFICE = 6,\n\tMP_SETTING_SPAWN_CLUBHOUSE = 7,\n\tMP_SETTING_SPAWN_IE_WAREHOUSE = 8,\n\tMP_SETTING_SPAWN_BUNKER = 9,\n\tMP_SETTING_SPAWN_HANGAR = 10,\n\tMP_SETTING_SPAWN_DEFUNCT_BASE = 11,\n\tMP_SETTING_SPAWN_NIGHTCLUB = 12,\n\tMP_SETTING_SPAWN_ARENA_GARAGE = 13,\n\tMP_SETTING_SPAWN_CASINO_APARTMENT = 14,\n\tMP_SETTING_SPAWN_ARCADE = 15,\n\tMP_SETTING_SPAWN_SUBMARINE = 16,\n\tMP_SETTING_SPAWN_CAR_MEET = 17,\n\tMP_SETTING_SPAWN_AUTO_SHOP = 18,\n\tMP_SETTING_SPAWN_FIXER_HQ = 19,\n\tMP_SETTING_SPAWN_MAX = 20,\n};\n\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetCurrentlySelectedGamerHandleFromInviteMenu",
    "hash": "0x7206F674F2A3B1BB",
    "code": "-- NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tNetworkSetCurrentlySelectedGamerHandleFromInviteMenu()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetEntityCanBlend",
    "hash": "0xD830567D88A1E873",
    "code": "-- NETWORK_SET_ENTITY_CAN_BLEND\nNetworkSetEntityCanBlend(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetEntityGhostedWithOwner",
    "hash": "0x4BA166079D658ED4",
    "code": "-- _NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER\nNetworkSetEntityGhostedWithOwner(\n\tentity --[[ Entity ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetEntityInvisibleToNetwork",
    "hash": "0xF1CA12B18AEF5298",
    "code": "-- _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK\nNetworkSetEntityInvisibleToNetwork(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "if set to true other network players can't see it  \nif set to false other network player can see it  \n=========================================  \n^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.  \npc or last gen?  \n^^ last-gen"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetFriendlyFireOption",
    "hash": "0xF808475FA571D823",
    "code": "-- NETWORK_SET_FRIENDLY_FIRE_OPTION\nNetworkSetFriendlyFireOption(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetGamerInvitedToTransition",
    "hash": "0xCA2C8073411ECDB6",
    "code": "-- NETWORK_SET_GAMER_INVITED_TO_TRANSITION\nlocal networkHandle --[[ integer ]] =\n\tNetworkSetGamerInvitedToTransition()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetInFreeCamMode",
    "hash": "0xFC18DB55AE19E046",
    "code": "-- NETWORK_SET_IN_FREE_CAM_MODE\nNetworkSetInFreeCamMode(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetInMpCutscene",
    "hash": "0x9CA5DE655269FEC4",
    "code": "-- NETWORK_SET_IN_MP_CUTSCENE\nNetworkSetInMpCutscene(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetInSpectatorMode",
    "hash": "0x423DE3854BB50894",
    "code": "-- NETWORK_SET_IN_SPECTATOR_MODE\nNetworkSetInSpectatorMode(\n\ttoggle --[[ boolean ]], \n\tplayerPed --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetInSpectatorModeExtended",
    "hash": "0x419594E137637120",
    "code": "-- NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED\nNetworkSetInSpectatorModeExtended(\n\ttoggle --[[ boolean ]], \n\tplayerPed --[[ Ped ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetInviteOnCallForInviteMenu",
    "hash": "0x66F010A4B031A331",
    "code": "-- NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU\nlocal networkHandle --[[ integer ]] =\n\tNetworkSetInviteOnCallForInviteMenu()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetLocalPlayerInvincibleTime",
    "hash": "0x2D95C7E2D7E07307",
    "code": "-- NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME\nNetworkSetLocalPlayerInvincibleTime(\n\ttime --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetLocalPlayerSyncLookAt",
    "hash": "0x524FF0AEFF9C3973",
    "code": "-- NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT\nNetworkSetLocalPlayerSyncLookAt(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetMissionFinished",
    "hash": "0x3B3D11CD9FFCDFC9",
    "code": "-- NETWORK_SET_MISSION_FINISHED\nNetworkSetMissionFinished()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetNoSpectatorChat",
    "hash": "0xF46A1E03E8755980",
    "code": "-- NETWORK_SET_NO_SPECTATOR_CHAT\nNetworkSetNoSpectatorChat(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetObjectForceStaticBlend",
    "hash": "0x0379DAF89BA09AA5",
    "code": "-- _NETWORK_SET_OBJECT_FORCE_STATIC_BLEND\nNetworkSetObjectForceStaticBlend(\n\tobject --[[ Object ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [
      "object: \n\nThe object to set forced blending state for.",
      "enabled: \n\ntrue to enable forced blending."
    ],
    "returns": [],
    "description": "Parameters:\n\nobject: \n\nThe object to set forced blending state for.\n\nenabled: \n\ntrue to enable forced blending.\n\nSets whether or not an object (created using CREATE_OBJECT, or similar) should have its position/rotation synchronized, even if it is a 'static' object (for example, having flag 32 - Static - set in its archetype definition).\n\nThis has to be called during the same frame the object is created/registered for network, as otherwise it may already have a remote clone created.\n\nOnce a remote clone is created, changing this value will not have any effect on said clone."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetOverrideSpectatorMode",
    "hash": "0x70DA3BF8DACD3210",
    "code": "-- NETWORK_SET_OVERRIDE_SPECTATOR_MODE\nNetworkSetOverrideSpectatorMode(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetPlayerIsPassive",
    "hash": "0x1B857666604B1A74",
    "code": "-- NETWORK_SET_PLAYER_IS_PASSIVE\nNetworkSetPlayerIsPassive(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetPropertyId",
    "hash": "0x1775961C2FBBCB5C",
    "code": "-- NETWORK_SET_PROPERTY_ID\nNetworkSetPropertyId(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "value must be < 255"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetRichPresence",
    "hash": "0x1DCCACDCFC569362",
    "code": "-- NETWORK_SET_RICH_PRESENCE\nNetworkSetRichPresence(\n\tp0 --[[ integer ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "On PC it's a nullsub which means it does absolutely nothing.  \nNow that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI..."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetRichPresenceString",
    "hash": "0x3E200C2BCF4164EB",
    "code": "-- NETWORK_SET_RICH_PRESENCE_STRING\nNetworkSetRichPresenceString(\n\tp0 --[[ integer ]], \n\ttextLabel --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetScriptReadyForEvents",
    "hash": "0x7AC752103856FB20",
    "code": "-- NETWORK_SET_SCRIPT_READY_FOR_EVENTS\nNetworkSetScriptReadyForEvents(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetTalkerProximity",
    "hash": "0xCBF12D65F95AD686",
    "code": "-- NETWORK_SET_TALKER_PROXIMITY\nNetworkSetTalkerProximity(\n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetTeamOnlyChat",
    "hash": "0xD5B4883AC32F24C3",
    "code": "-- NETWORK_SET_TEAM_ONLY_CHAT\nNetworkSetTeamOnlyChat(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetThisScriptIsNetworkScript",
    "hash": "0x1CA59E306ECB80A5",
    "code": "-- NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT\nNetworkSetThisScriptIsNetworkScript(\n\tmaxNumMissionParticipants --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tinstanceId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetTransitionActivityId",
    "hash": "0x30DE938B516F0AD2",
    "code": "-- NETWORK_SET_TRANSITION_ACTIVITY_ID\nNetworkSetTransitionActivityId(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetTransitionCreatorHandle",
    "hash": "0xEF26739BCD9907D5",
    "code": "-- NETWORK_SET_TRANSITION_CREATOR_HANDLE\nlocal p0 --[[ Any ]] =\n\tNetworkSetTransitionCreatorHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetTransitionVisibilityLock",
    "hash": "0x0C978FDA19692C2C",
    "code": "-- NETWORK_SET_TRANSITION_VISIBILITY_LOCK\nNetworkSetTransitionVisibilityLock(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetVehicleTestDrive",
    "hash": "0x8C70252FC40F320B",
    "code": "-- _NETWORK_SET_VEHICLE_TEST_DRIVE\nNetworkSetVehicleTestDrive(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used by Metric VEHICLE_DIST_DRIVEN\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetVehicleWheelsDestructible",
    "hash": "0x890E2C5ABED7236D",
    "code": "-- _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE\nNetworkSetVehicleWheelsDestructible(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.\nNativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetVoiceActive",
    "hash": "0xBABEC9E69A91C57B",
    "code": "-- NETWORK_SET_VOICE_ACTIVE\nNetworkSetVoiceActive(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSetVoiceChannel",
    "hash": "0xEF6212C2EFEF1A23",
    "code": "-- NETWORK_SET_VOICE_CHANNEL\nNetworkSetVoiceChannel(\n\tchannel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkShouldShowConnectivityTroubleshooting",
    "hash": "0x82A2B386716608F1",
    "code": "-- _NETWORK_SHOULD_SHOW_CONNECTIVITY_TROUBLESHOOTING\nlocal retval --[[ boolean ]] =\n\tNetworkShouldShowConnectivityTroubleshooting()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the NAT type is Strict (3) and a certain number of connections have failed."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkShowProfileUi",
    "hash": "0x859ED1CEA343FCA8",
    "code": "-- NETWORK_SHOW_PROFILE_UI\nlocal networkHandle --[[ integer ]] =\n\tNetworkShowProfileUi()",
    "parameters": [],
    "returns": [],
    "description": "Example:  \nint playerHandle;\t  \nNETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);  \nNETWORK_SHOW_PROFILE_UI(&playerHandle);"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkStartRespawnSearchForPlayer",
    "hash": "0x5A6FFA2433E2F14C",
    "code": "-- NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER\nlocal retval --[[ boolean ]] =\n\tNetworkStartRespawnSearchForPlayer(\n\t\tplayer --[[ Player ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ number ]], \n\t\tp7 --[[ number ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "One of the first things it does is get the players ped.  \nThen it calls a function that is used in some tasks and ped based functions.  \n\n\np5, p6, p7 is another coordinate (or zero), often related to GET_BLIP_COORDS, in the decompiled scripts."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkStartRespawnSearchInAngledAreaForPlayer",
    "hash": "0x4BA92A18502BCA61",
    "code": "-- NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER\nlocal retval --[[ boolean ]] =\n\tNetworkStartRespawnSearchInAngledAreaForPlayer(\n\t\tplayer --[[ Player ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]], \n\t\tp8 --[[ number ]], \n\t\tp9 --[[ number ]], \n\t\tp10 --[[ number ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p8, p9, p10 is another coordinate, or zero, often related to GET_BLIP_COORDS in the decompiled scripts."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkStartSoloTutorialSession",
    "hash": "0x17E0198B3882C2CB",
    "code": "-- NETWORK_START_SOLO_TUTORIAL_SESSION\nNetworkStartSoloTutorialSession()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkStartSynchronisedScene",
    "hash": "0x9A1B3FCDB36C8697",
    "code": "-- NETWORK_START_SYNCHRONISED_SCENE\nNetworkStartSynchronisedScene(\n\tnetScene --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkStartUserContentPermissionsCheck",
    "hash": "0xDEB2B99A1AF1A2A6",
    "code": "-- _NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK\nlocal retval --[[ integer ]] =\n\tNetworkStartUserContentPermissionsCheck(\n\t\tnetHandle --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Always returns -1. Seems to be XB1 specific."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkStopSynchronisedScene",
    "hash": "0xC254481A4574CB2F",
    "code": "-- NETWORK_STOP_SYNCHRONISED_SCENE\nNetworkStopSynchronisedScene(\n\tnetScene --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkSuppressInvite",
    "hash": "0xA0682D67EF1FBA3D",
    "code": "-- NETWORK_SUPPRESS_INVITE\nNetworkSuppressInvite(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkTransitionTrack",
    "hash": "0xC3BFED92026A2AAD",
    "code": "-- _NETWORK_TRANSITION_TRACK\nNetworkTransitionTrack(\n\thash --[[ Hash ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]], \n\tstate --[[ integer ]], \n\tp4 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkTryAccessTunableBoolHash",
    "hash": "0xC7420099936CE286",
    "code": "-- NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH\nlocal retval --[[ boolean ]] =\n\tNetworkTryAccessTunableBoolHash(\n\t\ttunableContext --[[ Hash ]], \n\t\ttunableName --[[ Hash ]], \n\t\tdefaultValue --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns defaultValue if the tunable doesn't exist."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkUgcNav",
    "hash": "0xC1447451DDB512F0",
    "code": "-- _NETWORK_UGC_NAV\nNetworkUgcNav(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkUnregisterNetworkedEntity",
    "hash": "0x7368E683BB9038D6",
    "code": "-- NETWORK_UNREGISTER_NETWORKED_ENTITY\nNetworkUnregisterNetworkedEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkUpdatePlayerScars",
    "hash": "0xB7C7F6AD6424304B",
    "code": "-- _NETWORK_UPDATE_PLAYER_SCARS\nNetworkUpdatePlayerScars()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkUseHighPrecisionBlending",
    "hash": "0x2B1813ABA29016C5",
    "code": "-- NETWORK_USE_HIGH_PRECISION_BLENDING\nNetworkUseHighPrecisionBlending(\n\tnetID --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "NetworkUseLogarithmicBlendingThisFrame",
    "hash": "0xCD71A4ECAB22709E",
    "code": "-- NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME\nNetworkUseLogarithmicBlendingThisFrame(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ObjToNet",
    "hash": "0x99BFDC94A603E541",
    "code": "-- OBJ_TO_NET\nlocal retval --[[ integer ]] =\n\tObjToNet(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Lets objects spawn online simply do it like this:  \nint createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "OpenCommerceStore",
    "hash": "0x58C21165F6545892",
    "code": "-- OPEN_COMMERCE_STORE\nOpenCommerceStore(\n\tp0 --[[ string ]], \n\tp1 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Has a 3rd param (int) since patch [???].  \nNativeDB Added Parameter 3: int p2"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ParticipantId",
    "hash": "0x90986E8876CE0A83",
    "code": "-- PARTICIPANT_ID\nlocal retval --[[ Player ]] =\n\tParticipantId()",
    "parameters": [],
    "returns": [],
    "description": "Return the local Participant ID"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ParticipantIdToInt",
    "hash": "0x57A3BDDAD8E5AA0A",
    "code": "-- PARTICIPANT_ID_TO_INT\nlocal retval --[[ integer ]] =\n\tParticipantIdToInt()",
    "parameters": [],
    "returns": [],
    "description": "Return the local Participant ID.  \nThis native is exactly the same as 'PARTICIPANT_ID' native."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "PedToNet",
    "hash": "0x0EDEC3C276198689",
    "code": "-- PED_TO_NET\nlocal retval --[[ integer ]] =\n\tPedToNet(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gets the network id of a ped"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "RefreshPlayerListStats",
    "hash": "0xE26CCFF8094D8C74",
    "code": "-- REFRESH_PLAYER_LIST_STATS\nlocal retval --[[ boolean ]] =\n\tRefreshPlayerListStats(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ReleaseAllCommerceItemImages",
    "hash": "0x72D0706CD6CCDB58",
    "code": "-- RELEASE_ALL_COMMERCE_ITEM_IMAGES\nReleaseAllCommerceItemImages()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "RemoteCheatDetected",
    "hash": "0x472841A026D26D8B",
    "code": "-- _REMOTE_CHEAT_DETECTED\nlocal retval --[[ boolean ]] =\n\tRemoteCheatDetected()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: Player player\nNativeDB Added Parameter 2: int a\nNativeDB Added Parameter 3: int b"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "RemoveAllStickyBombsFromEntity",
    "hash": "0x715135F4B82AC90D",
    "code": "-- REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY\nRemoveAllStickyBombsFromEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used in am_mp_property_ext and am_mp_property_int  \nNativeDB Added Parameter 2: Ped ped"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "RequestCommerceItemImage",
    "hash": "0xA2F952104FC6DD4B",
    "code": "-- REQUEST_COMMERCE_ITEM_IMAGE\nlocal retval --[[ boolean ]] =\n\tRequestCommerceItemImage(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ReserveNetworkLocalObjects",
    "hash": "0x797F9C5E661D920E",
    "code": "-- _RESERVE_NETWORK_LOCAL_OBJECTS\nReserveNetworkLocalObjects(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ReserveNetworkLocalPeds",
    "hash": "0x2C8DF5D129595281",
    "code": "-- _RESERVE_NETWORK_LOCAL_PEDS\nReserveNetworkLocalPeds(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ReserveNetworkLocalVehicles",
    "hash": "0x42613035157E4208",
    "code": "-- _RESERVE_NETWORK_LOCAL_VEHICLES\nReserveNetworkLocalVehicles(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ReserveNetworkMissionObjects",
    "hash": "0x4E5C93BD0C32FBF8",
    "code": "-- RESERVE_NETWORK_MISSION_OBJECTS\nReserveNetworkMissionObjects(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ReserveNetworkMissionPeds",
    "hash": "0xB60FEBA45333D36F",
    "code": "-- RESERVE_NETWORK_MISSION_PEDS\nReserveNetworkMissionPeds(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ReserveNetworkMissionVehicles",
    "hash": "0x76B02E21ED27A469",
    "code": "-- RESERVE_NETWORK_MISSION_VEHICLES\nReserveNetworkMissionVehicles(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ResetGhostedEntityAlpha",
    "hash": "0x17330EBF2F2124A8",
    "code": "-- _RESET_GHOSTED_ENTITY_ALPHA\nResetGhostedEntityAlpha()",
    "parameters": [],
    "returns": [],
    "description": "Sets the alpha value used by _SET_LOCAL_PLAYER_AS_GHOST, SET_NETWORK_VEHICLE_AS_GHOST, and _NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetBalanceAddMachine",
    "hash": "0x815E5E3073DA1D67",
    "code": "-- SET_BALANCE_ADD_MACHINE\nlocal retval --[[ boolean ]] =\n\tSetBalanceAddMachine(\n\t\tcontentId --[[ string ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetBalanceAddMachines",
    "hash": "0xB8322EEB38BE7C26",
    "code": "-- SET_BALANCE_ADD_MACHINES\nlocal retval --[[ boolean ]], data --[[ Any ]] =\n\tSetBalanceAddMachines(\n\t\tdataCount --[[ integer ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetEntityLocallyInvisible",
    "hash": "0xE135A9FF3F5D05D8",
    "code": "-- SET_ENTITY_LOCALLY_INVISIBLE\nSetEntityLocallyInvisible(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the provided entity not visible for yourself for the current frame."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetEntityLocallyVisible",
    "hash": "0x241E289B5C059EDC",
    "code": "-- SET_ENTITY_LOCALLY_VISIBLE\nSetEntityLocallyVisible(\n\tentity --[[ Entity ]]\n)",
    "parameters": [
      "entity: \n\nThe entity to set locally visible."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity to set locally visible.\n\nSets the provided entity visible for yourself for the current frame."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetEntityVisibleInCutscene",
    "hash": "0xE0031D3C8F36AB82",
    "code": "-- SET_ENTITY_VISIBLE_IN_CUTSCENE\nSetEntityVisibleInCutscene(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetGhostedEntityAlpha",
    "hash": "0x658500AE6D723A7E",
    "code": "-- _SET_GHOSTED_ENTITY_ALPHA\nSetGhostedEntityAlpha(\n\talpha --[[ integer ]]\n)",
    "parameters": [
      "alpha: \n\nA value between 1 and 254. Default: 128"
    ],
    "returns": [],
    "description": "Parameters:\n\nalpha: \n\nA value between 1 and 254. Default: 128\n\nSets the alpha value used by _SET_LOCAL_PLAYER_AS_GHOST, SET_NETWORK_VEHICLE_AS_GHOST, and _NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER.\n\n'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all)."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetLocalPlayerAsGhost",
    "hash": "0x5FFE9B4144F9712F",
    "code": "-- _SET_LOCAL_PLAYER_AS_GHOST\nSetLocalPlayerAsGhost(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Formerly incorrectly named USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR due to incorrect treatment of console vs. PC native registration.\n\nNative name guessed through ordering.\n\nNativeDB Added Parameter 2: BOOL p1"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetLocalPlayerInvisibleLocally",
    "hash": "0xE5F773C1A1D9D168",
    "code": "-- SET_LOCAL_PLAYER_INVISIBLE_LOCALLY\nSetLocalPlayerInvisibleLocally(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetLocalPlayerVisibleInCutscene",
    "hash": "0xD1065D68947E7B6E",
    "code": "-- SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE\nSetLocalPlayerVisibleInCutscene(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetLocalPlayerVisibleLocally",
    "hash": "0x7619364C82D3BF14",
    "code": "-- SET_LOCAL_PLAYER_VISIBLE_LOCALLY\nSetLocalPlayerVisibleLocally(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkCutsceneEntities",
    "hash": "0xAAA553E7DD28A457",
    "code": "-- SET_NETWORK_CUTSCENE_ENTITIES\nSetNetworkCutsceneEntities(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkEnableVehiclePositionCorrection",
    "hash": "0x838DA0936A24ED4D",
    "code": "-- _SET_NETWORK_ENABLE_VEHICLE_POSITION_CORRECTION\nSetNetworkEnableVehiclePositionCorrection(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper)."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkIdAlwaysExistsForPlayer",
    "hash": "0xA8A024587329F36A",
    "code": "-- SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER\nSetNetworkIdAlwaysExistsForPlayer(\n\tnetId --[[ integer ]], \n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkIdCanMigrate",
    "hash": "0x299EEB23175895FC",
    "code": "-- SET_NETWORK_ID_CAN_MIGRATE\nSetNetworkIdCanMigrate(\n\tnetId --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Whether or not another player is allowed to take control of the entity"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkIdExistsOnAllMachines",
    "hash": "0xE05E81A888FA63C8",
    "code": "-- SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES\nSetNetworkIdExistsOnAllMachines(\n\tnetId --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkIdVisibleInCutscene",
    "hash": "0xA6928482543022B4",
    "code": "-- SET_NETWORK_ID_VISIBLE_IN_CUTSCENE\nSetNetworkIdVisibleInCutscene(\n\tnetId --[[ integer ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkVehicleAsGhost",
    "hash": "0x6274C4712850841E",
    "code": "-- SET_NETWORK_VEHICLE_AS_GHOST\nSetNetworkVehicleAsGhost(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkVehiclePositionUpdateMultiplier",
    "hash": "0xA2A707979FE754DC",
    "code": "-- _SET_NETWORK_VEHICLE_POSITION_UPDATE_MULTIPLIER\nSetNetworkVehiclePositionUpdateMultiplier(\n\tvehicle --[[ Vehicle ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetNetworkVehicleRespotTimer",
    "hash": "0xEC51713AB6EC36E8",
    "code": "-- SET_NETWORK_VEHICLE_RESPOT_TIMER\nSetNetworkVehicleRespotTimer(\n\tnetId --[[ integer ]], \n\ttime --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 3: Any p2\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetPlayerInvisibleLocally",
    "hash": "0x12B37D54667DB0B8",
    "code": "-- SET_PLAYER_INVISIBLE_LOCALLY\nSetPlayerInvisibleLocally(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetPlayerVisibleLocally",
    "hash": "0xFAA10F1FAFB11AF2",
    "code": "-- SET_PLAYER_VISIBLE_LOCALLY\nSetPlayerVisibleLocally(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetRelationshipToPlayer",
    "hash": "0xA7C511FA1C5BDA38",
    "code": "-- _SET_RELATIONSHIP_TO_PLAYER\nSetRelationshipToPlayer(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enables ghosting between specific players. Name is between _SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL and SET_ROADS_BACK_TO_ORIGINAL."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "SetStoreEnabled",
    "hash": "0x9641A9FF718E9C5E",
    "code": "-- SET_STORE_ENABLED\nSetStoreEnabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Access to the store for shark cards etc..."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ShutdownAndLaunchSinglePlayerGame",
    "hash": "0x593850C16A36B692",
    "code": "-- SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME\nShutdownAndLaunchSinglePlayerGame()",
    "parameters": [],
    "returns": [],
    "description": "Starts a new singleplayer game (at the prologue)."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "ShutdownAndLoadMostRecentSave",
    "hash": "0x9ECA15ADFE141431",
    "code": "-- _SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE\nlocal retval --[[ boolean ]] =\n\tShutdownAndLoadMostRecentSave()",
    "parameters": [],
    "returns": [
      "always seems to be 1"
    ],
    "description": "Returns:\n\nalways seems to be 1\n\nDisconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.\n\nIf you're already in SP then it'll re-load singleplayer.\n\nYou might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.\n\nSomewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "TextureDownloadGetName",
    "hash": "0x3448505B6E35262D",
    "code": "-- TEXTURE_DOWNLOAD_GET_NAME\nlocal retval --[[ string ]] =\n\tTextureDownloadGetName(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "TextureDownloadHasFailed",
    "hash": "0x5776ED562C134687",
    "code": "-- TEXTURE_DOWNLOAD_HAS_FAILED\nlocal retval --[[ boolean ]] =\n\tTextureDownloadHasFailed(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "TextureDownloadRelease",
    "hash": "0x487EB90B98E9FB19",
    "code": "-- TEXTURE_DOWNLOAD_RELEASE\nTextureDownloadRelease(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "TextureDownloadRequest",
    "hash": "0x16160DA74A8E74A2",
    "code": "-- TEXTURE_DOWNLOAD_REQUEST\nlocal retval --[[ integer ]], PlayerHandle --[[ integer ]] =\n\tTextureDownloadRequest(\n\t\tFilePath --[[ string ]], \n\t\tName --[[ string ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "TitleTextureDownloadRequest",
    "hash": "0x0B203B4AFDE53A4F",
    "code": "-- TITLE_TEXTURE_DOWNLOAD_REQUEST\nlocal retval --[[ integer ]] =\n\tTitleTextureDownloadRequest(\n\t\tFilePath --[[ string ]], \n\t\tName --[[ string ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "TriggerScriptCrcCheckOnPlayer",
    "hash": "0x46FB3ED415C7641C",
    "code": "-- _TRIGGER_SCRIPT_CRC_CHECK_ON_PLAYER\nlocal retval --[[ boolean ]] =\n\tTriggerScriptCrcCheckOnPlayer(\n\t\tplayer --[[ Player ]], \n\t\tp1 --[[ integer ]], \n\t\tscriptHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 = 6"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcCancelQuery",
    "hash": "0xE9B99B6853181409",
    "code": "-- UGC_CANCEL_QUERY\nUgcCancelQuery()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcClearCreateResult",
    "hash": "0x17440AA15D1D3739",
    "code": "-- UGC_CLEAR_CREATE_RESULT\nUgcClearCreateResult()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcClearModifyResult",
    "hash": "0xA1E5E0204A6FCC70",
    "code": "-- UGC_CLEAR_MODIFY_RESULT\nUgcClearModifyResult()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcClearOfflineQuery",
    "hash": "0x61A885D3F7CFEE9A",
    "code": "-- UGC_CLEAR_OFFLINE_QUERY\nUgcClearOfflineQuery()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcClearQueryResults",
    "hash": "0xBA96394A0EECFA65",
    "code": "-- UGC_CLEAR_QUERY_RESULTS\nUgcClearQueryResults()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcCopyContent",
    "hash": "0x152D90E4C1B4738A",
    "code": "-- UGC_COPY_CONTENT\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tUgcCopyContent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcDidGetSucceed",
    "hash": "0x941E5306BCD7C2C7",
    "code": "-- UGC_DID_GET_SUCCEED\nlocal retval --[[ Any ]] =\n\tUgcDidGetSucceed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetBookmarkedContent",
    "hash": "0xD5A4B59980401588",
    "code": "-- UGC_GET_BOOKMARKED_CONTENT\nlocal retval --[[ boolean ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tUgcGetBookmarkedContent(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetCachedDescription",
    "hash": "0x40F7E66472DF3E5C",
    "code": "-- UGC_GET_CACHED_DESCRIPTION\nlocal retval --[[ string ]] =\n\tUgcGetCachedDescription(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentCategory",
    "hash": "0xA7BAB11E7C9C6C5A",
    "code": "-- UGC_GET_CONTENT_CATEGORY\nlocal retval --[[ integer ]] =\n\tUgcGetContentCategory(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentDescriptionHash",
    "hash": "0x7CF0448787B23758",
    "code": "-- UGC_GET_CONTENT_DESCRIPTION_HASH\nlocal retval --[[ integer ]] =\n\tUgcGetContentDescriptionHash(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentFileVersion",
    "hash": "0x37025B27D9B658B1",
    "code": "-- UGC_GET_CONTENT_FILE_VERSION\nlocal retval --[[ Any ]] =\n\tUgcGetContentFileVersion(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentHasPlayerBookmarked",
    "hash": "0x993CBE59D350D225",
    "code": "-- UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED\nlocal retval --[[ boolean ]] =\n\tUgcGetContentHasPlayerBookmarked(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentHasPlayerRecord",
    "hash": "0x70EA8DA57840F9BE",
    "code": "-- UGC_GET_CONTENT_HAS_PLAYER_RECORD\nlocal retval --[[ boolean ]] =\n\tUgcGetContentHasPlayerRecord(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentHash",
    "hash": "0x3A17A27D75C74887",
    "code": "-- UGC_GET_CONTENT_HASH\nlocal retval --[[ Hash ]] =\n\tUgcGetContentHash()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentId",
    "hash": "0x55AA95F481D694D2",
    "code": "-- UGC_GET_CONTENT_ID\nlocal retval --[[ string ]] =\n\tUgcGetContentId(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return the mission id of a job."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentIsPublished",
    "hash": "0x3054F114121C21EA",
    "code": "-- UGC_GET_CONTENT_IS_PUBLISHED\nlocal retval --[[ boolean ]] =\n\tUgcGetContentIsPublished(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentIsVerified",
    "hash": "0xA9240A96C74CCA13",
    "code": "-- UGC_GET_CONTENT_IS_VERIFIED\nlocal retval --[[ boolean ]] =\n\tUgcGetContentIsVerified(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentLanguage",
    "hash": "0x32DD916F3F7C9672",
    "code": "-- UGC_GET_CONTENT_LANGUAGE\nlocal retval --[[ Any ]] =\n\tUgcGetContentLanguage(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentName",
    "hash": "0xBF09786A7FCAB582",
    "code": "-- UGC_GET_CONTENT_NAME\nlocal retval --[[ string ]] =\n\tUgcGetContentName(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentNum",
    "hash": "0xE0A6138401BCB837",
    "code": "-- UGC_GET_CONTENT_NUM\nlocal retval --[[ Any ]] =\n\tUgcGetContentNum()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentPath",
    "hash": "0xBAF6BABF9E7CCC13",
    "code": "-- UGC_GET_CONTENT_PATH\nlocal retval --[[ string ]] =\n\tUgcGetContentPath(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentRating",
    "hash": "0x1ACCFBA3D8DAB2EE",
    "code": "-- UGC_GET_CONTENT_RATING\nlocal retval --[[ Any ]] =\n\tUgcGetContentRating(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentRatingCount",
    "hash": "0x759299C5BB31D2A9",
    "code": "-- UGC_GET_CONTENT_RATING_COUNT\nlocal retval --[[ Any ]] =\n\tUgcGetContentRatingCount(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentRatingNegativeCount",
    "hash": "0x4E548C0D7AE39FF9",
    "code": "-- UGC_GET_CONTENT_RATING_NEGATIVE_COUNT\nlocal retval --[[ Any ]] =\n\tUgcGetContentRatingNegativeCount(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentRatingPositiveCount",
    "hash": "0x87E5C46C187FE0AE",
    "code": "-- UGC_GET_CONTENT_RATING_POSITIVE_COUNT\nlocal retval --[[ Any ]] =\n\tUgcGetContentRatingPositiveCount(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentTotal",
    "hash": "0x769951E2455E2EB5",
    "code": "-- UGC_GET_CONTENT_TOTAL\nlocal retval --[[ Any ]] =\n\tUgcGetContentTotal()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentUpdatedDate",
    "hash": "0xCFD115B373C0DF63",
    "code": "-- UGC_GET_CONTENT_UPDATED_DATE\nlocal p1 --[[ Any ]] =\n\tUgcGetContentUpdatedDate(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentUserId",
    "hash": "0xCD67AD041A394C9C",
    "code": "-- UGC_GET_CONTENT_USER_ID\nlocal retval --[[ string ]] =\n\tUgcGetContentUserId(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetContentUserName",
    "hash": "0x703F12425ECA8BF5",
    "code": "-- UGC_GET_CONTENT_USER_NAME\nlocal retval --[[ string ]] =\n\tUgcGetContentUserName(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetCreateContentId",
    "hash": "0xC55A0B40FFB1ED23",
    "code": "-- UGC_GET_CREATE_CONTENT_ID\nlocal retval --[[ string ]] =\n\tUgcGetCreateContentId()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetCreateResult",
    "hash": "0xFBC5E768C7A77A6A",
    "code": "-- UGC_GET_CREATE_RESULT\nlocal retval --[[ Any ]] =\n\tUgcGetCreateResult()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetCreatorNum",
    "hash": "0x597F8DBA9B206FC7",
    "code": "-- UGC_GET_CREATOR_NUM\nlocal retval --[[ Any ]] =\n\tUgcGetCreatorNum()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetCrewContent",
    "hash": "0x9F6E2821885CAEE2",
    "code": "-- UGC_GET_CREW_CONTENT\nlocal retval --[[ boolean ]], p3 --[[ Any ]], p4 --[[ Any ]] =\n\tUgcGetCrewContent(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetFriendContent",
    "hash": "0xF9E1CCAE8BA4C281",
    "code": "-- UGC_GET_FRIEND_CONTENT\nlocal retval --[[ boolean ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tUgcGetFriendContent(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetGetByCategory",
    "hash": "0x678BB03C1A3BD51E",
    "code": "-- UGC_GET_GET_BY_CATEGORY\nlocal retval --[[ boolean ]], p3 --[[ Any ]], p4 --[[ Any ]] =\n\tUgcGetGetByCategory(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetModifyResult",
    "hash": "0x5A0A3D1A186A5508",
    "code": "-- UGC_GET_MODIFY_RESULT\nlocal retval --[[ Any ]] =\n\tUgcGetModifyResult()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetMyContent",
    "hash": "0x3195F8DD0D531052",
    "code": "-- UGC_GET_MY_CONTENT\nlocal retval --[[ boolean ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tUgcGetMyContent(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetQueryResult",
    "hash": "0xEDF7F927136C224B",
    "code": "-- UGC_GET_QUERY_RESULT\nlocal retval --[[ Any ]] =\n\tUgcGetQueryResult()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcGetRootContentId",
    "hash": "0xC0173D6BFF4E0348",
    "code": "-- UGC_GET_ROOT_CONTENT_ID\nlocal retval --[[ string ]] =\n\tUgcGetRootContentId(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return the root content id of a job."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcHasCreateFinished",
    "hash": "0x5E24341A7F92A74B",
    "code": "-- UGC_HAS_CREATE_FINISHED\nlocal retval --[[ boolean ]] =\n\tUgcHasCreateFinished()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcHasGetFinished",
    "hash": "0x02ADA21EA2F6918F",
    "code": "-- UGC_HAS_GET_FINISHED\nlocal retval --[[ boolean ]] =\n\tUgcHasGetFinished()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcHasModifyFinished",
    "hash": "0x299EF3C576773506",
    "code": "-- UGC_HAS_MODIFY_FINISHED\nlocal retval --[[ boolean ]] =\n\tUgcHasModifyFinished()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcIsGetting",
    "hash": "0xD53ACDBEF24A46E8",
    "code": "-- UGC_IS_GETTING\nlocal retval --[[ boolean ]] =\n\tUgcIsGetting()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcIsLanguageSupported",
    "hash": "0xF53E48461B71EECB",
    "code": "-- UGC_IS_LANGUAGE_SUPPORTED\nlocal retval --[[ boolean ]] =\n\tUgcIsLanguageSupported(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcPoliciesMakePrivate",
    "hash": "0x5CAE833B0EE0C500",
    "code": "-- UGC_POLICIES_MAKE_PRIVATE\nlocal retval --[[ boolean ]] =\n\tUgcPoliciesMakePrivate(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcPublish",
    "hash": "0x1DE0F5F50D723CAA",
    "code": "-- UGC_PUBLISH\nlocal retval --[[ boolean ]] =\n\tUgcPublish(\n\t\tcontentId --[[ string ]], \n\t\tbaseContentId --[[ string ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcQueryByContentId",
    "hash": "0x158EC424F35EC469",
    "code": "-- UGC_QUERY_BY_CONTENT_ID\nlocal retval --[[ boolean ]] =\n\tUgcQueryByContentId(\n\t\tcontentId --[[ string ]], \n\t\tlatestVersion --[[ boolean ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcQueryByContentIds",
    "hash": "0xC7397A83F7A2A462",
    "code": "-- UGC_QUERY_BY_CONTENT_IDS\nlocal retval --[[ boolean ]], data --[[ Any ]] =\n\tUgcQueryByContentIds(\n\t\tcount --[[ integer ]], \n\t\tlatestVersion --[[ boolean ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcQueryMyContent",
    "hash": "0x9BF438815F5D96EA",
    "code": "-- UGC_QUERY_MY_CONTENT\nlocal retval --[[ boolean ]], p2 --[[ Any ]] =\n\tUgcQueryMyContent(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcQueryRecentlyCreatedContent",
    "hash": "0x6D4CB481FAC835E8",
    "code": "-- _UGC_QUERY_RECENTLY_CREATED_CONTENT\nlocal retval --[[ boolean ]] =\n\tUgcQueryRecentlyCreatedContent(\n\t\toffset --[[ integer ]], \n\t\tcount --[[ integer ]], \n\t\tcontentTypeName --[[ string ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcRequestCachedDescription",
    "hash": "0x5E0165278F6339EE",
    "code": "-- UGC_REQUEST_CACHED_DESCRIPTION\nlocal retval --[[ integer ]] =\n\tUgcRequestCachedDescription(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcRequestContentDataFromIndex",
    "hash": "0x171DF6A0C07FB3DC",
    "code": "-- UGC_REQUEST_CONTENT_DATA_FROM_INDEX\nlocal retval --[[ integer ]] =\n\tUgcRequestContentDataFromIndex(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcRequestContentDataFromParams",
    "hash": "0x7FD2990AF016795E",
    "code": "-- UGC_REQUEST_CONTENT_DATA_FROM_PARAMS\nlocal retval --[[ integer ]] =\n\tUgcRequestContentDataFromParams(\n\t\tcontentTypeName --[[ string ]], \n\t\tcontentId --[[ string ]], \n\t\tp2 --[[ integer ]], \n\t\tp3 --[[ integer ]], \n\t\tp4 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcSetBookmarked",
    "hash": "0x274A1519DFC1094F",
    "code": "-- UGC_SET_BOOKMARKED\nlocal retval --[[ boolean ]] =\n\tUgcSetBookmarked(\n\t\tcontentId --[[ string ]], \n\t\tbookmarked --[[ boolean ]], \n\t\tcontentTypeName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcSetDeleted",
    "hash": "0xD05D1A6C74DA3498",
    "code": "-- UGC_SET_DELETED\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p2 --[[ Any ]] =\n\tUgcSetDeleted(\n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcSetQueryDataFromOffline",
    "hash": "0xF98DDE0A8ED09323",
    "code": "-- UGC_SET_QUERY_DATA_FROM_OFFLINE\nUgcSetQueryDataFromOffline(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UgcTextureDownloadRequest",
    "hash": "0x308F96458B7087CC",
    "code": "-- UGC_TEXTURE_DOWNLOAD_REQUEST\nlocal retval --[[ Any ]], p0 --[[ Any ]], p4 --[[ Any ]] =\n\tUgcTextureDownloadRequest(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "UsePlayerColourInsteadOfTeamColour",
    "hash": "0x77758139EC9B66C7",
    "code": "-- USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR\nUsePlayerColourInsteadOfTeamColour(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "VehToNet",
    "hash": "0xB4C94523F023419C",
    "code": "-- VEH_TO_NET\nlocal retval --[[ integer ]] =\n\tVehToNet(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "calls from vehicle to net."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x023acab2dc9dc4a4",
    "hash": "0x023ACAB2DC9DC4A4",
    "code": "-- 0x023ACAB2DC9DC4A4\nlocal retval --[[ Any ]] =\n\tN_0x023acab2dc9dc4a4()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x041c7f2a6c9894e6",
    "hash": "0x041C7F2A6C9894E6",
    "code": "-- 0x041C7F2A6C9894E6\nlocal retval --[[ Any ]] =\n\tN_0x041c7f2a6c9894e6(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x04918a41bc9b8157",
    "hash": "0x04918A41BC9B8157",
    "code": "-- 0x04918A41BC9B8157\nlocal retval --[[ Any ]] =\n\tN_0x04918a41bc9b8157(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x07eab372c8841d99",
    "hash": "0x07EAB372C8841D99",
    "code": "-- 0x07EAB372C8841D99\nlocal retval --[[ Any ]] =\n\tN_0x07eab372c8841d99(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x0cf6cc51aa18f0f8",
    "hash": "0x0CF6CC51AA18F0F8",
    "code": "-- 0x0CF6CC51AA18F0F8\nlocal retval --[[ Any ]] =\n\tN_0x0cf6cc51aa18f0f8(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x0d77a82dc2d0da59",
    "hash": "0x0D77A82DC2D0DA59",
    "code": "-- 0x0D77A82DC2D0DA59\nlocal p0 --[[ Any ]], p1 --[[ Any ]] =\n\tN_0x0d77a82dc2d0da59()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_SET_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x0ede326d47cd0f3e",
    "hash": "0x0EDE326D47CD0F3E",
    "code": "-- 0x0EDE326D47CD0F3E\nlocal retval --[[ boolean ]] =\n\tN_0x0ede326d47cd0f3e(\n\t\tped --[[ Ped ]], \n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x0f1a4b45b7693b95",
    "hash": "0x0F1A4B45B7693B95",
    "code": "-- 0x0F1A4B45B7693B95\nN_0x0f1a4b45b7693b95(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x1153fa02a659051c",
    "hash": "0x1153FA02A659051C",
    "code": "-- 0x1153FA02A659051C\nN_0x1153fa02a659051c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x1171a97a3d3981b6",
    "hash": "0x1171A97A3D3981B6",
    "code": "-- 0x1171A97A3D3981B6\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tN_0x1171a97a3d3981b6(\n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x1398582b7f72b3ed",
    "hash": "0x1398582B7F72B3ED",
    "code": "-- 0x1398582B7F72B3ED\nN_0x1398582b7f72b3ed(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x13f1fcb111b820b0",
    "hash": "0x13F1FCB111B820B0",
    "code": "-- 0x13F1FCB111B820B0\nN_0x13f1fcb111b820b0(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_NETWORK_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x140e6a44870a11ce",
    "hash": "0x140E6A44870A11CE",
    "code": "-- 0x140E6A44870A11CE\nN_0x140e6a44870a11ce()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x144da052257ae7d8",
    "hash": "0x144DA052257AE7D8",
    "code": "-- 0x144DA052257AE7D8\nN_0x144da052257ae7d8(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x14922ed3e38761f0",
    "hash": "0x14922ED3E38761F0",
    "code": "-- 0x14922ED3E38761F0\nlocal retval --[[ boolean ]] =\n\tN_0x14922ed3e38761f0()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_IS_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x155467aca0f55705",
    "hash": "0x155467ACA0F55705",
    "code": "-- 0x155467ACA0F55705\nlocal retval --[[ integer ]] =\n\tN_0x155467aca0f55705()",
    "parameters": [],
    "returns": [],
    "description": "Checks some commerce stuff\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x162c23ca83ed0a62",
    "hash": "0x162C23CA83ED0A62",
    "code": "-- 0x162C23CA83ED0A62\nlocal retval --[[ boolean ]] =\n\tN_0x162c23ca83ed0a62(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x17c9e241111a674d",
    "hash": "0x17C9E241111A674D",
    "code": "-- 0x17C9E241111A674D\nN_0x17c9e241111a674d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x1d4dc17c38feaff0",
    "hash": "0x1D4DC17C38FEAFF0",
    "code": "-- 0x1D4DC17C38FEAFF0\nlocal retval --[[ boolean ]] =\n\tN_0x1d4dc17c38feaff0()",
    "parameters": [],
    "returns": [],
    "description": "IS_COMMERCE_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x1d610eb0fea716d9",
    "hash": "0x1D610EB0FEA716D9",
    "code": "-- 0x1D610EB0FEA716D9\nlocal retval --[[ boolean ]] =\n\tN_0x1d610eb0fea716d9(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x1f7bc3539f9e0224",
    "hash": "0x1F7BC3539F9E0224",
    "code": "-- 0x1F7BC3539F9E0224\nN_0x1f7bc3539f9e0224()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x1f8e00fb18239600",
    "hash": "0x1F8E00FB18239600",
    "code": "-- 0x1F8E00FB18239600\nN_0x1f8e00fb18239600(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2302c0264ea58d31",
    "hash": "0x2302C0264EA58D31",
    "code": "-- 0x2302C0264EA58D31\nN_0x2302c0264ea58d31()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x24e4e51fc16305f9",
    "hash": "0x24E4E51FC16305F9",
    "code": "-- 0x24E4E51FC16305F9\nlocal retval --[[ Any ]] =\n\tN_0x24e4e51fc16305f9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2555cf7da5473794",
    "hash": "0x2555CF7DA5473794",
    "code": "-- 0x2555CF7DA5473794\nN_0x2555cf7da5473794()",
    "parameters": [],
    "returns": [],
    "description": "Does nothing (it's a nullsub).\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x25d990f8e0e3f13c",
    "hash": "0x25D990F8E0E3F13C",
    "code": "-- 0x25D990F8E0E3F13C\nN_0x25d990f8e0e3f13c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x261e97ad7bcf3d40",
    "hash": "0x261E97AD7BCF3D40",
    "code": "-- 0x261E97AD7BCF3D40\nN_0x261e97ad7bcf3d40(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x265559da40b3f327",
    "hash": "0x265559DA40B3F327",
    "code": "-- 0x265559DA40B3F327\nN_0x265559da40b3f327(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x265635150fb0d82e",
    "hash": "0x265635150FB0D82E",
    "code": "-- 0x265635150FB0D82E\nN_0x265635150fb0d82e()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x26f07dd83a5f7f98",
    "hash": "0x26F07DD83A5F7F98",
    "code": "-- 0x26F07DD83A5F7F98\nlocal retval --[[ Any ]] =\n\tN_0x26f07dd83a5f7f98()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x283b6062a2c01e9b",
    "hash": "0x283B6062A2C01E9B",
    "code": "-- 0x283B6062A2C01E9B\nN_0x283b6062a2c01e9b()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2b1c623823db0d9d",
    "hash": "0x2B1C623823DB0D9D",
    "code": "-- 0x2B1C623823DB0D9D\nlocal retval --[[ Any ]] =\n\tN_0x2b1c623823db0d9d(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2b51edbefc301339",
    "hash": "0x2B51EDBEFC301339",
    "code": "-- 0x2B51EDBEFC301339\nlocal retval --[[ boolean ]] =\n\tN_0x2b51edbefc301339(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2bf66d2e7414f686",
    "hash": "0x2BF66D2E7414F686",
    "code": "-- 0x2BF66D2E7414F686\nlocal retval --[[ Any ]] =\n\tN_0x2bf66d2e7414f686()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2ce9d95e4051aecd",
    "hash": "0x2CE9D95E4051AECD",
    "code": "-- 0x2CE9D95E4051AECD\nN_0x2ce9d95e4051aecd(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2d5dc831176d0114",
    "hash": "0x2D5DC831176D0114",
    "code": "-- 0x2D5DC831176D0114\nlocal retval --[[ boolean ]] =\n\tN_0x2d5dc831176d0114(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2da41ed6e1fcd7a5",
    "hash": "0x2DA41ED6E1FCD7A5",
    "code": "-- 0x2DA41ED6E1FCD7A5\nlocal retval --[[ Any ]], TypeOfWeapon --[[ integer ]] =\n\tN_0x2da41ed6e1fcd7a5(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2e0bf682cc778d49",
    "hash": "0x2E0BF682CC778D49",
    "code": "-- 0x2E0BF682CC778D49\nlocal retval --[[ boolean ]] =\n\tN_0x2e0bf682cc778d49(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x2e4c123d1c8a710e",
    "hash": "0x2E4C123D1C8A710E",
    "code": "-- 0x2E4C123D1C8A710E\nlocal retval --[[ Any ]], retPlayerIds --[[ integer ]], retNumber --[[ integer ]] =\n\tN_0x2e4c123d1c8a710e(\n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x32ebd154cb6b8b99",
    "hash": "0x32EBD154CB6B8B99",
    "code": "-- 0x32EBD154CB6B8B99\nN_0x32ebd154cb6b8b99(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x36391f397731595d",
    "hash": "0x36391F397731595D",
    "code": "-- 0x36391F397731595D\nlocal retval --[[ Any ]] =\n\tN_0x36391f397731595d(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x367ef5e2f439b4c6",
    "hash": "0x367EF5E2F439B4C6",
    "code": "-- 0x367EF5E2F439B4C6\nN_0x367ef5e2f439b4c6(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x37d5f739fd494675",
    "hash": "0x37D5F739FD494675",
    "code": "-- 0x37D5F739FD494675\nlocal retval --[[ integer ]] =\n\tN_0x37d5f739fd494675(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [
      "p0: \n\nunknown."
    ],
    "returns": [
      "Returns an entity handle or -1, value changes based on p0's value."
    ],
    "description": "Parameters:\n\np0: \n\nunknown.\n\nReturns:\n\nReturns an entity handle or -1, value changes based on p0's value.\n\nI've had this return the player's ped handle sometimes, but also other random entities.\n\nWhatever p0 is, it's at least not synced to other players. At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity). But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients)."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x3855fb5eb2c5e8b2",
    "hash": "0x3855FB5EB2C5E8B2",
    "code": "-- 0x3855FB5EB2C5E8B2\nlocal retval --[[ Any ]] =\n\tN_0x3855fb5eb2c5e8b2(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x38b7c51ab1edc7d8",
    "hash": "0x38B7C51AB1EDC7D8",
    "code": "-- 0x38B7C51AB1EDC7D8\nN_0x38b7c51ab1edc7d8(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x39917e1b4cb0f911",
    "hash": "0x39917E1B4CB0F911",
    "code": "-- 0x39917E1B4CB0F911\nN_0x39917e1b4cb0f911(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x3c5c1e2c2ff814b1",
    "hash": "0x3C5C1E2C2FF814B1",
    "code": "-- 0x3C5C1E2C2FF814B1\nN_0x3c5c1e2c2ff814b1(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets some voice chat related value.\n\nNETWORK_SET_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x3fa36981311fa4ff",
    "hash": "0x3FA36981311FA4FF",
    "code": "-- 0x3FA36981311FA4FF\nN_0x3fa36981311fa4ff(\n\tnetId --[[ integer ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x3fc795691834481d",
    "hash": "0x3FC795691834481D",
    "code": "-- 0x3FC795691834481D\nN_0x3fc795691834481d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "nullsub, doesn't do anything\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4237e822315d8ba9",
    "hash": "0x4237E822315D8BA9",
    "code": "-- 0x4237E822315D8BA9\nlocal retval --[[ boolean ]] =\n\tN_0x4237e822315d8ba9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4348bfda56023a2f",
    "hash": "0x4348BFDA56023A2F",
    "code": "-- 0x4348BFDA56023A2F\nlocal retval --[[ Any ]] =\n\tN_0x4348bfda56023a2f(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x444c4525ece0a4b9",
    "hash": "0x444C4525ECE0A4B9",
    "code": "-- 0x444C4525ECE0A4B9\nN_0x444c4525ece0a4b9()",
    "parameters": [],
    "returns": [],
    "description": "related to: \nNETWORK_BAIL  \nNETWORK_BAIL_TRANSITION  \nNETWORK_JOIN_GROUP_ACTIVITY  \nNETWORK_JOIN_TRANSITION  \nNETWORK_LAUNCH_TRANSITION  \nNETWORK_SESSION_HOST  \nNETWORK_SESSION_HOST_CLOSED  \nNETWORK_SESSION_HOST_FRIENDS_ONLY  \nNETWORK_SESSION_HOST_SINGLE_PLAYER  \nNETWORK_SESSION_VOICE_LEAVE"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x45e816772e93a9db",
    "hash": "0x45E816772E93A9DB",
    "code": "-- 0x45E816772E93A9DB\nlocal retval --[[ Any ]] =\n\tN_0x45e816772e93a9db()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4811bbac21c5fcd5",
    "hash": "0x4811BBAC21C5FCD5",
    "code": "-- 0x4811BBAC21C5FCD5\nN_0x4811bbac21c5fcd5(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4a9fde3a5a6d0437",
    "hash": "0x4A9FDE3A5A6D0437",
    "code": "-- 0x4A9FDE3A5A6D0437\nN_0x4a9fde3a5a6d0437(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4ad490ae1536933b",
    "hash": "0x4AD490AE1536933B",
    "code": "-- 0x4AD490AE1536933B\nlocal retval --[[ Any ]] =\n\tN_0x4ad490ae1536933b(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4c2a9fdc22377075",
    "hash": "0x4C2A9FDC22377075",
    "code": "-- 0x4C2A9FDC22377075\nN_0x4c2a9fdc22377075()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4c9034162368e206",
    "hash": "0x4C9034162368E206",
    "code": "-- 0x4C9034162368E206\nlocal retval --[[ Any ]] =\n\tN_0x4c9034162368e206()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4d02279c83be69fe",
    "hash": "0x4D02279C83BE69FE",
    "code": "-- 0x4D02279C83BE69FE\nlocal retval --[[ Any ]] =\n\tN_0x4d02279c83be69fe()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x4df7cfff471a7fb1",
    "hash": "0x4DF7CFFF471A7FB1",
    "code": "-- 0x4DF7CFFF471A7FB1\nlocal retval --[[ boolean ]] =\n\tN_0x4df7cfff471a7fb1(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x5324a0e3e4ce3570",
    "hash": "0x5324A0E3E4CE3570",
    "code": "-- 0x5324A0E3E4CE3570\nlocal retval --[[ boolean ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tN_0x5324a0e3e4ce3570(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x53c10c8bd774f2c9",
    "hash": "0x53C10C8BD774F2C9",
    "code": "-- 0x53C10C8BD774F2C9\nlocal retval --[[ Any ]] =\n\tN_0x53c10c8bd774f2c9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x5539c3ebf104a53a",
    "hash": "0x5539C3EBF104A53A",
    "code": "-- 0x5539C3EBF104A53A\nN_0x5539c3ebf104a53a(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x559ebf901a8c68e0",
    "hash": "0x559EBF901A8C68E0",
    "code": "-- 0x559EBF901A8C68E0\nlocal retval --[[ boolean ]], gamerHandle --[[ Any ]] =\n\tN_0x559ebf901a8c68e0()",
    "parameters": [],
    "returns": [],
    "description": "_NETWORK_CAN_VIEW_* - _NETWORK_CAN_SESSION*\n\nNETWORK_CAN_PLAY_GAMER_USER_CONTENT?\n\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x560b423d73015e77",
    "hash": "0x560B423D73015E77",
    "code": "-- 0x560B423D73015E77\nlocal retval --[[ Any ]] =\n\tN_0x560b423d73015e77(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x584770794d758c18",
    "hash": "0x584770794D758C18",
    "code": "-- 0x584770794D758C18\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tN_0x584770794d758c18(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x59328eb08c5ceb2b",
    "hash": "0x59328EB08C5CEB2B",
    "code": "-- 0x59328EB08C5CEB2B\nlocal retval --[[ boolean ]] =\n\tN_0x59328eb08c5ceb2b()",
    "parameters": [],
    "returns": [],
    "description": "IS_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x59d421683d31835a",
    "hash": "0x59D421683D31835A",
    "code": "-- 0x59D421683D31835A\nN_0x59d421683d31835a(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x5a34cd9c3c5bec44",
    "hash": "0x5A34CD9C3C5BEC44",
    "code": "-- 0x5A34CD9C3C5BEC44\nlocal retval --[[ boolean ]] =\n\tN_0x5a34cd9c3c5bec44(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x5c497525f803486b",
    "hash": "0x5C497525F803486B",
    "code": "-- 0x5C497525F803486B\nN_0x5c497525f803486b()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x5e3aa4ca2b6fb0ee",
    "hash": "0x5E3AA4CA2B6FB0EE",
    "code": "-- 0x5E3AA4CA2B6FB0EE\nN_0x5e3aa4ca2b6fb0ee(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x5ecd378ee64450ab",
    "hash": "0x5ECD378EE64450AB",
    "code": "-- 0x5ECD378EE64450AB\nN_0x5ecd378ee64450ab(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x600f8cb31c7aab6e",
    "hash": "0x600F8CB31C7AAB6E",
    "code": "-- 0x600F8CB31C7AAB6E\nN_0x600f8cb31c7aab6e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x60edd13eb3ac1ff3",
    "hash": "0x60EDD13EB3AC1FF3",
    "code": "-- 0x60EDD13EB3AC1FF3\nlocal retval --[[ boolean ]] =\n\tN_0x60edd13eb3ac1ff3()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if profile setting 901 is set to true and sets it to false.\n\nNETWORK_C*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x617f49c2668e6155",
    "hash": "0x617F49C2668E6155",
    "code": "-- 0x617F49C2668E6155\nlocal retval --[[ integer ]] =\n\tN_0x617f49c2668e6155()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_GET_NUM_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x63b406d7884bfa95",
    "hash": "0x63B406D7884BFA95",
    "code": "-- 0x63B406D7884BFA95\nlocal retval --[[ Any ]] =\n\tN_0x63b406d7884bfa95()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x64d779659bc37b19",
    "hash": "0x64D779659BC37B19",
    "code": "-- 0x64D779659BC37B19\nlocal retval --[[ vector3 ]] =\n\tN_0x64d779659bc37b19(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_GET_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x64e5c4cc82847b73",
    "hash": "0x64E5C4CC82847B73",
    "code": "-- 0x64E5C4CC82847B73\nlocal retval --[[ boolean ]] =\n\tN_0x64e5c4cc82847b73()",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to return false.\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x67fc09bc554a75e5",
    "hash": "0x67FC09BC554A75E5",
    "code": "-- 0x67FC09BC554A75E5\nlocal retval --[[ Any ]] =\n\tN_0x67fc09bc554a75e5()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x68103e2247887242",
    "hash": "0x68103E2247887242",
    "code": "-- 0x68103E2247887242\nN_0x68103e2247887242()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x692d58df40657e8c",
    "hash": "0x692D58DF40657E8C",
    "code": "-- 0x692D58DF40657E8C\nlocal retval --[[ boolean ]], p3 --[[ Any ]] =\n\tN_0x692d58df40657e8c(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x6a5d89d7769a40d8",
    "hash": "0x6A5D89D7769A40D8",
    "code": "-- 0x6A5D89D7769A40D8\nN_0x6a5d89d7769a40d8(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets some voice chat related value.\nNETWORK_SET_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x6bff5f84102df80a",
    "hash": "0x6BFF5F84102DF80A",
    "code": "-- 0x6BFF5F84102DF80A\nN_0x6bff5f84102df80a(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x6ce50e47f5543d0c",
    "hash": "0x6CE50E47F5543D0C",
    "code": "-- 0x6CE50E47F5543D0C\nN_0x6ce50e47f5543d0c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x6fb7bb3607d27fa2",
    "hash": "0x6FB7BB3607D27FA2",
    "code": "-- 0x6FB7BB3607D27FA2\nlocal retval --[[ Any ]] =\n\tN_0x6fb7bb3607d27fa2()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x6fd992c4a1c1b986",
    "hash": "0x6FD992C4A1C1B986",
    "code": "-- 0x6FD992C4A1C1B986\nN_0x6fd992c4a1c1b986()",
    "parameters": [],
    "returns": [],
    "description": "Does nothing (it's a nullsub).\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x702bc4d605522539",
    "hash": "0x702BC4D605522539",
    "code": "-- 0x702BC4D605522539\nN_0x702bc4d605522539(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x741a3d8380319a81",
    "hash": "0x741A3D8380319A81",
    "code": "-- 0x741A3D8380319A81\nN_0x741a3d8380319a81()",
    "parameters": [],
    "returns": [],
    "description": "Has something to do with a host request.\n\nNETWORK_RE*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x742b58f723233ed9",
    "hash": "0x742B58F723233ED9",
    "code": "-- 0x742B58F723233ED9\nlocal retval --[[ Any ]] =\n\tN_0x742b58f723233ed9(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x74fb3e29e6d10fa9",
    "hash": "0x74FB3E29E6D10FA9",
    "code": "-- 0x74FB3E29E6D10FA9\nlocal retval --[[ integer ]] =\n\tN_0x74fb3e29e6d10fa9()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0.\n\nHardcoded to return zero.\n==== PS4 specific info ====\nReturns some sort of unavailable reason:\n-1 = REASON_INVALID\n 0 = REASON_OTHER\n 1 = REASON_SYSTEM_UPDATE\n 2 = REASON_GAME_UPDATE\n 3 = REASON_SIGNED_OUT\n 4 = REASON_AGE\n 5 = REASON_CONNECTION\n================================="
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x754615490a029508",
    "hash": "0x754615490A029508",
    "code": "-- 0x754615490A029508\nlocal retval --[[ integer ]] =\n\tN_0x754615490a029508()",
    "parameters": [],
    "returns": [],
    "description": "Checks some commerce stuff\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x76b3f29d3f967692",
    "hash": "0x76B3F29D3F967692",
    "code": "-- 0x76B3F29D3F967692\nN_0x76b3f29d3f967692(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x77faddcbe3499df7",
    "hash": "0x77FADDCBE3499DF7",
    "code": "-- 0x77FADDCBE3499DF7\nN_0x77faddcbe3499df7(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x7808619f31ff22db",
    "hash": "0x7808619F31FF22DB",
    "code": "-- 0x7808619F31FF22DB\nlocal retval --[[ Any ]] =\n\tN_0x7808619f31ff22db()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 1."
    ],
    "description": "Returns:\n\nHard-coded to always return 1."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x78321bea235fd8cd",
    "hash": "0x78321BEA235FD8CD",
    "code": "-- 0x78321BEA235FD8CD\nlocal retval --[[ boolean ]] =\n\tN_0x78321bea235fd8cd(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x793ff272d5b365f4",
    "hash": "0x793FF272D5B365F4",
    "code": "-- 0x793FF272D5B365F4\nlocal retval --[[ Any ]] =\n\tN_0x793ff272d5b365f4()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x7d395ea61622e116",
    "hash": "0x7D395EA61622E116",
    "code": "-- 0x7D395EA61622E116\nN_0x7d395ea61622e116(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x7db53b37a2f211a0",
    "hash": "0x7DB53B37A2F211A0",
    "code": "-- 0x7DB53B37A2F211A0\nlocal retval --[[ integer ]] =\n\tN_0x7db53b37a2f211a0()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x7ef7649b64d7ff10",
    "hash": "0x7EF7649B64D7FF10",
    "code": "-- 0x7EF7649B64D7FF10\nlocal retval --[[ boolean ]] =\n\tN_0x7ef7649b64d7ff10(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "IS_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x7fcc39c46c3c03bd",
    "hash": "0x7FCC39C46C3C03BD",
    "code": "-- 0x7FCC39C46C3C03BD\nlocal retval --[[ boolean ]] =\n\tN_0x7fcc39c46c3c03bd(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x83660b734994124d",
    "hash": "0x83660B734994124D",
    "code": "-- 0x83660B734994124D\nlocal retval --[[ Any ]], damageDealt --[[ integer ]] =\n\tN_0x83660b734994124d(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x83fe8d7229593017",
    "hash": "0x83FE8D7229593017",
    "code": "-- 0x83FE8D7229593017\nN_0x83fe8d7229593017()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x88b588b41ff7868e",
    "hash": "0x88B588B41FF7868E",
    "code": "-- 0x88B588B41FF7868E\nlocal retval --[[ Any ]] =\n\tN_0x88b588b41ff7868e()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x8b0c2964ba471961",
    "hash": "0x8B0C2964BA471961",
    "code": "-- 0x8B0C2964BA471961\nlocal retval --[[ Any ]] =\n\tN_0x8b0c2964ba471961()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x8b4ffc790ca131ef",
    "hash": "0x8B4FFC790CA131EF",
    "code": "-- 0x8B4FFC790CA131EF\nlocal retval --[[ Any ]] =\n\tN_0x8b4ffc790ca131ef(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x8c8d2739ba44af0f",
    "hash": "0x8C8D2739BA44AF0F",
    "code": "-- 0x8C8D2739BA44AF0F\nlocal retval --[[ boolean ]] =\n\tN_0x8c8d2739ba44af0f(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x8ef52acaecc51d9c",
    "hash": "0x8EF52ACAECC51D9C",
    "code": "-- 0x8EF52ACAECC51D9C\nN_0x8ef52acaecc51d9c(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NETWORKSET*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x906ca41a4b74eca4",
    "hash": "0x906CA41A4B74ECA4",
    "code": "-- 0x906CA41A4B74ECA4\nlocal retval --[[ Any ]] =\n\tN_0x906ca41a4b74eca4()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x94538037ee44f5cf",
    "hash": "0x94538037EE44F5CF",
    "code": "-- 0x94538037EE44F5CF\nN_0x94538037ee44f5cf(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x9465e683b12d3f6b",
    "hash": "0x9465E683B12D3F6B",
    "code": "-- 0x9465E683B12D3F6B\nN_0x9465e683b12d3f6b()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x95baf97c82464629",
    "hash": "0x95BAF97C82464629",
    "code": "-- 0x95BAF97C82464629\nN_0x95baf97c82464629(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x973d76aa760a6cb6",
    "hash": "0x973D76AA760A6CB6",
    "code": "-- 0x973D76AA760A6CB6\nN_0x973d76aa760a6cb6(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x9d724b400a7e8ffc",
    "hash": "0x9D724B400A7E8FFC",
    "code": "-- 0x9D724B400A7E8FFC\nN_0x9d724b400a7e8ffc(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x9d7afcbf21c51712",
    "hash": "0x9D7AFCBF21C51712",
    "code": "-- 0x9D7AFCBF21C51712\nN_0x9d7afcbf21c51712(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets some voice chat related value.\n\nNETWORK_SET_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0x9fedf86898f100e9",
    "hash": "0x9FEDF86898F100E9",
    "code": "-- 0x9FEDF86898F100E9\nlocal retval --[[ Any ]] =\n\tN_0x9fedf86898f100e9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xa0fa4ec6a05da44e",
    "hash": "0xA0FA4EC6A05DA44E",
    "code": "-- 0xA0FA4EC6A05DA44E\nlocal retval --[[ Any ]] =\n\tN_0xa0fa4ec6a05da44e()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 0."
    ],
    "description": "Returns:\n\nHard-coded to always return 0."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xa12d3a5a3753cc23",
    "hash": "0xA12D3A5A3753CC23",
    "code": "-- 0xA12D3A5A3753CC23\nlocal retval --[[ Any ]] =\n\tN_0xa12d3a5a3753cc23()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xa2e9c1ab8a92e8cd",
    "hash": "0xA2E9C1AB8A92E8CD",
    "code": "-- 0xA2E9C1AB8A92E8CD\nN_0xa2e9c1ab8a92e8cd(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Appears to set whether a transition should be started when the session is migrating.\n\nNETWORK_SET_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xa306f470d1660581",
    "hash": "0xA306F470D1660581",
    "code": "-- 0xA306F470D1660581\nlocal retval --[[ Any ]] =\n\tN_0xa306f470d1660581()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xa6fceccf4721d679",
    "hash": "0xA6FCECCF4721D679",
    "code": "-- 0xA6FCECCF4721D679\nN_0xa6fceccf4721d679(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xa7862bc5ed1dfd7e",
    "hash": "0xA7862BC5ED1DFD7E",
    "code": "-- 0xA7862BC5ED1DFD7E\nlocal retval --[[ boolean ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tN_0xa7862bc5ed1dfd7e(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xa8acb6459542a8c8",
    "hash": "0xA8ACB6459542A8C8",
    "code": "-- 0xA8ACB6459542A8C8\nlocal retval --[[ Any ]] =\n\tN_0xa8acb6459542a8c8()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xaa5fafcd2c5f5e47",
    "hash": "0xAA5FAFCD2C5F5E47",
    "code": "-- 0xAA5FAFCD2C5F5E47\nlocal retval --[[ vector3 ]] =\n\tN_0xaa5fafcd2c5f5e47()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: Entity entity"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xadb57e5b663cca8b",
    "hash": "0xADB57E5B663CCA8B",
    "code": "-- 0xADB57E5B663CCA8B\nlocal p1 --[[ number ]], p2 --[[ number ]] =\n\tN_0xadb57e5b663cca8b(\n\t\tp0 --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.  \nPossibly waypoint?"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xaeab987727c5a8a4",
    "hash": "0xAEAB987727C5A8A4",
    "code": "-- 0xAEAB987727C5A8A4\nlocal retval --[[ boolean ]] =\n\tN_0xaeab987727c5a8a4(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xaedf1bc1c133d6e3",
    "hash": "0xAEDF1BC1C133D6E3",
    "code": "-- 0xAEDF1BC1C133D6E3\nN_0xaedf1bc1c133d6e3()",
    "parameters": [],
    "returns": [],
    "description": "Does nothing (it's a nullsub).\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xb13e88e655e5a3bc",
    "hash": "0xB13E88E655E5A3BC",
    "code": "-- 0xB13E88E655E5A3BC\nN_0xb13e88e655e5a3bc()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xb309ebea797e001f",
    "hash": "0xB309EBEA797E001F",
    "code": "-- 0xB309EBEA797E001F\nlocal retval --[[ Any ]] =\n\tN_0xb309ebea797e001f(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xb37e4e6a2388ca7b",
    "hash": "0xB37E4E6A2388CA7B",
    "code": "-- 0xB37E4E6A2388CA7B\nlocal retval --[[ boolean ]] =\n\tN_0xb37e4e6a2388ca7b()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xb5d3453c98456528",
    "hash": "0xB5D3453C98456528",
    "code": "-- 0xB5D3453C98456528\nlocal retval --[[ Any ]] =\n\tN_0xb5d3453c98456528()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xb606e6cc59664972",
    "hash": "0xB606E6CC59664972",
    "code": "-- 0xB606E6CC59664972\nN_0xb606e6cc59664972(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xb746d20b17f2a229",
    "hash": "0xB746D20B17F2A229",
    "code": "-- 0xB746D20B17F2A229\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tN_0xb746d20b17f2a229()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xb9351a07a0d458b1",
    "hash": "0xB9351A07A0D458B1",
    "code": "-- 0xB9351A07A0D458B1\nlocal retval --[[ Any ]] =\n\tN_0xb9351a07a0d458b1(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xba7f0b77d80a4eb7",
    "hash": "0xBA7F0B77D80A4EB7",
    "code": "-- 0xBA7F0B77D80A4EB7\nN_0xba7f0b77d80a4eb7(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xbd545d44cce70597",
    "hash": "0xBD545D44CCE70597",
    "code": "-- 0xBD545D44CCE70597\nlocal retval --[[ boolean ]] =\n\tN_0xbd545d44cce70597()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 1."
    ],
    "description": "Returns:\n\nHard-coded to always return 1."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xbdb6f89c729cf388",
    "hash": "0xBDB6F89C729CF388",
    "code": "-- 0xBDB6F89C729CF388\nlocal retval --[[ boolean ]] =\n\tN_0xbdb6f89c729cf388()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_SESSION_IS_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xbf22e0f32968e967",
    "hash": "0xBF22E0F32968E967",
    "code": "-- 0xBF22E0F32968E967\nN_0xbf22e0f32968e967(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xc32ea7a2f6ca7557",
    "hash": "0xC32EA7A2F6CA7557",
    "code": "-- 0xC32EA7A2F6CA7557\nlocal retval --[[ Any ]] =\n\tN_0xc32ea7a2f6ca7557()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xc42dd763159f3461",
    "hash": "0xC42DD763159F3461",
    "code": "-- 0xC42DD763159F3461\nlocal retval --[[ boolean ]] =\n\tN_0xc42dd763159f3461()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xc434133d9ba52777",
    "hash": "0xC434133D9BA52777",
    "code": "-- 0xC434133D9BA52777\nlocal retval --[[ Any ]], TypeOfWeapon --[[ integer ]] =\n\tN_0xc434133d9ba52777(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xc571d0e77d8bbc29",
    "hash": "0xC571D0E77D8BBC29",
    "code": "-- 0xC571D0E77D8BBC29\nlocal retval --[[ boolean ]] =\n\tN_0xc571d0e77d8bbc29()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_IS_TRANSITION_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xc87e740d9f3872cc",
    "hash": "0xC87E740D9F3872CC",
    "code": "-- 0xC87E740D9F3872CC\nlocal retval --[[ Any ]] =\n\tN_0xc87e740d9f3872cc()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xca575c391fea25cc",
    "hash": "0xCA575C391FEA25CC",
    "code": "-- 0xCA575C391FEA25CC\nN_0xca575c391fea25cc(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xca59ccae5d01e4ce",
    "hash": "0xCA59CCAE5D01E4CE",
    "code": "-- 0xCA59CCAE5D01E4CE\nN_0xca59ccae5d01e4ce()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_S*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xcfeb46dcd7d8d5eb",
    "hash": "0xCFEB46DCD7D8D5EB",
    "code": "-- 0xCFEB46DCD7D8D5EB\nN_0xcfeb46dcd7d8d5eb(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xd313de83394af134",
    "hash": "0xD313DE83394AF134",
    "code": "-- 0xD313DE83394AF134\nlocal retval --[[ boolean ]] =\n\tN_0xd313de83394af134()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_SESSION_IS_*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xd6d7478ca62b8d41",
    "hash": "0xD6D7478CA62B8D41",
    "code": "-- 0xD6D7478CA62B8D41\nN_0xd6d7478ca62b8d41(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xd7b6c73cad419bcf",
    "hash": "0xD7B6C73CAD419BCF",
    "code": "-- 0xD7B6C73CAD419BCF\nN_0xd7b6c73cad419bcf(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xdb663cc9ff3407a9",
    "hash": "0xDB663CC9FF3407A9",
    "code": "-- 0xDB663CC9FF3407A9\nlocal retval --[[ integer ]] =\n\tN_0xdb663cc9ff3407a9(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xe16aa70ce9beedc3",
    "hash": "0xE16AA70CE9BEEDC3",
    "code": "-- 0xE16AA70CE9BEEDC3\nlocal retval --[[ Any ]] =\n\tN_0xe16aa70ce9beedc3(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xe42d626eec94e5d9",
    "hash": "0xE42D626EEC94E5D9",
    "code": "-- 0xE42D626EEC94E5D9\nlocal numReservedPeds --[[ integer ]], numReservedVehicles --[[ integer ]], numReservedObjects --[[ integer ]] =\n\tN_0xe42d626eec94e5d9(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xe6717e652b8c8d8a",
    "hash": "0xE6717E652B8C8D8A",
    "code": "-- 0xE6717E652B8C8D8A\nN_0xe6717e652b8c8d8a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xea8c0ddb10e2822a",
    "hash": "0xEA8C0DDB10E2822A",
    "code": "-- 0xEA8C0DDB10E2822A\nN_0xea8c0ddb10e2822a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xebcab9e5048434f4",
    "hash": "0xEBCAB9E5048434F4",
    "code": "-- 0xEBCAB9E5048434F4\nlocal retval --[[ Any ]] =\n\tN_0xebcab9e5048434f4()",
    "parameters": [],
    "returns": [
      "Hard-coded to always return 1."
    ],
    "description": "Returns:\n\nHard-coded to always return 1."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xebf8284d8cadeb53",
    "hash": "0xEBF8284D8CADEB53",
    "code": "-- 0xEBF8284D8CADEB53\nN_0xebf8284d8cadeb53()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xebfa8d50addc54c4",
    "hash": "0xEBFA8D50ADDC54C4",
    "code": "-- 0xEBFA8D50ADDC54C4\nlocal retval --[[ boolean ]] =\n\tN_0xebfa8d50addc54c4(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xf083835b70ba9bfe",
    "hash": "0xF083835B70BA9BFE",
    "code": "-- 0xF083835B70BA9BFE\nN_0xf083835b70ba9bfe()",
    "parameters": [],
    "returns": [],
    "description": "NETWORK_RE*"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xf287f506767cc8a9",
    "hash": "0xF287F506767CC8A9",
    "code": "-- 0xF287F506767CC8A9\nlocal retval --[[ Any ]] =\n\tN_0xf287f506767cc8a9()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xf49abc20d8552257",
    "hash": "0xF49ABC20D8552257",
    "code": "-- 0xF49ABC20D8552257\nN_0xf49abc20d8552257(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xf6f4383b7c92f11a",
    "hash": "0xF6F4383B7C92F11A",
    "code": "-- 0xF6F4383B7C92F11A\nN_0xf6f4383b7c92f11a(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xf814fec6a19fd6e0",
    "hash": "0xF814FEC6A19FD6E0",
    "code": "-- 0xF814FEC6A19FD6E0\nN_0xf814fec6a19fd6e0()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xfa2888e3833c8e96",
    "hash": "0xFA2888E3833C8E96",
    "code": "-- 0xFA2888E3833C8E96\nN_0xfa2888e3833c8e96()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xfac18e7356bd3210",
    "hash": "0xFAC18E7356BD3210",
    "code": "-- 0xFAC18E7356BD3210\nN_0xfac18e7356bd3210()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xfae628f1e9adb239",
    "hash": "0xFAE628F1E9ADB239",
    "code": "-- 0xFAE628F1E9ADB239\nN_0xfae628f1e9adb239(\n\tp0 --[[ Hash ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xfb1f9381e80fa13f",
    "hash": "0xFB1F9381E80FA13F",
    "code": "-- 0xFB1F9381E80FA13F\nlocal retval --[[ Any ]], p1 --[[ Any ]] =\n\tN_0xfb1f9381e80fa13f(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0 is always 0. p1 is pointing to a global."
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xfb680d403909dc70",
    "hash": "0xFB680D403909DC70",
    "code": "-- 0xFB680D403909DC70\nN_0xfb680d403909dc70(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: NETWORK",
    "apiset": "API set: client",
    "name": "N_0xfd75dabc0957bf33",
    "hash": "0xFD75DABC0957BF33",
    "code": "-- 0xFD75DABC0957BF33\nN_0xfd75dabc0957bf33(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "AddDoorToSystem",
    "hash": "0x6F8838D03D1DC226",
    "code": "-- ADD_DOOR_TO_SYSTEM\nAddDoorToSystem(\n\tdoorHash --[[ Hash ]], \n\tmodelHash --[[ Hash ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp5 --[[ boolean ]], \n\tscriptDoor --[[ boolean ]], \n\tisLocal --[[ boolean ]]\n)",
    "parameters": [
      "doorHash: \n\nA (unique) door system identifier",
      "modelHash: \n\nEntity model hash",
      "x: \n\nThe X coordinate of the door object",
      "y: \n\nThe Y coordinate of the door object",
      "z: \n\nThe Z coordinate of the door object",
      "p5:",
      "scriptDoor: \n\nfalse; relies upon getNetworkGameScriptHandler.",
      "isLocal: \n\nOn true disables the creation CRequestDoorEvent's in DOOR_SYSTEM_SET_DOOR_STATE."
    ],
    "returns": [],
    "description": "Parameters:\n\ndoorHash: \n\nA (unique) door system identifier\n\nmodelHash: \n\nEntity model hash\n\nx: \n\nThe X coordinate of the door object\n\ny: \n\nThe Y coordinate of the door object\n\nz: \n\nThe Z coordinate of the door object\n\np5:\nscriptDoor: \n\nfalse; relies upon getNetworkGameScriptHandler.\n\nisLocal: \n\nOn true disables the creation CRequestDoorEvent's in DOOR_SYSTEM_SET_DOOR_STATE.\n\np5 only set to true in single player native scripts. Door hashes normally look like PROP_[int]_DOOR_[int] for interior doors and PROP_BUILDING_[int]_DOOR_[int] exterior doors but you can just make up your own hash if you want.\n\nIf scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a \"Persists w/o netobj\" state.\n\nA simple \"localized\" door-system (with hundreds/thousands of doors) can be created by setting p5, p6, and p7 to false and using EventHandlers to synchronize the states to: DOOR_SYSTEM_SET_DOOR_STATE, DOOR_SYSTEM_SET_OPEN_RATIO, DOOR_SYSTEM_SET_HOLD_OPEN, etc."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "AreEntitiesEntirelyInsideGarage",
    "hash": "0x85B6C850546FDDE2",
    "code": "-- ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE\nlocal retval --[[ boolean ]] =\n\tAreEntitiesEntirelyInsideGarage(\n\t\tgarageHash --[[ Hash ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "AttachPortablePickupToPed",
    "hash": "0x8DC39368BDD57755",
    "code": "-- ATTACH_PORTABLE_PICKUP_TO_PED\nAttachPortablePickupToPed(\n\tpickupObject --[[ Object ]], \n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "BreakObjectFragmentChild",
    "hash": "0xE7E4C198B0185900",
    "code": "-- BREAK_OBJECT_FRAGMENT_CHILD\nBreakObjectFragmentChild(\n\tp0 --[[ Object ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "ClearGarageArea",
    "hash": "0xDA05194260CDCDF9",
    "code": "-- _CLEAR_GARAGE_AREA\nClearGarageArea(\n\tgarageHash --[[ Hash ]], \n\tisNetwork --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "ClearObjectsInsideGarage",
    "hash": "0x190428512B240692",
    "code": "-- CLEAR_OBJECTS_INSIDE_GARAGE\nClearObjectsInsideGarage(\n\tgarageHash --[[ Hash ]], \n\tvehicles --[[ boolean ]], \n\tpeds --[[ boolean ]], \n\tobjects --[[ boolean ]], \n\tisNetwork --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreateAmbientPickup",
    "hash": "0x673966A0C0FD7171",
    "code": "-- CREATE_AMBIENT_PICKUP\nlocal retval --[[ Pickup ]] =\n\tCreateAmbientPickup(\n\t\tpickupHash --[[ Hash ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\tflags --[[ integer ]], \n\t\tvalue --[[ integer ]], \n\t\tmodelHash --[[ Hash ]], \n\t\treturnHandle --[[ boolean ]], \n\t\tp8 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Creates an ambient pickup given the hash. Pickup hashes can be found here."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreateMoneyPickups",
    "hash": "0x0589B5E791CE9B2B",
    "code": "-- CREATE_MONEY_PICKUPS\nCreateMoneyPickups(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tvalue --[[ integer ]], \n\tamount --[[ integer ]], \n\tmodel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Spawns one or more money pickups.  \nx: The X-component of the world position to spawn the money pickups at.  \ny: The Y-component of the world position to spawn the money pickups at.  \nz: The Z-component of the world position to spawn the money pickups at.  \nvalue: The combined value of the pickups (in dollars).  \namount: The number of pickups to spawn.  \nmodel: The model to use, or 0 for default money model.  \nExample:  \nCREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);  \nSpawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).  \n==============================================  \nMax is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreateNonNetworkedAmbientPickup",
    "hash": "0x9C93764223E29C50",
    "code": "-- _CREATE_NON_NETWORKED_AMBIENT_PICKUP\nlocal retval --[[ Any ]] =\n\tCreateNonNetworkedAmbientPickup(\n\t\tpickupHash --[[ Any ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\tflags --[[ integer ]], \n\t\tvalue --[[ integer ]], \n\t\tmodelHash --[[ Any ]], \n\t\tp7 --[[ boolean ]], \n\t\tp8 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreateNonNetworkedPortablePickup",
    "hash": "0x125494B98A21AAF7",
    "code": "-- CREATE_NON_NETWORKED_PORTABLE_PICKUP\nlocal retval --[[ Object ]] =\n\tCreateNonNetworkedPortablePickup(\n\t\tpickupHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tplaceOnGround --[[ boolean ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreateObject",
    "hash": "0x509D5878EB39E842",
    "code": "-- CREATE_OBJECT\nlocal retval --[[ Object ]] =\n\tCreateObject(\n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tnetMissionEntity --[[ boolean ]], \n\t\tdoorFlag --[[ boolean ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component, 'ground level'.",
      "isNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.",
      "netMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.",
      "doorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component, 'ground level'.\n\nisNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.\n\nnetMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.\n\ndoorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created.\n\nCreates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model. This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL)."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreateObjectNoOffset",
    "hash": "0x9A294B2138ABB884",
    "code": "-- CREATE_OBJECT_NO_OFFSET\nlocal retval --[[ Object ]] =\n\tCreateObjectNoOffset(\n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tnetMissionEntity --[[ boolean ]], \n\t\tdoorFlag --[[ boolean ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "isNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.",
      "netMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.",
      "doorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nisNetwork: \n\nWhether to create a network object for the object. If false, the object exists only locally.\n\nnetMissionEntity: \n\nWhether to register the object as pinned to the script host in the R* network model.\n\ndoorFlag: \n\nFalse to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the object, or 0 if the object failed to be created.\n\nCreates an object (prop) with the specified model centered at the specified position. This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL)."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreatePickup",
    "hash": "0xFBA08C503DD5FA58",
    "code": "-- CREATE_PICKUP\nlocal retval --[[ Pickup ]] =\n\tCreatePickup(\n\t\tpickupHash --[[ Hash ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\tp4 --[[ integer ]], \n\t\tvalue --[[ integer ]], \n\t\tp6 --[[ boolean ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Pickup hashes can be found here."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreatePickupRotate",
    "hash": "0x891804727E0A98B7",
    "code": "-- CREATE_PICKUP_ROTATE\nlocal retval --[[ Pickup ]] =\n\tCreatePickupRotate(\n\t\tpickupHash --[[ Hash ]], \n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tflag --[[ integer ]], \n\t\tamount --[[ integer ]], \n\t\tp9 --[[ Any ]], \n\t\tp10 --[[ boolean ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Pickup hashes: pastebin.com/8EuSv2r1  \nflags:  \n8 (1 << 3): place on ground  \n512 (1 << 9): spin around"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "CreatePortablePickup",
    "hash": "0x2EAF1FDB2FB55698",
    "code": "-- CREATE_PORTABLE_PICKUP\nlocal retval --[[ Object ]] =\n\tCreatePortablePickup(\n\t\tpickupHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tplaceOnGround --[[ boolean ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Pickup hashes can be found here."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DeleteObject",
    "hash": "0x539E0AE3E6634B9F",
    "code": "-- DELETE_OBJECT\nlocal object --[[ Object ]] =\n\tDeleteObject()",
    "parameters": [
      "object: \n\nThe object you want to delete."
    ],
    "returns": [],
    "description": "Parameters:\n\nobject: \n\nThe object you want to delete.\n\nDeletes the specified object.\n\nNote: If for some reason the entity won't delete, you might want to check if the object is a mission entity.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DetachPortablePickupFromPed",
    "hash": "0xCF463D1E9A0AECB1",
    "code": "-- DETACH_PORTABLE_PICKUP_FROM_PED\nDetachPortablePickupFromPed(\n\tpickupObject --[[ Object ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoesObjectOfTypeExistAtCoords",
    "hash": "0xBFA48E2FF417213F",
    "code": "-- DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS\nlocal retval --[[ boolean ]] =\n\tDoesObjectOfTypeExistAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\thash --[[ Hash ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p5 is usually 0."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoesPickupExist",
    "hash": "0xAFC1CA75AD4074D1",
    "code": "-- DOES_PICKUP_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesPickupExist(\n\t\tpickup --[[ Pickup ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoesPickupObjectExist",
    "hash": "0xD9EFB6DBF7DAAEA3",
    "code": "-- DOES_PICKUP_OBJECT_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesPickupObjectExist(\n\t\tpickupObject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoesPickupOfTypeExistInArea",
    "hash": "0xF9C36251F6E48E33",
    "code": "-- DOES_PICKUP_OF_TYPE_EXIST_IN_AREA\nlocal retval --[[ boolean ]] =\n\tDoesPickupOfTypeExistInArea(\n\t\tpickupHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Pickup hashes can be found here."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoesRayfireMapObjectExist",
    "hash": "0x52AF537A0C5B8AAD",
    "code": "-- DOES_RAYFIRE_MAP_OBJECT_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesRayfireMapObjectExist(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if a destructible object with this handle exists, false otherwise."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorControl",
    "hash": "0x9B12F9A24FABEDB0",
    "code": "-- _DOOR_CONTROL\nDoorControl(\n\tmodelHash --[[ Hash ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tlocked --[[ boolean ]], \n\txRotMult --[[ number ]], \n\tyRotMult --[[ number ]], \n\tzRotMult --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded not to work in multiplayer environments. Native name between SET_LOCAL_PLAYER_VISIBLE_LOCALLY & SET_MAX_WANTED_LEVEL.\n\nOBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked\nOBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemFindExistingDoor",
    "hash": "0x589F80B325CC82C5",
    "code": "-- DOOR_SYSTEM_FIND_EXISTING_DOOR\nlocal retval --[[ boolean ]], doorOutPointer --[[ Hash ]] =\n\tDoorSystemFindExistingDoor(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate of the door object",
      "y: \n\nThe Y coordinate of the door object",
      "z: \n\nThe Z coordinate of the door object",
      "modelHash: \n\nEntity model hash",
      "doorOutPointer:"
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe X coordinate of the door object\n\ny: \n\nThe Y coordinate of the door object\n\nz: \n\nThe Z coordinate of the door object\n\nmodelHash: \n\nEntity model hash\n\ndoorOutPointer:\n\nSearch radius: 0.5"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemGetAutomaticDistance",
    "hash": "0xE851471AEFC3374F",
    "code": "-- _DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE\nlocal retval --[[ number ]] =\n\tDoorSystemGetAutomaticDistance(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemGetDoorPendingState",
    "hash": "0x4BC2854478F3A749",
    "code": "-- DOOR_SYSTEM_GET_DOOR_PENDING_STATE\nlocal retval --[[ integer ]] =\n\tDoorSystemGetDoorPendingState(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemGetDoorState",
    "hash": "0x160AA1B32F6139B8",
    "code": "-- DOOR_SYSTEM_GET_DOOR_STATE\nlocal retval --[[ integer ]] =\n\tDoorSystemGetDoorState(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemGetIsPhysicsLoaded",
    "hash": "0xDF97CDD4FC08FD34",
    "code": "-- DOOR_SYSTEM_GET_IS_PHYSICS_LOADED\nlocal retval --[[ boolean ]] =\n\tDoorSystemGetIsPhysicsLoaded(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemGetOpenRatio",
    "hash": "0x65499865FCA6E5EC",
    "code": "-- DOOR_SYSTEM_GET_OPEN_RATIO\nlocal retval --[[ number ]] =\n\tDoorSystemGetOpenRatio(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemSetAutomaticDistance",
    "hash": "0x9BA001CB45CBF627",
    "code": "-- DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE\nDoorSystemSetAutomaticDistance(\n\tdoorHash --[[ Hash ]], \n\tdistance --[[ number ]], \n\trequestDoor --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [
      "doorHash: \n\nDoor system identifier",
      "distance:",
      "requestDoor:",
      "forceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused."
    ],
    "returns": [],
    "description": "Parameters:\n\ndoorHash: \n\nDoor system identifier\n\ndistance:\nrequestDoor:\nforceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemSetAutomaticRate",
    "hash": "0x03C27E13B42A0E82",
    "code": "-- DOOR_SYSTEM_SET_AUTOMATIC_RATE\nDoorSystemSetAutomaticRate(\n\tdoorHash --[[ Hash ]], \n\trate --[[ number ]], \n\trequestDoor --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [
      "doorHash: \n\nDoor system identifier",
      "rate:",
      "requestDoor:",
      "forceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused."
    ],
    "returns": [],
    "description": "Parameters:\n\ndoorHash: \n\nDoor system identifier\n\nrate:\nrequestDoor:\nforceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused.\n\nIncludes networking check: ownership vs. or the door itself isn't networked."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemSetDoorState",
    "hash": "0x6BAB9442830C7F53",
    "code": "-- DOOR_SYSTEM_SET_DOOR_STATE\nDoorSystemSetDoorState(\n\tdoorHash --[[ Hash ]], \n\tstate --[[ integer ]], \n\trequestDoor --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Lockstates not applied and CNetObjDoor's not created until DOOR_SYSTEM_GET_IS_PHYSICS_LOADED returns true.\n\nDoor lock states: (v323)\n0: UNLOCKED\n1: LOCKED\n2: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA\n3: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME\n4: DOORSTATE_FORCE_LOCKED_THIS_FRAME\n5: DOORSTATE_FORCE_OPEN_THIS_FRAME\n6: DOORSTATE_FORCE_CLOSED_THIS_FRAME"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemSetHoldOpen",
    "hash": "0xD9B71952F78A2640",
    "code": "-- DOOR_SYSTEM_SET_HOLD_OPEN\nDoorSystemSetHoldOpen(\n\tdoorHash --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "doorHash: \n\nDoor system identifier",
      "toggle:"
    ],
    "returns": [],
    "description": "Parameters:\n\ndoorHash: \n\nDoor system identifier\n\ntoggle:\n\nIncludes networking check: ownership vs. or the door itself isn't networked."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemSetOpenRatio",
    "hash": "0xB6E6FBA95C7324AC",
    "code": "-- DOOR_SYSTEM_SET_OPEN_RATIO\nDoorSystemSetOpenRatio(\n\tdoorHash --[[ Hash ]], \n\tajar --[[ number ]], \n\trequestDoor --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [
      "doorHash: \n\nDoor system identifier",
      "ajar:",
      "requestDoor:",
      "forceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused."
    ],
    "returns": [],
    "description": "Parameters:\n\ndoorHash: \n\nDoor system identifier\n\najar:\nrequestDoor:\nforceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused.\n\nSets the ajar angle of a door.\nRanges from -1.0 to 1.0, and 0.0 is closed / default."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "DoorSystemSetSpringRemoved",
    "hash": "0xC485E07E4F0B7958",
    "code": "-- DOOR_SYSTEM_SET_SPRING_REMOVED\nDoorSystemSetSpringRemoved(\n\tdoorHash --[[ Hash ]], \n\tremoved --[[ boolean ]], \n\trequestDoor --[[ boolean ]], \n\tforceUpdate --[[ boolean ]]\n)",
    "parameters": [
      "doorHash: \n\nDoor system identifier",
      "removed:",
      "requestDoor:",
      "forceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused."
    ],
    "returns": [],
    "description": "Parameters:\n\ndoorHash: \n\nDoor system identifier\n\nremoved:\nrequestDoor:\nforceUpdate: \n\nOn true invokes DOOR_SYSTEM_SET_DOOR_STATE; otherwise requestDoor is unused.\n\nIncludes networking check: ownership vs. or the door itself isn't networked."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "EnableSavingInGarage",
    "hash": "0xF2E1A7133DD356A6",
    "code": "-- ENABLE_SAVING_IN_GARAGE\nEnableSavingInGarage(\n\tgarageHash --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "FixObjectFragment",
    "hash": "0xF9C1681347C8BD15",
    "code": "-- FIX_OBJECT_FRAGMENT\nFixObjectFragment(\n\tobject --[[ Object ]]\n)",
    "parameters": [
      "object: \n\nThe object to fix fragments for (a handle should be passed)."
    ],
    "returns": [],
    "description": "Parameters:\n\nobject: \n\nThe object to fix fragments for (a handle should be passed).\n\nResets and brings back all the children of a fragment based object. This should be used when attaching or detaching an object from another entity, especially when the object being detached consists of multiple fragments.\n\nAttempting to teleport a fragment-based object using SET_ENTITY_COORDS such as a flag object, will result in it remaining in place and failing to teleport, given the condition mentioned in the preceding statement.\n\nThe native should be executed after detaching the object from its parent entity and before calling SET_ENTITY_COORDS.\n\nExample given down below."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "ForcePickupRegenerate",
    "hash": "0x758A5C1B3B1E1990",
    "code": "-- _FORCE_PICKUP_REGENERATE\nForcePickupRegenerate(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetClosestObjectOfType",
    "hash": "0xE143FA2249364369",
    "code": "-- GET_CLOSEST_OBJECT_OF_TYPE\nlocal retval --[[ Object ]] =\n\tGetClosestObjectOfType(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tisMission --[[ boolean ]], \n\t\tp6 --[[ boolean ]], \n\t\tp7 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Has 8 params in the latest patches.  \nisMission - if true doesn't return mission objects"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetCoordsAndRotationOfClosestObjectOfType",
    "hash": "0x163F8B586BC95F2A",
    "code": "-- GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE\nlocal retval --[[ Any ]], outPosition --[[ vector3 ]], outRotation --[[ vector3 ]] =\n\tGetCoordsAndRotationOfClosestObjectOfType(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\trotationOrder --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetIsArenaPropPhysicsDisabled",
    "hash": "0x43C677F1E1158005",
    "code": "-- _GET_IS_ARENA_PROP_PHYSICS_DISABLED\nlocal retval --[[ boolean ]] =\n\tGetIsArenaPropPhysicsDisabled(\n\t\tentity --[[ Object ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetObjectFragmentDamageHealth",
    "hash": "0xB6FBFD079B8D0596",
    "code": "-- GET_OBJECT_FRAGMENT_DAMAGE_HEALTH\nlocal retval --[[ number ]] =\n\tGetObjectFragmentDamageHealth(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetObjectTextureVariation",
    "hash": "0xE84EB93729C5F36A",
    "code": "-- _GET_OBJECT_TEXTURE_VARIATION\nlocal retval --[[ integer ]] =\n\tGetObjectTextureVariation(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetOffsetFromCoordAndHeadingInWorldCoords",
    "hash": "0x163E252DE035A133",
    "code": "-- GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetOffsetFromCoordAndHeadingInWorldCoords(\n\t\txPos --[[ number ]], \n\t\tyPos --[[ number ]], \n\t\tzPos --[[ number ]], \n\t\theading --[[ number ]], \n\t\txOffset --[[ number ]], \n\t\tyOffset --[[ number ]], \n\t\tzOffset --[[ number ]]\n\t)",
    "parameters": [
      "xPos: \n\nThe X coordinate of the original position.",
      "yPos: \n\nThe Y coordinate of the original position.",
      "zPos: \n\nThe Z coordinate of the original position.",
      "heading: \n\nThe heading (in degrees) relative to which the offsets are applied.",
      "xOffset: \n\nLeft/right offset from the coord.",
      "yOffset: \n\nForward/backward offset from the coord.",
      "zOffset: \n\nUpward/downward offset from the coord."
    ],
    "returns": [
      "Returns a Vector3 representing the new world coordinates after applying the offsets to the original position relative to the specified heading."
    ],
    "description": "Parameters:\n\nxPos: \n\nThe X coordinate of the original position.\n\nyPos: \n\nThe Y coordinate of the original position.\n\nzPos: \n\nThe Z coordinate of the original position.\n\nheading: \n\nThe heading (in degrees) relative to which the offsets are applied.\n\nxOffset: \n\nLeft/right offset from the coord.\n\nyOffset: \n\nForward/backward offset from the coord.\n\nzOffset: \n\nUpward/downward offset from the coord.\n\nReturns:\n\nReturns a Vector3 representing the new world coordinates after applying the offsets to the original position relative to the specified heading.\n\nCalculates the world coordinates after applying the specified offsets to the given position, relative to a certain heading. This native is similar to GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS, but uses a world position and heading as the reference point."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetPickupCoords",
    "hash": "0x225B8B35C88029B3",
    "code": "-- GET_PICKUP_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetPickupCoords(\n\t\tpickup --[[ Pickup ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetPickupGenerationRangeMultiplier",
    "hash": "0xB3ECA65C7317F174",
    "code": "-- _GET_PICKUP_GENERATION_RANGE_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetPickupGenerationRangeMultiplier()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetPickupHash",
    "hash": "0x5EAAD83F8CFB4575",
    "code": "-- _GET_PICKUP_HASH\nlocal retval --[[ Hash ]] =\n\tGetPickupHash(\n\t\tpickupHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returns pickup hash."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetPickupHashFromWeapon",
    "hash": "0xD6429A016084F1A5",
    "code": "-- _GET_PICKUP_HASH_FROM_WEAPON\nlocal retval --[[ Hash ]] =\n\tGetPickupHashFromWeapon(\n\t\tweapon --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetPickupObject",
    "hash": "0x5099BC55630B25AE",
    "code": "-- GET_PICKUP_OBJECT\nlocal retval --[[ Object ]] =\n\tGetPickupObject(\n\t\tpickup --[[ Pickup ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetRayfireMapObject",
    "hash": "0xB48FCED898292E52",
    "code": "-- GET_RAYFIRE_MAP_OBJECT\nlocal retval --[[ Object ]] =\n\tGetRayfireMapObject(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nOBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, \"des_tvsmash\");"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetRayfireMapObjectAnimPhase",
    "hash": "0x260EE4FDBDF4DB01",
    "code": "-- GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE\nlocal retval --[[ number ]] =\n\tGetRayfireMapObjectAnimPhase(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [
      "object: \n\nThe des-object handle to get the animation progress from."
    ],
    "returns": [
      "A float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0."
    ],
    "description": "Parameters:\n\nobject: \n\nThe des-object handle to get the animation progress from.\n\nReturns:\n\nA float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.\n\n`object`: The des-object handle to get the animation progress from.\nReturn value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetSafePickupCoords",
    "hash": "0x6E16BC2503FF1FF0",
    "code": "-- GET_SAFE_PICKUP_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetSafePickupCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetStateOfClosestDoorOfType",
    "hash": "0xEDC1A5B84AEF33FF",
    "code": "-- GET_STATE_OF_CLOSEST_DOOR_OF_TYPE\nlocal locked --[[ boolean ]], heading --[[ number ]] =\n\tGetStateOfClosestDoorOfType(\n\t\ttype --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "locked is 0 if no door is found  \nlocked is 0 if door is unlocked  \nlocked is 1 if door is found and unlocked.  \n-------------  \nthe locked bool is either 0(unlocked)(false) or 1(locked)(true)"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetStateOfRayfireMapObject",
    "hash": "0x899BA936634A322E",
    "code": "-- GET_STATE_OF_RAYFIRE_MAP_OBJECT\nlocal retval --[[ integer ]] =\n\tGetStateOfRayfireMapObject(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See SET_STATE_OF_RAYFIRE_MAP_OBJECT to see the different states\n\nGet a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "GetWeaponTypeFromPickupType",
    "hash": "0x08F96CA6C551AD51",
    "code": "-- GET_WEAPON_TYPE_FROM_PICKUP_TYPE\nlocal retval --[[ Hash ]] =\n\tGetWeaponTypeFromPickupType(\n\t\tpickupHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "HasClosestObjectOfTypeBeenBroken",
    "hash": "0x761B0E69AC4D007E",
    "code": "-- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN\nlocal retval --[[ boolean ]] =\n\tHasClosestObjectOfTypeBeenBroken(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tp5 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "HasClosestObjectOfTypeBeenCompletelyDestroyed",
    "hash": "0x46494A2475701343",
    "code": "-- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED\nlocal retval --[[ boolean ]] =\n\tHasClosestObjectOfTypeBeenCompletelyDestroyed(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "HasObjectBeenBroken",
    "hash": "0x8ABFB70C49CC43E2",
    "code": "-- HAS_OBJECT_BEEN_BROKEN\nlocal retval --[[ boolean ]] =\n\tHasObjectBeenBroken(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "HasPickupBeenCollected",
    "hash": "0x80EC48E6679313F9",
    "code": "-- HAS_PICKUP_BEEN_COLLECTED\nlocal retval --[[ boolean ]] =\n\tHasPickupBeenCollected(\n\t\tpickup --[[ Pickup ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "HidePortablePickupWhenDetached",
    "hash": "0x867458251D47CCB2",
    "code": "-- HIDE_PORTABLE_PICKUP_WHEN_DETACHED\nHidePortablePickupWhenDetached(\n\tpickup --[[ Pickup ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsAnyEntityEntirelyInsideGarage",
    "hash": "0x673ED815D6E323B7",
    "code": "-- IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE\nlocal retval --[[ boolean ]] =\n\tIsAnyEntityEntirelyInsideGarage(\n\t\tgarageHash --[[ Hash ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsAnyObjectNearPoint",
    "hash": "0x397DC58FF00298D1",
    "code": "-- IS_ANY_OBJECT_NEAR_POINT\nlocal retval --[[ boolean ]] =\n\tIsAnyObjectNearPoint(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\trange --[[ number ]], \n\t\tp4 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsDoorClosed",
    "hash": "0xC531EE8A1145A149",
    "code": "-- IS_DOOR_CLOSED\nlocal retval --[[ boolean ]] =\n\tIsDoorClosed(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsDoorRegisteredWithSystem",
    "hash": "0xC153C43EA202C8C1",
    "code": "-- IS_DOOR_REGISTERED_WITH_SYSTEM\nlocal retval --[[ boolean ]] =\n\tIsDoorRegisteredWithSystem(\n\t\tdoorHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))\n{\n    OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);\n}"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsGarageEmpty",
    "hash": "0x90E47239EA1980B8",
    "code": "-- IS_GARAGE_EMPTY\nlocal retval --[[ boolean ]] =\n\tIsGarageEmpty(\n\t\tgarageHash --[[ Hash ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsObjectAPickup",
    "hash": "0xFC481C641EBBD27D",
    "code": "-- IS_OBJECT_A_PICKUP\nlocal retval --[[ boolean ]] =\n\tIsObjectAPickup(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsObjectAPortablePickup",
    "hash": "0x0378C08504160D0D",
    "code": "-- IS_OBJECT_A_PORTABLE_PICKUP\nlocal retval --[[ boolean ]] =\n\tIsObjectAPortablePickup(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsObjectEntirelyInsideGarage",
    "hash": "0x372EF6699146A1E4",
    "code": "-- IS_OBJECT_ENTIRELY_INSIDE_GARAGE\nlocal retval --[[ boolean ]] =\n\tIsObjectEntirelyInsideGarage(\n\t\tgarageHash --[[ Hash ]], \n\t\tentity --[[ Entity ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsObjectNearPoint",
    "hash": "0x8C90FE4B381BA60A",
    "code": "-- IS_OBJECT_NEAR_POINT\nlocal retval --[[ boolean ]] =\n\tIsObjectNearPoint(\n\t\tobjectHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\trange --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsObjectPartiallyInsideGarage",
    "hash": "0xF0EED5A6BC7B237A",
    "code": "-- IS_OBJECT_PARTIALLY_INSIDE_GARAGE\nlocal retval --[[ boolean ]] =\n\tIsObjectPartiallyInsideGarage(\n\t\tgarageHash --[[ Hash ]], \n\t\tentity --[[ Entity ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsObjectVisible",
    "hash": "0x8B32ACE6326A7546",
    "code": "-- IS_OBJECT_VISIBLE\nlocal retval --[[ boolean ]] =\n\tIsObjectVisible(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsPickupWeaponObjectValid",
    "hash": "0x11D1E53A726891FE",
    "code": "-- IS_PICKUP_WEAPON_OBJECT_VALID\nlocal retval --[[ boolean ]] =\n\tIsPickupWeaponObjectValid(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsPlayerEntirelyInsideGarage",
    "hash": "0x024A60DEB0EA69F0",
    "code": "-- IS_PLAYER_ENTIRELY_INSIDE_GARAGE\nlocal retval --[[ boolean ]] =\n\tIsPlayerEntirelyInsideGarage(\n\t\tgarageHash --[[ Hash ]], \n\t\tplayer --[[ Player ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsPlayerPartiallyInsideGarage",
    "hash": "0x1761DC5D8471CBAA",
    "code": "-- IS_PLAYER_PARTIALLY_INSIDE_GARAGE\nlocal retval --[[ boolean ]] =\n\tIsPlayerPartiallyInsideGarage(\n\t\tgarageHash --[[ Hash ]], \n\t\tplayer --[[ Player ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "IsPointInAngledArea",
    "hash": "0x2A70BAE8883E4C81",
    "code": "-- IS_POINT_IN_ANGLED_AREA\nlocal retval --[[ boolean ]] =\n\tIsPointInAngledArea(\n\t\txPos --[[ number ]], \n\t\tyPos --[[ number ]], \n\t\tzPos --[[ number ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\twidth --[[ number ]], \n\t\tp10 --[[ boolean ]], \n\t\tincludez --[[ boolean ]]\n\t)",
    "parameters": [
      "xPos: \n\nThe x coordinate.",
      "yPos: \n\nThe y coordinate.",
      "zPos: \n\nThe z coordinate.",
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area",
      "p10: \n\na debug flag invoking functions in the same path as DRAW_MARKER",
      "includez: \n\nIf true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional"
    ],
    "returns": [],
    "description": "Parameters:\n\nxPos: \n\nThe x coordinate.\n\nyPos: \n\nThe y coordinate.\n\nzPos: \n\nThe z coordinate.\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\np10: \n\na debug flag invoking functions in the same path as DRAW_MARKER\n\nincludez: \n\nIf true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional\n\nAn angled area is an X-Z oriented rectangle with three parameters:\n\norigin: the mid-point along a base edge of the rectangle;\nextent: the mid-point of opposite base edge on the other Z;\nwidth: the length of the base edge; (named derived from logging strings CNetworkRoadNodeWorldStateData).\n\nThe oriented rectangle can then be derived from the direction of the two points (norm(origin - extent)), its orthonormal, and the width, e.g:\n\ngolf_mp\nam_taxi"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "MarkObjectForDeletion",
    "hash": "0xADBE4809F19F927A",
    "code": "-- _MARK_OBJECT_FOR_DELETION\nMarkObjectForDeletion(\n\tobject --[[ Object ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "is this like setting is as no longer needed?"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "PlaceObjectOnGroundOrObjectProperly",
    "hash": "0xD76EEEF746057FD6",
    "code": "-- PLACE_OBJECT_ON_GROUND_OR_OBJECT_PROPERLY\nlocal retval --[[ boolean ]] =\n\tPlaceObjectOnGroundOrObjectProperly(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [
      "object: \n\nThe object handle."
    ],
    "returns": [],
    "description": "Parameters:\n\nobject: \n\nThe object handle.\n\nCasts a ray downward from the object's position and places the object on the surface it hits (including world surface and objects). Use PLACE_OBJECT_ON_GROUND_PROPERLY to not include objects when determining the surface."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "PlaceObjectOnGroundProperly",
    "hash": "0x58A850EAEE20FAA3",
    "code": "-- PLACE_OBJECT_ON_GROUND_PROPERLY\nlocal retval --[[ boolean ]] =\n\tPlaceObjectOnGroundProperly(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "PreventCollectionOfPortablePickup",
    "hash": "0x92AEFB5F6E294023",
    "code": "-- PREVENT_COLLECTION_OF_PORTABLE_PICKUP\nPreventCollectionOfPortablePickup(\n\tobject --[[ Object ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "RemoveAllPickupsOfType",
    "hash": "0x27F9D613092159CF",
    "code": "-- REMOVE_ALL_PICKUPS_OF_TYPE\nRemoveAllPickupsOfType(\n\tpickupHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Pickup hashes can be found here."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "RemoveDoorFromSystem",
    "hash": "0x464D8E1427156FE4",
    "code": "-- REMOVE_DOOR_FROM_SYSTEM\nRemoveDoorFromSystem(\n\tdoorHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).\n\nOnly its NetObj removed and flag *(v2 + 192) |= 8u (1604 retail) toggled."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "RemoveObjectHighDetailModel",
    "hash": "0x4A39DB43E47CF3AA",
    "code": "-- REMOVE_OBJECT_HIGH_DETAIL_MODEL\nRemoveObjectHighDetailModel(\n\tobject --[[ Object ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "RemovePickup",
    "hash": "0x3288D8ACAECD2AB2",
    "code": "-- REMOVE_PICKUP\nRemovePickup(\n\tpickup --[[ Pickup ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "RenderFakePickupGlow",
    "hash": "0x3430676B11CDF21D",
    "code": "-- RENDER_FAKE_PICKUP_GLOW\nRenderFakePickupGlow(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tcolorIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "draws circular marker at pos\n-1 = none\n0 = red\n1 = green\n2 = blue\n3 = green larger\n4 = nothing\n5 = green small"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetActivateObjectPhysicsAsSoonAsItIsUnfrozen",
    "hash": "0x406137F8EF90EAF5",
    "code": "-- SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN\nSetActivateObjectPhysicsAsSoonAsItIsUnfrozen(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetCreateWeaponObjectLightSource",
    "hash": "0xBCE595371A5FBAAF",
    "code": "-- _SET_CREATE_WEAPON_OBJECT_LIGHT_SOURCE\nSetCreateWeaponObjectLightSource(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Requires a component_at_*_flsh to be attached to the weapon object"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetEnableArenaPropPhysics",
    "hash": "0x911024442F4898F0",
    "code": "-- _SET_ENABLE_ARENA_PROP_PHYSICS\nSetEnableArenaPropPhysics(\n\tentity --[[ Object ]], \n\ttoggle --[[ boolean ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Activate the physics to: \"xs_prop_arena_{flipper,wall,bollard,turntable,pit}\"\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetEnableArenaPropPhysicsOnPed",
    "hash": "0xB20834A7DD3D8896",
    "code": "-- _SET_ENABLE_ARENA_PROP_PHYSICS_ON_PED\nSetEnableArenaPropPhysicsOnPed(\n\tentity --[[ Object ]], \n\ttoggle --[[ boolean ]], \n\tp2 --[[ integer ]], \n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetForceObjectThisFrame",
    "hash": "0xF538081986E49E9D",
    "code": "-- SET_FORCE_OBJECT_THIS_FRAME\nSetForceObjectThisFrame(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetLocalPlayerCanCollectPortablePickups",
    "hash": "0x78857FC65CADB909",
    "code": "-- SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS\nSetLocalPlayerCanCollectPortablePickups(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetLocalPlayerCanUsePickupsWithThisModel",
    "hash": "0x88EAEC617CD26926",
    "code": "-- _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL\nSetLocalPlayerCanUsePickupsWithThisModel(\n\tmodelHash --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Maximum amount of pickup models that can be disallowed is 30.\nSET_LOCAL_PLAYER_*"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetMaxNumPortablePickupsCarriedByPlayer",
    "hash": "0x0BF3B3BD47D79C08",
    "code": "-- SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER\nSetMaxNumPortablePickupsCarriedByPlayer(\n\tmodelHash --[[ Hash ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectAllowLowLodBuoyancy",
    "hash": "0x4D89D607CB3DD1D2",
    "code": "-- SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY\nSetObjectAllowLowLodBuoyancy(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Overrides the climbing/blocking flags of the object, used in the native scripts mostly for \"prop_dock_bouy_*\""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectForceVehiclesToAvoid",
    "hash": "0x77F33F2CCF64B3AA",
    "code": "-- SET_OBJECT_FORCE_VEHICLES_TO_AVOID\nSetObjectForceVehiclesToAvoid(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Overrides a flag on the object which determines if the object should be avoided by a vehicle in task: CTaskVehicleGoToPointWithAvoidanceAutomobile. Tested on vehicles that were created by the vehicle generators."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectLightColor",
    "hash": "0x5F048334B4A4E774",
    "code": "-- _SET_OBJECT_LIGHT_COLOR\nlocal retval --[[ Any ]] =\n\tSetObjectLightColor(\n\t\tobject --[[ Object ]], \n\t\tp1 --[[ boolean ]], \n\t\tr --[[ integer ]], \n\t\tg --[[ integer ]], \n\t\tb --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Sets color of embedded light source. Only appears in am_mp_nightclub.c for the nightclub dancefloor.\n\nNot sure what p1 does, seems to only ever be '1' in scripts.\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectPhysicsParams",
    "hash": "0xF6DF6E90DE7DF90F",
    "code": "-- SET_OBJECT_PHYSICS_PARAMS\nSetObjectPhysicsParams(\n\tobject --[[ Object ]], \n\tmass --[[ number ]], \n\tgravityFactor --[[ number ]], \n\tlinearC --[[ number ]], \n\tlinearV --[[ number ]], \n\tlinearV2 --[[ number ]], \n\tangularC --[[ number ]], \n\tangularV --[[ number ]], \n\tangularV2 --[[ number ]], \n\tp9 --[[ number ]], \n\tmaxAngSpeed --[[ number ]], \n\tbuoyancyFactor --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "rage::phArchetypeDamp\np9: Some phBoundGeometry margin value, limited to (0.0, 0.1) exclusive."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectStuntPropDuration",
    "hash": "0xDF6CA0330F2E737B",
    "code": "-- _SET_OBJECT_STUNT_PROP_DURATION\nSetObjectStuntPropDuration(\n\tobject --[[ Object ]], \n\tduration --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectStuntPropSpeedup",
    "hash": "0x96EE0EBA0163DF80",
    "code": "-- _SET_OBJECT_STUNT_PROP_SPEEDUP\nSetObjectStuntPropSpeedup(\n\tobject --[[ Object ]], \n\tintensity --[[ integer ]]\n)",
    "parameters": [
      "object: \n\nA Speed Boost or Slow Down prop",
      "intensity: \n\nRanges from 1-254, other values are ignored. Higher values will increase the effect of Speed Boosts and decrease the effect of Slow Downs."
    ],
    "returns": [],
    "description": "Parameters:\n\nobject: \n\nA Speed Boost or Slow Down prop\n\nintensity: \n\nRanges from 1-254, other values are ignored. Higher values will increase the effect of Speed Boosts and decrease the effect of Slow Downs.\n\nSets the intensity of Speed Boost and Slow Down props.\n\nThe corresponding values for Speed Boosts in the Creator are:\\ Weak: 15\\ Normal: 25\\ Strong: 35\\ Extra Strong: 45\\ Ultra Strong: 100\n\nFor Slow Downs:\\ Weak: 44\\ Normal: 30\\ Strong: 16"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectTargettable",
    "hash": "0x8A7391690F5AFD81",
    "code": "-- SET_OBJECT_TARGETTABLE\nSetObjectTargettable(\n\tobject --[[ Object ]], \n\ttargettable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectTargettableByPlayer",
    "hash": "0xB39F03368DB0CAA2",
    "code": "-- _SET_OBJECT_TARGETTABLE_BY_PLAYER\nSetObjectTargettableByPlayer(\n\tobject --[[ Object ]], \n\tsetFlag34 --[[ boolean ]], \n\tsetFlag35 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetObjectTextureVariation",
    "hash": "0x971DA0055324D033",
    "code": "-- _SET_OBJECT_TEXTURE_VARIATION\nSetObjectTextureVariation(\n\tobject --[[ Object ]], \n\ttextureVariation --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum eObjectPaintVariants\n{  \n\tPacific = 0,  \n\tAzure = 1,  \n\tNautical = 2,  \n\tContinental = 3,  \n\tBattleship = 4,  \n\tIntrepid = 5,  \n\tUniform = 6,  \n\tClassico = 7,  \n\tMediterranean = 8,  \n\tCommand = 9,  \n\tMariner = 10,  \n\tRuby = 11,  \n\tVintage = 12,  \n\tPristine = 13,  \n\tMerchant = 14,  \n\tVoyager = 15  \n};"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetPickupGenerationRangeMultiplier",
    "hash": "0x318516E02DE3ECE2",
    "code": "-- SET_PICKUP_GENERATION_RANGE_MULTIPLIER\nSetPickupGenerationRangeMultiplier(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetPickupHiddenWhenUncollectable",
    "hash": "0x3ED2B83AB2E82799",
    "code": "-- _SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE\nSetPickupHiddenWhenUncollectable(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetPickupRegenerationTime",
    "hash": "0x78015C9B4B3ECC9D",
    "code": "-- SET_PICKUP_REGENERATION_TIME\nSetPickupRegenerationTime(\n\tpickup --[[ Pickup ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetPickupUncollectable",
    "hash": "0x1C1B69FAE509BA97",
    "code": "-- _SET_PICKUP_UNCOLLECTABLE\nSetPickupUncollectable(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetStateOfClosestDoorOfType",
    "hash": "0xF82D8F1926A02C3D",
    "code": "-- SET_STATE_OF_CLOSEST_DOOR_OF_TYPE\nSetStateOfClosestDoorOfType(\n\ttype --[[ Hash ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tlocked --[[ boolean ]], \n\theading --[[ number ]], \n\tp6 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to not work in multiplayer.  \nUsed to lock/unlock doors to interior areas of the game.  \n(Possible) Door Types:  \npastebin.com/9S2m3qA4  \nHeading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.  \nLocked means that the heading is locked.    \np6 is always 0.   \n225 door types, model names and coords found in stripclub.c4:  \npastebin.com/gywnbzsH  \nget door info: pastebin.com/i14rbekD"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetStateOfRayfireMapObject",
    "hash": "0x5C29F698D404C5E1",
    "code": "-- SET_STATE_OF_RAYFIRE_MAP_OBJECT\nSetStateOfRayfireMapObject(\n\tobject --[[ Object ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Defines the state of a destructible object.\nUse the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.\nState 2 == object just spawned\nState 4 == Beginning of the animation\nState 6 == Start animation\nState 9 == End of the animation"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetTeamPickupObject",
    "hash": "0x53E0DF1A2A3CF0CA",
    "code": "-- SET_TEAM_PICKUP_OBJECT\nSetTeamPickupObject(\n\tobject --[[ Object ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetTextureVariationOfClosestObjectOfType",
    "hash": "0xF12E33034D887F66",
    "code": "-- _SET_TEXTURE_VARIATION_OF_CLOSEST_OBJECT_OF_TYPE\nlocal retval --[[ boolean ]] =\n\tSetTextureVariationOfClosestObjectOfType(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\ttextureVariation --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SetUnkGlobalBoolRelatedToDamage",
    "hash": "0xABDABF4E1EDECBFA",
    "code": "-- _SET_UNK_GLOBAL_BOOL_RELATED_TO_DAMAGE\nSetUnkGlobalBoolRelatedToDamage(\n\tvalue --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "SlideObject",
    "hash": "0x2FDFF4107B8C1147",
    "code": "-- SLIDE_OBJECT\nlocal retval --[[ boolean ]] =\n\tSlideObject(\n\t\tobject --[[ Object ]], \n\t\ttoX --[[ number ]], \n\t\ttoY --[[ number ]], \n\t\ttoZ --[[ number ]], \n\t\tspeedX --[[ number ]], \n\t\tspeedY --[[ number ]], \n\t\tspeedZ --[[ number ]], \n\t\tcollision --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the object has finished moving.  \nIf false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.  \nSee also: https://gtagmodding.com/opcode-database/opcode/034E/\nHas to be looped until it returns true."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "ToggleUsePickupsForPlayer",
    "hash": "0x616093EC6B139DD9",
    "code": "-- _TOGGLE_USE_PICKUPS_FOR_PLAYER\nToggleUsePickupsForPlayer(\n\tplayer --[[ Player ]], \n\tpickupHash --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nPlayer ID. Use PLAYER_ID for your own player.",
      "pickupHash: \n\nHash of the pickup, obtainable with GET_HASH_KEY",
      "toggle: \n\nboolean that enables/disables the pickup drop (false to disable, true to enable)"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nPlayer ID. Use PLAYER_ID for your own player.\n\npickupHash: \n\nHash of the pickup, obtainable with GET_HASH_KEY\n\ntoggle: \n\nboolean that enables/disables the pickup drop (false to disable, true to enable)\n\nDisabling/enabling a player from getting pickups. From the scripts:\nOBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "TrackObjectVisibility",
    "hash": "0xB252BC036B525623",
    "code": "-- TRACK_OBJECT_VISIBILITY\nTrackObjectVisibility(\n\tobject --[[ Object ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x006e4b040ed37ec3",
    "hash": "0x006E4B040ED37EC3",
    "code": "-- 0x006E4B040ED37EC3\nN_0x006e4b040ed37ec3(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x0596843b34b95ce5",
    "hash": "0x0596843B34B95CE5",
    "code": "-- 0x0596843B34B95CE5\nN_0x0596843b34b95ce5(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x1a6cbb06e2d0d79d",
    "hash": "0x1A6CBB06E2D0D79D",
    "code": "-- 0x1A6CBB06E2D0D79D\nN_0x1a6cbb06e2d0d79d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x1c57c94a6446492a",
    "hash": "0x1C57C94A6446492A",
    "code": "-- 0x1C57C94A6446492A\nN_0x1c57c94a6446492a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x1e3f1b1b891a2aaa",
    "hash": "0x1E3F1B1B891A2AAA",
    "code": "-- 0x1E3F1B1B891A2AAA\nN_0x1e3f1b1b891a2aaa(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x2542269291c6ac84",
    "hash": "0x2542269291C6AC84",
    "code": "-- 0x2542269291C6AC84\nlocal retval --[[ Any ]] =\n\tN_0x2542269291c6ac84(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x27f248c3febfaad3",
    "hash": "0x27F248C3FEBFAAD3",
    "code": "-- 0x27F248C3FEBFAAD3\nN_0x27f248c3febfaad3(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x31574b1b41268673",
    "hash": "0x31574B1B41268673",
    "code": "-- 0x31574B1B41268673\nN_0x31574b1b41268673(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x31f924b53eaddf65",
    "hash": "0x31F924B53EADDF65",
    "code": "-- 0x31F924B53EADDF65\nN_0x31f924b53eaddf65(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x394cd08e31313c28",
    "hash": "0x394CD08E31313C28",
    "code": "-- 0x394CD08E31313C28\nN_0x394cd08e31313c28()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x39a5fb7eaf150840",
    "hash": "0x39A5FB7EAF150840",
    "code": "-- 0x39A5FB7EAF150840\nN_0x39a5fb7eaf150840(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x3b2fd68db5f8331c",
    "hash": "0x3B2FD68DB5F8331C",
    "code": "-- 0x3B2FD68DB5F8331C\nN_0x3b2fd68db5f8331c(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]], \n\tR --[[ integer ]], \n\tG --[[ integer ]], \n\tB --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Removed Parameter 3: int R\nNativeDB Removed Parameter 4: int G\nNativeDB Removed Parameter 5: int B\nNativeDB Introduced: v757"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x3bd770d281982db5",
    "hash": "0x3BD770D281982DB5",
    "code": "-- 0x3BD770D281982DB5\nlocal retval --[[ Any ]] =\n\tN_0x3bd770d281982db5(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x46f3add1e2d5baf2",
    "hash": "0x46F3ADD1E2D5BAF2",
    "code": "-- 0x46F3ADD1E2D5BAF2\nN_0x46f3add1e2d5baf2(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x4c134b4df76025d0",
    "hash": "0x4C134B4DF76025D0",
    "code": "-- 0x4C134B4DF76025D0\nN_0x4c134b4df76025d0(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x62454a641b41f3c5",
    "hash": "0x62454A641B41F3C5",
    "code": "-- 0x62454A641B41F3C5\nN_0x62454a641b41f3c5(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x63ecf581bc70e363",
    "hash": "0x63ECF581BC70E363",
    "code": "-- 0x63ECF581BC70E363\nN_0x63ecf581bc70e363(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x641f272b52e2f0f8",
    "hash": "0x641F272B52E2F0F8",
    "code": "-- 0x641F272B52E2F0F8\nN_0x641f272b52e2f0f8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x659f9d71f52843f8",
    "hash": "0x659F9D71F52843F8",
    "code": "-- 0x659F9D71F52843F8\nN_0x659f9d71f52843f8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x66a49d021870fe88",
    "hash": "0x66A49D021870FE88",
    "code": "-- 0x66A49D021870FE88\nN_0x66a49d021870fe88()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x701fda1e82076ba4",
    "hash": "0x701FDA1E82076BA4",
    "code": "-- 0x701FDA1E82076BA4\nN_0x701fda1e82076ba4()",
    "parameters": [],
    "returns": [],
    "description": "Clears the fields sets by N_0xc7f29ca00f46350e (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.\n\nRelated to its \"Pre-networked state\"?"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x734e1714d077da9a",
    "hash": "0x734E1714D077DA9A",
    "code": "-- 0x734E1714D077DA9A\nN_0x734e1714d077da9a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x762db2d380b48d04",
    "hash": "0x762DB2D380B48D04",
    "code": "-- 0x762DB2D380B48D04\nN_0x762db2d380b48d04(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x7813e8b8c4ae4799",
    "hash": "0x7813E8B8C4AE4799",
    "code": "-- 0x7813E8B8C4AE4799\nN_0x7813e8b8c4ae4799(\n\tpickup --[[ Pickup ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SETPICKUP*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x826d1ee4d1cafc78",
    "hash": "0x826D1EE4D1CAFC78",
    "code": "-- 0x826D1EE4D1CAFC78\nN_0x826d1ee4d1cafc78(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x834344a414c7c85d",
    "hash": "0x834344A414C7C85D",
    "code": "-- 0x834344A414C7C85D\nN_0x834344a414c7c85d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x858ec9fd25de04aa",
    "hash": "0x858EC9FD25DE04AA",
    "code": "-- 0x858EC9FD25DE04AA\nN_0x858ec9fd25de04aa(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x8881c98a31117998",
    "hash": "0x8881C98A31117998",
    "code": "-- 0x8881C98A31117998\nN_0x8881c98a31117998(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x8caab2bd3ea58bd4",
    "hash": "0x8CAAB2BD3EA58BD4",
    "code": "-- 0x8CAAB2BD3EA58BD4\nN_0x8caab2bd3ea58bd4(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x8cff648fbd7330f1",
    "hash": "0x8CFF648FBD7330F1",
    "code": "-- 0x8CFF648FBD7330F1\nN_0x8cff648fbd7330f1(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v757"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0x8dca505a5c196f05",
    "hash": "0x8DCA505A5C196F05",
    "code": "-- 0x8DCA505A5C196F05\nN_0x8dca505a5c196f05(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xa08fe5e49bdc39dd",
    "hash": "0xA08FE5E49BDC39DD",
    "code": "-- 0xA08FE5E49BDC39DD\nN_0xa08fe5e49bdc39dd(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xa2c1f5e92afe49ed",
    "hash": "0xA2C1F5E92AFE49ED",
    "code": "-- 0xA2C1F5E92AFE49ED\nN_0xa2c1f5e92afe49ed()",
    "parameters": [],
    "returns": [],
    "description": "CLEAR_*"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xa85a21582451e951",
    "hash": "0xA85A21582451E951",
    "code": "-- 0xA85A21582451E951\nN_0xa85a21582451e951(\n\tdoorHash --[[ Hash ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Some property related to gates. Native name between DOOR_SYSTEM_SET_AUTOMATIC_RATE and DOOR_SYSTEM_SET_DOOR_STATE."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xaa059c615de9dd03",
    "hash": "0xAA059C615DE9DD03",
    "code": "-- 0xAA059C615DE9DD03\nN_0xaa059c615de9dd03(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xadf084fb8f075d06",
    "hash": "0xADF084FB8F075D06",
    "code": "-- 0xADF084FB8F075D06\nlocal retval --[[ boolean ]] =\n\tN_0xadf084fb8f075d06(\n\t\tp0 --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xafe24e4d29249e4a",
    "hash": "0xAFE24E4D29249E4A",
    "code": "-- 0xAFE24E4D29249E4A\nlocal retval --[[ boolean ]] =\n\tN_0xafe24e4d29249e4a(\n\t\tobject --[[ Object ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xb2d0bde54f0e8e5a",
    "hash": "0xB2D0BDE54F0E8E5A",
    "code": "-- 0xB2D0BDE54F0E8E5A\nN_0xb2d0bde54f0e8e5a(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xb5b7742424bd4445",
    "hash": "0xB5B7742424BD4445",
    "code": "-- 0xB5B7742424BD4445\nN_0xb5b7742424bd4445(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xb7c6d80fb371659a",
    "hash": "0xB7C6D80FB371659A",
    "code": "-- 0xB7C6D80FB371659A\nN_0xb7c6d80fb371659a()",
    "parameters": [],
    "returns": [],
    "description": "Clears all areas created by 0xD4A7A435B3710D05\n\nCLEAR_*\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xbffe53ae7e67fcdc",
    "hash": "0xBFFE53AE7E67FCDC",
    "code": "-- 0xBFFE53AE7E67FCDC\nN_0xbffe53ae7e67fcdc(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xc6033d32241f6fb5",
    "hash": "0xC6033D32241F6FB5",
    "code": "-- 0xC6033D32241F6FB5\nN_0xc6033d32241f6fb5(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xc7f29ca00f46350e",
    "hash": "0xC7F29CA00F46350E",
    "code": "-- 0xC7F29CA00F46350E\nN_0xc7f29ca00f46350e(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See N_0x701fda1e82076ba4."
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xd05a3241b9a86f19",
    "hash": "0xD05A3241B9A86F19",
    "code": "-- 0xD05A3241B9A86F19\nN_0xd05a3241b9a86f19(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xd4a7a435b3710d05",
    "hash": "0xD4A7A435B3710D05",
    "code": "-- 0xD4A7A435B3710D05\nN_0xd4a7a435b3710d05(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds an area that seems to be related to pickup physics behavior.\nMax amount of areas is 10. Only works in multiplayer.\n\nADD_*\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xdb41d07a45a6d4b7",
    "hash": "0xDB41D07A45A6D4B7",
    "code": "-- 0xDB41D07A45A6D4B7\nlocal retval --[[ Any ]] =\n\tN_0xdb41d07a45a6d4b7(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xe05f6aeefeb0bb02",
    "hash": "0xE05F6AEEFEB0BB02",
    "code": "-- 0xE05F6AEEFEB0BB02\nN_0xe05f6aeefeb0bb02(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xeb6f1a9b5510a5d2",
    "hash": "0xEB6F1A9B5510A5D2",
    "code": "-- 0xEB6F1A9B5510A5D2\nN_0xeb6f1a9b5510a5d2(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xf92099527db8e2a7",
    "hash": "0xF92099527DB8E2A7",
    "code": "-- 0xF92099527DB8E2A7\nN_0xf92099527db8e2a7(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: OBJECT",
    "apiset": "API set: client",
    "name": "N_0xfdc07c58e8aab715",
    "hash": "0xFDC07C58E8AAB715",
    "code": "-- 0xFDC07C58E8AAB715\nN_0xfdc07c58e8aab715(\n\tpickupHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "A*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "DisableAllControlActions",
    "hash": "0x5F4B6931816E599B",
    "code": "-- DISABLE_ALL_CONTROL_ACTIONS\nDisableAllControlActions(\n\tpadIndex --[[ integer ]]\n)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "DisableControlAction",
    "hash": "0xFE99B66D079CF6BC",
    "code": "-- DISABLE_CONTROL_ACTION\nDisableControlAction(\n\tpadIndex --[[ integer ]], \n\tcontrol --[[ integer ]], \n\tdisable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Control values and meaning\n\nExample: CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true) disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame. Control group 1 and 0 gives the same results as 2. Same results for all players."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "DisableInputGroup",
    "hash": "0x7F4724035FDCA1DD",
    "code": "-- _DISABLE_INPUT_GROUP\nDisableInputGroup(\n\tpadIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "EnableAllControlActions",
    "hash": "0xA5FFE9B05F199DE7",
    "code": "-- ENABLE_ALL_CONTROL_ACTIONS\nEnableAllControlActions(\n\tpadIndex --[[ integer ]]\n)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use.\n\nenum ePadType {\n  PLAYER_CONTROL = 0,\n  CAMERA_CONTROL = 1,\n  FRONTEND_CONTRO = 2\n};"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "EnableControlAction",
    "hash": "0x351220255D64C155",
    "code": "-- ENABLE_CONTROL_ACTION\nEnableControlAction(\n\tpadIndex --[[ integer ]], \n\tcontrol --[[ integer ]], \n\tenable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "control values and meaning: https://github.com/scripthookvdotnet/scripthookvdotnet/blob/47f8bb02a50e27d4bb982f43a78091feac59b21c/source/scripting_v3/GTA/Control.cs\nand  \nhttps://docs.fivem.net/game-references/controls/\n0, 1 and 2 used in the scripts.  \nControl values from the decompiled scripts:   \n0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,  \n37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100  \n,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19  \n0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2  \n20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,  \n261,262,263,264,286,287,288,289,337,338,339,340,341,342,343  \nINPUTGROUP_MOVE  \nINPUTGROUP_LOOK  \nINPUTGROUP_WHEEL  \nINPUTGROUP_CELLPHONE_NAVIGATE  \nINPUTGROUP_CELLPHONE_NAVIGATE_UD  \nINPUTGROUP_CELLPHONE_NAVIGATE_LR  \nINPUTGROUP_FRONTEND_DPAD_ALL  \nINPUTGROUP_FRONTEND_DPAD_UD  \nINPUTGROUP_FRONTEND_DPAD_LR  \nINPUTGROUP_FRONTEND_LSTICK_ALL  \nINPUTGROUP_FRONTEND_RSTICK_ALL  \nINPUTGROUP_FRONTEND_GENERIC_UD  \nINPUTGROUP_FRONTEND_GENERIC_LR  \nINPUTGROUP_FRONTEND_GENERIC_ALL  \nINPUTGROUP_FRONTEND_BUMPERS  \nINPUTGROUP_FRONTEND_TRIGGERS  \nINPUTGROUP_FRONTEND_STICKS  \nINPUTGROUP_SCRIPT_DPAD_ALL  \nINPUTGROUP_SCRIPT_DPAD_UD  \nINPUTGROUP_SCRIPT_DPAD_LR  \nINPUTGROUP_SCRIPT_LSTICK_ALL  \nINPUTGROUP_SCRIPT_RSTICK_ALL  \nINPUTGROUP_SCRIPT_BUMPERS  \nINPUTGROUP_SCRIPT_TRIGGERS  \nINPUTGROUP_WEAPON_WHEEL_CYCLE  \nINPUTGROUP_FLY  \nINPUTGROUP_SUB  \nINPUTGROUP_VEH_MOVE_ALL  \nINPUTGROUP_CURSOR  \nINPUTGROUP_CURSOR_SCROLL  \nINPUTGROUP_SNIPER_ZOOM_SECONDARY  \nINPUTGROUP_VEH_HYDRAULICS_CONTROL  \nTook those in IDA Pro.Not sure in which order they go"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetAllowMovementWhileZoomed",
    "hash": "0xFC859E2374407556",
    "code": "-- GET_ALLOW_MOVEMENT_WHILE_ZOOMED\nlocal retval --[[ boolean ]] =\n\tGetAllowMovementWhileZoomed()",
    "parameters": [],
    "returns": [],
    "description": "Returns profile setting 17."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetControlGroupInstructionalButton",
    "hash": "0x80C2FD58D720C801",
    "code": "-- GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTON\nlocal retval --[[ string ]] =\n\tGetControlGroupInstructionalButton(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrolGroup --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "controlGroup:",
      "p2:"
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrolGroup:\np2:"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetControlInstructionalButton",
    "hash": "0x0499D7B09FC9B407",
    "code": "-- GET_CONTROL_INSTRUCTIONAL_BUTTON\nlocal retval --[[ string ]] =\n\tGetControlInstructionalButton(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "formerly called _GET_CONTROL_ACTION_NAME incorrectly  \np2 appears to always be true.  \np2 is unused variable in function.  \nEG:  \nGET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/  \nGET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/  \nGET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/  \ngtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378  \n0, 1 and 2 used in the scripts. 0 is by far the most common of them."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetControlNormal",
    "hash": "0xEC3C9B8D5327B563",
    "code": "-- GET_CONTROL_NORMAL\nlocal retval --[[ number ]] =\n\tGetControlNormal(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [
      "Returns the value of GET_CONTROL_VALUE normalized, i.e. a real number value between -1.0 and 1.0"
    ],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check.\n\nReturns:\n\nReturns the value of GET_CONTROL_VALUE normalized, i.e. a real number value between -1.0 and 1.0"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetControlUnboundNormal",
    "hash": "0x5B84D09CEC5209C5",
    "code": "-- GET_CONTROL_UNBOUND_NORMAL\nlocal retval --[[ number ]] =\n\tGetControlUnboundNormal(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check.\n\nSeems to return values between -1 and 1 for controls like gas and steering."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetControlValue",
    "hash": "0xD95E79E8686D2C27",
    "code": "-- GET_CONTROL_VALUE\nlocal retval --[[ integer ]] =\n\tGetControlValue(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetDisabledControlNormal",
    "hash": "0x11E65974A982637C",
    "code": "-- GET_DISABLED_CONTROL_NORMAL\nlocal retval --[[ number ]] =\n\tGetDisabledControlNormal(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetDisabledControlUnboundNormal",
    "hash": "0x4F8A26A890FD62FB",
    "code": "-- GET_DISABLED_CONTROL_UNBOUND_NORMAL\nlocal retval --[[ number ]] =\n\tGetDisabledControlUnboundNormal(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetIsUsingAlternateDriveby",
    "hash": "0x0F70731BACCFBB96",
    "code": "-- GET_IS_USING_ALTERNATE_DRIVEBY\nlocal retval --[[ boolean ]] =\n\tGetIsUsingAlternateDriveby()",
    "parameters": [],
    "returns": [],
    "description": "Returns profile setting 225."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetLocalPlayerAimState",
    "hash": "0xBB41AFBBBC0A0287",
    "code": "-- GET_LOCAL_PLAYER_AIM_STATE\nlocal retval --[[ integer ]] =\n\tGetLocalPlayerAimState()",
    "parameters": [],
    "returns": [],
    "description": "Returns the local player's targeting mode. See SET_PLAYER_TARGETING_MODE."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetLocalPlayerGamepadAimState",
    "hash": "0x59B9A7AF4C95133C",
    "code": "-- GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE\nlocal retval --[[ integer ]] =\n\tGetLocalPlayerGamepadAimState()",
    "parameters": [],
    "returns": [
      "Returns the local player's targeting mode. See SET_PLAYER_TARGETING_MODE."
    ],
    "description": "Returns:\n\nReturns the local player's targeting mode. See SET_PLAYER_TARGETING_MODE.\n\nSame behavior as GET_LOCAL_PLAYER_AIM_STATE but will also return if player using a keyboard."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "GetTimeSinceLastInput",
    "hash": "0xD7D22F5592AED8BA",
    "code": "-- _GET_TIME_SINCE_LAST_INPUT\nlocal retval --[[ integer ]] =\n\tGetTimeSinceLastInput(\n\t\tpadIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "The number of milliseconds since last padIndex registered pressed"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsControlEnabled",
    "hash": "0x1CEA6BFDF248E5D9",
    "code": "-- IS_CONTROL_ENABLED\nlocal retval --[[ boolean ]] =\n\tIsControlEnabled(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsControlJustPressed",
    "hash": "0x580417101DDB492F",
    "code": "-- IS_CONTROL_JUST_PRESSED\nlocal retval --[[ boolean ]] =\n\tIsControlJustPressed(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [
      "True if the control was pressed."
    ],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check.\n\nReturns:\n\nTrue if the control was pressed.\n\nReturns whether a control was newly pressed since the last check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsControlJustReleased",
    "hash": "0x50F940259D3841E6",
    "code": "-- IS_CONTROL_JUST_RELEASED\nlocal retval --[[ boolean ]] =\n\tIsControlJustReleased(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [
      "True if the control was recently released."
    ],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check.\n\nReturns:\n\nTrue if the control was recently released.\n\nReturns whether a control was newly released since the last check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsControlPressed",
    "hash": "0xF3A21BCD95725A4A",
    "code": "-- IS_CONTROL_PRESSED\nlocal retval --[[ boolean ]] =\n\tIsControlPressed(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [
      "True if the control was pressed."
    ],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check.\n\nReturns:\n\nTrue if the control was pressed.\n\nReturns whether a control is currently pressed."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsControlReleased",
    "hash": "0x648EE3E7F38877DD",
    "code": "-- IS_CONTROL_RELEASED\nlocal retval --[[ boolean ]] =\n\tIsControlReleased(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [
      "True if the control is not pressed."
    ],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check.\n\nReturns:\n\nTrue if the control is not pressed.\n\nReturns whether a control is currently not pressed."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsDisabledControlJustPressed",
    "hash": "0x91AEF906BCA88877",
    "code": "-- IS_DISABLED_CONTROL_JUST_PRESSED\nlocal retval --[[ boolean ]] =\n\tIsDisabledControlJustPressed(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsDisabledControlJustReleased",
    "hash": "0x305C8DCD79DA8B0F",
    "code": "-- IS_DISABLED_CONTROL_JUST_RELEASED\nlocal retval --[[ boolean ]] =\n\tIsDisabledControlJustReleased(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsDisabledControlPressed",
    "hash": "0xE2587F8CBBD87B1D",
    "code": "-- IS_DISABLED_CONTROL_PRESSED\nlocal retval --[[ boolean ]] =\n\tIsDisabledControlPressed(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsDisabledControlReleased",
    "hash": "0xFB6C4072E9A32E92",
    "code": "-- _IS_DISABLED_CONTROL_RELEASED\nlocal retval --[[ boolean ]] =\n\tIsDisabledControlReleased(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsLookInverted",
    "hash": "0x77B612531280010D",
    "code": "-- IS_LOOK_INVERTED\nlocal retval --[[ boolean ]] =\n\tIsLookInverted()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsUsingKeyboard",
    "hash": "0xA571D46727E2B718",
    "code": "-- _IS_USING_KEYBOARD\nlocal retval --[[ boolean ]] =\n\tIsUsingKeyboard(\n\t\tpadIndex --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "IsUsingKeyboard_2",
    "hash": "0x13337B38DB572509",
    "code": "-- _IS_USING_KEYBOARD_2\nlocal retval --[[ boolean ]] =\n\tIsUsingKeyboard_2(\n\t\tpadIndex --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "ResetInputMappingScheme",
    "hash": "0x643ED62D5EA3BEBD",
    "code": "-- _RESET_INPUT_MAPPING_SCHEME\nResetInputMappingScheme()",
    "parameters": [],
    "returns": [],
    "description": "S*"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SetControlLightEffectColor",
    "hash": "0x8290252FFF36ACB5",
    "code": "-- _SET_CONTROL_LIGHT_EFFECT_COLOR\nSetControlLightEffectColor(\n\tpadIndex --[[ integer ]], \n\tred --[[ integer ]], \n\tgreen --[[ integer ]], \n\tblue --[[ integer ]]\n)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "red:",
      "green:",
      "blue:"
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\nred:\ngreen:\nblue:"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SetControlNormal",
    "hash": "0xE8A25867FBA3B05E",
    "code": "-- _SET_CONTROL_NORMAL\nlocal retval --[[ boolean ]] =\n\tSetControlNormal(\n\t\tpadIndex --[[ integer ]], \n\t\tcontrol --[[ integer ]], \n\t\tamount --[[ number ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check.",
      "amount: \n\nAn unbounded normal value."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check.\n\namount: \n\nAn unbounded normal value.\n\nThis is for simulating player input."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SetCursorLocation",
    "hash": "0xFC695459D4D0E219",
    "code": "-- _SET_CURSOR_LOCATION\nlocal retval --[[ boolean ]] =\n\tSetCursorLocation(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SetInputExclusive",
    "hash": "0xEDE476E5EE29EDB1",
    "code": "-- SET_INPUT_EXCLUSIVE\nSetInputExclusive(\n\tpadIndex --[[ integer ]], \n\tcontrol --[[ integer ]]\n)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.",
      "control: \n\nThe control ID to check."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\ncontrol: \n\nThe control ID to check."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SetPadShake",
    "hash": "0x48B3886C1358D0D5",
    "code": "-- SET_PAD_SHAKE\nSetPadShake(\n\tpadIndex --[[ integer ]], \n\tduration --[[ integer ]], \n\tfrequency --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p0 always seems to be 0  \nduration in milliseconds   \nfrequency should range from about 10 (slow vibration) to 255 (very fast)  \nexample:  \nSET_PAD_SHAKE(0, 100, 200);"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SetPlayerpadShakesWhenControllerDisabled",
    "hash": "0x798FDEB5B1575088",
    "code": "-- SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED\nSetPlayerpadShakesWhenControllerDisabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "StopPadShake",
    "hash": "0x38C16A305E8CDC8D",
    "code": "-- STOP_PAD_SHAKE\nStopPadShake(\n\tpadIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SwitchToInputMappingScheme",
    "hash": "0x3D42B92563939375",
    "code": "-- _SWITCH_TO_INPUT_MAPPING_SCHEME\nlocal retval --[[ boolean ]] =\n\tSwitchToInputMappingScheme(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used in carsteal3 script with p0 = \"Carsteal4_spycar\".\nS*"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "SwitchToInputMappingScheme_2",
    "hash": "0x4683149ED1DDE7A1",
    "code": "-- _SWITCH_TO_INPUT_MAPPING_SCHEME_2\nlocal retval --[[ boolean ]] =\n\tSwitchToInputMappingScheme_2(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same as 0x3D42B92563939375\n\nS*"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0x14d29bb12d47f68c",
    "hash": "0x14D29BB12D47F68C",
    "code": "-- 0x14D29BB12D47F68C\nN_0x14d29bb12d47f68c(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0x23f09eadc01449d6",
    "hash": "0x23F09EADC01449D6",
    "code": "-- 0x23F09EADC01449D6\nlocal retval --[[ boolean ]] =\n\tN_0x23f09eadc01449d6(\n\t\tpadIndex --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS.\n\nHardcoded to return false."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0x25aaa32bdc98f2a3",
    "hash": "0x25AAA32BDC98F2A3",
    "code": "-- 0x25AAA32BDC98F2A3\nlocal retval --[[ Any ]] =\n\tN_0x25aaa32bdc98f2a3()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0x5b73c77d9eb66e24",
    "hash": "0x5B73C77D9EB66E24",
    "code": "-- 0x5B73C77D9EB66E24\nN_0x5b73c77d9eb66e24(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0x6cd79468a1e595c6",
    "hash": "0x6CD79468A1E595C6",
    "code": "-- 0x6CD79468A1E595C6\nlocal retval --[[ boolean ]] =\n\tN_0x6cd79468a1e595c6(\n\t\tpadIndex --[[ integer ]]\n\t)",
    "parameters": [
      "padIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\npadIndex: \n\nThe control system instance to use. See ENABLE_ALL_CONTROL_ACTIONS."
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0xa0cefcea390aab9b",
    "hash": "0xA0CEFCEA390AAB9B",
    "code": "-- 0xA0CEFCEA390AAB9B\nN_0xa0cefcea390aab9b(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0xcb0360efefb2580d",
    "hash": "0xCB0360EFEFB2580D",
    "code": "-- 0xCB0360EFEFB2580D\nN_0xcb0360efefb2580d(\n\tpadIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0xe1615ec03b3bb4fd",
    "hash": "0xE1615EC03B3BB4FD",
    "code": "-- 0xE1615EC03B3BB4FD\nlocal retval --[[ boolean ]] =\n\tN_0xe1615ec03b3bb4fd()",
    "parameters": [],
    "returns": [],
    "description": "Used with IS_LOOK_INVERTED() and negates its affect.\n--\nNot sure how the person above got that description, but here's an actual example:\nif (PAD::_GET_LAST_INPUT_METHOD(2)) {\n    if (a_5) {\n        if (PAD::IS_LOOK_INVERTED()) {\n            a_3 *= -1;\n        }\n        if (PAD::_E1615EC03B3BB4FD()) {\n            a_3 *= -1;\n        }\n    }\n}"
  },
  {
    "namespace": "Namespace: PAD",
    "apiset": "API set: client",
    "name": "N_0xf239400e16c23e08",
    "hash": "0xF239400E16C23E08",
    "code": "-- 0xF239400E16C23E08\nN_0xf239400e16c23e08(\n\tpadIndex --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "AddNavmeshBlockingObject",
    "hash": "0xFCD5C8E06E502F5A",
    "code": "-- ADD_NAVMESH_BLOCKING_OBJECT\nlocal retval --[[ Any ]] =\n\tAddNavmeshBlockingObject(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\twidth --[[ number ]], \n\t\tlength --[[ number ]], \n\t\theight --[[ number ]], \n\t\theading --[[ number ]], \n\t\tbPermanent --[[ boolean ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [
      "x: \n\nThe x coordinate to create the block on.",
      "y: \n\nThe y coordinate.",
      "z: \n\nThe z coordinate.",
      "width: \n\nThe width of the block.",
      "length: \n\nThe length of the block.",
      "height: \n\nThe height of the block.",
      "heading: \n\nThe heading of object in degrees.",
      "bPermanent: \n\nA boolean indicating if the blocking object is permanent (true/false).",
      "flags: \n\nFlag for the blocking object, refer to eBlockingObjectFlags."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe x coordinate to create the block on.\n\ny: \n\nThe y coordinate.\n\nz: \n\nThe z coordinate.\n\nwidth: \n\nThe width of the block.\n\nlength: \n\nThe length of the block.\n\nheight: \n\nThe height of the block.\n\nheading: \n\nThe heading of object in degrees.\n\nbPermanent: \n\nA boolean indicating if the blocking object is permanent (true/false).\n\nflags: \n\nFlag for the blocking object, refer to eBlockingObjectFlags.\n\nCreates a navmesh blocking object, vehicles will avoid driving through this area.\n\nOnly 32 blocking objects may exist at a given time and must be manually managed. See REMOVE_NAVMESH_BLOCKING_OBJECT and onResourceStop\n\nenum eBlockingObjectFlags {\n    // Default Flag\n    BLOCKING_OBJECT_DEFAULT = 0,\n    // Blocking object will block wander paths\n    BLOCKING_OBJECT_WANDERPATH = 1,\n    // Blocking object will block (regular) shortest-paths\n    BLOCKING_OBJECT_SHORTESTPATH = 2,\n    // Blocking object will block flee paths\n    BLOCKING_OBJECT_FLEEPATH = 4,\n    // Blocking object will block all paths\n    BLOCKING_OBJECT_ALLPATHS = 7,\n}"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "AddNavmeshRequiredRegion",
    "hash": "0x387EAD7EE42F6685",
    "code": "-- ADD_NAVMESH_REQUIRED_REGION\nAddNavmeshRequiredRegion(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "AreAllNavmeshRegionsLoaded",
    "hash": "0x8415D95B194A3AEA",
    "code": "-- ARE_ALL_NAVMESH_REGIONS_LOADED\nlocal retval --[[ boolean ]] =\n\tAreAllNavmeshRegionsLoaded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "AreNodesLoadedForArea",
    "hash": "0xF7B79A50B905A30D",
    "code": "-- ARE_NODES_LOADED_FOR_AREA\nlocal retval --[[ boolean ]] =\n\tAreNodesLoadedForArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "CalculateTravelDistanceBetweenPoints",
    "hash": "0xADD95C7005C4A197",
    "code": "-- CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS\nlocal retval --[[ number ]] =\n\tCalculateTravelDistanceBetweenPoints(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Calculates the travel distance between a set of points. Doesn't seem to correlate with distance on gps sometimes.\n\nThis function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "ClearGpsDisabledZoneAtIndex",
    "hash": "0x2801D0012266DF07",
    "code": "-- CLEAR_GPS_DISABLED_ZONE_AT_INDEX\nClearGpsDisabledZoneAtIndex(\n\tindex --[[ integer ]]\n)",
    "parameters": [
      "index: \n\nIndex of disabled zone."
    ],
    "returns": [],
    "description": "Parameters:\n\nindex: \n\nIndex of disabled zone.\n\nClears a disabled GPS route area from a certain index previously set using SET_GPS_DISABLED_ZONE_AT_INDEX."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "DisableNavmeshInArea",
    "hash": "0x4C8872D8CDBE1B8B",
    "code": "-- DISABLE_NAVMESH_IN_AREA\nDisableNavmeshInArea(\n\tposMinX --[[ number ]], \n\tposMinY --[[ number ]], \n\tposMinZ --[[ number ]], \n\tposMaxX --[[ number ]], \n\tposMaxY --[[ number ]], \n\tposMaxZ --[[ number ]], \n\tbDisable --[[ bool ]]\n)",
    "parameters": [
      "posMinX: \n\nX Min Coordinate.",
      "posMinY: \n\nY Min Coordinate.",
      "posMinZ: \n\nZ Min Coordinate.",
      "posMaxX: \n\nX Max Coordinate.",
      "posMaxY: \n\nY Max Coordinate.",
      "posMaxZ: \n\nZ Max Coordinate.",
      "bDisable: \n\nWhether to disable the navmesh or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nposMinX: \n\nX Min Coordinate.\n\nposMinY: \n\nY Min Coordinate.\n\nposMinZ: \n\nZ Min Coordinate.\n\nposMaxX: \n\nX Max Coordinate.\n\nposMaxY: \n\nY Max Coordinate.\n\nposMaxZ: \n\nZ Max Coordinate.\n\nbDisable: \n\nWhether to disable the navmesh or not.\n\nUse this if you want to completely disable a large area of navmesh. For smaller areas, use ADD_NAVMESH_BLOCKING_OBJECT instead."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "DoesNavmeshBlockingObjectExist",
    "hash": "0x0EAEB0DB4B132399",
    "code": "-- DOES_NAVMESH_BLOCKING_OBJECT_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesNavmeshBlockingObjectExist(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GenerateDirectionsToCoord",
    "hash": "0xF90125F1F79ECDF8",
    "code": "-- GENERATE_DIRECTIONS_TO_COORD\nlocal retval --[[ integer ]], direction --[[ integer ]], vehicle --[[ number ]], distToNxJunction --[[ number ]] =\n\tGenerateDirectionsToCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference\ndistToNxJunction seems to be the distance in metres * 10.0f\ndirection:\n0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean \"Next frame, stop whatever's being said and tell the player the direction.\"\n1 = Route is being calculated or the player is going in the wrong direction\n2 = Please Proceed the Highlighted Route\n3 = In (distToNxJunction) Turn Left\n4 = In (distToNxJunction) Turn Right\n5 = In (distToNxJunction) Keep Straight\n6 = In (distToNxJunction) Turn Sharply To The Left\n7 = In (distToNxJunction) Turn Sharply To The Right\n8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of \"right.\" Either way, this seems to be the engine saying \"I don't know the route right now.\"\nreturn value set to 0 always"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetClosestMajorVehicleNode",
    "hash": "0x2EABE3B06F58C1BE",
    "code": "-- GET_CLOSEST_MAJOR_VEHICLE_NODE\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]] =\n\tGetClosestMajorVehicleNode(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ integer ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "outPosition: \n\nPointer to the found nodes coords",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns the closest major vehicle node."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\noutPosition: \n\nPointer to the found nodes coords\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns the closest major vehicle node.\n\nSame as GET_CLOSEST_VEHICLE_NODE, but with the node flag GCNF_INCLUDE_SWITCHED_OFF_NODES set."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetClosestRoad",
    "hash": "0x132F52BBA570FE92",
    "code": "-- GET_CLOSEST_ROAD\nlocal retval --[[ bool ]], srcNode --[[ vector3 ]], targetNode --[[ vector3 ]], laneCountForward --[[ integer ]], laneCountBackward --[[ integer ]], width --[[ number ]] =\n\tGetClosestRoad(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tminimumEdgeLength --[[ number ]], \n\t\tminimumLaneCount --[[ integer ]], \n\t\tonlyMajorRoads --[[ boolean ]]\n\t)",
    "parameters": [
      "x: \n\nx position",
      "y: \n\ny position",
      "z: \n\nz position",
      "minimumEdgeLength: \n\nMinimum distance the srcNode must be from the targetNode.",
      "minimumLaneCount: \n\nMinimum number of lanes the connection must have.",
      "srcNode: \n\nPosition of the edge source",
      "targetNode: \n\nPosition of the edge target",
      "laneCountForward: \n\nLane count forward",
      "laneCountBackward: \n\nLane count backwards",
      "width: \n\nWidth of gap in middle of road between forward and backward lanes.",
      "onlyMajorRoads: \n\nReturn major roads only."
    ],
    "returns": [
      "Returns true if a road was found, false otherwise."
    ],
    "description": "Parameters:\n\nx: \n\nx position\n\ny: \n\ny position\n\nz: \n\nz position\n\nminimumEdgeLength: \n\nMinimum distance the srcNode must be from the targetNode.\n\nminimumLaneCount: \n\nMinimum number of lanes the connection must have.\n\nsrcNode: \n\nPosition of the edge source\n\ntargetNode: \n\nPosition of the edge target\n\nlaneCountForward: \n\nLane count forward\n\nlaneCountBackward: \n\nLane count backwards\n\nwidth: \n\nWidth of gap in middle of road between forward and backward lanes.\n\nonlyMajorRoads: \n\nReturn major roads only.\n\nReturns:\n\nReturns true if a road was found, false otherwise.\n\nFinds an edge (node connection to another node) that satisfies the specified criteria."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetClosestVehicleNode",
    "hash": "0x240A18690AE96513",
    "code": "-- GET_CLOSEST_VEHICLE_NODE\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]] =\n\tGetClosestVehicleNode(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tnodeFlags --[[ integer ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "outPosition: \n\nPointer to the found nodes coords",
      "nodeFlags: \n\nNode flags",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns the closest vehicle node matching the node flags."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\noutPosition: \n\nPointer to the found nodes coords\n\nnodeFlags: \n\nNode flags\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns the closest vehicle node matching the node flags.\n\nenum eGetClosestNodeFlags {\n    GCNF_INCLUDE_SWITCHED_OFF_NODES = 1,\n    GCNF_INCLUDE_BOAT_NODES = 2,\n    GCNF_IGNORE_SLIPLANES = 4,\n    GCNF_IGNORE_SWITCHED_OFF_DEADENDS = 8,\n    GCNF_GET_HEADING = 256,\n    GCNF_FAVOUR_FACING = 512\n}"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetClosestVehicleNodeWithHeading",
    "hash": "0xFF071FB798B803B0",
    "code": "-- GET_CLOSEST_VEHICLE_NODE_WITH_HEADING\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]], outHeading --[[ number ]] =\n\tGetClosestVehicleNodeWithHeading(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tnodeFlags --[[ integer ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ integer ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "outPosition: \n\nPointer to the found nodes coords",
      "outHeading: \n\nPointer to the found nodes heading",
      "nodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns the closest vehicle node with its heading."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\noutPosition: \n\nPointer to the found nodes coords\n\noutHeading: \n\nPointer to the found nodes heading\n\nnodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns the closest vehicle node with its heading.\n\nSame as GET_CLOSEST_VEHICLE_NODE, but with the node flag GCNF_GET_HEADING set, causing the native to also return the heading."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetGpsBlipRouteFound",
    "hash": "0x869DAACBBE9FA006",
    "code": "-- GET_GPS_BLIP_ROUTE_FOUND\nlocal retval --[[ boolean ]] =\n\tGetGpsBlipRouteFound()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetGpsBlipRouteLength",
    "hash": "0xBBB45C3CF5C8AA85",
    "code": "-- GET_GPS_BLIP_ROUTE_LENGTH\nlocal retval --[[ integer ]] =\n\tGetGpsBlipRouteLength()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetHeightmapBottomZForArea",
    "hash": "0x3599D741C9AC6310",
    "code": "-- _GET_HEIGHTMAP_BOTTOM_Z_FOR_AREA\nlocal retval --[[ number ]] =\n\tGetHeightmapBottomZForArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetHeightmapBottomZForPosition",
    "hash": "0x336511A34F2E5185",
    "code": "-- _GET_HEIGHTMAP_BOTTOM_Z_FOR_POSITION\nlocal retval --[[ number ]] =\n\tGetHeightmapBottomZForPosition(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns CGameWorldHeightMap's minimum Z value at specified point (grid node)."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetHeightmapTopZForArea",
    "hash": "0x8ABE8608576D9CE3",
    "code": "-- _GET_HEIGHTMAP_TOP_Z_FOR_AREA\nlocal retval --[[ number ]] =\n\tGetHeightmapTopZForArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetHeightmapTopZForPosition",
    "hash": "0x29C24BFBED8AB8FB",
    "code": "-- _GET_HEIGHTMAP_TOP_Z_FOR_POSITION\nlocal retval --[[ number ]] =\n\tGetHeightmapTopZForPosition(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns CGameWorldHeightMap's maximum Z value at specified point (grid node)."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetNextGpsDisabledZoneIndex",
    "hash": "0xD3A6A0EF48823A8C",
    "code": "-- GET_NEXT_GPS_DISABLED_ZONE_INDEX\nlocal retval --[[ integer ]] =\n\tGetNextGpsDisabledZoneIndex(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "The disabled zone index"
    ],
    "description": "Returns:\n\nThe disabled zone index\n\nGets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.\n\nNativeDB Removed Parameter 1: int index"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetNthClosestVehicleNode",
    "hash": "0xE50E52416CCF948B",
    "code": "-- GET_NTH_CLOSEST_VEHICLE_NODE\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]] =\n\tGetNthClosestVehicleNode(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tnthClosest --[[ integer ]], \n\t\tnodeFlags --[[ integer ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "nthClosest: \n\nThe index of the node to return",
      "outPosition: \n\nPointer to the found nodes coords",
      "nodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns the nth closest vehicle node."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\nnthClosest: \n\nThe index of the node to return\n\noutPosition: \n\nPointer to the found nodes coords\n\nnodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns the nth closest vehicle node.\n\nSame as GET_CLOSEST_VEHICLE_NODE, but returns the nth closest node instead of the first."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetNthClosestVehicleNodeFavourDirection",
    "hash": "0x45905BE8654AE067",
    "code": "-- GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]], outHeading --[[ number ]] =\n\tGetNthClosestVehicleNodeFavourDirection(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tdesiredX --[[ number ]], \n\t\tdesiredY --[[ number ]], \n\t\tdesiredZ --[[ number ]], \n\t\tnthClosest --[[ integer ]], \n\t\tnodeFlags --[[ integer ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "desiredX: \n\nThe X direction to favour",
      "desiredY: \n\nThe Y direction to favour",
      "desiredZ: \n\nThe Z direction to favour",
      "nthClosest: \n\nThe index of the node to return",
      "outPosition: \n\nPointer to the found nodes coords",
      "outHeading: \n\nPointer to the found nodes heading",
      "nodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns the nth closest vehicle node with its heading favouring the desired direction."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\ndesiredX: \n\nThe X direction to favour\n\ndesiredY: \n\nThe Y direction to favour\n\ndesiredZ: \n\nThe Z direction to favour\n\nnthClosest: \n\nThe index of the node to return\n\noutPosition: \n\nPointer to the found nodes coords\n\noutHeading: \n\nPointer to the found nodes heading\n\nnodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns the nth closest vehicle node with its heading favouring the desired direction.\n\nLike GET_CLOSEST_VEHICLE_NODE_WITH_HEADING, but returns the nth closest node instead of the first."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetNthClosestVehicleNodeId",
    "hash": "0x22D7275A79FE8215",
    "code": "-- GET_NTH_CLOSEST_VEHICLE_NODE_ID\nlocal retval --[[ integer ]] =\n\tGetNthClosestVehicleNodeId(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tnthClosest --[[ integer ]], \n\t\tnodeFlags --[[ integer ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "nthClosest: \n\nThe index of the node to return",
      "nodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns the nth closest vehicle nodes id."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\nnthClosest: \n\nThe index of the node to return\n\nnodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns the nth closest vehicle nodes id."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetNthClosestVehicleNodeIdWithHeading",
    "hash": "0x6448050E9C2A7207",
    "code": "-- GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING\nlocal retval --[[ integer ]], outPosition --[[ vector3 ]], outHeading --[[ number ]] =\n\tGetNthClosestVehicleNodeIdWithHeading(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tnthClosest --[[ integer ]], \n\t\tnodeFlags --[[ integer ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "nthClosest: \n\nThe index of the node to return",
      "outPosition: \n\nPointer to the found nodes coords",
      "outHeading: \n\nPointer to the found nodes heading",
      "nodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns the nth closest vehicle nodes id with its heading."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\nnthClosest: \n\nThe index of the node to return\n\noutPosition: \n\nPointer to the found nodes coords\n\noutHeading: \n\nPointer to the found nodes heading\n\nnodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns the nth closest vehicle nodes id with its heading."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetNthClosestVehicleNodeWithHeading",
    "hash": "0x80CA6A8B6C094CC4",
    "code": "-- GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]], outHeading --[[ number ]], totalLanes --[[ integer ]] =\n\tGetNthClosestVehicleNodeWithHeading(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tnthClosest --[[ integer ]], \n\t\tnodeFlags --[[ integer ]], \n\t\tzMeasureMult --[[ number ]], \n\t\tzTolerance --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "nthClosest: \n\nThe index of the node to return",
      "outPosition: \n\nPointer to the found nodes coords",
      "outHeading: \n\nPointer to the found nodes heading",
      "totalLanes: \n\nPointer to the total lanes (forward + backward) of the found node",
      "nodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE",
      "zMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted",
      "zTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in"
    ],
    "returns": [
      "Returns true if the node was found, or false if the node was not found, or was not streamed in."
    ],
    "description": "Parameters:\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\nnthClosest: \n\nThe index of the node to return\n\noutPosition: \n\nPointer to the found nodes coords\n\noutHeading: \n\nPointer to the found nodes heading\n\ntotalLanes: \n\nPointer to the total lanes (forward + backward) of the found node\n\nnodeFlags: \n\nNode flags, see GET_CLOSEST_VEHICLE_NODE\n\nzMeasureMult: \n\nHow strongly the difference in the Z direction should be weighted\n\nzTolerance: \n\nHow far apart the Z coords have to be before zMeasureMult kicks in\n\nReturns:\n\nReturns true if the node was found, or false if the node was not found, or was not streamed in.\n\nGet the nth closest vehicle node with its heading and total lane count. If you need specific forward and backward lane counts use GET_CLOSEST_ROAD."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetNumNavmeshesExistingInArea",
    "hash": "0x01708E8DD3FF8C65",
    "code": "-- GET_NUM_NAVMESHES_EXISTING_IN_AREA\nlocal retval --[[ integer ]] =\n\tGetNumNavmeshesExistingInArea(\n\t\tposMinX --[[ number ]], \n\t\tposMinY --[[ number ]], \n\t\tposMinZ --[[ number ]], \n\t\tposMaxX --[[ number ]], \n\t\tposMaxY --[[ number ]], \n\t\tposMaxZ --[[ number ]]\n\t)",
    "parameters": [
      "posMinX: \n\nMin X Coordinate.",
      "posMinY: \n\nMin Y Coordinate.",
      "posMinZ: \n\nMin Z Coordinate.",
      "posMaxX: \n\nMax X Coordinate.",
      "posMaxY: \n\nMax Y Coordinate.",
      "posMaxZ: \n\nMax Z Coordinate."
    ],
    "returns": [
      "Returns the number of navmeshes which exist in the given area (irrespective of whether they are currently loaded or not)"
    ],
    "description": "Parameters:\n\nposMinX: \n\nMin X Coordinate.\n\nposMinY: \n\nMin Y Coordinate.\n\nposMinZ: \n\nMin Z Coordinate.\n\nposMaxX: \n\nMax X Coordinate.\n\nposMaxY: \n\nMax Y Coordinate.\n\nposMaxZ: \n\nMax Z Coordinate.\n\nReturns:\n\nReturns the number of navmeshes which exist in the given area (irrespective of whether they are currently loaded or not)"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetPointOnRoadSide",
    "hash": "0x16F46FB18C8009E4",
    "code": "-- _GET_POINT_ON_ROAD_SIDE\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]] =\n\tGetPointOnRoadSide(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tp3 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetPosAlongGpsTypeRoute",
    "hash": "0xF3162836C28F9DA5",
    "code": "-- GET_POS_ALONG_GPS_TYPE_ROUTE\nlocal retval --[[ boolean ]], result --[[ vector3 ]] =\n\tGetPosAlongGpsTypeRoute(\n\t\tbStartAtPlayerPos --[[ boolean ]], \n\t\tfDistanceAlongRoute --[[ number ]], \n\t\tslotType --[[ integer ]]\n\t)",
    "parameters": [
      "result: \n\nCoordinates of waypoint marker",
      "bStartAtPlayerPos: \n\nShould we project distance from the player position or from next node.",
      "fDistanceAlongRoute: \n\nDistance we want to get the position along the route.",
      "slotType: \n\nType of gps route to check against. See eGpsSlotType."
    ],
    "returns": [
      "will return true if a position is returned, false if not."
    ],
    "description": "Parameters:\n\nresult: \n\nCoordinates of waypoint marker\n\nbStartAtPlayerPos: \n\nShould we project distance from the player position or from next node.\n\nfDistanceAlongRoute: \n\nDistance we want to get the position along the route.\n\nslotType: \n\nType of gps route to check against. See eGpsSlotType.\n\nReturns:\n\nwill return true if a position is returned, false if not.\n\nNative to get a position along current player GPS route using supplied slot. This native was previously named GET_GPS_WAYPOINT_ROUTE_END, but its named changed.\n\nenum eGpsSlotType {\n\tGPS_SLOT_WAYPOINT = 0,\n\tGPS_SLOT_RADAR_BLIP = 1,\n\tGPS_SLOT_DISCRETE = 2\n}"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetRandomVehicleNode",
    "hash": "0x93E0DB8440B73A7D",
    "code": "-- GET_RANDOM_VEHICLE_NODE\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]], nodeId --[[ integer ]] =\n\tGetRandomVehicleNode(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ boolean ]], \n\t\tp6 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetRoadBoundaryUsingHeading",
    "hash": "0xA0F8A7517A273C05",
    "code": "-- GET_ROAD_BOUNDARY_USING_HEADING\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]] =\n\tGetRoadBoundaryUsingHeading(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\theading --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetSafeCoordForPed",
    "hash": "0xB61C8E878A4199CA",
    "code": "-- GET_SAFE_COORD_FOR_PED\nlocal retval --[[ boolean ]], outPosition --[[ vector3 ]] =\n\tGetSafeCoordForPed(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tonlyOnPavement --[[ boolean ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [
      "x: \n\nThe X coordinate of the point to check.",
      "y: \n\nThe Y coordinate of the point to check.",
      "z: \n\nThe Z coordinate of the point to check.",
      "onlyOnPavement: \n\nSets the GSC_FLAG_ONLY_PAVEMENT flag.",
      "outPosition: \n\nThe location of the safe coord.",
      "flags: \n\nThe search flags."
    ],
    "returns": [
      "Returns true if a safe coord was found and false otherwise."
    ],
    "description": "Parameters:\n\nx: \n\nThe X coordinate of the point to check.\n\ny: \n\nThe Y coordinate of the point to check.\n\nz: \n\nThe Z coordinate of the point to check.\n\nonlyOnPavement: \n\nSets the GSC_FLAG_ONLY_PAVEMENT flag.\n\noutPosition: \n\nThe location of the safe coord.\n\nflags: \n\nThe search flags.\n\nReturns:\n\nReturns true if a safe coord was found and false otherwise.\n\nenum eSafePositionFlags {\n    // Only navmesh polygons marked as pavement\n    GSC_FLAG_ONLY_PAVEMENT = 1,\n    // Only navmesh polygons not marked as \"isolated\"\n    GSC_FLAG_NOT_ISOLATED = 2,\n    // No navmesh polygons created from interiors\n    GSC_FLAG_NOT_INTERIOR = 4,\n    // No navmesh polygons marked as water\n    GSC_FLAG_NOT_WATER = 8,\n    // Only navmesh polygons marked as \"network spawn candidate\"\n    GSC_FLAG_ONLY_NETWORK_SPAWN = 16,\n    // Specify whether to use a flood-fill from the starting position, as opposed to scanning all polygons within the search volume\n    GSC_FLAG_USE_FLOOD_FILL = 32\n}"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetStreetNameAtCoord",
    "hash": "0x2EB41072B4C1E4C0",
    "code": "-- GET_STREET_NAME_AT_COORD\nlocal streetName --[[ Hash ]], crossingRoad --[[ Hash ]] =\n\tGetStreetNameAtCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Determines the name of the street which is the closest to the given coordinates.\nx,y,z - the coordinates of the street\nstreetName - returns a hash to the name of the street the coords are on\ncrossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road\nNote: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetVehicleNodeIsGpsAllowed",
    "hash": "0xA2AE5C478B96E3B6",
    "code": "-- GET_VEHICLE_NODE_IS_GPS_ALLOWED\nlocal retval --[[ boolean ]] =\n\tGetVehicleNodeIsGpsAllowed(\n\t\tnodeID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns false for nodes that aren't used for GPS routes.\nExample:\nNodes in Fort Zancudo and LSIA are false"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetVehicleNodeIsSwitchedOff",
    "hash": "0x4F5070AA58F69279",
    "code": "-- GET_VEHICLE_NODE_IS_SWITCHED_OFF\nlocal retval --[[ boolean ]] =\n\tGetVehicleNodeIsSwitchedOff(\n\t\tnodeID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.\nNormal roads where plenty of Peds spawn will return false"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetVehicleNodePosition",
    "hash": "0x703123E5E7D429C2",
    "code": "-- GET_VEHICLE_NODE_POSITION\nlocal outPosition --[[ vector3 ]] =\n\tGetVehicleNodePosition(\n\t\tnodeId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Calling this with an invalid node id, will crash the game.\nNote that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.\nEg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION()."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "GetVehicleNodeProperties",
    "hash": "0x0568566ACBB5DEDC",
    "code": "-- GET_VEHICLE_NODE_PROPERTIES\nlocal retval --[[ boolean ]], density --[[ integer ]], flags --[[ integer ]] =\n\tGetVehicleNodeProperties(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nx position of search",
      "y: \n\ny position of search",
      "z: \n\nz position of search",
      "density: \n\nThe traffic density the current node will spawn in a range of 0-15.",
      "flags: \n\nThe vehicle node flags, see eVehicleNodeProperties."
    ],
    "returns": [
      "Returns true if the node was found, or false if the node was not found, or was not streamed in."
    ],
    "description": "Parameters:\n\nx: \n\nx position of search\n\ny: \n\ny position of search\n\nz: \n\nz position of search\n\ndensity: \n\nThe traffic density the current node will spawn in a range of 0-15.\n\nflags: \n\nThe vehicle node flags, see eVehicleNodeProperties.\n\nReturns:\n\nReturns true if the node was found, or false if the node was not found, or was not streamed in.\n\nGets the density and flags of the closest node to the specified position.\\ Density is a value between 0 and 15, indicating how busy the road is.\n\nenum eVehicleNodeProperties {\n\tOFF_ROAD = 1 << 0,\n\tON_PLAYERS_ROAD =  1 << 1,\n\tNO_BIG_VEHICLES = 1 << 2,\n\tSWITCHED_OFF = 1 << 3,\n\tTUNNEL_OR_INTERIOR = 1 << 4,\n\tLEADS_TO_DEAD_END = 1 << 5,\n\tHIGHWAY = 1 << 6,\n\tJUNCTION = 1 << 7,\n\tTRAFFIC_LIGHT = 1 << 8,\n\tGIVE_WAY = 1 << 9,\n\tWATER = 1 << 10,\n}"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "IsNavmeshLoadedInArea",
    "hash": "0xF813C7E63F9062A5",
    "code": "-- IS_NAVMESH_LOADED_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsNavmeshLoadedInArea(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.  \nIf you can re-word this so it makes more sense, please do. I'm horrible with words sometimes..."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "IsNavmeshRequiredRegionOwnedByAnyThread",
    "hash": "0x705A844002B39DC0",
    "code": "-- _IS_NAVMESH_REQUIRED_REGION_OWNED_BY_ANY_THREAD\nlocal retval --[[ boolean ]] =\n\tIsNavmeshRequiredRegionOwnedByAnyThread()",
    "parameters": [],
    "returns": [],
    "description": "IS_*"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "IsPointOnRoad",
    "hash": "0x125BF4ABFC536B09",
    "code": "-- IS_POINT_ON_ROAD\nlocal retval --[[ boolean ]] =\n\tIsPointOnRoad(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a value indicating whether the specified position is on a road.  \nThe vehicle parameter is not implemented (ignored)."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "IsVehicleNodeIdValid",
    "hash": "0x1EAF30FCFBF5AF74",
    "code": "-- IS_VEHICLE_NODE_ID_VALID\nlocal retval --[[ boolean ]] =\n\tIsVehicleNodeIdValid(\n\t\tvehicleNodeId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the id is non zero."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "LoadAllPathNodes",
    "hash": "0x80E4A6EDDB0BE8D9",
    "code": "-- LOAD_ALL_PATH_NODES\nlocal retval --[[ boolean ]] =\n\tLoadAllPathNodes(\n\t\tkeepInMemory --[[ boolean ]]\n\t)",
    "parameters": [
      "keepInMemory: \n\nif true, all path nodes will be loaded and be kept in memory; otherwise, all path nodes will be loaded, but unloaded as the game sees fit."
    ],
    "returns": [],
    "description": "Parameters:\n\nkeepInMemory: \n\nif true, all path nodes will be loaded and be kept in memory; otherwise, all path nodes will be loaded, but unloaded as the game sees fit.\n\nThis native has been removed in v1180."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "RemoveNavmeshBlockingObject",
    "hash": "0x46399A7895957C0E",
    "code": "-- REMOVE_NAVMESH_BLOCKING_OBJECT\nRemoveNavmeshBlockingObject(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "RemoveNavmeshRequiredRegions",
    "hash": "0x916F0A3CDEC3445E",
    "code": "-- REMOVE_NAVMESH_REQUIRED_REGIONS\nRemoveNavmeshRequiredRegions()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "RequestPathsPreferAccurateBoundingstruct",
    "hash": "0x07FB139B592FA687",
    "code": "-- _REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT\nlocal retval --[[ boolean ]] =\n\tRequestPathsPreferAccurateBoundingstruct(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used internally for long range tasks"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetAiGlobalPathNodesType",
    "hash": "0xF74B1FFA4A15FBEA",
    "code": "-- _SET_AI_GLOBAL_PATH_NODES_TYPE\nSetAiGlobalPathNodesType(\n\ttype --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Activates Cayo Perico path nodes if passed 1. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass 0) when close to the island, your game might crash.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetAllPathsCacheBoundingstruct",
    "hash": "0x228E5C6AD4D74BFD",
    "code": "-- _SET_ALL_PATHS_CACHE_BOUNDINGSTRUCT\nSetAllPathsCacheBoundingstruct(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles a global boolean, name is probably a hash collision but describes its functionality."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetAmbientPedRangeMultiplierThisFrame",
    "hash": "0x0B919E1FB47CC4E0",
    "code": "-- SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME\nSetAmbientPedRangeMultiplierThisFrame(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetGpsDisabledZone",
    "hash": "0xDC20483CD3DD5201",
    "code": "-- SET_GPS_DISABLED_ZONE\nSetGpsDisabledZone(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetGpsDisabledZoneAtIndex",
    "hash": "0xD0BC1C6FB18EE154",
    "code": "-- SET_GPS_DISABLED_ZONE_AT_INDEX\nSetGpsDisabledZoneAtIndex(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [
      "x1: \n\nX coordinate of first vector.",
      "y1: \n\nY coordinate of first vector.",
      "z1: \n\nZ coordinate of first vector.",
      "x2: \n\nX coordinate of second vector.",
      "y2: \n\nY coordinate of second vector.",
      "z2: \n\nZ coordinate of second vector.",
      "index: \n\nIndex of zone."
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nX coordinate of first vector.\n\ny1: \n\nY coordinate of first vector.\n\nz1: \n\nZ coordinate of first vector.\n\nx2: \n\nX coordinate of second vector.\n\ny2: \n\nY coordinate of second vector.\n\nz2: \n\nZ coordinate of second vector.\n\nindex: \n\nIndex of zone.\n\nDisables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.\n\nYou can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.\n\nSetting a waypoint at the same coordinate:\n\nDisabled Zone: https://i.imgur.com/P9VUuxM.png\n\nEnabled Zone (normal): https://i.imgur.com/BPi24aw.png"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetIgnoreNoGpsFlag",
    "hash": "0x72751156E7678833",
    "code": "-- SET_IGNORE_NO_GPS_FLAG\nSetIgnoreNoGpsFlag(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetIgnoreSecondaryRouteNodes",
    "hash": "0x1FC289A0C3FF470F",
    "code": "-- _SET_IGNORE_SECONDARY_ROUTE_NODES\nSetIgnoreSecondaryRouteNodes(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See: SET_BLIP_ROUTE"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetPedPathsBackToOriginal",
    "hash": "0xE04B48F2CC926253",
    "code": "-- SET_PED_PATHS_BACK_TO_ORIGINAL\nSetPedPathsBackToOriginal(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 7: Any p6"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetPedPathsInArea",
    "hash": "0x34F060F4BF92E018",
    "code": "-- SET_PED_PATHS_IN_AREA\nSetPedPathsInArea(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tunknown --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 8: Any p7"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetRoadsBackToOriginal",
    "hash": "0x1EE7063B80FFC77C",
    "code": "-- SET_ROADS_BACK_TO_ORIGINAL\nSetRoadsBackToOriginal(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "missing a last parameter int p6  \nNativeDB Added Parameter 7: Any p6"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetRoadsBackToOriginalInAngledArea",
    "hash": "0x0027501B9F3B407E",
    "code": "-- SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA\nSetRoadsBackToOriginalInAngledArea(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\twidth --[[ number ]]\n)",
    "parameters": [
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area"
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area.\n\nNativeDB Added Parameter 8: Any p7\n\nbool p7 - always 1"
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetRoadsInAngledArea",
    "hash": "0x1A5AA1208AF5DB59",
    "code": "-- SET_ROADS_IN_ANGLED_AREA\nSetRoadsInAngledArea(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\twidth --[[ number ]], \n\tunknown1 --[[ boolean ]], \n\tunknown2 --[[ boolean ]], \n\tunknown3 --[[ boolean ]]\n)",
    "parameters": [
      "x1: \n\nX dimension of the angled area 'origin'",
      "y1: \n\nY dimension of the angled area 'origin'",
      "z1: \n\nZ dimension of the angled area 'origin'",
      "x2: \n\nX dimension of the angled area 'extent'",
      "y2: \n\nY dimension of the angled area 'extent'",
      "z2: \n\nZ dimension of the angled area 'extent'",
      "width: \n\nWidth of the angled area",
      "unknown1:",
      "unknown2:",
      "unknown3:"
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nX dimension of the angled area 'origin'\n\ny1: \n\nY dimension of the angled area 'origin'\n\nz1: \n\nZ dimension of the angled area 'origin'\n\nx2: \n\nX dimension of the angled area 'extent'\n\ny2: \n\nY dimension of the angled area 'extent'\n\nz2: \n\nZ dimension of the angled area 'extent'\n\nwidth: \n\nWidth of the angled area\n\nunknown1:\nunknown2:\nunknown3:\n\nunknown3 is related to SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData in networked environments.\n\nSee IS_POINT_IN_ANGLED_AREA for the definition of an angled area."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "SetRoadsInArea",
    "hash": "0xBF1A602B5BA52FEE",
    "code": "-- SET_ROADS_IN_AREA\nSetRoadsInArea(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tnodeEnabled --[[ boolean ]], \n\tunknown2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "When this is set to false, all nodes in the area get disabled.\n\nGET_VEHICLE_NODE_IS_SWITCHED_OFF returns true afterwards.\n\nIf it's true,\n\nGET_VEHICLE_NODE_IS_SWITCHED_OFF returns false."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "UpdateNavmeshBlockingObject",
    "hash": "0x109E99373F290687",
    "code": "-- UPDATE_NAVMESH_BLOCKING_OBJECT\nUpdateNavmeshBlockingObject(\n\tobject --[[ Object ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tscaleX --[[ number ]], \n\tscaleY --[[ number ]], \n\tscaleZ --[[ number ]], \n\theading --[[ number ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [
      "object: \n\nNavmesh Blocking Object by ID. must be returned by ADD_NAVMESH_BLOCKING_OBJECT.",
      "posX: \n\nX position coordinate.",
      "posY: \n\nY position coordinate.",
      "posZ: \n\nZ position coordinate.",
      "scaleX: \n\nX Scale.",
      "scaleY: \n\nY Scale.",
      "scaleZ: \n\nZ Scale.",
      "heading: \n\nHeading of the blocking object.",
      "flags: \n\nFlags for the blocking object, see ADD_NAVMESH_BLOCKING_OBJECT for list of blocking object flags."
    ],
    "returns": [],
    "description": "Parameters:\n\nobject: \n\nNavmesh Blocking Object by ID. must be returned by ADD_NAVMESH_BLOCKING_OBJECT.\n\nposX: \n\nX position coordinate.\n\nposY: \n\nY position coordinate.\n\nposZ: \n\nZ position coordinate.\n\nscaleX: \n\nX Scale.\n\nscaleY: \n\nY Scale.\n\nscaleZ: \n\nZ Scale.\n\nheading: \n\nHeading of the blocking object.\n\nflags: \n\nFlags for the blocking object, see ADD_NAVMESH_BLOCKING_OBJECT for list of blocking object flags."
  },
  {
    "namespace": "Namespace: PATHFIND",
    "apiset": "API set: client",
    "name": "N_0xaa76052dda9bfc3e",
    "hash": "0xAA76052DDA9BFC3E",
    "code": "-- 0xAA76052DDA9BFC3E\nN_0xaa76052dda9bfc3e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "AddArmourToPed",
    "hash": "0x5BA652A0CD14DF2F",
    "code": "-- ADD_ARMOUR_TO_PED\nAddArmourToPed(\n\tped --[[ Ped ]], \n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "AddPedDecorationFromHashes",
    "hash": "0x5F5D1665E352A839",
    "code": "-- ADD_PED_DECORATION_FROM_HASHES\nAddPedDecorationFromHashes(\n\tped --[[ Ped ]], \n\tcollection --[[ Hash ]], \n\toverlay --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.\ncollection - PedDecorationCollection filename hash\noverlay - Item name hash\nExample:\nEntry inside \"mpbeach_overlays.xml\" -\n<Item>\n  <uvPos x=\"0.500000\" y=\"0.500000\" />\n  <scale x=\"0.600000\" y=\"0.500000\" />\n  <rotation value=\"0.000000\" />\n  <nameHash>FM_Hair_Fuzz</nameHash>\n  <txdHash>mp_hair_fuzz</txdHash>\n  <txtHash>mp_hair_fuzz</txtHash>\n  <zone>ZONE_HEAD</zone>\n  <type>TYPE_TATTOO</type>\n  <faction>FM</faction>\n  <garment>All</garment>\n  <gender>GENDER_DONTCARE</gender>\n  <award />\n  <awardLevel />\n</Item>\nCode:\nPED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"mpbeach_overlays\"), MISC::GET_HASH_KEY(\"fm_hair_fuzz\"))"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "AddPedDecorationFromHashesInCorona",
    "hash": "0x5619BFA07CFD7833",
    "code": "-- ADD_PED_DECORATION_FROM_HASHES_IN_CORONA\nAddPedDecorationFromHashesInCorona(\n\tped --[[ Ped ]], \n\tcollection --[[ Hash ]], \n\toverlay --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "AddRelationshipGroup",
    "hash": "0xF372BC22FCB88606",
    "code": "-- ADD_RELATIONSHIP_GROUP\nlocal retval --[[ Any ]], groupHash --[[ Hash ]] =\n\tAddRelationshipGroup(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "AddScenarioBlockingArea",
    "hash": "0x1B5C85C612E5256E",
    "code": "-- ADD_SCENARIO_BLOCKING_AREA\nlocal retval --[[ integer ]] =\n\tAddScenarioBlockingArea(\n\t\tposMinX --[[ number ]], \n\t\tposMinY --[[ number ]], \n\t\tposMinZ --[[ number ]], \n\t\tposMaxX --[[ number ]], \n\t\tposMaxY --[[ number ]], \n\t\tposMaxZ --[[ number ]], \n\t\tnetwork --[[ boolean ]], \n\t\tcancelActive --[[ boolean ]], \n\t\tblockPeds --[[ boolean ]], \n\t\tblockVehicles --[[ boolean ]]\n\t)",
    "parameters": [
      "posMinX: \n\nMin X Coordinate.",
      "posMinY: \n\nMin Y Coordinate.",
      "posMinZ: \n\nMin Z Coordinate.",
      "posMaxX: \n\nMax X Coordinate.",
      "posMaxY: \n\nMax Y Coordinate.",
      "posMaxZ: \n\nMax Z Coordinate.",
      "network: \n\nOptionally networked to all other players",
      "cancelActive: \n\nShould this cause peds already in active scenario points in the area specified to leave",
      "blockPeds: \n\nif this area effects scenarios with peds",
      "blockVehicles: \n\nif this area effects scenarios with vehicles"
    ],
    "returns": [],
    "description": "Parameters:\n\nposMinX: \n\nMin X Coordinate.\n\nposMinY: \n\nMin Y Coordinate.\n\nposMinZ: \n\nMin Z Coordinate.\n\nposMaxX: \n\nMax X Coordinate.\n\nposMaxY: \n\nMax Y Coordinate.\n\nposMaxZ: \n\nMax Z Coordinate.\n\nnetwork: \n\nOptionally networked to all other players\n\ncancelActive: \n\nShould this cause peds already in active scenario points in the area specified to leave\n\nblockPeds: \n\nif this area effects scenarios with peds\n\nblockVehicles: \n\nif this area effects scenarios with vehicles\n\nSets an area where scenarios are blocked"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ApplyDamageToPed",
    "hash": "0x697157CED63F18D4",
    "code": "-- APPLY_DAMAGE_TO_PED\nApplyDamageToPed(\n\tped --[[ Ped ]], \n\tdamageAmount --[[ integer ]], \n\tarmorFirst --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "damages a ped with the given amount  \n----  \narmorFirst means it will damage/lower the armor first before damaging the player.  \nsetting damageAmount to a negative amount will cause the player or the armor (depending on armorFirst) to be healed by damageAmount instead.  \n\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ApplyPedBlood",
    "hash": "0x83F7E01C7B769A26",
    "code": "-- APPLY_PED_BLOOD\nApplyPedBlood(\n\tped --[[ Ped ]], \n\tboneIndex --[[ integer ]], \n\txRot --[[ number ]], \n\tyRot --[[ number ]], \n\tzRot --[[ number ]], \n\twoundType --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Found one occurence in re_crashrescue.c4  \nPED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, \"wound_sheet\");"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ApplyPedBloodByZone",
    "hash": "0x3311E47B91EDCBBC",
    "code": "-- APPLY_PED_BLOOD_BY_ZONE\nlocal p4 --[[ Any ]] =\n\tApplyPedBloodByZone(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ApplyPedBloodDamageByZone",
    "hash": "0x816F6981C60BF53B",
    "code": "-- APPLY_PED_BLOOD_DAMAGE_BY_ZONE\nApplyPedBloodDamageByZone(\n\tped --[[ Ped ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ApplyPedBloodSpecific",
    "hash": "0xEF0D582CBF2D9B0F",
    "code": "-- APPLY_PED_BLOOD_SPECIFIC\nApplyPedBloodSpecific(\n\tped --[[ Ped ]], \n\tcomponent --[[ integer ]], \n\tu --[[ number ]], \n\tv --[[ number ]], \n\trotation --[[ number ]], \n\tscale --[[ number ]], \n\tforcedFrame --[[ integer ]], \n\tpreAge --[[ number ]], \n\tbloodName --[[ string ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped to which blood damage is applied.",
      "component: \n\nSpecific component or body part.",
      "u: \n\nUV texture coordinates for placing the decal in the specified zone.",
      "v: \n\nUV texture coordinates for placing the decal in the specified zone.",
      "rotation: \n\nAngle in degrees for the rotation of the blood decal.",
      "scale: \n\nScale factor for the damage, ranging from 0.0 to 1.0.",
      "forcedFrame: \n\nAllows a specific frame of damage to be chosen (-1 for random selection).",
      "preAge: \n\nNumber of seconds to pre-age the damage for an \"old wound\" effect (0.0 for fresh wound).",
      "bloodName: \n\nName of the blood type, matching an entry in peddamage.xml."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped to which blood damage is applied.\n\ncomponent: \n\nSpecific component or body part.\n\nu: \n\nUV texture coordinates for placing the decal in the specified zone.\n\nv: \n\nUV texture coordinates for placing the decal in the specified zone.\n\nrotation: \n\nAngle in degrees for the rotation of the blood decal.\n\nscale: \n\nScale factor for the damage, ranging from 0.0 to 1.0.\n\nforcedFrame: \n\nAllows a specific frame of damage to be chosen (-1 for random selection).\n\npreAge: \n\nNumber of seconds to pre-age the damage for an \"old wound\" effect (0.0 for fresh wound).\n\nbloodName: \n\nName of the blood type, matching an entry in peddamage.xml.\n\nApplies blood damage to a ped with specific parameters for zone, UV offsets, rotation, scale, and initial aging.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ApplyPedDamageDecal",
    "hash": "0x397C38AA7B4A5F83",
    "code": "-- APPLY_PED_DAMAGE_DECAL\nApplyPedDamageDecal(\n\tped --[[ Ped ]], \n\tdamageZone --[[ integer ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\theading --[[ number ]], \n\tscale --[[ number ]], \n\talpha --[[ number ]], \n\tvariation --[[ integer ]], \n\tfadeIn --[[ boolean ]], \n\tdecalName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "scar\nblushing\ncs_flush_anger\ncs_flush_anger_face\nbruise\nbruise_large\nherpes\nArmorBullet\nbasic_dirt_cloth\nbasic_dirt_skin\ncs_trev1_dirt"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ApplyPedDamagePack",
    "hash": "0x46DF918788CB093F",
    "code": "-- APPLY_PED_DAMAGE_PACK\nApplyPedDamagePack(\n\tped --[[ Ped ]], \n\tdamagePack --[[ string ]], \n\tdamage --[[ number ]], \n\tmult --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Damage Packs:  \n\"SCR_TrevorTreeBang\"  \n\"HOSPITAL_0\"  \n\"HOSPITAL_1\"  \n\"HOSPITAL_2\"  \n\"HOSPITAL_3\"  \n\"HOSPITAL_4\"  \n\"HOSPITAL_5\"  \n\"HOSPITAL_6\"  \n\"HOSPITAL_7\"  \n\"HOSPITAL_8\"  \n\"HOSPITAL_9\"  \n\"SCR_Dumpster\"  \n\"BigHitByVehicle\"  \n\"SCR_Finale_Michael_Face\"  \n\"SCR_Franklin_finb\"  \n\"SCR_Finale_Michael\"  \n\"SCR_Franklin_finb2\"  \n\"Explosion_Med\"  \n\"SCR_Torture\"  \n\"SCR_TracySplash\"  \n\"Skin_Melee_0\"  \nAdditional damage packs:  \ngist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "AttachSynchronizedSceneToEntity",
    "hash": "0x272E4723B56A3B96",
    "code": "-- ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY\nAttachSynchronizedSceneToEntity(\n\tsceneID --[[ integer ]], \n\tentity --[[ Entity ]], \n\tboneIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "BlockPedDeadBodyShockingEvents",
    "hash": "0xE43A13C9E4CCCBCF",
    "code": "-- _BLOCK_PED_DEAD_BODY_SHOCKING_EVENTS\nBlockPedDeadBodyShockingEvents(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanCreateRandomBikeRider",
    "hash": "0xEACEEDA81751915C",
    "code": "-- CAN_CREATE_RANDOM_BIKE_RIDER\nlocal retval --[[ boolean ]] =\n\tCanCreateRandomBikeRider()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanCreateRandomCops",
    "hash": "0x5EE2CAFF7F17770D",
    "code": "-- CAN_CREATE_RANDOM_COPS\nlocal retval --[[ boolean ]] =\n\tCanCreateRandomCops()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanCreateRandomDriver",
    "hash": "0xB8EB95E5B4E56978",
    "code": "-- CAN_CREATE_RANDOM_DRIVER\nlocal retval --[[ boolean ]] =\n\tCanCreateRandomDriver()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanCreateRandomPed",
    "hash": "0x3E8349C08E4B82E4",
    "code": "-- CAN_CREATE_RANDOM_PED\nlocal retval --[[ boolean ]] =\n\tCanCreateRandomPed(\n\t\tunk --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanKnockPedOffVehicle",
    "hash": "0x51AC07A44D4F5B8A",
    "code": "-- CAN_KNOCK_PED_OFF_VEHICLE\nlocal retval --[[ boolean ]] =\n\tCanKnockPedOffVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanPedInCombatSeeTarget",
    "hash": "0xEAD42DE3610D0721",
    "code": "-- CAN_PED_IN_COMBAT_SEE_TARGET\nlocal retval --[[ boolean ]] =\n\tCanPedInCombatSeeTarget(\n\t\tped --[[ Ped ]], \n\t\ttarget --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanPedRagdoll",
    "hash": "0x128F79EDCECE4FD5",
    "code": "-- CAN_PED_RAGDOLL\nlocal retval --[[ boolean ]] =\n\tCanPedRagdoll(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Prevents the ped from going limp.  \n[Example: Can prevent peds from falling when standing on moving vehicles.]"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CanPedSeeHatedPed",
    "hash": "0x6CD5A433374D4CFB",
    "code": "-- CAN_PED_SEE_HATED_PED\nlocal retval --[[ boolean ]] =\n\tCanPedSeeHatedPed(\n\t\tped1 --[[ Ped ]], \n\t\tped2 --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearAllPedProps",
    "hash": "0xCD8A7537A9B52F06",
    "code": "-- CLEAR_ALL_PED_PROPS\nClearAllPedProps(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearAllPedVehicleForcedSeatUsage",
    "hash": "0xE6CA85E7259CE16B",
    "code": "-- CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE\nClearAllPedVehicleForcedSeatUsage(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearFacialClipsetOverride",
    "hash": "0x637822DC2AFEEBF8",
    "code": "-- _CLEAR_FACIAL_CLIPSET_OVERRIDE\nClearFacialClipsetOverride(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearFacialIdleAnimOverride",
    "hash": "0x726256CC1EEB182F",
    "code": "-- CLEAR_FACIAL_IDLE_ANIM_OVERRIDE\nClearFacialIdleAnimOverride(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedAlternateMovementAnim",
    "hash": "0xD8D19675ED5FBDCE",
    "code": "-- CLEAR_PED_ALTERNATE_MOVEMENT_ANIM\nClearPedAlternateMovementAnim(\n\tped --[[ Ped ]], \n\tstance --[[ integer ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedAlternateWalkAnim",
    "hash": "0x8844BBFCE30AA9E9",
    "code": "-- CLEAR_PED_ALTERNATE_WALK_ANIM\nClearPedAlternateWalkAnim(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedBloodDamage",
    "hash": "0x8FE22675A5A45817",
    "code": "-- CLEAR_PED_BLOOD_DAMAGE\nClearPedBloodDamage(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nPed id."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id.\n\nClears the blood on a ped."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedBloodDamageByZone",
    "hash": "0x56E3B78C5408D9F4",
    "code": "-- CLEAR_PED_BLOOD_DAMAGE_BY_ZONE\nClearPedBloodDamageByZone(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Somehow related to changing ped's clothes."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedCoverClipsetOverride",
    "hash": "0xC79196DCB36F6121",
    "code": "-- _CLEAR_PED_COVER_CLIPSET_OVERRIDE\nClearPedCoverClipsetOverride(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "CLEAR_PED_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedDamageDecalByZone",
    "hash": "0x523C79AEEFCC4A2A",
    "code": "-- CLEAR_PED_DAMAGE_DECAL_BY_ZONE\nClearPedDamageDecalByZone(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1: from 0 to 5 in the b617d scripts.  \np2: \"blushing\" and \"ALL\" found in the b617d scripts."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedDecorations",
    "hash": "0x0E5173C163976E38",
    "code": "-- CLEAR_PED_DECORATIONS\nClearPedDecorations(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedDecorationsLeaveScars",
    "hash": "0xE3B27E70CEAB9F0C",
    "code": "-- CLEAR_PED_DECORATIONS_LEAVE_SCARS\nClearPedDecorationsLeaveScars(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedDriveByClipsetOverride",
    "hash": "0x4AFE3690D7E0B5AC",
    "code": "-- CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE\nClearPedDriveByClipsetOverride(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedEnvDirt",
    "hash": "0x6585D955A68452A5",
    "code": "-- CLEAR_PED_ENV_DIRT\nClearPedEnvDirt(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedLastDamageBone",
    "hash": "0x8EF6B7AC68E2F01B",
    "code": "-- CLEAR_PED_LAST_DAMAGE_BONE\nClearPedLastDamageBone(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedNonCreationArea",
    "hash": "0x2E05208086BA0651",
    "code": "-- CLEAR_PED_NON_CREATION_AREA\nClearPedNonCreationArea()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedParachutePackVariation",
    "hash": "0x1280804F7CFD2D6C",
    "code": "-- CLEAR_PED_PARACHUTE_PACK_VARIATION\nClearPedParachutePackVariation(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedProp",
    "hash": "0x0943E5B8E078E76E",
    "code": "-- CLEAR_PED_PROP\nClearPedProp(\n\tped --[[ Ped ]], \n\tpropId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "propId: \n\nThe prop id you want to clear from the ped. Refer to SET_PED_PROP_INDEX."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\npropId: \n\nThe prop id you want to clear from the ped. Refer to SET_PED_PROP_INDEX."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedScubaGearVariation",
    "hash": "0xB50EB4CCB29704AC",
    "code": "-- CLEAR_PED_SCUBA_GEAR_VARIATION\nClearPedScubaGearVariation(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to remove the scuba gear from."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to remove the scuba gear from.\n\nRemoves the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedStoredHatProp",
    "hash": "0x687C0B594907D2E8",
    "code": "-- CLEAR_PED_STORED_HAT_PROP\nClearPedStoredHatProp(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearPedWetness",
    "hash": "0x9C720776DAA43E7E",
    "code": "-- CLEAR_PED_WETNESS\nClearPedWetness(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearRagdollBlockingFlags",
    "hash": "0xD86D101FCFD00A4B",
    "code": "-- CLEAR_RAGDOLL_BLOCKING_FLAGS\nClearRagdollBlockingFlags(\n\tped --[[ Ped ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "There seem to be 26 flags"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClearRelationshipBetweenGroups",
    "hash": "0x5E29243FB56FC6D4",
    "code": "-- CLEAR_RELATIONSHIP_BETWEEN_GROUPS\nClearRelationshipBetweenGroups(\n\trelationship --[[ integer ]], \n\tgroup1 --[[ Hash ]], \n\tgroup2 --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Clears the relationship between two groups. This should be called twice (once for each group).  \nRelationship types:  \n0 = Companion  \n1 = Respect  \n2 = Like  \n3 = Neutral  \n4 = Dislike  \n5 = Hate  \n255 = Pedestrians  \n(Credits: Inco)  \nExample:  \nPED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  \nPED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClonePed",
    "hash": "0xEF29A16337FACADB",
    "code": "-- CLONE_PED\nlocal retval --[[ Ped ]] =\n\tClonePed(\n\t\tped --[[ Ped ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tbScriptHostPed --[[ boolean ]], \n\t\tcopyHeadBlendFlag --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe input ped.",
      "isNetwork: \n\nWhether or not the ped should be registered as a network object.",
      "bScriptHostPed: \n\nScript host flag.",
      "copyHeadBlendFlag: \n\nIf true, head blend data is referenced, not copied."
    ],
    "returns": [
      "A new ped handle representing the ped's copy."
    ],
    "description": "Parameters:\n\nped: \n\nThe input ped.\n\nisNetwork: \n\nWhether or not the ped should be registered as a network object.\n\nbScriptHostPed: \n\nScript host flag.\n\ncopyHeadBlendFlag: \n\nIf true, head blend data is referenced, not copied.\n\nReturns:\n\nA new ped handle representing the ped's copy.\n\nCreates a copy of the passed ped, optionally setting it as local and/or shallow-copying the head blend data."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClonePedEx",
    "hash": "0x668FD40BCBA5DE48",
    "code": "-- _CLONE_PED_EX\nlocal retval --[[ Ped ]] =\n\tClonePedEx(\n\t\tped --[[ Ped ]], \n\t\theading --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tbScriptHostPed --[[ boolean ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used one time in fmmc_launcher.c instead of CLONE_PED because ?"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClonePedToTarget",
    "hash": "0xE952D6431689AD9A",
    "code": "-- CLONE_PED_TO_TARGET\nClonePedToTarget(\n\tped --[[ Ped ]], \n\ttargetPed --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Copies ped's components and props to targetPed."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ClonePedToTargetEx",
    "hash": "0x148B08C2D2ACB884",
    "code": "-- _CLONE_PED_TO_TARGET_EX\nClonePedToTargetEx(\n\tped --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreateGroup",
    "hash": "0x90370EBE0FEE1A3D",
    "code": "-- CREATE_GROUP\nlocal retval --[[ integer ]] =\n\tCreateGroup(\n\t\tunused --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Creates a new ped group.  \nGroups can contain up to 8 peds.  \nThe parameter is unused.  \nReturns a handle to the created group, or 0 if a group couldn't be created."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreateNmMessage",
    "hash": "0x418EF2A1BCE56685",
    "code": "-- CREATE_NM_MESSAGE\nCreateNmMessage(\n\tstartImmediately --[[ boolean ]], \n\tmessageId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Creates a new NaturalMotion message.  \nstartImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.  \nmessageId: The ID of the NaturalMotion message.  \nIf a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreateParachuteBagObject",
    "hash": "0x8C4F3BF23B6237DB",
    "code": "-- CREATE_PARACHUTE_BAG_OBJECT\nlocal retval --[[ Object ]] =\n\tCreateParachuteBagObject(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreatePed",
    "hash": "0xD49F9B0955C367DE",
    "code": "-- CREATE_PED\nlocal retval --[[ Ped ]] =\n\tCreatePed(\n\t\tpedType --[[ integer ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\theading --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tbScriptHostPed --[[ boolean ]]\n\t)",
    "parameters": [
      "pedType: \n\nUnused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.",
      "modelHash: \n\nThe model of ped to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "heading: \n\nHeading to face towards, in degrees.",
      "isNetwork: \n\nWhether to create a network object for the ped. If false, the ped exists only locally.",
      "bScriptHostPed: \n\nWhether to register the ped as pinned to the script host in the R* network model."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the ped, or 0 if the ped failed to be created."
    ],
    "description": "Parameters:\n\npedType: \n\nUnused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.\n\nmodelHash: \n\nThe model of ped to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nheading: \n\nHeading to face towards, in degrees.\n\nisNetwork: \n\nWhether to create a network object for the ped. If false, the ped exists only locally.\n\nbScriptHostPed: \n\nWhether to register the ped as pinned to the script host in the R* network model.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the ped, or 0 if the ped failed to be created.\n\nCreates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading. This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL)."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreatePedInsideVehicle",
    "hash": "0x7DD959874C1FD534",
    "code": "-- CREATE_PED_INSIDE_VEHICLE\nlocal retval --[[ Ped ]] =\n\tCreatePedInsideVehicle(\n\t\tvehicle --[[ Vehicle ]], \n\t\tpedType --[[ integer ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tseat --[[ integer ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tbScriptHostPed --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreateRandomPed",
    "hash": "0xB4AC7D0CF06BFE8F",
    "code": "-- CREATE_RANDOM_PED\nlocal retval --[[ Ped ]] =\n\tCreateRandomPed(\n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "vb.net\nDim ped_handle As Integer\n                    With Game.Player.Character\n                        Dim pos As Vector3 = .Position + .ForwardVector * 3\n                        ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)\n                    End With\nCreates a Ped at the specified location, returns the Ped Handle.\nPed will not act until SET_PED_AS_NO_LONGER_NEEDED is called."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreateRandomPedAsDriver",
    "hash": "0x9B62392B474F44A0",
    "code": "-- CREATE_RANDOM_PED_AS_DRIVER\nlocal retval --[[ Ped ]] =\n\tCreateRandomPedAsDriver(\n\t\tvehicle --[[ Vehicle ]], \n\t\treturnHandle --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreateSynchronizedScene",
    "hash": "0x8C18E0F9080ADD73",
    "code": "-- CREATE_SYNCHRONIZED_SCENE\nlocal retval --[[ integer ]] =\n\tCreateSynchronizedScene(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\troll --[[ number ]], \n\t\tpitch --[[ number ]], \n\t\tyaw --[[ number ]], \n\t\tp6 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p6 always 2 (but it doesnt seem to matter...)  \nroll and pitch 0  \nyaw to Ped.rotation"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "CreateSynchronizedScene_2",
    "hash": "0x62EC273D00187DCA",
    "code": "-- _CREATE_SYNCHRONIZED_SCENE_2\nlocal retval --[[ integer ]] =\n\tCreateSynchronizedScene_2(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tobject --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DeletePed",
    "hash": "0x9614299DCB53E54B",
    "code": "-- DELETE_PED\nlocal ped --[[ Ped ]] =\n\tDeletePed()",
    "parameters": [],
    "returns": [],
    "description": "Deletes the specified ped, then sets the handle pointed to by the pointer to NULL."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DetachSynchronizedScene",
    "hash": "0x6D38F1F04CBB37EA",
    "code": "-- DETACH_SYNCHRONIZED_SCENE\nDetachSynchronizedScene(\n\tsceneID --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DisableHeadBlendPaletteColor",
    "hash": "0xA21C118553BBDF02",
    "code": "-- DISABLE_HEAD_BLEND_PALETTE_COLOR\nDisableHeadBlendPaletteColor(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DisablePedHeatscaleOverride",
    "hash": "0x600048C60D5C2C51",
    "code": "-- DISABLE_PED_HEATSCALE_OVERRIDE\nDisablePedHeatscaleOverride(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DoesGroupExist",
    "hash": "0x7C6B0C22F9F40BBE",
    "code": "-- DOES_GROUP_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesGroupExist(\n\t\tgroupId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DoesRelationshipGroupExist",
    "hash": "0xCC6E3B6BB69501F1",
    "code": "-- _DOES_RELATIONSHIP_GROUP_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesRelationshipGroupExist(\n\t\tgroupHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DoesScenarioBlockingAreaExist",
    "hash": "0x8A24B067D175A7BD",
    "code": "-- _DOES_SCENARIO_BLOCKING_AREA_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesScenarioBlockingAreaExist(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "DropAmbientProp",
    "hash": "0xAFF4710E2A0A6C12",
    "code": "-- DROP_AMBIENT_PROP\nDropAmbientProp(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ExplodePedHead",
    "hash": "0x2D05CED3A38D0F3A",
    "code": "-- EXPLODE_PED_HEAD\nExplodePedHead(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to lethally injure.",
      "weaponHash: \n\nThe weapon to attribute the damage to."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to lethally injure.\n\nweaponHash: \n\nThe weapon to attribute the damage to.\n\nApplies lethal damage (FLT_MAX) to the SKEL_Head bone of the specified ped using the weapon passed, leading to the ped's untimely demise.\n\nThe naming of the native is a legacy leftover (formerly EXPLODE_CHAR_HEAD in GTA3) as in the early 3D GTA games, lethal damage to a ped head would 'explode' it.\n\nDo note that this native function does not work in multiplayer/network environment."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "FinalizeHeadBlend",
    "hash": "0x4668D80430D6C299",
    "code": "-- FINALIZE_HEAD_BLEND\nFinalizeHeadBlend(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ForcePedAiAndAnimationUpdate",
    "hash": "0x2208438012482A1A",
    "code": "-- FORCE_PED_AI_AND_ANIMATION_UPDATE\nForcePedAiAndAnimationUpdate(\n\tped --[[ Ped ]], \n\tforceAiPreCameraUpdate --[[ boolean ]], \n\tforceZeroTimestep --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces an instant ped AI and Animation update. Use this if your transitions between animations (especially secondary upper body animations) are janky or not smooth. Do note this is an expensive function."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ForcePedMotionState",
    "hash": "0xF28965D04F570DCA",
    "code": "-- FORCE_PED_MOTION_STATE\nlocal retval --[[ boolean ]] =\n\tForcePedMotionState(\n\t\tped --[[ Ped ]], \n\t\tmotionStateHash --[[ Hash ]], \n\t\tshouldReset --[[ boolean ]], \n\t\tupdateState --[[ integer ]], \n\t\tforceAIPreCameraUpdate --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "motionStateHash: \n\nThe motion state hash.",
      "shouldReset: \n\nIf the motion state should be set even if the ped is already in the specified motion state.",
      "updateState: \n\nInteger but treated as a boolean (only allows 1 or 0). Sets ped reset flags CPED_RESET_FLAG_ForcePreCameraAiAnimUpdateIfFirstPerson and CPED_RESET_FLAG_ForcePostCameraAnimUpdate.",
      "forceAIPreCameraUpdate: \n\nIf updateState is 1, will set either CPED_RESET_FLAG_ForcePreCameraAIUpdate (if true) or CPED_RESET_FLAG_ForcePostCameraAIUpdate (if false) ped reset flags."
    ],
    "returns": [
      "Whether or not the motion state was forced on the ped successfully."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nmotionStateHash: \n\nThe motion state hash.\n\nshouldReset: \n\nIf the motion state should be set even if the ped is already in the specified motion state.\n\nupdateState: \n\nInteger but treated as a boolean (only allows 1 or 0). Sets ped reset flags CPED_RESET_FLAG_ForcePreCameraAiAnimUpdateIfFirstPerson and CPED_RESET_FLAG_ForcePostCameraAnimUpdate.\n\nforceAIPreCameraUpdate: \n\nIf updateState is 1, will set either CPED_RESET_FLAG_ForcePreCameraAIUpdate (if true) or CPED_RESET_FLAG_ForcePostCameraAIUpdate (if false) ped reset flags.\n\nReturns:\n\nWhether or not the motion state was forced on the ped successfully.\n\nenum ePedMotionState\n{\n    MOTIONSTATE_NONE = -294553821, // MotionState_None\n    MOTIONSTATE_IDLE = -1871534317, // MotionState_Idle\n    MOTIONSTATE_WALK = -668482597, // MotionState_Walk\n    MOTIONSTATE_RUN = -530524, // MotionState_Run\n    MOTIONSTATE_SPRINT = -1115154469, // MotionState_Sprint\n    MOTIONSTATE_CROUCH_IDLE = 1140525470, // MotionState_Crouch_Idle\n    MOTIONSTATE_CROUCH_WALK = 147004056, // MotionState_Crouch_Walk\n    MOTIONSTATE_CROUCH_RUN = 898879241, // MotionState_Crouch_Run\n    MOTIONSTATE_DONOTHING = 247561816, // MotionState_DoNothing\n    MOTIONSTATE_ANIMATEDVELOCITY = 1427811395, // MotionState_AnimatedVelocity\n    MOTIONSTATE_INVEHICLE = -1797663347, // MotionState_InVehicle\n    MOTIONSTATE_AIMING = 1063765679, // MotionState_Aiming\n    MOTIONSTATE_DIVING_IDLE = 1212730861, // MotionState_Diving_Idle\n    MOTIONSTATE_DIVING_SWIM = -1855028596, // MotionState_Diving_Swim\n    MOTIONSTATE_SWIMMING_TREADWATER = -776007225, // MotionState_Swimming_TreadWater\n    MOTIONSTATE_DEAD = 230360860, // MotionState_Dead\n    MOTIONSTATE_STEALTH_IDLE = 1110276645, // MotionState_Stealth_Idle\n    MOTIONSTATE_STEALTH_WALK = 69908130, // MotionState_Stealth_Walk\n    MOTIONSTATE_STEALTH_RUN = -83133983, // MotionState_Stealth_Run\n    MOTIONSTATE_PARACHUTING = -1161760501, // MotionState_Parachuting\n    MOTIONSTATE_ACTIONMODE_IDLE = -633298724, // MotionState_ActionMode_Idle\n    MOTIONSTATE_ACTIONMODE_WALK = -762290521, // MotionState_ActionMode_Walk\n    MOTIONSTATE_ACTIONMODE_RUN = 834330132, // MotionState_ActionMode_Run\n    MOTIONSTATE_JETPACK = 1398696542 // MotionState_Jetpack\n}"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ForcePedToOpenParachute",
    "hash": "0x16E42E800B472221",
    "code": "-- FORCE_PED_TO_OPEN_PARACHUTE\nForcePedToOpenParachute(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "FreezePedCameraRotation",
    "hash": "0xFF287323B0E2C69A",
    "code": "-- _FREEZE_PED_CAMERA_ROTATION\nFreezePedCameraRotation(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetAnimInitialOffsetPosition",
    "hash": "0xBE22B26DD764C040",
    "code": "-- GET_ANIM_INITIAL_OFFSET_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetAnimInitialOffsetPosition(\n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tp8 --[[ number ]], \n\t\tp9 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetAnimInitialOffsetRotation",
    "hash": "0x4B805E6046EE9E47",
    "code": "-- GET_ANIM_INITIAL_OFFSET_ROTATION\nlocal retval --[[ vector3 ]] =\n\tGetAnimInitialOffsetRotation(\n\t\tanimDict --[[ string ]], \n\t\tanimName --[[ string ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\txRot --[[ number ]], \n\t\tyRot --[[ number ]], \n\t\tzRot --[[ number ]], \n\t\tp8 --[[ number ]], \n\t\tp9 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetClosestPed",
    "hash": "0xC33AB876A77F8164",
    "code": "-- GET_CLOSEST_PED\nlocal retval --[[ boolean ]], outPed --[[ Ped ]] =\n\tGetClosestPed(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ boolean ]], \n\t\tp7 --[[ boolean ]], \n\t\tp8 --[[ boolean ]], \n\t\tpedType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the closest ped in a radius.  \nPed Types:  \nAny ped = -1  \nPlayer = 1  \nMale = 4   \nFemale = 5   \nCop = 6  \nHuman = 26  \nSWAT = 27   \nAnimal = 28  \nArmy = 29  \n------------------  \nP4 P5 P7 P8  \n1  0  x  x  = return nearest walking Ped  \n1  x  0  x  = return nearest walking Ped  \nx  1  1  x  = return Ped you are using  \n0  0  x  x  = no effect  \n0  x  0  x  = no effect  \nx = can be 1 or 0. Does not have any obvious changes.  \nThis function does not return ped who is:  \n1. Standing still  \n2. Driving  \n3. Fleeing  \n4. Attacking  \nThis function only work if the ped is:  \n1. walking normally.  \n2. waiting to cross a road.  \nNote: PED::GET_PED_NEARBY_PEDS works for more peds."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetCombatFloat",
    "hash": "0x52DFF8A10508090A",
    "code": "-- GET_COMBAT_FLOAT\nlocal retval --[[ number ]] =\n\tGetCombatFloat(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p0: Ped Handle  \np1: int i | 0 <= i <= 27  \np1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:  \n<BlindFireChance value=\"0.1\"/>  \n<WeaponShootRateModifier value=\"1.0\"/>  \n<TimeBetweenBurstsInCover value=\"1.25\"/>  \n<BurstDurationInCover value=\"2.0\"/>  \n<TimeBetweenPeeks value=\"10.0\"/>  \n<WeaponAccuracy value=\"0.18\"/>  \n<FightProficiency value=\"0.8\"/>  \n<StrafeWhenMovingChance value=\"1.0\"/>  \n<WalkWhenStrafingChance value=\"0.0\"/>  \n<AttackWindowDistanceForCover value=\"55.0\"/>  \n<TimeToInvalidateInjuredTarget value=\"9.0\"/>  \n<TriggerChargeTime_Near value=\"4.0\"/>  \n<TriggerChargeTime_Far value=\"10.0\"/>  \n-------------Confirmed by editing combatbehavior.meta:  \np1:  \n0=BlindFireChance  \n1=BurstDurationInCover  \n3=TimeBetweenBurstsInCover  \n4=TimeBetweenPeeks  \n5=StrafeWhenMovingChance  \n8=WalkWhenStrafingChance  \n11=AttackWindowDistanceForCover  \n12=TimeToInvalidateInjuredTarget  \n16=OptimalCoverDistance"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetDeadPedPickupCoords",
    "hash": "0xCD5003B097200F36",
    "code": "-- GET_DEAD_PED_PICKUP_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetDeadPedPickupCoords(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetGroupSize",
    "hash": "0x8DE69FE35CA09A45",
    "code": "-- GET_GROUP_SIZE\nlocal unknown --[[ Any ]], sizeInMembers --[[ integer ]] =\n\tGetGroupSize(\n\t\tgroupID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 may be a BOOL representing whether or not the group even exists"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetJackTarget",
    "hash": "0x5486A79D9FBD342D",
    "code": "-- GET_JACK_TARGET\nlocal retval --[[ Ped ]] =\n\tGetJackTarget(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetMeleeTargetForPed",
    "hash": "0x18A3E9EE1297FD39",
    "code": "-- GET_MELEE_TARGET_FOR_PED\nlocal retval --[[ Ped ]] =\n\tGetMeleeTargetForPed(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetMount",
    "hash": "0xE7E11B8DCBED1058",
    "code": "-- GET_MOUNT\nlocal retval --[[ Ped ]] =\n\tGetMount(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Function just returns 0  \nvoid __fastcall ped__get_mount(NativeContext *a1)  \n{  \n  NativeContext *v1; // rbx@1  \n  v1 = a1;  \n  GetAddressOfPedFromScriptHandle(a1->Args->Arg1);  \n  v1->Returns->Item1= 0;  \n}"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetNumHairColors",
    "hash": "0xE5C0CF872C2AD150",
    "code": "-- _GET_NUM_HAIR_COLORS\nlocal retval --[[ integer ]] =\n\tGetNumHairColors()",
    "parameters": [],
    "returns": [],
    "description": "Used for freemode (online) characters."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetNumMakeupColors",
    "hash": "0xD1F7CA1535D22818",
    "code": "-- _GET_NUM_MAKEUP_COLORS\nlocal retval --[[ integer ]] =\n\tGetNumMakeupColors()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetNumberOfPedDrawableVariations",
    "hash": "0x27561561732A7842",
    "code": "-- GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedDrawableVariations(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component id you want to get the drawable variatons of. Refer to SET_PED_COMPONENT_VARIATION"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component id you want to get the drawable variatons of. Refer to SET_PED_COMPONENT_VARIATION"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetNumberOfPedPropDrawableVariations",
    "hash": "0x5FAF9754E789FB47",
    "code": "-- GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedPropDrawableVariations(\n\t\tped --[[ Ped ]], \n\t\tpropId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "propId: \n\nThe prop id you want to get the drawable variations of. Refer to SET_PED_PROP_INDEX"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\npropId: \n\nThe prop id you want to get the drawable variations of. Refer to SET_PED_PROP_INDEX"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetNumberOfPedPropTextureVariations",
    "hash": "0xA6E7F1CEB523E171",
    "code": "-- GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedPropTextureVariations(\n\t\tped --[[ Ped ]], \n\t\tpropId --[[ integer ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "propId: \n\nThe prop id you want to get the texture variations of. Refer to SET_PED_PROP_INDEX",
      "drawableId: \n\nThe drawable id of the prop you want to get the texture variations of. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\npropId: \n\nThe prop id you want to get the texture variations of. Refer to SET_PED_PROP_INDEX\n\ndrawableId: \n\nThe drawable id of the prop you want to get the texture variations of. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.\n\nNeed to check behavior when drawableId = -1"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetNumberOfPedTextureVariations",
    "hash": "0x8F7156A3142A6BAD",
    "code": "-- GET_NUMBER_OF_PED_TEXTURE_VARIATIONS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPedTextureVariations(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tdrawableId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component id you want to get the texture variations of. Refer to SET_PED_COMPONENT_VARIATION.",
      "drawableId: \n\nThe drawable id of the component you want to get the texture variations of. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component id you want to get the texture variations of. Refer to SET_PED_COMPONENT_VARIATION.\n\ndrawableId: \n\nThe drawable id of the component you want to get the texture variations of. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedAccuracy",
    "hash": "0x37F4AD56ECBC0CD6",
    "code": "-- GET_PED_ACCURACY\nlocal retval --[[ integer ]] =\n\tGetPedAccuracy(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedAlertness",
    "hash": "0xF6AA118530443FD2",
    "code": "-- GET_PED_ALERTNESS\nlocal retval --[[ integer ]] =\n\tGetPedAlertness(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the ped's alertness (0-3).  \nValues :   \n0 : Neutral  \n1 : Heard something (gun shot, hit, etc)  \n2 : Knows (the origin of the event)  \n3 : Fully alerted (is facing the event?)  \nIf the Ped does not exist, returns -1."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedArmour",
    "hash": "0x9483AF821605B1D8",
    "code": "-- GET_PED_ARMOUR\nlocal retval --[[ integer ]] =\n\tGetPedArmour(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedAsGroupLeader",
    "hash": "0x5CCE68DBD5FE93EC",
    "code": "-- GET_PED_AS_GROUP_LEADER\nlocal retval --[[ Ped ]] =\n\tGetPedAsGroupLeader(\n\t\tgroupID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedAsGroupMember",
    "hash": "0x51455483CF23ED97",
    "code": "-- GET_PED_AS_GROUP_MEMBER\nlocal retval --[[ Ped ]] =\n\tGetPedAsGroupMember(\n\t\tgroupID --[[ integer ]], \n\t\tmemberNumber --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "from fm_mission_controller.c4 (variable names changed for clarity):  \nint groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());  \nPED::GET_GROUP_SIZE(group, &unused, &groupSize);  \nif (groupSize >= 1) {  \n. . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {  \n. . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);  \n. . . . . . . . //and so on"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedBoneCoords",
    "hash": "0x17C07FC640E86B4E",
    "code": "-- GET_PED_BONE_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetPedBoneCoords(\n\t\tped --[[ Ped ]], \n\t\tboneId --[[ integer ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the position of the specified bone of the specified ped.  \nped: The ped to get the position of a bone from.  \nboneId: The ID of the bone to get the position from. This is NOT the index.  \noffsetX: The X-component of the offset to add to the position relative to the bone's rotation.  \noffsetY: The Y-component of the offset to add to the position relative to the bone's rotation.  \noffsetZ: The Z-component of the offset to add to the position relative to the bone's rotation."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedBoneIndex",
    "hash": "0x3F428D08BE5AAE31",
    "code": "-- GET_PED_BONE_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedBoneIndex(\n\t\tped --[[ Ped ]], \n\t\tboneId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "enum ePedBoneId : uint16_t\n{\n    SKEL_ROOT = 0x0,\n    SKEL_Pelvis = 0x2E28,\n    SKEL_L_Thigh = 0xE39F,\n    SKEL_L_Calf = 0xF9BB,\n    SKEL_L_Foot = 0x3779,\n    SKEL_L_Toe0 = 0x83C,\n    EO_L_Foot = 0x84C5,\n    EO_L_Toe = 0x68BD,\n    IK_L_Foot = 0xFEDD,\n    PH_L_Foot = 0xE175,\n    MH_L_Knee = 0xB3FE,\n    SKEL_R_Thigh = 0xCA72,\n    SKEL_R_Calf = 0x9000,\n    SKEL_R_Foot = 0xCC4D,\n    SKEL_R_Toe0 = 0x512D,\n    EO_R_Foot = 0x1096,\n    EO_R_Toe = 0x7163,\n    IK_R_Foot = 0x8AAE,\n    PH_R_Foot = 0x60E6,\n    MH_R_Knee = 0x3FCF,\n    RB_L_ThighRoll = 0x5C57,\n    RB_R_ThighRoll = 0x192A,\n    SKEL_Spine_Root = 0xE0FD,\n    SKEL_Spine0 = 0x5C01,\n    SKEL_Spine1 = 0x60F0,\n    SKEL_Spine2 = 0x60F1,\n    SKEL_Spine3 = 0x60F2,\n    SKEL_L_Clavicle = 0xFCD9,\n    SKEL_L_UpperArm = 0xB1C5,\n    SKEL_L_Forearm = 0xEEEB,\n    SKEL_L_Hand = 0x49D9,\n    SKEL_L_Finger00 = 0x67F2,\n    SKEL_L_Finger01 = 0xFF9,\n    SKEL_L_Finger02 = 0xFFA,\n    SKEL_L_Finger10 = 0x67F3,\n    SKEL_L_Finger11 = 0x1049,\n    SKEL_L_Finger12 = 0x104A,\n    SKEL_L_Finger20 = 0x67F4,\n    SKEL_L_Finger21 = 0x1059,\n    SKEL_L_Finger22 = 0x105A,\n    SKEL_L_Finger30 = 0x67F5,\n    SKEL_L_Finger31 = 0x1029,\n    SKEL_L_Finger32 = 0x102A,\n    SKEL_L_Finger40 = 0x67F6,\n    SKEL_L_Finger41 = 0x1039,\n    SKEL_L_Finger42 = 0x103A,\n    PH_L_Hand = 0xEB95,\n    IK_L_Hand = 0x8CBD,\n    RB_L_ForeArmRoll = 0xEE4F,\n    RB_L_ArmRoll = 0x1470,\n    MH_L_Elbow = 0x58B7,\n    SKEL_R_Clavicle = 0x29D2,\n    SKEL_R_UpperArm = 0x9D4D,\n    SKEL_R_Forearm = 0x6E5C,\n    SKEL_R_Hand = 0xDEAD,\n    SKEL_R_Finger00 = 0xE5F2,\n    SKEL_R_Finger01 = 0xFA10,\n    SKEL_R_Finger02 = 0xFA11,\n    SKEL_R_Finger10 = 0xE5F3,\n    SKEL_R_Finger11 = 0xFA60,\n    SKEL_R_Finger12 = 0xFA61,\n    SKEL_R_Finger20 = 0xE5F4,\n    SKEL_R_Finger21 = 0xFA70,\n    SKEL_R_Finger22 = 0xFA71,\n    SKEL_R_Finger30 = 0xE5F5,\n    SKEL_R_Finger31 = 0xFA40,\n    SKEL_R_Finger32 = 0xFA41,\n    SKEL_R_Finger40 = 0xE5F6,\n    SKEL_R_Finger41 = 0xFA50,\n    SKEL_R_Finger42 = 0xFA51,\n    PH_R_Hand = 0x6F06,\n    IK_R_Hand = 0x188E,\n    RB_R_ForeArmRoll = 0xAB22,\n    RB_R_ArmRoll = 0x90FF,\n    MH_R_Elbow = 0xBB0,\n    SKEL_Neck_1 = 0x9995,\n    SKEL_Head = 0x796E,\n    IK_Head = 0x322C,\n    FACIAL_facialRoot = 0xFE2C,\n    FB_L_Brow_Out_000 = 0xE3DB,\n    FB_L_Lid_Upper_000 = 0xB2B6,\n    FB_L_Eye_000 = 0x62AC,\n    FB_L_CheekBone_000 = 0x542E,\n    FB_L_Lip_Corner_000 = 0x74AC,\n    FB_R_Lid_Upper_000 = 0xAA10,\n    FB_R_Eye_000 = 0x6B52,\n    FB_R_CheekBone_000 = 0x4B88,\n    FB_R_Brow_Out_000 = 0x54C,\n    FB_R_Lip_Corner_000 = 0x2BA6,\n    FB_Brow_Centre_000 = 0x9149,\n    FB_UpperLipRoot_000 = 0x4ED2,\n    FB_UpperLip_000 = 0xF18F,\n    FB_L_Lip_Top_000 = 0x4F37,\n    FB_R_Lip_Top_000 = 0x4537,\n    FB_Jaw_000 = 0xB4A0,\n    FB_LowerLipRoot_000 = 0x4324,\n    FB_LowerLip_000 = 0x508F,\n    FB_L_Lip_Bot_000 = 0xB93B,\n    FB_R_Lip_Bot_000 = 0xC33B,\n    FB_Tongue_000 = 0xB987,\n    RB_Neck_1 = 0x8B93,\n    SPR_L_Breast = 0xFC8E,\n    SPR_R_Breast = 0x885F,\n    IK_Root = 0xDD1C,\n    SKEL_Neck_2 = 0x5FD4,\n    SKEL_Pelvis1 = 0xD003,\n    SKEL_PelvisRoot = 0x45FC,\n    SKEL_SADDLE = 0x9524,\n    MH_L_CalfBack = 0x1013,\n    MH_L_ThighBack = 0x600D,\n    SM_L_Skirt = 0xC419,\n    MH_R_CalfBack = 0xB013,\n    MH_R_ThighBack = 0x51A3,\n    SM_R_Skirt = 0x7712,\n    SM_M_BackSkirtRoll = 0xDBB,\n    SM_L_BackSkirtRoll = 0x40B2,\n    SM_R_BackSkirtRoll = 0xC141,\n    SM_M_FrontSkirtRoll = 0xCDBB,\n    SM_L_FrontSkirtRoll = 0x9B69,\n    SM_R_FrontSkirtRoll = 0x86F1,\n    SM_CockNBalls_ROOT = 0xC67D,\n    SM_CockNBalls = 0x9D34,\n    MH_L_Finger00 = 0x8C63,\n    MH_L_FingerBulge00 = 0x5FB8,\n    MH_L_Finger10 = 0x8C53,\n    MH_L_FingerTop00 = 0xA244,\n    MH_L_HandSide = 0xC78A,\n    MH_Watch = 0x2738,\n    MH_L_Sleeve = 0x933C,\n    MH_R_Finger00 = 0x2C63,\n    MH_R_FingerBulge00 = 0x69B8,\n    MH_R_Finger10 = 0x2C53,\n    MH_R_FingerTop00 = 0xEF4B,\n    MH_R_HandSide = 0x68FB,\n    MH_R_Sleeve = 0x92DC,\n    FACIAL_jaw = 0xB21,\n    FACIAL_underChin = 0x8A95,\n    FACIAL_L_underChin = 0x234E,\n    FACIAL_chin = 0xB578,\n    FACIAL_chinSkinBottom = 0x98BC,\n    FACIAL_L_chinSkinBottom = 0x3E8F,\n    FACIAL_R_chinSkinBottom = 0x9E8F,\n    FACIAL_tongueA = 0x4A7C,\n    FACIAL_tongueB = 0x4A7D,\n    FACIAL_tongueC = 0x4A7E,\n    FACIAL_tongueD = 0x4A7F,\n    FACIAL_tongueE = 0x4A80,\n    FACIAL_L_tongueE = 0x35F2,\n    FACIAL_R_tongueE = 0x2FF2,\n    FACIAL_L_tongueD = 0x35F1,\n    FACIAL_R_tongueD = 0x2FF1,\n    FACIAL_L_tongueC = 0x35F0,\n    FACIAL_R_tongueC = 0x2FF0,\n    FACIAL_L_tongueB = 0x35EF,\n    FACIAL_R_tongueB = 0x2FEF,\n    FACIAL_L_tongueA = 0x35EE,\n    FACIAL_R_tongueA = 0x2FEE,\n    FACIAL_chinSkinTop = 0x7226,\n    FACIAL_L_chinSkinTop = 0x3EB3,\n    FACIAL_chinSkinMid = 0x899A,\n    FACIAL_L_chinSkinMid = 0x4427,\n    FACIAL_L_chinSide = 0x4A5E,\n    FACIAL_R_chinSkinMid = 0xF5AF,\n    FACIAL_R_chinSkinTop = 0xF03B,\n    FACIAL_R_chinSide = 0xAA5E,\n    FACIAL_R_underChin = 0x2BF4,\n    FACIAL_L_lipLowerSDK = 0xB9E1,\n    FACIAL_L_lipLowerAnalog = 0x244A,\n    FACIAL_L_lipLowerThicknessV = 0xC749,\n    FACIAL_L_lipLowerThicknessH = 0xC67B,\n    FACIAL_lipLowerSDK = 0x7285,\n    FACIAL_lipLowerAnalog = 0xD97B,\n    FACIAL_lipLowerThicknessV = 0xC5BB,\n    FACIAL_lipLowerThicknessH = 0xC5ED,\n    FACIAL_R_lipLowerSDK = 0xA034,\n    FACIAL_R_lipLowerAnalog = 0xC2D9,\n    FACIAL_R_lipLowerThicknessV = 0xC6E9,\n    FACIAL_R_lipLowerThicknessH = 0xC6DB,\n    FACIAL_nose = 0x20F1,\n    FACIAL_L_nostril = 0x7322,\n    FACIAL_L_nostrilThickness = 0xC15F,\n    FACIAL_noseLower = 0xE05A,\n    FACIAL_L_noseLowerThickness = 0x79D5,\n    FACIAL_R_noseLowerThickness = 0x7975,\n    FACIAL_noseTip = 0x6A60,\n    FACIAL_R_nostril = 0x7922,\n    FACIAL_R_nostrilThickness = 0x36FF,\n    FACIAL_noseUpper = 0xA04F,\n    FACIAL_L_noseUpper = 0x1FB8,\n    FACIAL_noseBridge = 0x9BA3,\n    FACIAL_L_nasolabialFurrow = 0x5ACA,\n    FACIAL_L_nasolabialBulge = 0xCD78,\n    FACIAL_L_cheekLower = 0x6907,\n    FACIAL_L_cheekLowerBulge1 = 0xE3FB,\n    FACIAL_L_cheekLowerBulge2 = 0xE3FC,\n    FACIAL_L_cheekInner = 0xE7AB,\n    FACIAL_L_cheekOuter = 0x8161,\n    FACIAL_L_eyesackLower = 0x771B,\n    FACIAL_L_eyeball = 0x1744,\n    FACIAL_L_eyelidLower = 0x998C,\n    FACIAL_L_eyelidLowerOuterSDK = 0xFE4C,\n    FACIAL_L_eyelidLowerOuterAnalog = 0xB9AA,\n    FACIAL_L_eyelashLowerOuter = 0xD7F6,\n    FACIAL_L_eyelidLowerInnerSDK = 0xF151,\n    FACIAL_L_eyelidLowerInnerAnalog = 0x8242,\n    FACIAL_L_eyelashLowerInner = 0x4CCF,\n    FACIAL_L_eyelidUpper = 0x97C1,\n    FACIAL_L_eyelidUpperOuterSDK = 0xAF15,\n    FACIAL_L_eyelidUpperOuterAnalog = 0x67FA,\n    FACIAL_L_eyelashUpperOuter = 0x27B7,\n    FACIAL_L_eyelidUpperInnerSDK = 0xD341,\n    FACIAL_L_eyelidUpperInnerAnalog = 0xF092,\n    FACIAL_L_eyelashUpperInner = 0x9B1F,\n    FACIAL_L_eyesackUpperOuterBulge = 0xA559,\n    FACIAL_L_eyesackUpperInnerBulge = 0x2F2A,\n    FACIAL_L_eyesackUpperOuterFurrow = 0xC597,\n    FACIAL_L_eyesackUpperInnerFurrow = 0x52A7,\n    FACIAL_forehead = 0x9218,\n    FACIAL_L_foreheadInner = 0x843,\n    FACIAL_L_foreheadInnerBulge = 0x767C,\n    FACIAL_L_foreheadOuter = 0x8DCB,\n    FACIAL_skull = 0x4221,\n    FACIAL_foreheadUpper = 0xF7D6,\n    FACIAL_L_foreheadUpperInner = 0xCF13,\n    FACIAL_L_foreheadUpperOuter = 0x509B,\n    FACIAL_R_foreheadUpperInner = 0xCEF3,\n    FACIAL_R_foreheadUpperOuter = 0x507B,\n    FACIAL_L_temple = 0xAF79,\n    FACIAL_L_ear = 0x19DD,\n    FACIAL_L_earLower = 0x6031,\n    FACIAL_L_masseter = 0x2810,\n    FACIAL_L_jawRecess = 0x9C7A,\n    FACIAL_L_cheekOuterSkin = 0x14A5,\n    FACIAL_R_cheekLower = 0xF367,\n    FACIAL_R_cheekLowerBulge1 = 0x599B,\n    FACIAL_R_cheekLowerBulge2 = 0x599C,\n    FACIAL_R_masseter = 0x810,\n    FACIAL_R_jawRecess = 0x93D4,\n    FACIAL_R_ear = 0x1137,\n    FACIAL_R_earLower = 0x8031,\n    FACIAL_R_eyesackLower = 0x777B,\n    FACIAL_R_nasolabialBulge = 0xD61E,\n    FACIAL_R_cheekOuter = 0xD32,\n    FACIAL_R_cheekInner = 0x737C,\n    FACIAL_R_noseUpper = 0x1CD6,\n    FACIAL_R_foreheadInner = 0xE43,\n    FACIAL_R_foreheadInnerBulge = 0x769C,\n    FACIAL_R_foreheadOuter = 0x8FCB,\n    FACIAL_R_cheekOuterSkin = 0xB334,\n    FACIAL_R_eyesackUpperInnerFurrow = 0x9FAE,\n    FACIAL_R_eyesackUpperOuterFurrow = 0x140F,\n    FACIAL_R_eyesackUpperInnerBulge = 0xA359,\n    FACIAL_R_eyesackUpperOuterBulge = 0x1AF9,\n    FACIAL_R_nasolabialFurrow = 0x2CAA,\n    FACIAL_R_temple = 0xAF19,\n    FACIAL_R_eyeball = 0x1944,\n    FACIAL_R_eyelidUpper = 0x7E14,\n    FACIAL_R_eyelidUpperOuterSDK = 0xB115,\n    FACIAL_R_eyelidUpperOuterAnalog = 0xF25A,\n    FACIAL_R_eyelashUpperOuter = 0xE0A,\n    FACIAL_R_eyelidUpperInnerSDK = 0xD541,\n    FACIAL_R_eyelidUpperInnerAnalog = 0x7C63,\n    FACIAL_R_eyelashUpperInner = 0x8172,\n    FACIAL_R_eyelidLower = 0x7FDF,\n    FACIAL_R_eyelidLowerOuterSDK = 0x1BD,\n    FACIAL_R_eyelidLowerOuterAnalog = 0x457B,\n    FACIAL_R_eyelashLowerOuter = 0xBE49,\n    FACIAL_R_eyelidLowerInnerSDK = 0xF351,\n    FACIAL_R_eyelidLowerInnerAnalog = 0xE13,\n    FACIAL_R_eyelashLowerInner = 0x3322,\n    FACIAL_L_lipUpperSDK = 0x8F30,\n    FACIAL_L_lipUpperAnalog = 0xB1CF,\n    FACIAL_L_lipUpperThicknessH = 0x37CE,\n    FACIAL_L_lipUpperThicknessV = 0x38BC,\n    FACIAL_lipUpperSDK = 0x1774,\n    FACIAL_lipUpperAnalog = 0xE064,\n    FACIAL_lipUpperThicknessH = 0x7993,\n    FACIAL_lipUpperThicknessV = 0x7981,\n    FACIAL_L_lipCornerSDK = 0xB1C,\n    FACIAL_L_lipCornerAnalog = 0xE568,\n    FACIAL_L_lipCornerThicknessUpper = 0x7BC,\n    FACIAL_L_lipCornerThicknessLower = 0xDD42,\n    FACIAL_R_lipUpperSDK = 0x7583,\n    FACIAL_R_lipUpperAnalog = 0x51CF,\n    FACIAL_R_lipUpperThicknessH = 0x382E,\n    FACIAL_R_lipUpperThicknessV = 0x385C,\n    FACIAL_R_lipCornerSDK = 0xB3C,\n    FACIAL_R_lipCornerAnalog = 0xEE0E,\n    FACIAL_R_lipCornerThicknessUpper = 0x54C3,\n    FACIAL_R_lipCornerThicknessLower = 0x2BBA,\n    MH_MulletRoot = 0x3E73,\n    MH_MulletScaler = 0xA1C2,\n    MH_Hair_Scale = 0xC664,\n    MH_Hair_Crown = 0x1675,\n    SM_Torch = 0x8D6,\n    FX_Light = 0x8959,\n    FX_Light_Scale = 0x5038,\n    FX_Light_Switch = 0xE18E,\n    BagRoot = 0xAD09,\n    BagPivotROOT = 0xB836,\n    BagPivot = 0x4D11,\n    BagBody = 0xAB6D,\n    BagBone_R = 0x937,\n    BagBone_L = 0x991,\n    SM_LifeSaver_Front = 0x9420,\n    SM_R_Pouches_ROOT = 0x2962,\n    SM_R_Pouches = 0x4141,\n    SM_L_Pouches_ROOT = 0x2A02,\n    SM_L_Pouches = 0x4B41,\n    SM_Suit_Back_Flapper = 0xDA2D,\n    SPR_CopRadio = 0x8245,\n    SM_LifeSaver_Back = 0x2127,\n    MH_BlushSlider = 0xA0CE,\n    SKEL_Tail_01 = 0x347,\n    SKEL_Tail_02 = 0x348,\n    MH_L_Concertina_B = 0xC988,\n    MH_L_Concertina_A = 0xC987,\n    MH_R_Concertina_B = 0xC8E8,\n    MH_R_Concertina_A = 0xC8E7,\n    MH_L_ShoulderBladeRoot = 0x8711,\n    MH_L_ShoulderBlade = 0x4EAF,\n    MH_R_ShoulderBladeRoot = 0x3A0A,\n    MH_R_ShoulderBlade = 0x54AF,\n    FB_R_Ear_000 = 0x6CDF,\n    SPR_R_Ear = 0x63B6,\n    FB_L_Ear_000 = 0x6439,\n    SPR_L_Ear = 0x5B10,\n    FB_TongueA_000 = 0x4206,\n    FB_TongueB_000 = 0x4207,\n    FB_TongueC_000 = 0x4208,\n    SKEL_L_Toe1 = 0x1D6B,\n    SKEL_R_Toe1 = 0xB23F,\n    SKEL_Tail_03 = 0x349,\n    SKEL_Tail_04 = 0x34A,\n    SKEL_Tail_05 = 0x34B,\n    SPR_Gonads_ROOT = 0xBFDE,\n    SPR_Gonads = 0x1C00,\n    FB_L_Brow_Out_001 = 0xE3DB,\n    FB_L_Lid_Upper_001 = 0xB2B6,\n    FB_L_Eye_001 = 0x62AC,\n    FB_L_CheekBone_001 = 0x542E,\n    FB_L_Lip_Corner_001 = 0x74AC,\n    FB_R_Lid_Upper_001 = 0xAA10,\n    FB_R_Eye_001 = 0x6B52,\n    FB_R_CheekBone_001 = 0x4B88,\n    FB_R_Brow_Out_001 = 0x54C,\n    FB_R_Lip_Corner_001 = 0x2BA6,\n    FB_Brow_Centre_001 = 0x9149,\n    FB_UpperLipRoot_001 = 0x4ED2,\n    FB_UpperLip_001 = 0xF18F,\n    FB_L_Lip_Top_001 = 0x4F37,\n    FB_R_Lip_Top_001 = 0x4537,\n    FB_Jaw_001 = 0xB4A0,\n    FB_LowerLipRoot_001 = 0x4324,\n    FB_LowerLip_001 = 0x508F,\n    FB_L_Lip_Bot_001 = 0xB93B,\n    FB_R_Lip_Bot_001 = 0xC33B,\n    FB_Tongue_001 = 0xB987\n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedCauseOfDeath",
    "hash": "0x16FFE42AB2D2DC59",
    "code": "-- GET_PED_CAUSE_OF_DEATH\nlocal retval --[[ Hash ]] =\n\tGetPedCauseOfDeath(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the hash of the weapon/model/object that killed the ped."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedCombatMovement",
    "hash": "0xDEA92412FCAEB3F5",
    "code": "-- GET_PED_COMBAT_MOVEMENT\nlocal retval --[[ integer ]] =\n\tGetPedCombatMovement(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedCombatRange",
    "hash": "0xF9D9F7F2DB8E2FA0",
    "code": "-- GET_PED_COMBAT_RANGE\nlocal retval --[[ integer ]] =\n\tGetPedCombatRange(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedConfigFlag",
    "hash": "0x7EE53118C892B513",
    "code": "-- GET_PED_CONFIG_FLAG\nlocal retval --[[ boolean ]] =\n\tGetPedConfigFlag(\n\t\tped --[[ Ped ]], \n\t\tflagId --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See SET_PED_CONFIG_FLAG."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedCurrentMovementSpeed",
    "hash": "0xF60165E1D2C5370B",
    "code": "-- _GET_PED_CURRENT_MOVEMENT_SPEED\nlocal retval --[[ boolean ]], speedX --[[ number ]], speedY --[[ number ]] =\n\tGetPedCurrentMovementSpeed(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedDecorationZoneFromHashes",
    "hash": "0x9FD452BFBE7A7A8B",
    "code": "-- GET_PED_DECORATION_ZONE_FROM_HASHES\nlocal retval --[[ integer ]] =\n\tGetPedDecorationZoneFromHashes(\n\t\tcollection --[[ Hash ]], \n\t\toverlay --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the doeciration zone for the specific collection and overlay combination, refer to ePedDecorationZone"
    ],
    "description": "Returns:\n\nReturns the doeciration zone for the specific collection and overlay combination, refer to ePedDecorationZone\n\nenum ePedDecorationZone\n{\n\tZONE_TORSO = 0,\n\tZONE_HEAD = 1,\n\tZONE_LEFT_ARM = 2,\n\tZONE_RIGHT_ARM = 3,\n\tZONE_LEFT_LEG = 4,\n\tZONE_RIGHT_LEG = 5,\n\tZONE_UNKNOWN = 6,\n\tZONE_NONE = 7\n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedDecorationsState",
    "hash": "0x71EAB450D86954A1",
    "code": "-- GET_PED_DECORATIONS_STATE\nlocal retval --[[ integer ]] =\n\tGetPedDecorationsState(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedDefensiveAreaPosition",
    "hash": "0x3C06B8786DD94CD1",
    "code": "-- GET_PED_DEFENSIVE_AREA_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetPedDefensiveAreaPosition(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedDiesInWater",
    "hash": "0x65671A4FB8218930",
    "code": "-- _GET_PED_DIES_IN_WATER\nlocal retval --[[ boolean ]] =\n\tGetPedDiesInWater(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedDrawableVariation",
    "hash": "0x67F3780DD425D4FC",
    "code": "-- GET_PED_DRAWABLE_VARIATION\nlocal retval --[[ integer ]] =\n\tGetPedDrawableVariation(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Ids\n0 - Head\n1 - Beard\n2 - Hair\n3 - Torso\n4 - Legs\n5 - Hands\n6 - Foot\n7 - Scarfs/Neck Accessories\n8 - Accessories 1\n9 - Accessories 2\n10- Decals\n11 - Auxiliary parts for torso"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedEmissiveIntensity",
    "hash": "0x1461B28A06717D68",
    "code": "-- _GET_PED_EMISSIVE_INTENSITY\nlocal retval --[[ number ]] =\n\tGetPedEmissiveIntensity(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to get the glow intensity from."
    ],
    "returns": [
      "A float between 0.0 and 1.0 representing the current illuminated clothing glow intensity."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped to get the glow intensity from.\n\nReturns:\n\nA float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.\n\nUse SetPedIlluminatedClothingGlowIntensity to set the illuminated clothing glow intensity for a specific ped."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedEnveffScale",
    "hash": "0x9C14D30395A51A3C",
    "code": "-- GET_PED_ENVEFF_SCALE\nlocal retval --[[ number ]] =\n\tGetPedEnveffScale(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedEventData",
    "hash": "0xBA656A3BB01BDEA3",
    "code": "-- _GET_PED_EVENT_DATA\nlocal retval --[[ boolean ]], outData --[[ Any ]] =\n\tGetPedEventData(\n\t\tped --[[ Ped ]], \n\t\teventType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedExtractedDisplacement",
    "hash": "0xE0AF41401ADF87E3",
    "code": "-- GET_PED_EXTRACTED_DISPLACEMENT\nlocal retval --[[ vector3 ]] =\n\tGetPedExtractedDisplacement(\n\t\tped --[[ Ped ]], \n\t\tworldSpace --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the offset the specified ped has moved since the previous tick.  \nIf worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.  \nIf worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedEyeColor",
    "hash": "0x76BBA2CEE66D47E9",
    "code": "-- _GET_PED_EYE_COLOR\nlocal retval --[[ integer ]] =\n\tGetPedEyeColor(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped"
    ],
    "returns": [
      "Returns ped's eye colour, or -1 if fails to get."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nReturns:\n\nReturns ped's eye colour, or -1 if fails to get.\n\nA getter for _SET_PED_EYE_COLOR."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedGroupIndex",
    "hash": "0xF162E133B4E7A675",
    "code": "-- GET_PED_GROUP_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedGroupIndex(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the group id of which the specified ped is a member of."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHairRgbColor",
    "hash": "0x4852FC386E2E1BB5",
    "code": "-- _GET_PED_HAIR_RGB_COLOR\nlocal outR --[[ integer ]], outG --[[ integer ]], outB --[[ integer ]] =\n\tGetPedHairRgbColor(\n\t\thairColorIndex --[[ integer ]]\n\t)",
    "parameters": [
      "hairColorIndex: \n\nThe hair color index. Value between 0-63 (inclusive).",
      "outR: \n\nOutput red value.",
      "outG: \n\nOutput green value.",
      "outB: \n\nOutput blue value."
    ],
    "returns": [],
    "description": "Parameters:\n\nhairColorIndex: \n\nThe hair color index. Value between 0-63 (inclusive).\n\noutR: \n\nOutput red value.\n\noutG: \n\nOutput green value.\n\noutB: \n\nOutput blue value.\n\nInput: Haircolor index, value between 0 and 63 (inclusive). Output: RGB values for the haircolor specified in the input.\n\nThis is used with the hair color swatches scaleform.\n\nUse _0x013E5CFC38CD5387 to get the makeup colors."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHeadBlendData",
    "hash": "0x2746BD9D88C5C5D0",
    "code": "-- GET_PED_HEAD_BLEND_DATA\nlocal retval --[[ boolean ]], headBlendData --[[ Any ]] =\n\tGetPedHeadBlendData(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.  \npass this struct in the second parameter   \ntypedef struct  \n{  \n        int shapeFirst, shapeSecond, shapeThird;   \n        int skinFirst, skinSecond, skinThird;   \n\tfloat shapeMix, skinMix, thirdMix;  \n} headBlendData;"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHeadBlendFirstIndex",
    "hash": "0x68D353AB88B97E0C",
    "code": "-- GET_PED_HEAD_BLEND_FIRST_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedHeadBlendFirstIndex(\n\t\ttype --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.\nUsed when calling SET_PED_HEAD_BLEND_DATA."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHeadBlendNumHeads",
    "hash": "0x5EF37013A6539C9D",
    "code": "-- GET_PED_HEAD_BLEND_NUM_HEADS\nlocal retval --[[ integer ]] =\n\tGetPedHeadBlendNumHeads(\n\t\ttype --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHeadOverlayNum",
    "hash": "0xCF1CE768BB43480E",
    "code": "-- GET_PED_HEAD_OVERLAY_NUM\nlocal retval --[[ integer ]] =\n\tGetPedHeadOverlayNum(\n\t\toverlayID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used with freemode (online) characters."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHeadOverlayValue",
    "hash": "0xA60EF3B6461A4D43",
    "code": "-- _GET_PED_HEAD_OVERLAY_VALUE\nlocal retval --[[ integer ]] =\n\tGetPedHeadOverlayValue(\n\t\tped --[[ Ped ]], \n\t\toverlayID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Likely a char, if that overlay is not set, e.i. \"None\" option, returns 255;\nThis might be the once removed native GET_PED_HEAD_OVERLAY."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHelmetStoredHatPropIndex",
    "hash": "0x451294E859ECC018",
    "code": "-- GET_PED_HELMET_STORED_HAT_PROP_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedHelmetStoredHatPropIndex(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedHelmetStoredHatTexIndex",
    "hash": "0x9D728C1E12BF5518",
    "code": "-- GET_PED_HELMET_STORED_HAT_TEX_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedHelmetStoredHatTexIndex(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedLastDamageBone",
    "hash": "0xD75960F6BD9EA49C",
    "code": "-- GET_PED_LAST_DAMAGE_BONE\nlocal retval --[[ boolean ]], outBone --[[ integer ]] =\n\tGetPedLastDamageBone(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedMakeupRgbColor",
    "hash": "0x013E5CFC38CD5387",
    "code": "-- _GET_PED_MAKEUP_RGB_COLOR\nlocal outR --[[ integer ]], outG --[[ integer ]], outB --[[ integer ]] =\n\tGetPedMakeupRgbColor(\n\t\tmakeupColorIndex --[[ integer ]]\n\t)",
    "parameters": [
      "makeupColorIndex: \n\nThe hair color index. Value between 0-63 (inclusive).",
      "outR: \n\nOutput red value.",
      "outG: \n\nOutput green value.",
      "outB: \n\nOutput blue value."
    ],
    "returns": [],
    "description": "Parameters:\n\nmakeupColorIndex: \n\nThe hair color index. Value between 0-63 (inclusive).\n\noutR: \n\nOutput red value.\n\noutG: \n\nOutput green value.\n\noutB: \n\nOutput blue value.\n\nInput: Makeup color index, value between 0 and 63 (inclusive). Output: RGB values for the makeup color specified in the input.\n\nThis is used with the makeup color swatches scaleform.\n\nUse _0x4852FC386E2E1BB5 to get the hair colors."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedMaxHealth",
    "hash": "0x4700A416E8324EF3",
    "code": "-- GET_PED_MAX_HEALTH\nlocal retval --[[ integer ]] =\n\tGetPedMaxHealth(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedMoney",
    "hash": "0x3F69145BBA87BAE7",
    "code": "-- GET_PED_MONEY\nlocal retval --[[ integer ]] =\n\tGetPedMoney(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedNearbyPeds",
    "hash": "0x23F8F5FC7E8C4A6B",
    "code": "-- GET_PED_NEARBY_PEDS\nlocal retval --[[ integer ]], sizeAndPeds --[[ integer ]] =\n\tGetPedNearbyPeds(\n\t\tped --[[ Ped ]], \n\t\tignore --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Console/PC structure definitions and example: pastebin.com/SsFej963\n\nFor FiveM/Cfx.Re use-cases refer to: GET_GAME_POOL."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedNearbyVehicles",
    "hash": "0xCFF869CBFA210D82",
    "code": "-- GET_PED_NEARBY_VEHICLES\nlocal retval --[[ integer ]], sizeAndVehs --[[ integer ]] =\n\tGetPedNearbyVehicles(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns size of array, passed into the second variable.  \nSee below for usage information.  \nThis function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.  \n//Setup the array  \n\tconst int numElements = 10;  \n\tconst int arrSize = numElements * 2 + 2;  \n\tAny veh[arrSize];  \n\t//0 index is the size of the array  \n\tveh[0] = numElements;  \n\tint count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);  \n\tif (veh != NULL)  \n\t{  \n//Simple loop to go through results  \nfor (int i = 0; i < count; i++)  \n{  \n\tint offsettedID = i * 2 + 2;  \n\t//Make sure it exists  \n\tif (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))  \n\t{  \n//Do something  \n\t}  \n}  \n\t}    \nHere's the right way to do it (console and pc):  \npastebin.com/SsFej963"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedPaletteVariation",
    "hash": "0xE3DD5F2A84B42281",
    "code": "-- GET_PED_PALETTE_VARIATION\nlocal retval --[[ integer ]] =\n\tGetPedPaletteVariation(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component id to get the palette variation from. Refer to SET_PED_COMPONENT_VARIATION."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component id to get the palette variation from. Refer to SET_PED_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedParachuteLandingType",
    "hash": "0x8B9F1FC6AE8166C0",
    "code": "-- GET_PED_PARACHUTE_LANDING_TYPE\nlocal retval --[[ integer ]] =\n\tGetPedParachuteLandingType(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "-1: no landing  \n0: landing on both feet  \n1: stumbling  \n2: rolling  \n3: ragdoll"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedParachuteState",
    "hash": "0x79CFD9827CC979B6",
    "code": "-- GET_PED_PARACHUTE_STATE\nlocal retval --[[ integer ]] =\n\tGetPedParachuteState(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns:  \n-1: Normal  \n0: Wearing parachute on back  \n1: Parachute opening  \n2: Parachute open  \n3: Falling to doom (e.g. after exiting parachute)  \nNormal means no parachute?"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedParachuteTintIndex",
    "hash": "0xEAF5F7E5AE7C6C9D",
    "code": "-- GET_PED_PARACHUTE_TINT_INDEX\nlocal outTintIndex --[[ integer ]] =\n\tGetPedParachuteTintIndex(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedPropIndex",
    "hash": "0x898CC20EA75BACD8",
    "code": "-- GET_PED_PROP_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedPropIndex(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component id to get the prop index from. Refer to SET_PED_COMPONENT_VARIATION."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component id to get the prop index from. Refer to SET_PED_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedPropTextureIndex",
    "hash": "0xE131A28626F81AB2",
    "code": "-- GET_PED_PROP_TEXTURE_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedPropTextureIndex(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component id to get the prop texture index from. Refer to SET_PED_COMPONENT_VARIATION."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component id to get the prop texture index from. Refer to SET_PED_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedRagdollBoneIndex",
    "hash": "0x2057EF813397A772",
    "code": "-- GET_PED_RAGDOLL_BONE_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedRagdollBoneIndex(\n\t\tped --[[ Ped ]], \n\t\tbone --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedRelationshipGroupDefaultHash",
    "hash": "0x42FDD0F017B1E38E",
    "code": "-- GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH\nlocal retval --[[ Hash ]] =\n\tGetPedRelationshipGroupDefaultHash(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedRelationshipGroupHash",
    "hash": "0x7DBDD04862D95F04",
    "code": "-- GET_PED_RELATIONSHIP_GROUP_HASH\nlocal retval --[[ Hash ]] =\n\tGetPedRelationshipGroupHash(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedResetFlag",
    "hash": "0xAF9E59B1B1FBF2A0",
    "code": "-- GET_PED_RESET_FLAG\nlocal retval --[[ boolean ]] =\n\tGetPedResetFlag(\n\t\tped --[[ Ped ]], \n\t\tflagId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedSourceOfDeath",
    "hash": "0x93C8B64DEB84728C",
    "code": "-- GET_PED_SOURCE_OF_DEATH\nlocal retval --[[ Entity ]] =\n\tGetPedSourceOfDeath(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'  \nIs best to check if the Ped is dead before asking for its killer."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedStealthMovement",
    "hash": "0x7C2AC9CA66575FBF",
    "code": "-- GET_PED_STEALTH_MOVEMENT\nlocal retval --[[ boolean ]] =\n\tGetPedStealthMovement(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the entity is in stealth mode"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedTaskCombatTarget",
    "hash": "0x32C27A11307B01CC",
    "code": "-- _GET_PED_TASK_COMBAT_TARGET\nlocal retval --[[ Entity ]] =\n\tGetPedTaskCombatTarget(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedTextureVariation",
    "hash": "0x04A355E041E004E6",
    "code": "-- GET_PED_TEXTURE_VARIATION\nlocal retval --[[ integer ]] =\n\tGetPedTextureVariation(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component id to get the texture variation from. Refer to SET_PED_COMPONENT_VARIATION."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component id to get the texture variation from. Refer to SET_PED_COMPONENT_VARIATION."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedTimeOfDeath",
    "hash": "0x1E98817B311AE98A",
    "code": "-- GET_PED_TIME_OF_DEATH\nlocal retval --[[ integer ]] =\n\tGetPedTimeOfDeath(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedType",
    "hash": "0xFF059E1E4C01E63C",
    "code": "-- GET_PED_TYPE\nlocal retval --[[ integer ]] =\n\tGetPedType(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Ped types:\n\nenum ePedType\n{\n\tPED_TYPE_PLAYER_0 = 0,\n\tPED_TYPE_PLAYER_1 = 1,\n\tPED_TYPE_NETWORK_PLAYER = 2,\n\tPED_TYPE_PLAYER_2 = 3,\n\tPED_TYPE_CIVMALE = 4,\n\tPED_TYPE_CIVFEMALE = 5,\n\tPED_TYPE_COP = 6,\n\tPED_TYPE_GANG_ALBANIAN = 7,\n\tPED_TYPE_GANG_BIKER_1 = 8,\n\tPED_TYPE_GANG_BIKER_2 = 9,\n\tPED_TYPE_GANG_ITALIAN = 10,\n\tPED_TYPE_GANG_RUSSIAN = 11,\n\tPED_TYPE_GANG_RUSSIAN_2 = 12,\n\tPED_TYPE_GANG_IRISH = 13,\n\tPED_TYPE_GANG_JAMAICAN = 14,\n\tPED_TYPE_GANG_AFRICAN_AMERICAN = 15,\n\tPED_TYPE_GANG_KOREAN = 16,\n\tPED_TYPE_GANG_CHINESE_JAPANESE = 17,\n\tPED_TYPE_GANG_PUERTO_RICAN = 18,\n\tPED_TYPE_DEALER = 19,\n\tPED_TYPE_MEDIC = 20,\n\tPED_TYPE_FIREMAN = 21,\n\tPED_TYPE_CRIMINAL = 22,\n\tPED_TYPE_BUM = 23,\n\tPED_TYPE_PROSTITUTE = 24,\n\tPED_TYPE_SPECIAL = 25,\n\tPED_TYPE_MISSION = 26,\n\tPED_TYPE_SWAT = 27,\n\tPED_TYPE_ANIMAL = 28,\n\tPED_TYPE_ARMY = 29\n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedVisualFieldCenterAngle",
    "hash": "0xEF2C71A32CAD5FBD",
    "code": "-- _GET_PED_VISUAL_FIELD_CENTER_ANGLE\nlocal retval --[[ number ]] =\n\tGetPedVisualFieldCenterAngle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedheadshotTxdString",
    "hash": "0xDB4EACD4AD0A5D6B",
    "code": "-- GET_PEDHEADSHOT_TXD_STRING\nlocal retval --[[ string ]] =\n\tGetPedheadshotTxdString(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gtaforums.com/topic/885580-ped-headshotmugshot-txd/"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPedsJacker",
    "hash": "0x9B128DC36C1E04CF",
    "code": "-- GET_PEDS_JACKER\nlocal retval --[[ Ped ]] =\n\tGetPedsJacker(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetPlayerPedIsFollowing",
    "hash": "0x6A3975DEA89F9A17",
    "code": "-- GET_PLAYER_PED_IS_FOLLOWING\nlocal retval --[[ Player ]] =\n\tGetPlayerPedIsFollowing(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetRandomPedAtCoord",
    "hash": "0x876046A8E3A4B71C",
    "code": "-- GET_RANDOM_PED_AT_COORD\nlocal retval --[[ Ped ]] =\n\tGetRandomPedAtCoord(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\txRadius --[[ number ]], \n\t\tyRadius --[[ number ]], \n\t\tzRadius --[[ number ]], \n\t\tpedType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.   \nPed Types:  \nAny = -1  \nPlayer = 1  \nMale = 4   \nFemale = 5   \nCop = 6  \nHuman = 26  \nSWAT = 27   \nAnimal = 28  \nArmy = 29"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetRelationshipBetweenGroups",
    "hash": "0x9E6B70061662AE5C",
    "code": "-- GET_RELATIONSHIP_BETWEEN_GROUPS\nlocal retval --[[ integer ]] =\n\tGetRelationshipBetweenGroups(\n\t\tgroup1 --[[ Hash ]], \n\t\tgroup2 --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the relationship between two groups. This should be called twice (once for each group).  \nRelationship types:  \n0 = Companion  \n1 = Respect  \n2 = Like  \n3 = Neutral  \n4 = Dislike  \n5 = Hate  \n255 = Pedestrians  \nExample:  \nPED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);  \nPED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetRelationshipBetweenPeds",
    "hash": "0xEBA5AD3A0EAF7121",
    "code": "-- GET_RELATIONSHIP_BETWEEN_PEDS\nlocal retval --[[ integer ]] =\n\tGetRelationshipBetweenPeds(\n\t\tped1 --[[ Ped ]], \n\t\tped2 --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the relationship between two peds. This should be called twice (once for each ped).  \nRelationship types:  \n0 = Companion  \n1 = Respect  \n2 = Like  \n3 = Neutral  \n4 = Dislike  \n5 = Hate  \n255 = Pedestrians  \n(Credits: Inco)  \nExample:  \nPED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);  \nPED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetSeatPedIsTryingToEnter",
    "hash": "0x6F4C85ACD641BCD2",
    "code": "-- GET_SEAT_PED_IS_TRYING_TO_ENTER\nlocal retval --[[ integer ]] =\n\tGetSeatPedIsTryingToEnter(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetSynchronizedScenePhase",
    "hash": "0xE4A310B1D7FA73CC",
    "code": "-- GET_SYNCHRONIZED_SCENE_PHASE\nlocal retval --[[ number ]] =\n\tGetSynchronizedScenePhase(\n\t\tsceneID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetSynchronizedSceneRate",
    "hash": "0xD80932D577274D40",
    "code": "-- GET_SYNCHRONIZED_SCENE_RATE\nlocal retval --[[ number ]] =\n\tGetSynchronizedSceneRate(\n\t\tsceneID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetTimeOfLastPedWeaponDamage",
    "hash": "0x36B77BB84687C318",
    "code": "-- _GET_TIME_OF_LAST_PED_WEAPON_DAMAGE\nlocal retval --[[ integer ]] =\n\tGetTimeOfLastPedWeaponDamage(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_TIME_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetVehiclePedIsEntering",
    "hash": "0xF92691AED837A5FC",
    "code": "-- GET_VEHICLE_PED_IS_ENTERING\nlocal retval --[[ Vehicle ]] =\n\tGetVehiclePedIsEntering(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetVehiclePedIsIn",
    "hash": "0x9A9112A0FE9A4713",
    "code": "-- GET_VEHICLE_PED_IS_IN\nlocal retval --[[ Vehicle ]] =\n\tGetVehiclePedIsIn(\n\t\tped --[[ Ped ]], \n\t\tlastVehicle --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe target ped",
      "lastVehicle: \n\nA boolean value where false represents the current vehicle the Ped is in, and true represents the last vehicle the Ped was in."
    ],
    "returns": [
      "The vehicle id. Returns 0 if the ped is/was not in a vehicle."
    ],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nlastVehicle: \n\nA boolean value where false represents the current vehicle the Ped is in, and true represents the last vehicle the Ped was in.\n\nReturns:\n\nThe vehicle id. Returns 0 if the ped is/was not in a vehicle.\n\nRetrieves the vehicle the specified ped is currently in, or the last vehicle they were in."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetVehiclePedIsTryingToEnter",
    "hash": "0x814FA8BE5449445D",
    "code": "-- GET_VEHICLE_PED_IS_TRYING_TO_ENTER\nlocal retval --[[ Vehicle ]] =\n\tGetVehiclePedIsTryingToEnter(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GetVehiclePedIsUsing",
    "hash": "0x6094AD011A2EA87D",
    "code": "-- GET_VEHICLE_PED_IS_USING\nlocal retval --[[ Vehicle ]] =\n\tGetVehiclePedIsUsing(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GivePedHelmet",
    "hash": "0x54C7C4A94367717E",
    "code": "-- GIVE_PED_HELMET\nGivePedHelmet(\n\tped --[[ Ped ]], \n\tcannotRemove --[[ boolean ]], \n\thelmetFlag --[[ integer ]], \n\ttextureIndex --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nPed index.",
      "cannotRemove: \n\nCan remove helmet or not.",
      "helmetFlag: \n\nFlag for the helmet, the helmet appearance depends on the ped it's being applied on.",
      "textureIndex: \n\nTexture index; any value other than -1 will overwrite the default texture index. The helmet texture index needs to be valid for it to be applied."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index.\n\ncannotRemove: \n\nCan remove helmet or not.\n\nhelmetFlag: \n\nFlag for the helmet, the helmet appearance depends on the ped it's being applied on.\n\ntextureIndex: \n\nTexture index; any value other than -1 will overwrite the default texture index. The helmet texture index needs to be valid for it to be applied.\n\nGives the ped a helmet. Can be removed by invoking REMOVE_PED_HELMET.\n\nenum ePedCompFlags {\n  PV_FLAG_NONE                  = 0, // 0\n  PV_FLAG_BULKY                 = 1, // 1<<0\n  PV_FLAG_JOB                   = 2, // 1<<1\n  PV_FLAG_SUNNY                 = 4, // 1<<2\n  PV_FLAG_WET                   = 8, // 1<<3\n  PV_FLAG_COLD                  = 16, // 1<<4\n  PV_FLAG_NOT_IN_CAR            = 32, // 1<<5\n  PV_FLAG_BIKE_ONLY             = 64, // 1<<6\n  PV_FLAG_NOT_INDOORS           = 128, // 1<<7\n  PV_FLAG_FIRE_RETARDENT        = 256, // 1<<8\n  PV_FLAG_ARMOURED              = 512, // 1<<9\n  PV_FLAG_LIGHTLY_ARMOURED      = 1024, // 1<<10\n  PV_FLAG_HIGH_DETAIL           = 2048, // 1<<11\n  PV_FLAG_DEFAULT_HELMET        = 4096, // 1<<12\n  PV_FLAG_RANDOM_HELMET         = 8192, // 1<<13\n  PV_FLAG_SCRIPT_HELMET         = 16384, // 1<<14\n  PV_FLAG_FLIGHT_HELMET         = 32768, // 1<<15\n  PV_FLAG_HIDE_IN_FIRST_PERSON  = 65536, // 1<<16\n  PV_FLAG_USE_PHYSICS_HAT_2     = 131072, // 1<<17\n  PV_FLAG_PILOT_HELMET          = 262144 // 1<<18\n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "GivePedNmMessage",
    "hash": "0xB158DFCCC56E5C5B",
    "code": "-- GIVE_PED_NM_MESSAGE\nGivePedNmMessage(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.  \nIf a message hasn't been created already, this function does nothing.  \nIf the Ped is not ragdolled with Euphoria enabled, this function does nothing.  \nThe following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);  \nCall order:  \nSET_PED_TO_RAGDOLL  \nCREATE_NM_MESSAGE  \nGIVE_PED_NM_MESSAGE  \nMultiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:  \nSET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);  \nCREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.  \nGIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  \nCREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.  \nGIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  \nCREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.  \nGIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasActionModeAssetLoaded",
    "hash": "0xE4B5F4BF2CB24E65",
    "code": "-- HAS_ACTION_MODE_ASSET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasActionModeAssetLoaded(\n\t\tasset --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasPedHeadBlendFinished",
    "hash": "0x654CD0A825161131",
    "code": "-- HAS_PED_HEAD_BLEND_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasPedHeadBlendFinished(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasPedPreloadPropDataFinished",
    "hash": "0x784002A632822099",
    "code": "-- HAS_PED_PRELOAD_PROP_DATA_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasPedPreloadPropDataFinished(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasPedPreloadVariationDataFinished",
    "hash": "0x66680A92700F43DF",
    "code": "-- HAS_PED_PRELOAD_VARIATION_DATA_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasPedPreloadVariationDataFinished(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasPedReceivedEvent",
    "hash": "0x8507BCB710FA6DC0",
    "code": "-- HAS_PED_RECEIVED_EVENT\nlocal retval --[[ boolean ]] =\n\tHasPedReceivedEvent(\n\t\tped --[[ Ped ]], \n\t\teventId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasPedheadshotImgUploadFailed",
    "hash": "0x876928DDDFCCC9CD",
    "code": "-- HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED\nlocal retval --[[ boolean ]] =\n\tHasPedheadshotImgUploadFailed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasPedheadshotImgUploadSucceeded",
    "hash": "0xE8A169E666CBC541",
    "code": "-- HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED\nlocal retval --[[ boolean ]] =\n\tHasPedheadshotImgUploadSucceeded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HasStealthModeAssetLoaded",
    "hash": "0xE977FC5B08AF3441",
    "code": "-- HAS_STEALTH_MODE_ASSET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasStealthModeAssetLoaded(\n\t\tasset --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HaveAllStreamingRequestsCompleted",
    "hash": "0x7350823473013C02",
    "code": "-- HAVE_ALL_STREAMING_REQUESTS_COMPLETED\nlocal retval --[[ boolean ]] =\n\tHaveAllStreamingRequestsCompleted(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "HidePedBloodDamageByZone",
    "hash": "0x62AB793144DE75DC",
    "code": "-- HIDE_PED_BLOOD_DAMAGE_BY_ZONE\nHidePedBloodDamageByZone(\n\tped --[[ Ped ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "InstantlyFillPedPopulation",
    "hash": "0x4759CC730F947C81",
    "code": "-- INSTANTLY_FILL_PED_POPULATION\nInstantlyFillPedPopulation()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsAnyHostilePedNearPoint",
    "hash": "0x68772DB2B2526F9F",
    "code": "-- IS_ANY_HOSTILE_PED_NEAR_POINT\nlocal retval --[[ boolean ]] =\n\tIsAnyHostilePedNearPoint(\n\t\tped --[[ Ped ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsAnyPedNearPoint",
    "hash": "0x083961498679DC9F",
    "code": "-- IS_ANY_PED_NEAR_POINT\nlocal retval --[[ boolean ]] =\n\tIsAnyPedNearPoint(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsAnyPedShootingInArea",
    "hash": "0xA0D3D71EA1086C55",
    "code": "-- IS_ANY_PED_SHOOTING_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsAnyPedShootingInArea(\n\t\tminX --[[ number ]], \n\t\tminY --[[ number ]], \n\t\tminZ --[[ number ]], \n\t\tmaxX --[[ number ]], \n\t\tmaxY --[[ number ]], \n\t\tmaxZ --[[ number ]], \n\t\tbHighlightArea --[[ boolean ]], \n\t\tbDo3DCheck --[[ boolean ]]\n\t)",
    "parameters": [
      "minX: \n\nMinimum X vector",
      "minY: \n\nMinimum Y vector",
      "minZ: \n\nMinimum Z vector",
      "maxX: \n\nMaximum X vector",
      "maxY: \n\nMaximum Y vector",
      "maxZ: \n\nMaximum Z vector",
      "bHighlightArea: \n\nHighlights the area to check when set to true.",
      "bDo3DCheck: \n\nConducts a 3D height check when set to true."
    ],
    "returns": [
      "true if a ped is within the defined area, false otherwise."
    ],
    "description": "Parameters:\n\nminX: \n\nMinimum X vector\n\nminY: \n\nMinimum Y vector\n\nminZ: \n\nMinimum Z vector\n\nmaxX: \n\nMaximum X vector\n\nmaxY: \n\nMaximum Y vector\n\nmaxZ: \n\nMaximum Z vector\n\nbHighlightArea: \n\nHighlights the area to check when set to true.\n\nbDo3DCheck: \n\nConducts a 3D height check when set to true.\n\nReturns:\n\ntrue if a ped is within the defined area, false otherwise.\n\nVerifies whether a ped is firing within a specific area."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsConversationPedDead",
    "hash": "0xE0A0AEC214B1FABA",
    "code": "-- IS_CONVERSATION_PED_DEAD\nlocal retval --[[ boolean ]] =\n\tIsConversationPedDead(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsCopPedInArea_3d",
    "hash": "0x16EC4839969F9F5E",
    "code": "-- IS_COP_PED_IN_AREA_3D\nlocal retval --[[ boolean ]] =\n\tIsCopPedInArea_3d(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "xyz - relative to the world origin."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedAPlayer",
    "hash": "0x12534C348C6CB68B",
    "code": "-- IS_PED_A_PLAYER\nlocal retval --[[ boolean ]] =\n\tIsPedAPlayer(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedAimingFromCover",
    "hash": "0x3998B1276A3300E5",
    "code": "-- IS_PED_AIMING_FROM_COVER\nlocal retval --[[ boolean ]] =\n\tIsPedAimingFromCover(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedBeingJacked",
    "hash": "0x9A497FE2DF198913",
    "code": "-- IS_PED_BEING_JACKED\nlocal retval --[[ boolean ]] =\n\tIsPedBeingJacked(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedBeingStealthKilled",
    "hash": "0x863B23EFDE9C5DF2",
    "code": "-- IS_PED_BEING_STEALTH_KILLED\nlocal retval --[[ boolean ]] =\n\tIsPedBeingStealthKilled(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedBeingStunned",
    "hash": "0x4FBACCE3B4138EE8",
    "code": "-- IS_PED_BEING_STUNNED\nlocal retval --[[ boolean ]] =\n\tIsPedBeingStunned(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always 0"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedBlushColorValid",
    "hash": "0x604E810189EE3A59",
    "code": "-- _IS_PED_BLUSH_COLOR_VALID\nlocal retval --[[ boolean ]] =\n\tIsPedBlushColorValid(\n\t\tcolorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedBlushColorValid_2",
    "hash": "0xF41B5D290C99A3D6",
    "code": "-- _IS_PED_BLUSH_COLOR_VALID_2\nlocal retval --[[ boolean ]] =\n\tIsPedBlushColorValid_2(\n\t\tcolorId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedBodyBlemishValid",
    "hash": "0x09E7ECA981D9B210",
    "code": "-- _IS_PED_BODY_BLEMISH_VALID\nlocal retval --[[ boolean ]] =\n\tIsPedBodyBlemishValid(\n\t\tcolorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedClimbing",
    "hash": "0x53E8CB4F48BFE623",
    "code": "-- IS_PED_CLIMBING\nlocal retval --[[ boolean ]] =\n\tIsPedClimbing(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedComponentVariationValid",
    "hash": "0xE825F6B6CEA7671D",
    "code": "-- IS_PED_COMPONENT_VARIATION_VALID\nlocal retval --[[ boolean ]] =\n\tIsPedComponentVariationValid(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tdrawableId --[[ integer ]], \n\t\ttextureId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component id to check the variation of. Refer to SET_PED_COMPONENT_VARIATION.",
      "drawableId: \n\nThe drawable id to get the component variation of. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id to get the component variation of. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component id to check the variation of. Refer to SET_PED_COMPONENT_VARIATION.\n\ndrawableId: \n\nThe drawable id to get the component variation of. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id to get the component variation of. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS.\n\nChecks if the component variation is valid, this works great for randomizing components using loops."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedDeadOrDying",
    "hash": "0x3317DEDB88C95038",
    "code": "-- IS_PED_DEAD_OR_DYING\nlocal retval --[[ boolean ]] =\n\tIsPedDeadOrDying(\n\t\tped --[[ Ped ]], \n\t\tcheckMeleeDeathFlags --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to check.",
      "checkMeleeDeathFlags: \n\nIf set to true, extends the check to include melee takedown moves as part of the dying phase."
    ],
    "returns": [
      "Returns true if the ped is dead. When checkMeleeDeathFlags is set to true, it also considers peds in melee takedown moves as dying, although the broader 'dying' phase may not be detected."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped to check.\n\ncheckMeleeDeathFlags: \n\nIf set to true, extends the check to include melee takedown moves as part of the dying phase.\n\nReturns:\n\nReturns true if the ped is dead. When checkMeleeDeathFlags is set to true, it also considers peds in melee takedown moves as dying, although the broader 'dying' phase may not be detected.\n\nDetermines if a ped is dead. Contrary to what the name might suggest, it does not always detect when a ped is in the 'dying' phase (transitioning to death). The exception is when checkMeleeDeathFlags is set to true, which then includes peds in the midst of melee takedown moves as being in a dying state, even if the death task has not yet started.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedDefensiveAreaActive",
    "hash": "0xBA63D9FE45412247",
    "code": "-- IS_PED_DEFENSIVE_AREA_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsPedDefensiveAreaActive(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedDiving",
    "hash": "0x5527B8246FEF9B11",
    "code": "-- IS_PED_DIVING\nlocal retval --[[ boolean ]] =\n\tIsPedDiving(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedDoingBeastJump",
    "hash": "0x451D05012CCEC234",
    "code": "-- _IS_PED_DOING_BEAST_JUMP\nlocal retval --[[ boolean ]] =\n\tIsPedDoingBeastJump(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedDoingDriveby",
    "hash": "0xB2C086CC1BF8F2BF",
    "code": "-- IS_PED_DOING_DRIVEBY\nlocal retval --[[ boolean ]] =\n\tIsPedDoingDriveby(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedDucking",
    "hash": "0xD125AE748725C6BC",
    "code": "-- IS_PED_DUCKING\nlocal retval --[[ boolean ]] =\n\tIsPedDucking(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedEvasiveDiving",
    "hash": "0x414641C26E105898",
    "code": "-- IS_PED_EVASIVE_DIVING\nlocal retval --[[ boolean ]], evadingEntity --[[ Entity ]] =\n\tIsPedEvasiveDiving(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Presumably returns the Entity that the Ped is currently diving out of the way of.\nvar num3;\n    if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)\n        if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedFacingPed",
    "hash": "0xD71649DB0A545AA3",
    "code": "-- IS_PED_FACING_PED\nlocal retval --[[ boolean ]] =\n\tIsPedFacingPed(\n\t\tped --[[ Ped ]], \n\t\totherPed --[[ Ped ]], \n\t\tangle --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "angle is ped's view cone"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedFalling",
    "hash": "0xFB92A102F1C4DFA3",
    "code": "-- IS_PED_FALLING\nlocal retval --[[ boolean ]] =\n\tIsPedFalling(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedFatallyInjured",
    "hash": "0xD839450756ED5A80",
    "code": "-- IS_PED_FATALLY_INJURED\nlocal retval --[[ boolean ]] =\n\tIsPedFatallyInjured(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.  \nIf the handle is invalid, the function returns true."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedFleeing",
    "hash": "0xBBCCE00B381F8482",
    "code": "-- IS_PED_FLEEING\nlocal retval --[[ boolean ]] =\n\tIsPedFleeing(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedGettingIntoAVehicle",
    "hash": "0xBB062B2B5722478E",
    "code": "-- IS_PED_GETTING_INTO_A_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedGettingIntoAVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedGoingIntoCover",
    "hash": "0x9F65DBC537E59AD5",
    "code": "-- IS_PED_GOING_INTO_COVER\nlocal retval --[[ boolean ]] =\n\tIsPedGoingIntoCover(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedGroupMember",
    "hash": "0x9BB01E3834671191",
    "code": "-- IS_PED_GROUP_MEMBER\nlocal retval --[[ boolean ]] =\n\tIsPedGroupMember(\n\t\tped --[[ Ped ]], \n\t\tgroupId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHairColorValid",
    "hash": "0xE0D36E5D9E99CC21",
    "code": "-- _IS_PED_HAIR_COLOR_VALID\nlocal retval --[[ boolean ]] =\n\tIsPedHairColorValid(\n\t\tcolorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHairColorValid_2",
    "hash": "0xED6D8E27A43B8CDE",
    "code": "-- _IS_PED_HAIR_COLOR_VALID_2\nlocal retval --[[ boolean ]] =\n\tIsPedHairColorValid_2(\n\t\tcolorId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHangingOnToVehicle",
    "hash": "0x1C86D8AEF8254B78",
    "code": "-- IS_PED_HANGING_ON_TO_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedHangingOnToVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHeadingTowardsPosition",
    "hash": "0xFCF37A457CB96DC0",
    "code": "-- IS_PED_HEADING_TOWARDS_POSITION\nlocal retval --[[ boolean ]] =\n\tIsPedHeadingTowardsPosition(\n\t\tped --[[ Ped ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tp4 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHeadtrackingEntity",
    "hash": "0x813A0A7C9D2E831F",
    "code": "-- IS_PED_HEADTRACKING_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsPedHeadtrackingEntity(\n\t\tped --[[ Ped ]], \n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHeadtrackingPed",
    "hash": "0x5CD3CB88A7F8850D",
    "code": "-- IS_PED_HEADTRACKING_PED\nlocal retval --[[ boolean ]] =\n\tIsPedHeadtrackingPed(\n\t\tped1 --[[ Ped ]], \n\t\tped2 --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHelmetUnk",
    "hash": "0xB9496CE47546DB2C",
    "code": "-- _IS_PED_HELMET_UNK\nlocal retval --[[ boolean ]] =\n\tIsPedHelmetUnk(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHuman",
    "hash": "0xB980061DA992779D",
    "code": "-- IS_PED_HUMAN\nlocal retval --[[ boolean ]] =\n\tIsPedHuman(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true/false if the ped is/isn't humanoid."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedHurt",
    "hash": "0x5983BB449D7FDB12",
    "code": "-- IS_PED_HURT\nlocal retval --[[ boolean ]] =\n\tIsPedHurt(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the specified ped is hurt."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnyBoat",
    "hash": "0x2E0E1C2B4F6CB339",
    "code": "-- IS_PED_IN_ANY_BOAT\nlocal retval --[[ boolean ]] =\n\tIsPedInAnyBoat(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnyHeli",
    "hash": "0x298B91AE825E5705",
    "code": "-- IS_PED_IN_ANY_HELI\nlocal retval --[[ boolean ]] =\n\tIsPedInAnyHeli(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnyPlane",
    "hash": "0x5FFF4CFC74D8FB80",
    "code": "-- IS_PED_IN_ANY_PLANE\nlocal retval --[[ boolean ]] =\n\tIsPedInAnyPlane(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnyPoliceVehicle",
    "hash": "0x0BD04E29640C9C12",
    "code": "-- IS_PED_IN_ANY_POLICE_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedInAnyPoliceVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnySub",
    "hash": "0xFBFC01CCFB35D99E",
    "code": "-- IS_PED_IN_ANY_SUB\nlocal retval --[[ boolean ]] =\n\tIsPedInAnySub(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnyTaxi",
    "hash": "0x6E575D6A898AB852",
    "code": "-- IS_PED_IN_ANY_TAXI\nlocal retval --[[ boolean ]] =\n\tIsPedInAnyTaxi(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnyTrain",
    "hash": "0x6F972C1AB75A1ED0",
    "code": "-- IS_PED_IN_ANY_TRAIN\nlocal retval --[[ boolean ]] =\n\tIsPedInAnyTrain(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInAnyVehicle",
    "hash": "0x997ABD671D25CA0B",
    "code": "-- IS_PED_IN_ANY_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedInAnyVehicle(\n\t\tped --[[ Ped ]], \n\t\tatGetIn --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to check.",
      "atGetIn: \n\ntrue to also consider attempting to enter a vehicle."
    ],
    "returns": [
      "Whether or not the ped is currently involved in any vehicle."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped to check.\n\natGetIn: \n\ntrue to also consider attempting to enter a vehicle.\n\nReturns:\n\nWhether or not the ped is currently involved in any vehicle.\n\nReturns whether the specified ped is in any vehicle. If atGetIn is set to true, also returns true if the ped is currently in the process of entering a vehicle (a specific stage check for CTaskEnterVehicle)."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInCombat",
    "hash": "0x4859F1FC66A6278E",
    "code": "-- IS_PED_IN_COMBAT\nlocal retval --[[ boolean ]] =\n\tIsPedInCombat(\n\t\tped --[[ Ped ]], \n\t\ttarget --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nPed index.",
      "target:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index.\n\ntarget:\n\nExamines whether the ped is engaged in combat; when given a target ped index, it confirms if the ped is actively fighting the specified target, returning true if engaged and false if not."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInCover",
    "hash": "0x60DFD0691A170B88",
    "code": "-- IS_PED_IN_COVER\nlocal retval --[[ boolean ]] =\n\tIsPedInCover(\n\t\tped --[[ Ped ]], \n\t\texceptUseWeapon --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 is nearly always 0 in the scripts."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInCoverFacingLeft",
    "hash": "0x845333B3150583AB",
    "code": "-- IS_PED_IN_COVER_FACING_LEFT\nlocal retval --[[ boolean ]] =\n\tIsPedInCoverFacingLeft(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInFlyingVehicle",
    "hash": "0x9134873537FA419C",
    "code": "-- IS_PED_IN_FLYING_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedInFlyingVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInGroup",
    "hash": "0x5891CAC5D4ACFF74",
    "code": "-- IS_PED_IN_GROUP\nlocal retval --[[ boolean ]] =\n\tIsPedInGroup(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInHighCover",
    "hash": "0x6A03BF943D767C93",
    "code": "-- IS_PED_IN_HIGH_COVER\nlocal retval --[[ boolean ]] =\n\tIsPedInHighCover(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInMeleeCombat",
    "hash": "0x4E209B2C1EAD5159",
    "code": "-- IS_PED_IN_MELEE_COMBAT\nlocal retval --[[ boolean ]] =\n\tIsPedInMeleeCombat(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Notes: The function only returns true while the ped is:   \nA.) Swinging a random melee attack (including pistol-whipping)  \nB.) Reacting to being hit by a melee attack (including pistol-whipping)  \nC.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).   \nYou don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInModel",
    "hash": "0x796D90EFB19AA332",
    "code": "-- IS_PED_IN_MODEL\nlocal retval --[[ boolean ]] =\n\tIsPedInModel(\n\t\tped --[[ Ped ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInParachuteFreeFall",
    "hash": "0x7DCE8BDA0F1C1200",
    "code": "-- IS_PED_IN_PARACHUTE_FREE_FALL\nlocal retval --[[ boolean ]] =\n\tIsPedInParachuteFreeFall(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInSphereAreaOfAnyEnemyPeds",
    "hash": "0x082D79E15302F0C2",
    "code": "-- IS_PED_IN_SPHERE_AREA_OF_ANY_ENEMY_PEDS\nlocal retval --[[ boolean ]] =\n\tIsPedInSphereAreaOfAnyEnemyPeds(\n\t\tped --[[ Ped ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\trange --[[ number ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to check.",
      "x: \n\nX coordinate",
      "y: \n\nY coordinate",
      "z: \n\nZ coordinate",
      "range: \n\nRadius of sphere."
    ],
    "returns": [
      "Returns true if ped is within range of any enemies, false otherwise."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped to check.\n\nx: \n\nX coordinate\n\ny: \n\nY coordinate\n\nz: \n\nZ coordinate\n\nrange: \n\nRadius of sphere.\n\nReturns:\n\nReturns true if ped is within range of any enemies, false otherwise.\n\nNativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInVehicle",
    "hash": "0xA3EE4A07279BB9DB",
    "code": "-- IS_PED_IN_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedInVehicle(\n\t\tped --[[ Ped ]], \n\t\tvehicle --[[ Vehicle ]], \n\t\tatGetIn --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a value indicating whether the specified ped is in the specified vehicle.  \nIf 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedInjured",
    "hash": "0x84A2DD9AC37C35C1",
    "code": "-- IS_PED_INJURED\nlocal retval --[[ boolean ]] =\n\tIsPedInjured(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to check for injuries."
    ],
    "returns": [
      "Returns true if the ped is injured, false otherwise."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped to check for injuries.\n\nReturns:\n\nReturns true if the ped is injured, false otherwise.\n\nIndicates whether this ped's health is below its injured threshold. The default threshold is 100, these are stored in the pedhealth.meta file located in common:\\data\\\n\nBelow are some of the values\nInjuredHealthThreshold\tName\n100.000000\tStrong\n100.000000\tAverage\n100.000000\tWeak"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedJacking",
    "hash": "0x4AE4FF911DFB61DA",
    "code": "-- IS_PED_JACKING\nlocal retval --[[ boolean ]] =\n\tIsPedJacking(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedJumping",
    "hash": "0xCEDABC5900A0BF97",
    "code": "-- IS_PED_JUMPING\nlocal retval --[[ boolean ]] =\n\tIsPedJumping(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedJumpingOutOfVehicle",
    "hash": "0x433DDFFE2044B636",
    "code": "-- IS_PED_JUMPING_OUT_OF_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedJumpingOutOfVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedLipstickColorValid",
    "hash": "0x0525A2C2562F3CD4",
    "code": "-- _IS_PED_LIPSTICK_COLOR_VALID\nlocal retval --[[ boolean ]] =\n\tIsPedLipstickColorValid(\n\t\tcolorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedLipstickColorValid_2",
    "hash": "0x3E802F11FBE27674",
    "code": "-- _IS_PED_LIPSTICK_COLOR_VALID_2\nlocal retval --[[ boolean ]] =\n\tIsPedLipstickColorValid_2(\n\t\tcolorId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedMale",
    "hash": "0x6D9F5FAA7488BA46",
    "code": "-- IS_PED_MALE\nlocal retval --[[ boolean ]] =\n\tIsPedMale(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true/false if the ped is/isn't male."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedModel",
    "hash": "0xC9D55B1A358A5BF7",
    "code": "-- IS_PED_MODEL\nlocal retval --[[ boolean ]] =\n\tIsPedModel(\n\t\tped --[[ Ped ]], \n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedOnAnyBike",
    "hash": "0x94495889E22C6479",
    "code": "-- IS_PED_ON_ANY_BIKE\nlocal retval --[[ boolean ]] =\n\tIsPedOnAnyBike(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedOnFoot",
    "hash": "0x01FEE67DB37F59B2",
    "code": "-- IS_PED_ON_FOOT\nlocal retval --[[ boolean ]] =\n\tIsPedOnFoot(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedOnMount",
    "hash": "0x460BC76A0E10655E",
    "code": "-- IS_PED_ON_MOUNT\nlocal retval --[[ boolean ]] =\n\tIsPedOnMount(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same function call as PED::GET_MOUNT, aka just returns 0"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedOnSpecificVehicle",
    "hash": "0xEC5F66E459AF3BB2",
    "code": "-- IS_PED_ON_SPECIFIC_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedOnSpecificVehicle(\n\t\tped --[[ Ped ]], \n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedOnVehicle",
    "hash": "0x67722AEB798E5FAB",
    "code": "-- IS_PED_ON_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedOnVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a value indicating whether the specified ped is on top of any vehicle.  \nReturn 1 when ped is on vehicle.  \nReturn 0 when ped is not on a vehicle."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedOpeningADoor",
    "hash": "0x26AF0E8E30BD2A2C",
    "code": "-- _IS_PED_OPENING_A_DOOR\nlocal retval --[[ boolean ]] =\n\tIsPedOpeningADoor(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "IS_PED_*\n\nReturns true if the ped is currently opening a door (CTaskOpenDoor)."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedPerformingDependentComboLimit",
    "hash": "0xEBD0EDBA5BE957CF",
    "code": "-- IS_PED_PERFORMING_DEPENDENT_COMBO_LIMIT\nlocal retval --[[ boolean ]] =\n\tIsPedPerformingDependentComboLimit(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedPerformingMeleeAction",
    "hash": "0xDCCA191DF9980FD7",
    "code": "-- IS_PED_PERFORMING_MELEE_ACTION\nlocal retval --[[ boolean ]] =\n\tIsPedPerformingMeleeAction(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedPerformingStealthKill",
    "hash": "0xFD4CCDBCC59941B7",
    "code": "-- IS_PED_PERFORMING_STEALTH_KILL\nlocal retval --[[ boolean ]] =\n\tIsPedPerformingStealthKill(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedPlantingBomb",
    "hash": "0xC70B5FAE151982D8",
    "code": "-- IS_PED_PLANTING_BOMB\nlocal retval --[[ boolean ]] =\n\tIsPedPlantingBomb(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedProne",
    "hash": "0xD6A86331A537A7B9",
    "code": "-- IS_PED_PRONE\nlocal retval --[[ boolean ]] =\n\tIsPedProne(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedRagdoll",
    "hash": "0x47E4E977581C5B55",
    "code": "-- IS_PED_RAGDOLL\nlocal retval --[[ boolean ]] =\n\tIsPedRagdoll(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "If the ped handle passed through the parenthesis is in a ragdoll state this will return true."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedReloading",
    "hash": "0x24B100C68C645951",
    "code": "-- IS_PED_RELOADING\nlocal retval --[[ boolean ]] =\n\tIsPedReloading(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the specified ped is reloading."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedRespondingToEvent",
    "hash": "0x625B774D75C87068",
    "code": "-- IS_PED_RESPONDING_TO_EVENT\nlocal retval --[[ boolean ]] =\n\tIsPedRespondingToEvent(\n\t\tped --[[ Ped ]], \n\t\tevent --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedRunningMeleeTask",
    "hash": "0xD1871251F3B5ACD7",
    "code": "-- IS_PED_RUNNING_MELEE_TASK\nlocal retval --[[ boolean ]] =\n\tIsPedRunningMeleeTask(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedRunningMobilePhoneTask",
    "hash": "0x2AFE52F782F25775",
    "code": "-- IS_PED_RUNNING_MOBILE_PHONE_TASK\nlocal retval --[[ boolean ]] =\n\tIsPedRunningMobilePhoneTask(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedRunningRagdollTask",
    "hash": "0xE3B6097CC25AA69E",
    "code": "-- IS_PED_RUNNING_RAGDOLL_TASK\nlocal retval --[[ boolean ]] =\n\tIsPedRunningRagdollTask(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedShaderEffectValid",
    "hash": "0x81AA517FBBA05D39",
    "code": "-- _IS_PED_SHADER_EFFECT_VALID\nlocal retval --[[ boolean ]] =\n\tIsPedShaderEffectValid(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedShooting",
    "hash": "0x34616828CD07F1A1",
    "code": "-- IS_PED_SHOOTING\nlocal retval --[[ boolean ]] =\n\tIsPedShooting(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the specified ped is shooting."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedShootingInArea",
    "hash": "0x7E9DFE24AC1E58EF",
    "code": "-- IS_PED_SHOOTING_IN_AREA\nlocal retval --[[ boolean ]] =\n\tIsPedShootingInArea(\n\t\tped --[[ Ped ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tp7 --[[ boolean ]], \n\t\tp8 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedSittingInAnyVehicle",
    "hash": "0x826AA586EDB9FEF8",
    "code": "-- IS_PED_SITTING_IN_ANY_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedSittingInAnyVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Detect if ped is in any vehicle  \n[True/False]"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedSittingInVehicle",
    "hash": "0xA808AA1D79230FC2",
    "code": "-- IS_PED_SITTING_IN_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedSittingInVehicle(\n\t\tped --[[ Ped ]], \n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Detect if ped is sitting in the specified vehicle  \n[True/False]"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedStopped",
    "hash": "0x530944F6F4B8A214",
    "code": "-- IS_PED_STOPPED\nlocal retval --[[ boolean ]] =\n\tIsPedStopped(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedSwappingWeapon",
    "hash": "0x3795688A307E1EB6",
    "code": "-- _IS_PED_SWAPPING_WEAPON\nlocal retval --[[ boolean ]] =\n\tIsPedSwappingWeapon(\n\t\tPed --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedSwimming",
    "hash": "0x9DE327631295B4C2",
    "code": "-- IS_PED_SWIMMING\nlocal retval --[[ boolean ]] =\n\tIsPedSwimming(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedSwimmingUnderWater",
    "hash": "0xC024869A53992F34",
    "code": "-- IS_PED_SWIMMING_UNDER_WATER\nlocal retval --[[ boolean ]] =\n\tIsPedSwimmingUnderWater(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedTakingOffHelmet",
    "hash": "0x14590DDBEDB1EC85",
    "code": "-- IS_PED_TAKING_OFF_HELMET\nlocal retval --[[ boolean ]] =\n\tIsPedTakingOffHelmet(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedTracked",
    "hash": "0x4C5E1F087CD10BB7",
    "code": "-- IS_PED_TRACKED\nlocal retval --[[ boolean ]] =\n\tIsPedTracked(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedTryingToEnterALockedVehicle",
    "hash": "0x44D28D5DDFE5F68C",
    "code": "-- IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPedTryingToEnterALockedVehicle(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nPed index."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index.\n\nIf the ped is attempting to enter a locked vehicle."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedUsingActionMode",
    "hash": "0x00E73468D085F745",
    "code": "-- IS_PED_USING_ACTION_MODE\nlocal retval --[[ boolean ]] =\n\tIsPedUsingActionMode(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedUsingAnyScenario",
    "hash": "0x57AB4A3080F85143",
    "code": "-- IS_PED_USING_ANY_SCENARIO\nlocal retval --[[ boolean ]] =\n\tIsPedUsingAnyScenario(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle."
    ],
    "returns": [
      "Returns true if the ped is using any scenario."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nReturns:\n\nReturns true if the ped is using any scenario."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedUsingScenario",
    "hash": "0x1BF094736DD62C2E",
    "code": "-- IS_PED_USING_SCENARIO\nlocal retval --[[ boolean ]] =\n\tIsPedUsingScenario(\n\t\tped --[[ Ped ]], \n\t\tscenario --[[ string ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "scenario: \n\nThe scenario name."
    ],
    "returns": [
      "Returns true if the specified ped is using the specified scenario."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nscenario: \n\nThe scenario name.\n\nReturns:\n\nReturns true if the specified ped is using the specified scenario.\n\nSee TASK_START_SCENARIO_IN_PLACE for a list of scenarios."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedVaulting",
    "hash": "0x117C70D1F5730B5E",
    "code": "-- IS_PED_VAULTING\nlocal retval --[[ boolean ]] =\n\tIsPedVaulting(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedWearingHelmet",
    "hash": "0xF33BDFE19B309B19",
    "code": "-- IS_PED_WEARING_HELMET\nlocal retval --[[ boolean ]] =\n\tIsPedWearingHelmet(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the ped passed through the parenthesis is wearing a helmet."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedheadshotImgUploadAvailable",
    "hash": "0xEBB376779A760AA8",
    "code": "-- IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE\nlocal retval --[[ boolean ]] =\n\tIsPedheadshotImgUploadAvailable()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedheadshotReady",
    "hash": "0x7085228842B13A67",
    "code": "-- IS_PEDHEADSHOT_READY\nlocal retval --[[ boolean ]] =\n\tIsPedheadshotReady(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gtaforums.com/topic/885580-ped-headshotmugshot-txd/"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsPedheadshotValid",
    "hash": "0xA0A9668F158129A2",
    "code": "-- IS_PEDHEADSHOT_VALID\nlocal retval --[[ boolean ]] =\n\tIsPedheadshotValid(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gtaforums.com/topic/885580-ped-headshotmugshot-txd/"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsScriptedScenarioPedUsingConditionalAnim",
    "hash": "0x6EC47A344923E1ED",
    "code": "-- IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM\nlocal retval --[[ boolean ]] =\n\tIsScriptedScenarioPedUsingConditionalAnim(\n\t\tped --[[ Ped ]], \n\t\tanimDict --[[ string ]], \n\t\tanim --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsScubaGearLightEnabled",
    "hash": "0x88274C11CF0D866D",
    "code": "-- _IS_SCUBA_GEAR_LIGHT_ENABLED\nlocal retval --[[ boolean ]] =\n\tIsScubaGearLightEnabled(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsSynchronizedSceneHoldLastFrame",
    "hash": "0x7F2F4F13AC5257EF",
    "code": "-- IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME\nlocal retval --[[ boolean ]] =\n\tIsSynchronizedSceneHoldLastFrame(\n\t\tsceneID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsSynchronizedSceneLooped",
    "hash": "0x62522002E0C391BA",
    "code": "-- IS_SYNCHRONIZED_SCENE_LOOPED\nlocal retval --[[ boolean ]] =\n\tIsSynchronizedSceneLooped(\n\t\tsceneID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsSynchronizedSceneRunning",
    "hash": "0x25D39B935A038A26",
    "code": "-- IS_SYNCHRONIZED_SCENE_RUNNING\nlocal retval --[[ boolean ]] =\n\tIsSynchronizedSceneRunning(\n\t\tsceneId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if a synchronized scene is running"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "IsTrackedPedVisible",
    "hash": "0x91C8E617F64188AC",
    "code": "-- IS_TRACKED_PED_VISIBLE\nlocal retval --[[ boolean ]] =\n\tIsTrackedPedVisible(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.  \nTarget needs to be tracked.. won't work otherwise."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "KnockOffPedProp",
    "hash": "0x6FD7816A36615F48",
    "code": "-- KNOCK_OFF_PED_PROP\nKnockOffPedProp(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "KnockPedOffVehicle",
    "hash": "0x45BBCBA77C29A841",
    "code": "-- KNOCK_PED_OFF_VEHICLE\nKnockPedOffVehicle(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "PlayFacialAnim",
    "hash": "0xE1E65CA8AC9C00ED",
    "code": "-- PLAY_FACIAL_ANIM\nPlayFacialAnim(\n\tped --[[ Ped ]], \n\tanimName --[[ string ]], \n\tanimDict --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RegisterHatedTargetsAroundPed",
    "hash": "0x9222F300BF8354FE",
    "code": "-- REGISTER_HATED_TARGETS_AROUND_PED\nRegisterHatedTargetsAroundPed(\n\tped --[[ Ped ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in)."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RegisterPedheadshot",
    "hash": "0x4462658788425076",
    "code": "-- REGISTER_PEDHEADSHOT\nlocal retval --[[ integer ]] =\n\tRegisterPedheadshot(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped you want to take the \"headshot\" of."
    ],
    "returns": [
      "It returns a Pedheadshot handle, which can be used by natives such as GET_PEDHEADSHOT_TXD_STRING"
    ],
    "description": "Parameters:\n\nped: \n\nThe ped you want to take the \"headshot\" of.\n\nReturns:\n\nIt returns a Pedheadshot handle, which can be used by natives such as GET_PEDHEADSHOT_TXD_STRING\n\ngtaforums.com/topic/885580-ped-headshotmugshot-txd/"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RegisterPedheadshot_3",
    "hash": "0xBA8805A1108A2515",
    "code": "-- _REGISTER_PEDHEADSHOT_3\nlocal retval --[[ integer ]] =\n\tRegisterPedheadshot_3(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RegisterPedheadshotTransparent",
    "hash": "0x953563CE563143AF",
    "code": "-- REGISTER_PEDHEADSHOT_TRANSPARENT\nlocal retval --[[ integer ]] =\n\tRegisterPedheadshotTransparent(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nA ped handle."
    ],
    "returns": [
      "The Pedheadshot handle."
    ],
    "description": "Parameters:\n\nped: \n\nA ped handle.\n\nReturns:\n\nThe Pedheadshot handle.\n\nSimilar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.\n\nResult of the example code: https://i.imgur.com/iHz8ztn.png"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RegisterTarget",
    "hash": "0x2F25D9AEFA34FBA2",
    "code": "-- REGISTER_TARGET\nRegisterTarget(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.  \nl_216 = RECSBRobber1"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ReleasePedPreloadPropData",
    "hash": "0xF79F9DEF0AADE61A",
    "code": "-- RELEASE_PED_PRELOAD_PROP_DATA\nReleasePedPreloadPropData(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ReleasePedPreloadVariationData",
    "hash": "0x5AAB586FFEC0FD96",
    "code": "-- RELEASE_PED_PRELOAD_VARIATION_DATA\nReleasePedPreloadVariationData(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ReleasePedheadshotImgUpload",
    "hash": "0x5D517B27CF6ECD04",
    "code": "-- RELEASE_PEDHEADSHOT_IMG_UPLOAD\nReleasePedheadshotImgUpload(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemoveActionModeAsset",
    "hash": "0x13E940F88470FA51",
    "code": "-- REMOVE_ACTION_MODE_ASSET\nRemoveActionModeAsset(\n\tasset --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemoveGroup",
    "hash": "0x8EB2F69076AF7053",
    "code": "-- REMOVE_GROUP\nRemoveGroup(\n\tgroupId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemovePedDefensiveArea",
    "hash": "0x74D4E028107450A9",
    "code": "-- REMOVE_PED_DEFENSIVE_AREA\nRemovePedDefensiveArea(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Ped will no longer get angry when you stay near him."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemovePedElegantly",
    "hash": "0xAC6D445B994DF95E",
    "code": "-- REMOVE_PED_ELEGANTLY\nlocal ped --[[ Ped ]] =\n\tRemovePedElegantly()",
    "parameters": [],
    "returns": [],
    "description": "Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemovePedFromGroup",
    "hash": "0xED74007FFB146BC2",
    "code": "-- REMOVE_PED_FROM_GROUP\nRemovePedFromGroup(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemovePedHelmet",
    "hash": "0xA7B2458D0AD6DED8",
    "code": "-- REMOVE_PED_HELMET\nRemovePedHelmet(\n\tped --[[ Ped ]], \n\tinstantly --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nPed index.",
      "instantly: \n\nForce to remove."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index.\n\ninstantly: \n\nForce to remove.\n\nRemove a helmet from a ped"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemovePedPreferredCoverSet",
    "hash": "0xFDDB234CF74073D9",
    "code": "-- REMOVE_PED_PREFERRED_COVER_SET\nRemovePedPreferredCoverSet(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemoveRelationshipGroup",
    "hash": "0xB6BA2444AB393DA2",
    "code": "-- REMOVE_RELATIONSHIP_GROUP\nRemoveRelationshipGroup(\n\tgroupHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemoveScenarioBlockingArea",
    "hash": "0x31D16B74C6E29D66",
    "code": "-- REMOVE_SCENARIO_BLOCKING_AREA\nRemoveScenarioBlockingArea(\n\tscenarioBlockingIndex --[[ integer ]], \n\tbNetwork --[[ boolean ]]\n)",
    "parameters": [
      "scenarioBlockingIndex: \n\nthe index of the Scenario blocking area",
      "bNetwork: \n\nOptionally networked to all other players"
    ],
    "returns": [],
    "description": "Parameters:\n\nscenarioBlockingIndex: \n\nthe index of the Scenario blocking area\n\nbNetwork: \n\nOptionally networked to all other players"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemoveScenarioBlockingAreas",
    "hash": "0xD37401D78A929A49",
    "code": "-- REMOVE_SCENARIO_BLOCKING_AREAS\nRemoveScenarioBlockingAreas()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RemoveStealthModeAsset",
    "hash": "0x9219857D21F0E842",
    "code": "-- REMOVE_STEALTH_MODE_ASSET\nRemoveStealthModeAsset(\n\tasset --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RequestActionModeAsset",
    "hash": "0x290E2780BB7AA598",
    "code": "-- REQUEST_ACTION_MODE_ASSET\nRequestActionModeAsset(\n\tasset --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RequestPedVehicleVisibilityTracking",
    "hash": "0x2BC338A7B21F4608",
    "code": "-- REQUEST_PED_VEHICLE_VISIBILITY_TRACKING\nRequestPedVehicleVisibilityTracking(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RequestPedVisibilityTracking",
    "hash": "0x7D7A2E43E74E2EB8",
    "code": "-- REQUEST_PED_VISIBILITY_TRACKING\nRequestPedVisibilityTracking(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RequestPedheadshotImgUpload",
    "hash": "0xF0DAEF2F545BEE25",
    "code": "-- REQUEST_PEDHEADSHOT_IMG_UPLOAD\nlocal retval --[[ boolean ]] =\n\tRequestPedheadshotImgUpload(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "RequestStealthModeAsset",
    "hash": "0x2A0A62FCDEE16D4F",
    "code": "-- REQUEST_STEALTH_MODE_ASSET\nRequestStealthModeAsset(\n\tasset --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetAiMeleeWeaponDamageModifier",
    "hash": "0x46E56A7CD1D63C3F",
    "code": "-- RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER\nResetAiMeleeWeaponDamageModifier()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetAiWeaponDamageModifier",
    "hash": "0xEA16670E7BA4743C",
    "code": "-- RESET_AI_WEAPON_DAMAGE_MODIFIER\nResetAiWeaponDamageModifier()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetGroupFormationDefaultSpacing",
    "hash": "0x63DAB4CCB3273205",
    "code": "-- RESET_GROUP_FORMATION_DEFAULT_SPACING\nResetGroupFormationDefaultSpacing(\n\tgroupHandle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetPedInVehicleContext",
    "hash": "0x22EF8FF8778030EB",
    "code": "-- RESET_PED_IN_VEHICLE_CONTEXT\nResetPedInVehicleContext(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetPedLastVehicle",
    "hash": "0xBB8DE8CF6A8DD8BB",
    "code": "-- RESET_PED_LAST_VEHICLE\nResetPedLastVehicle(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Resets the value for the last vehicle driven by the Ped."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetPedMovementClipset",
    "hash": "0xAA74EC0CB0AAEA2C",
    "code": "-- RESET_PED_MOVEMENT_CLIPSET\nResetPedMovementClipset(\n\tped --[[ Ped ]], \n\ttransitionSpeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetPedRagdollTimer",
    "hash": "0x9FA4664CF62E47E8",
    "code": "-- RESET_PED_RAGDOLL_TIMER\nResetPedRagdollTimer(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetPedStrafeClipset",
    "hash": "0x20510814175EA477",
    "code": "-- RESET_PED_STRAFE_CLIPSET\nResetPedStrafeClipset(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetPedVisibleDamage",
    "hash": "0x3AC1F7B898F30C05",
    "code": "-- RESET_PED_VISIBLE_DAMAGE\nResetPedVisibleDamage(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResetPedWeaponMovementClipset",
    "hash": "0x97B0DB5B4AA74E77",
    "code": "-- RESET_PED_WEAPON_MOVEMENT_CLIPSET\nResetPedWeaponMovementClipset(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ResurrectPed",
    "hash": "0x71BC8E838B9C6035",
    "code": "-- RESURRECT_PED\nResurrectPed(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This function will simply bring the dead person back to life.\nTry not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).\nInstead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)\nAlso, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "ReviveInjuredPed",
    "hash": "0x8D8ACD8388CD99CE",
    "code": "-- REVIVE_INJURED_PED\nReviveInjuredPed(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It will revive/cure the injured ped. The condition is ped must not be dead.  \nUpon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).  \nThis function is well suited there."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetAiMeleeWeaponDamageModifier",
    "hash": "0x66460DEDDD417254",
    "code": "-- SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER\nSetAiMeleeWeaponDamageModifier(\n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetAiWeaponDamageModifier",
    "hash": "0x1B1E2A40A65B8521",
    "code": "-- SET_AI_WEAPON_DAMAGE_MODIFIER\nSetAiWeaponDamageModifier(\n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetAmbientPedsDropMoney",
    "hash": "0x6B0E6172C9A4D902",
    "code": "-- SET_AMBIENT_PEDS_DROP_MONEY\nSetAmbientPedsDropMoney(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetBlockAmbientPedsFromDroppingWeaponsThisFrame",
    "hash": "0xC73EFFC5E043A8BA",
    "code": "-- _SET_BLOCK_AMBIENT_PEDS_FROM_DROPPING_WEAPONS_THIS_FRAME\nSetBlockAmbientPedsFromDroppingWeaponsThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Prevents ambient peds from dropping their weapons for the current frame.\n\nNativeDB Introduced: v3258"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetBlockingOfNonTemporaryEvents",
    "hash": "0x9F8AA94D6D97DBF4",
    "code": "-- SET_BLOCKING_OF_NON_TEMPORARY_EVENTS\nSetBlockingOfNonTemporaryEvents(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetCanAttackFriendly",
    "hash": "0xB3B1CB349FF9C75D",
    "code": "-- SET_CAN_ATTACK_FRIENDLY\nSetCanAttackFriendly(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Setting ped to true allows the ped to shoot \"friendlies\".  \np2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.  \np1 = false & p2 = false for unable to aim at.  \np1 = true & p2 = false for able to aim at."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetCombatFloat",
    "hash": "0xFF41B4B141ED981C",
    "code": "-- SET_COMBAT_FLOAT\nSetCombatFloat(\n\tped --[[ Ped ]], \n\tcombatType --[[ integer ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetCreateRandomCops",
    "hash": "0x102E68B2024D536D",
    "code": "-- SET_CREATE_RANDOM_COPS\nSetCreateRandomCops(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetCreateRandomCopsNotOnScenarios",
    "hash": "0x8A4986851C4EF6E7",
    "code": "-- SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS\nSetCreateRandomCopsNotOnScenarios(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetCreateRandomCopsOnScenarios",
    "hash": "0x444CB7D7DBE6973D",
    "code": "-- SET_CREATE_RANDOM_COPS_ON_SCENARIOS\nSetCreateRandomCopsOnScenarios(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetDriverAbility",
    "hash": "0xB195FFA8042FC5C3",
    "code": "-- SET_DRIVER_ABILITY\nSetDriverAbility(\n\tdriver --[[ Ped ]], \n\tability --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetDriverAggressiveness",
    "hash": "0xA731F608CA104E3C",
    "code": "-- SET_DRIVER_AGGRESSIVENESS\nSetDriverAggressiveness(\n\tdriver --[[ Ped ]], \n\taggressiveness --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "range 0.0f - 1.0f"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetDriverRacingModifier",
    "hash": "0xDED5AF5A0EA4B297",
    "code": "-- SET_DRIVER_RACING_MODIFIER\nSetDriverRacingModifier(\n\tdriver --[[ Ped ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetEnableBoundAnkles",
    "hash": "0xC52E0F855C58FC2E",
    "code": "-- SET_ENABLE_BOUND_ANKLES\nSetEnableBoundAnkles(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used with SET_ENABLE_HANDCUFFS in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetEnableHandcuffs",
    "hash": "0xDF1AF8B5D56542FA",
    "code": "-- SET_ENABLE_HANDCUFFS\nSetEnableHandcuffs(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to toggle handcuffs on",
      "toggle: \n\ntrue to enable handcuffs, false to disable"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to toggle handcuffs on\n\ntoggle: \n\ntrue to enable handcuffs, false to disable\n\nSets the IsHandCuffed (120) config flag on the ped. This blocks the ped from switching weapons (with the exception of switching to weapon_unarmed), makes the ped ragdoll on getting punched and forces a different get-up animation after ragdolling. The ped can also not vault over or climb on top of objects.\n\nUsed in combination with SET_ENABLE_BOUND_ANKLES in decompiled scripts."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetEnablePedEnveffScale",
    "hash": "0xD2C5AA0C0E8D0F1E",
    "code": "-- SET_ENABLE_PED_ENVEFF_SCALE\nSetEnablePedEnveffScale(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetEnableScuba",
    "hash": "0xF99F62004024D506",
    "code": "-- SET_ENABLE_SCUBA\nSetEnableScuba(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enables diving motion when underwater."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetEnableScubaGearLight",
    "hash": "0xEE2476B9EE4A094F",
    "code": "-- _SET_ENABLE_SCUBA_GEAR_LIGHT\nSetEnableScubaGearLight(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetFacialClipsetOverride",
    "hash": "0x5687C7F05B39E401",
    "code": "-- _SET_FACIAL_CLIPSET_OVERRIDE\nSetFacialClipsetOverride(\n\tped --[[ Ped ]], \n\tanimDict --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Clipsets: \"facials@gen_female@base\" \"facials@gen_male@base\" \"facials@p_m_zero@base\"\n\nTypically followed with SET_FACIAL_IDLE_ANIM_OVERRIDE: \"mood_drunk_1\" \"mood_stressed_1\" \"mood_happy_1\" \"mood_talking_1\"\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetFacialIdleAnimOverride",
    "hash": "0xFFC24B988B938B38",
    "code": "-- SET_FACIAL_IDLE_ANIM_OVERRIDE\nSetFacialIdleAnimOverride(\n\tped --[[ Ped ]], \n\tanimName --[[ string ]], \n\tanimDict --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetForceFootstepUpdate",
    "hash": "0x129466ED55140F8D",
    "code": "-- SET_FORCE_FOOTSTEP_UPDATE\nSetForceFootstepUpdate(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetForceStepType",
    "hash": "0xCB968B53FC7F916D",
    "code": "-- SET_FORCE_STEP_TYPE\nSetForceStepType(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]], \n\ttype --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetGroupFormation",
    "hash": "0xCE2F5FC3AF7E8C1E",
    "code": "-- SET_GROUP_FORMATION\nSetGroupFormation(\n\tgroupId --[[ integer ]], \n\tformationType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "0: Freedom to move\n1: Circle Around Leader\n2: Alternative Circle Around Leader  \n3: Line, with Leader at center  \n4: Arrow Formation\n5: \"V\" Formation\n6: Line Follow Formation\n7: Single Formation\n8: Pairwise"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetGroupFormationSpacing",
    "hash": "0x1D9D45004C28C916",
    "code": "-- SET_GROUP_FORMATION_SPACING\nSetGroupFormationSpacing(\n\tgroupId --[[ integer ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetGroupSeparationRange",
    "hash": "0x4102C7858CFEE4E4",
    "code": "-- SET_GROUP_SEPARATION_RANGE\nSetGroupSeparationRange(\n\tgroupHandle --[[ integer ]], \n\tseparationRange --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the range at which members will automatically leave the group."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetHeadBlendPaletteColor",
    "hash": "0xCC9682B8951C5229",
    "code": "-- SET_HEAD_BLEND_PALETTE_COLOR\nSetHeadBlendPaletteColor(\n\tped --[[ Ped ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]], \n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Preview: https://gfycat.com/MaleRareAmazonparrot"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetIkTarget",
    "hash": "0xC32779C16FCEECD9",
    "code": "-- SET_IK_TARGET\nSetIkTarget(\n\tped --[[ Ped ]], \n\tikIndex --[[ integer ]], \n\tentityLookAt --[[ Entity ]], \n\tboneLookAt --[[ integer ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]], \n\toffsetZ --[[ number ]], \n\tikTargetFlags --[[ integer ]], \n\tblendInDuration --[[ integer ]], \n\tblendOutDuration --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "ikIndex: \n\nSee eIkPart for indexes.",
      "entityLookAt: \n\nSet to 0 for no entity, offsets will be world coordinates instead.",
      "boneLookAt: \n\nSet to -1 for no target bone.",
      "offsetX: \n\nX-axis offset calculated from the position of entityLookAt.",
      "offsetY: \n\nY-axis offset calculated from the position of entityLookAt.",
      "offsetZ: \n\nZ-axis offset calculated from the position of entityLookAt.",
      "ikTargetFlags: \n\nSee eIkTargetFlags for flags.",
      "blendInDuration: \n\nAnimation blending in (in ms). -1 by default.",
      "blendOutDuration: \n\nAnimation blending out (in ms). -1 by default."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nikIndex: \n\nSee eIkPart for indexes.\n\nentityLookAt: \n\nSet to 0 for no entity, offsets will be world coordinates instead.\n\nboneLookAt: \n\nSet to -1 for no target bone.\n\noffsetX: \n\nX-axis offset calculated from the position of entityLookAt.\n\noffsetY: \n\nY-axis offset calculated from the position of entityLookAt.\n\noffsetZ: \n\nZ-axis offset calculated from the position of entityLookAt.\n\nikTargetFlags: \n\nSee eIkTargetFlags for flags.\n\nblendInDuration: \n\nAnimation blending in (in ms). -1 by default.\n\nblendOutDuration: \n\nAnimation blending out (in ms). -1 by default.\n\nSets the IK target for a given IK part belonging to the ped.\n\nPlease note: The IK target will only be valid for one update, so it needs to be set for as long as it is needed (to avoid IK targets not being cleared and getting stuck enabled).\n\nenum eIkPart {\n  IK_PART_INVALID = 0,\n  // head\n  IK_PART_HEAD = 1,\n  // spine\n  IK_PART_SPINE = 2,\n  // Left Arm\n  IK_PART_ARM_LEFT = 3,\n  // Right Arm\n  IK_PART_ARM_RIGHT = 4,\n  // Left Leg\n  IK_PART_LEG_LEFT = 5,\n  // Right Leg\n  IK_PART_LEG_RIGHT = 6\n};\n\nenum eIkTargetFlags {\n  ITF_DEFAULT = 0,\n  // arm target relative to the handbone\n  ITF_ARM_TARGET_WRT_HANDBON = 1,\n  // arm target relative to the pointhelper\n  ITF_ARM_TARGET_WRT_POINTHELPER = 2,\n  // arm target relative to the ikhelper\n  ITF_ARM_TARGET_WRT_IKHELPE = 4,\n  // use animation tags directly\n  ITF_IK_TAG_MODE_NORMAL = 8,\n  // use animation tags in ALLOW mode\n  ITF_IK_TAG_MODE_ALLOW = 16,\n  // use animation tags in BLOCK mode\n  ITF_IK_TAG_MODE_BLOCK = 32,\n  // solve for orientation in addition to position\n  ITF_ARM_USE_ORIENTATION = 64\n};\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetMovementModeOverride",
    "hash": "0x781DE8FA214E87D2",
    "code": "-- SET_MOVEMENT_MODE_OVERRIDE\nSetMovementModeOverride(\n\tped --[[ Ped ]], \n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "name: \"MP_FEMALE_ACTION\" found multiple times in the b617d scripts."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAccuracy",
    "hash": "0x7AEFB85C1D49DEB6",
    "code": "-- SET_PED_ACCURACY\nSetPedAccuracy(\n\tped --[[ Ped ]], \n\taccuracy --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "accuracy = 0-100, 100 being perfectly accurate"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAlertness",
    "hash": "0xDBA71115ED9941A6",
    "code": "-- SET_PED_ALERTNESS\nSetPedAlertness(\n\tped --[[ Ped ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "value ranges from 0 to 3."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAllowVehiclesOverride",
    "hash": "0x3C028C636A414ED9",
    "code": "-- SET_PED_ALLOW_VEHICLES_OVERRIDE\nSetPedAllowVehiclesOverride(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAllowedToDuck",
    "hash": "0xDA1F1B7BE1A8766F",
    "code": "-- SET_PED_ALLOWED_TO_DUCK\nSetPedAllowedToDuck(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAlternateMovementAnim",
    "hash": "0x90A43CC281FFAB46",
    "code": "-- SET_PED_ALTERNATE_MOVEMENT_ANIM\nSetPedAlternateMovementAnim(\n\tped --[[ Ped ]], \n\tstance --[[ integer ]], \n\tanimDictionary --[[ string ]], \n\tanimationName --[[ string ]], \n\tp4 --[[ number ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "stance:  \n0 = idle  \n1 = walk  \n2 = running  \np5 = usually set to true  \n\n\nAnimations list"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAlternateWalkAnim",
    "hash": "0x6C60394CB4F75E9A",
    "code": "-- SET_PED_ALTERNATE_WALK_ANIM\nSetPedAlternateWalkAnim(\n\tped --[[ Ped ]], \n\tanimDict --[[ string ]], \n\tanimName --[[ string ]], \n\tp3 --[[ number ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAngledDefensiveArea",
    "hash": "0xC7F76DF27A5045A1",
    "code": "-- SET_PED_ANGLED_DEFENSIVE_AREA\nSetPedAngledDefensiveArea(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]], \n\tp8 --[[ boolean ]], \n\tp9 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAoBlobRendering",
    "hash": "0x2B5AA717A181FB4C",
    "code": "-- SET_PED_AO_BLOB_RENDERING\nSetPedAoBlobRendering(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedArmour",
    "hash": "0xCEA04D83135264CC",
    "code": "-- SET_PED_ARMOUR\nSetPedArmour(\n\tped --[[ Ped ]], \n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the armor of the specified ped.  \nped: The Ped to set the armor of.  \namount: A value between 0 and 100 indicating the value to set the Ped's armor to."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAsCop",
    "hash": "0xBB03C38DD3FB7FFD",
    "code": "-- SET_PED_AS_COP\nSetPedAsCop(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as \"false\" has no effect; you must change p0's ped model to disable the effect."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAsEnemy",
    "hash": "0x02A0C9720B854BFA",
    "code": "-- SET_PED_AS_ENEMY\nSetPedAsEnemy(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAsGroupLeader",
    "hash": "0x2A7819605465FBCE",
    "code": "-- SET_PED_AS_GROUP_LEADER\nSetPedAsGroupLeader(\n\tped --[[ Ped ]], \n\tgroupId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedAsGroupMember",
    "hash": "0x9F3480FE65DB31B5",
    "code": "-- SET_PED_AS_GROUP_MEMBER\nSetPedAsGroupMember(\n\tped --[[ Ped ]], \n\tgroupId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedBlendFromParents",
    "hash": "0x137BBD05230DB22D",
    "code": "-- SET_PED_BLEND_FROM_PARENTS\nSetPedBlendFromParents(\n\tped --[[ Ped ]], \n\tfather --[[ Ped ]], \n\tmother --[[ Ped ]], \n\tfathersSide --[[ number ]], \n\tmothersSide --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedBlocksPathingWhenDead",
    "hash": "0x576594E8D64375E2",
    "code": "-- SET_PED_BLOCKS_PATHING_WHEN_DEAD\nSetPedBlocksPathingWhenDead(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedBoundsOrientation",
    "hash": "0x4F5F651ACCC9C4CF",
    "code": "-- SET_PED_BOUNDS_ORIENTATION\nSetPedBoundsOrientation(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanArmIk",
    "hash": "0x6C3B4D6D13B4C841",
    "code": "-- SET_PED_CAN_ARM_IK\nSetPedCanArmIk(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeDraggedOut",
    "hash": "0xC1670E958EEE24E5",
    "code": "-- SET_PED_CAN_BE_DRAGGED_OUT\nSetPedCanBeDraggedOut(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeKnockedOffVehicle",
    "hash": "0x7A6535691B477C48",
    "code": "-- SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE\nSetPedCanBeKnockedOffVehicle(\n\tped --[[ Ped ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeShotInVehicle",
    "hash": "0xC7EF1BA83230BA07",
    "code": "-- SET_PED_CAN_BE_SHOT_IN_VEHICLE\nSetPedCanBeShotInVehicle(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeTargetedWhenInjured",
    "hash": "0x638C03B0F9878F57",
    "code": "-- SET_PED_CAN_BE_TARGETED_WHEN_INJURED\nSetPedCanBeTargetedWhenInjured(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeTargetedWithoutLos",
    "hash": "0x4328652AE5769C71",
    "code": "-- SET_PED_CAN_BE_TARGETED_WITHOUT_LOS\nSetPedCanBeTargetedWithoutLos(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeTargetted",
    "hash": "0x63F58F7C80513AAD",
    "code": "-- SET_PED_CAN_BE_TARGETTED\nSetPedCanBeTargetted(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeTargettedByPlayer",
    "hash": "0x66B57B72E0836A76",
    "code": "-- SET_PED_CAN_BE_TARGETTED_BY_PLAYER\nSetPedCanBeTargettedByPlayer(\n\tped --[[ Ped ]], \n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanBeTargettedByTeam",
    "hash": "0xBF1CA77833E58F2C",
    "code": "-- SET_PED_CAN_BE_TARGETTED_BY_TEAM\nSetPedCanBeTargettedByTeam(\n\tped --[[ Ped ]], \n\tteam --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanCowerInCover",
    "hash": "0xCB7553CDCEF4A735",
    "code": "-- SET_PED_CAN_COWER_IN_COVER\nSetPedCanCowerInCover(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It simply makes the said ped to cower behind cover object(wall, desk, car)  \nPeds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanEvasiveDive",
    "hash": "0x6B7A646C242A7059",
    "code": "-- SET_PED_CAN_EVASIVE_DIVE\nSetPedCanEvasiveDive(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanHeadIk",
    "hash": "0xC11C18092C5530DC",
    "code": "-- SET_PED_CAN_HEAD_IK\nSetPedCanHeadIk(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanLegIk",
    "hash": "0x73518ECE2485412B",
    "code": "-- SET_PED_CAN_LEG_IK\nSetPedCanLegIk(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanLosePropsOnDamage",
    "hash": "0xE861D0B05C7662B8",
    "code": "-- SET_PED_CAN_LOSE_PROPS_ON_DAMAGE\nSetPedCanLosePropsOnDamage(\n\tped --[[ Ped ]], \n\tloseProps --[[ boolean ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe target ped",
      "loseProps: \n\ntrue = allow props to fall off, false = don't let props fall off",
      "p2: \n\npurpose unknown, usually 0"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nloseProps: \n\ntrue = allow props to fall off, false = don't let props fall off\n\np2: \n\npurpose unknown, usually 0\n\nIt makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped. This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanPeekInCover",
    "hash": "0xC514825C507E3736",
    "code": "-- SET_PED_CAN_PEEK_IN_COVER\nSetPedCanPeekInCover(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanPlayAmbientAnims",
    "hash": "0x6373D1349925A70E",
    "code": "-- SET_PED_CAN_PLAY_AMBIENT_ANIMS\nSetPedCanPlayAmbientAnims(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanPlayAmbientBaseAnims",
    "hash": "0x0EB0585D15254740",
    "code": "-- SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS\nSetPedCanPlayAmbientBaseAnims(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanPlayGestureAnims",
    "hash": "0xBAF20C5432058024",
    "code": "-- SET_PED_CAN_PLAY_GESTURE_ANIMS\nSetPedCanPlayGestureAnims(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanPlayInjuredAnims",
    "hash": "0x33A60D8BDD6E508C",
    "code": "-- _SET_PED_CAN_PLAY_INJURED_ANIMS\nSetPedCanPlayInjuredAnims(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanPlayVisemeAnims",
    "hash": "0xF833DDBA3B104D43",
    "code": "-- SET_PED_CAN_PLAY_VISEME_ANIMS\nSetPedCanPlayVisemeAnims(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p2 usually 0"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanRagdoll",
    "hash": "0xB128377056A54E2A",
    "code": "-- SET_PED_CAN_RAGDOLL\nSetPedCanRagdoll(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanRagdollFromPlayerImpact",
    "hash": "0xDF993EE5E90ABA25",
    "code": "-- SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT\nSetPedCanRagdollFromPlayerImpact(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanSmashGlass",
    "hash": "0x1CCE141467FF42A2",
    "code": "-- SET_PED_CAN_SMASH_GLASS\nSetPedCanSmashGlass(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanSwitchWeapon",
    "hash": "0xED7F7EFE9FABF340",
    "code": "-- SET_PED_CAN_SWITCH_WEAPON\nSetPedCanSwitchWeapon(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanTeleportToGroupLeader",
    "hash": "0x2E2F4240B3F24647",
    "code": "-- SET_PED_CAN_TELEPORT_TO_GROUP_LEADER\nSetPedCanTeleportToGroupLeader(\n\tpedHandle --[[ Ped ]], \n\tgroupHandle --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This only will teleport the ped to the group leader if the group leader teleports (sets coords).  \nOnly works in singleplayer"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanTorsoIk",
    "hash": "0xF2B7106D37947CE0",
    "code": "-- SET_PED_CAN_TORSO_IK\nSetPedCanTorsoIk(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanTorsoReactIk",
    "hash": "0xF5846EDB26A98A24",
    "code": "-- SET_PED_CAN_TORSO_REACT_IK\nSetPedCanTorsoReactIk(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanTorsoVehicleIk",
    "hash": "0x6647C5F6F5792496",
    "code": "-- SET_PED_CAN_TORSO_VEHICLE_IK\nSetPedCanTorsoVehicleIk(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCanUseAutoConversationLookat",
    "hash": "0xEC4686EC06434678",
    "code": "-- SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT\nSetPedCanUseAutoConversationLookat(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCapsule",
    "hash": "0x364DF566EC833DE2",
    "code": "-- SET_PED_CAPSULE\nSetPedCapsule(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Overrides the ped's collision capsule radius for the current tick.  \nMust be called every tick to be effective.  \nSetting this to 0.001 will allow warping through some objects."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedClothPackageIndex",
    "hash": "0x78C4E9961DB3EB5B",
    "code": "-- SET_PED_CLOTH_PACKAGE_INDEX\nSetPedClothPackageIndex(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedClothProne",
    "hash": "0x82A3D6D9CC2CB8E3",
    "code": "-- SET_PED_CLOTH_PRONE\nSetPedClothProne(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCombatAbility",
    "hash": "0xC7622C0D36B2FDA8",
    "code": "-- SET_PED_COMBAT_ABILITY\nSetPedCombatAbility(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "100 would equal attack  \nless then 50ish would mean run away  \nOnly the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:  \n0: CA_Poor  \n1: CA_Average  \n2: CA_Professional  \nTested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCombatAttributes",
    "hash": "0x9F7794730795E019",
    "code": "-- SET_PED_COMBAT_ATTRIBUTES\nSetPedCombatAttributes(\n\tped --[[ Ped ]], \n\tattributeIndex --[[ integer ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to set attributes to.",
      "attributeIndex: \n\nThe attribute index to set. See eCombatAttribute enum.",
      "enabled: \n\nA boolean to enable/disable the attribute (true/false)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to set attributes to.\n\nattributeIndex: \n\nThe attribute index to set. See eCombatAttribute enum.\n\nenabled: \n\nA boolean to enable/disable the attribute (true/false).\n\nThese combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.\n\nSo far, these are the equivalents found:\n\nenum eCombatAttribute\n{\n  CA_INVALID = -1,\t\n  // AI will only use cover if this is set\n  CA_USE_COVER = 0,\n  // AI will only use vehicles if this is set\n  CA_USE_VEHICLE = 1,\n  // AI will only driveby from a vehicle if this is set\n  CA_DO_DRIVEBYS = 2,\n  // Will be forced to stay in a ny vehicel if this isn't set\n  CA_LEAVE_VEHICLES = 3,\n  // This ped can make decisions on whether to strafe or not based on distance to destination, recent bullet events, etc.\n  CA_CAN_USE_DYNAMIC_STRAFE_DECISIONS\t= 4,\n  // Ped will always fight upon getting threat response task\n  CA_ALWAYS_FIGHT = 5,\n  // If in combat and in a vehicle, the ped will flee rather than attacking\n  CA_FLEE_WHILST_IN_VEHICLE = 6,\n  // If in combat and chasing in a vehicle, the ped will keep a distance behind rather than ramming\n  CA_JUST_FOLLOW_VEHICLE = 7,\n  // Deprecated\n  CA_PLAY_REACTION_ANIMS = 8,\n  // Peds will scan for and react to dead peds found\n  CA_WILL_SCAN_FOR_DEAD_PEDS = 9,\n  // Deprecated\n  CA_IS_A_GUARD = 10,\n  // The ped will seek cover only \n  CA_JUST_SEEK_COVER = 11,\n  // Ped will only blind fire when in cover\n  CA_BLIND_FIRE_IN_COVER = 12,\n  // Ped may advance\n  CA_AGGRESSIVE = 13,\n  // Ped can investigate events such as distant gunfire, footsteps, explosions etc\n  CA_CAN_INVESTIGATE = 14,\n  // Ped can use a radio to call for backup (happens after a reaction)\n  CA_CAN_USE_RADIO = 15,\n  // Deprecated\n  CA_CAN_CAPTURE_ENEMY_PEDS = 16,\n  // Ped will always flee upon getting threat response task\n  CA_ALWAYS_FLEE = 17,\n  // Ped can do unarmed taunts in vehicle\n  CA_CAN_TAUNT_IN_VEHICLE = 20,\n  // Ped will be able to chase their targets if both are on foot and the target is running away\n  CA_CAN_CHASE_TARGET_ON_FOOT = 21,\n  // Ped can drag injured peds to safety\n  CA_WILL_DRAG_INJURED_PEDS_TO_SAFETY = 22,\n  // Ped will require LOS to the target it is aiming at before shooting\n  CA_REQUIRES_LOS_TO_SHOOT = 23,\n  // Ped is allowed to use proximity based fire rate (increasing fire rate at closer distances)\n  CA_USE_PROXIMITY_FIRING_RATE = 24,\n  // Normally peds can switch briefly to a secondary target in combat, setting this will prevent that\n  CA_DISABLE_SECONDARY_TARGET = 25,\n  // This will disable the flinching combat entry reactions for peds, instead only playing the turn and aim anims\n  CA_DISABLE_ENTRY_REACTIONS = 26,\n  // Force ped to be 100% accurate in all situations (added by Jay Reinebold)\n  CA_PERFECT_ACCURACY = 27,\n  // If we don't have cover and can't see our target it's possible we will advance, even if the target is in cover\n  CA_CAN_USE_FRUSTRATED_ADVANCE\t= 28,\n  // This will have the ped move to defensive areas and within attack windows before performing the cover search\n  CA_MOVE_TO_LOCATION_BEFORE_COVER_SEARCH = 29,\n  // Allow shooting of our weapon even if we don't have LOS (this isn't X-ray vision as it only affects weapon firing)\n  CA_CAN_SHOOT_WITHOUT_LOS = 30,\n  // Ped will try to maintain a min distance to the target, even if using defensive areas (currently only for cover finding + usage) \n  CA_MAINTAIN_MIN_DISTANCE_TO_TARGET = 31,\n  // Allows ped to use steamed variations of peeking anims\n  CA_CAN_USE_PEEKING_VARIATIONS\t= 34,\n  // Disables pinned down behaviors\n  CA_DISABLE_PINNED_DOWN = 35,\n  // Disables pinning down others\n  CA_DISABLE_PIN_DOWN_OTHERS = 36,\n  // When defensive area is reached the area is cleared and the ped is set to use defensive combat movement\n  CA_OPEN_COMBAT_WHEN_DEFENSIVE_AREA_IS_REACHED = 37,\n  // Disables bullet reactions\n  CA_DISABLE_BULLET_REACTIONS = 38,\n  // Allows ped to bust the player\n  CA_CAN_BUST = 39,\n  // This ped is ignored by other peds when wanted\n  CA_IGNORED_BY_OTHER_PEDS_WHEN_WANTED = 40,\n  // Ped is allowed to \"jack\" vehicles when needing to chase a target in combat\n  CA_CAN_COMMANDEER_VEHICLES = 41,\n  // Ped is allowed to flank\n  CA_CAN_FLANK = 42,\n  // Ped will switch to advance if they can't find cover\n  CA_SWITCH_TO_ADVANCE_IF_CANT_FIND_COVER = 43,\n  // Ped will switch to defensive if they are in cover\n  CA_SWITCH_TO_DEFENSIVE_IF_IN_COVER = 44,\n  // Ped will clear their primary defensive area when it is reached\n  CA_CLEAR_PRIMARY_DEFENSIVE_AREA_WHEN_REACHED = 45,\n  // Ped is allowed to fight armed peds when not armed\n  CA_CAN_FIGHT_ARMED_PEDS_WHEN_NOT_ARMED = 46,\n  // Ped is not allowed to use tactical points if set to use defensive movement (will only use cover)\n  CA_ENABLE_TACTICAL_POINTS_WHEN_DEFENSIVE = 47,\n  // Ped cannot adjust cover arcs when testing cover safety (atm done on corner cover points when  ped usingdefensive area + no LOS)\n  CA_DISABLE_COVER_ARC_ADJUSTMENTS = 48,\n  // Ped may use reduced accuracy with large number of enemies attacking the same local player target\n  CA_USE_ENEMY_ACCURACY_SCALING\t= 49,\n  // Ped is allowed to charge the enemy position\n  CA_CAN_CHARGE = 50,\n  // When defensive area is reached the area is cleared and the ped is set to use will advance movement\n  CA_REMOVE_AREA_SET_WILL_ADVANCE_WHEN_DEFENSIVE_AREA_REACHED = 51,\n  // Use the vehicle attack mission during combat (only works on driver)\n  CA_USE_VEHICLE_ATTACK = 52,\n  // Use the vehicle attack mission during combat if the vehicle has mounted guns (only works on driver)\n  CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS = 53,\n  // Always equip best weapon in combat\n  CA_ALWAYS_EQUIP_BEST_WEAPON = 54,\n  // Ignores in water at depth visibility check\n  CA_CAN_SEE_UNDERWATER_PEDS = 55,\n  // Will prevent this ped from aiming at any AI targets that are in helicopters\n  CA_DISABLE_AIM_AT_AI_TARGETS_IN_HELIS = 56,\n  // Disables peds seeking due to no clear line of sight\n  CA_DISABLE_SEEK_DUE_TO_LINE_OF_SIGHT = 57,\n  // To be used when releasing missions peds if we don't want them fleeing from combat (mission peds already prevent flee)\n  CA_DISABLE_FLEE_FROM_COMBAT = 58,\n  // Disables target changes during vehicle pursuit\n  CA_DISABLE_TARGET_CHANGES_DURING_VEHICLE_PURSUIT = 59,\n  // Ped may throw a smoke grenade at player loitering in combat\n  CA_CAN_THROW_SMOKE_GRENADE = 60,\n  // Will clear a set defensive area if that area cannot be reached\n  CA_CLEAR_AREA_SET_DEFENSIVE_IF_DEFENSIVE_CANNOT_BE_REACHED = 62,\n  // Disable block from pursue during vehicle chases\n  CA_DISABLE_BLOCK_FROM_PURSUE_DURING_VEHICLE_CHASE = 64,\n  // Disable spin out during vehicle chases\n  CA_DISABLE_SPIN_OUT_DURING_VEHICLE_CHASE = 65,\n  // Disable cruise in front during block during vehicle chases\n  CA_DISABLE_CRUISE_IN_FRONT_DURING_BLOCK_DURING_VEHICLE_CHASE = 66,\n  // Makes it more likely that the ped will continue targeting a target with blocked los for a few seconds\n  CA_CAN_IGNORE_BLOCKED_LOS_WEIGHTING = 67,\n  // Disables the react to buddy shot behaviour.\n  CA_DISABLE_REACT_TO_BUDDY_SHOT = 68,\n  // Prefer pathing using navmesh over road nodes\n  CA_PREFER_NAVMESH_DURING_VEHICLE_CHASE = 69,\n  // Ignore road edges when avoiding\n  CA_ALLOWED_TO_AVOID_OFFROAD_DURING_VEHICLE_CHASE = 70,\n  // Permits ped to charge a target outside the assigned defensive area.\n  CA_PERMIT_CHARGE_BEYOND_DEFENSIVE_AREA = 71,\n  // This ped will switch to an RPG if target is in a vehicle, otherwise will use alternate weapon.\n  CA_USE_ROCKETS_AGAINST_VEHICLES_ONLY = 72,\n  // Disables peds moving to a tactical point without clear los\n  CA_DISABLE_TACTICAL_POINTS_WITHOUT_CLEAR_LOS = 73,\n  // Disables pull alongside during vehicle chase\n  CA_DISABLE_PULL_ALONGSIDE_DURING_VEHICLE_CHASE = 74,\n  // If set on a ped, they will not flee when all random peds flee is set to TRUE (they are still able to flee due to other reasons)\n  CA_DISABLE_ALL_RANDOMS_FLEE = 78,\n  // This ped will send out a script DeadPedSeenEvent when they see a dead ped\n  CA_WILL_GENERATE_DEAD_PED_SEEN_SCRIPT_EVENTS = 79,\n  // This will use the receiving peds sense range rather than the range supplied to the communicate event\n  CA_USE_MAX_SENSE_RANGE_WHEN_RECEIVING_EVENTS = 80,\n  // When aiming from a vehicle the ped will only aim at targets on his side of the vehicle\n  CA_RESTRICT_IN_VEHICLE_AIMING_TO_CURRENT_SIDE = 81,\n  // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)\n  CA_USE_DEFAULT_BLOCKED_LOS_POSITION_AND_DIRECTION = 82,\n  // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)\n  CA_REQUIRES_LOS_TO_AIM = 83,\n  // Allow vehicles spawned infront of target facing away to enter cruise and wait to block approaching target\n  CA_CAN_CRUISE_AND_BLOCK_IN_VEHICLE = 84,\n  // Peds flying aircraft will prefer to target other aircraft over entities on the ground\n  CA_PREFER_AIR_COMBAT_WHEN_IN_AIRCRAFT = 85,\n  //Allow peds flying aircraft to use dog fighting behaviours\n  CA_ALLOW_DOG_FIGHTING = 86,\n  // This will make the weight of targets who aircraft vehicles be reduced greatly compared to targets on foot or in ground based vehicles\n  CA_PREFER_NON_AIRCRAFT_TARGETS = 87,\n  //When peds are tasked to go to combat, they keep searching for a known target for a while before forcing an unknown one\n  CA_PREFER_KNOWN_TARGETS_WHEN_COMBAT_CLOSEST_TARGET = 88,\n  // Only allow mounted weapons to fire if within the correct attack angle (default 25-degree cone). On a flag in order to keep exiting behaviour and only fix in specific cases.\n  CA_FORCE_CHECK_ATTACK_ANGLE_FOR_MOUNTED_GUNS = 89,\n  // Blocks the firing state for passenger-controlled mounted weapons. Existing flags CA_USE_VEHICLE_ATTACK and CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS only work for drivers.\n  CA_BLOCK_FIRE_FOR_VEHICLE_PASSENGER_MOUNTED_GUNS = 90 \n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCombatMovement",
    "hash": "0x4D9CA1009AFBD057",
    "code": "-- SET_PED_COMBAT_MOVEMENT\nSetPedCombatMovement(\n\tped --[[ Ped ]], \n\tcombatMovement --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "0 - Stationary (Will just stand in place)  \n1 - Defensive (Will try to find cover and very likely to blind fire)  \n2 - Offensive (Will attempt to charge at enemy but take cover as well)  \n3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCombatRange",
    "hash": "0x3C606747B23E497B",
    "code": "-- SET_PED_COMBAT_RANGE\nSetPedCombatRange(\n\tped --[[ Ped ]], \n\trange --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nPed index",
      "range: \n\nSee eCombatRange enum."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index\n\nrange: \n\nSee eCombatRange enum.\n\nDefine the scope within which the ped will engage in combat with the target.\n\nenum eCombatRange {\n    CR_NEAR = 0, // keeps within 5-15m\n    CR_MEDIUM = 1, // keeps within 7-30m\n    CR_FAR = 2, // keeps within 15-40m\n    CR_VERY_FAR = 3 // keeps within 22-45m\n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedComponentVariation",
    "hash": "0x262B14F48D29DE80",
    "code": "-- SET_PED_COMPONENT_VARIATION\nSetPedComponentVariation(\n\tped --[[ Ped ]], \n\tcomponentId --[[ integer ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tpaletteId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component that you want to set.",
      "drawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_TEXTURE_VARIATIONS.",
      "paletteId: \n\n0 to 3."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component that you want to set.\n\ndrawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_TEXTURE_VARIATIONS.\n\npaletteId: \n\n0 to 3.\n\nThis native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.\n\nMP Freemode list of components\n\n0: Face 1: Mask 2: Hair 3: Torso 4: Leg 5: Parachute / bag 6: Shoes 7: Accessory 8: Undershirt 9: Kevlar 10: Badge 11: Torso 2\n\nList of Component IDs\n\n// Components\nenum ePedVarComp\n{\n    PV_COMP_INVALID = 0xFFFFFFFF,\n    PV_COMP_HEAD = 0, // \"HEAD\"\n    PV_COMP_BERD = 1, // \"BEARD\"\n    PV_COMP_HAIR = 2, // \"HAIR\"\n    PV_COMP_UPPR = 3, // \"UPPER\"\n    PV_COMP_LOWR = 4, // \"LOWER\"\n    PV_COMP_HAND = 5, // \"HAND\"\n    PV_COMP_FEET = 6, // \"FEET\"\n    PV_COMP_TEEF = 7, // \"TEETH\"\n    PV_COMP_ACCS = 8, // \"ACCESSORIES\"\n    PV_COMP_TASK = 9, // \"TASK\"\n    PV_COMP_DECL = 10, // \"DECL\"\n    PV_COMP_JBIB = 11, // \"JBIB\"\n    PV_COMP_MAX = 12,\n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedConfigFlag",
    "hash": "0x1913FE4CBF41C463",
    "code": "-- SET_PED_CONFIG_FLAG\nSetPedConfigFlag(\n\tped --[[ Ped ]], \n\tflagId --[[ integer ]], \n\tvalue --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "// Potential names and hash collisions included as comments\nenum ePedConfigFlags {\n\tCPED_CONFIG_FLAG_CreatedByFactory = 0,\n\tCPED_CONFIG_FLAG_CanBeShotInVehicle = 1,\n\tCPED_CONFIG_FLAG_NoCriticalHits = 2,\n\tCPED_CONFIG_FLAG_DrownsInWater = 3,\n\tCPED_CONFIG_FLAG_DrownsInSinkingVehicle = 4,\n\tCPED_CONFIG_FLAG_DiesInstantlyWhenSwimming = 5,\n\tCPED_CONFIG_FLAG_HasBulletProofVest = 6,\n\tCPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,\n\tCPED_CONFIG_FLAG_NeverFallOffSkis = 8,\n\tCPED_CONFIG_FLAG_NeverEverTargetThisPed = 9,\n\tCPED_CONFIG_FLAG_ThisPedIsATargetPriority = 10,\n\tCPED_CONFIG_FLAG_TargettableWithNoLos = 11,\n\tCPED_CONFIG_FLAG_DoesntListenToPlayerGroupCommands = 12,\n\tCPED_CONFIG_FLAG_NeverLeavesGroup = 13,\n\tCPED_CONFIG_FLAG_DoesntDropWeaponsWhenDead = 14,\n\tCPED_CONFIG_FLAG_SetDelayedWeaponAsCurrent = 15,\n\tCPED_CONFIG_FLAG_KeepTasksAfterCleanUp = 16,\n\tCPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,\n\tCPED_CONFIG_FLAG_HasAScriptBrain = 18,\n\tCPED_CONFIG_FLAG_WaitingForScriptBrainToLoad = 19,\n\tCPED_CONFIG_FLAG_AllowMedicsToReviveMe = 20,\n\tCPED_CONFIG_FLAG_MoneyHasBeenGivenByScript = 21,\n\tCPED_CONFIG_FLAG_NotAllowedToCrouch = 22,\n\tCPED_CONFIG_FLAG_DeathPickupsPersist = 23,\n\tCPED_CONFIG_FLAG_IgnoreSeenMelee = 24,\n\tCPED_CONFIG_FLAG_ForceDieIfInjured = 25,\n\tCPED_CONFIG_FLAG_DontDragMeOutCar = 26,\n\tCPED_CONFIG_FLAG_StayInCarOnJack = 27,\n\tCPED_CONFIG_FLAG_ForceDieInCar = 28,\n\tCPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,\n\tCPED_CONFIG_FLAG_WillRemainOnBoatAfterMissionEnds = 30,\n\tCPED_CONFIG_FLAG_DontStoreAsPersistent = 31,\n\tCPED_CONFIG_FLAG_WillFlyThroughWindscreen = 32,\n\tCPED_CONFIG_FLAG_DieWhenRagdoll = 33,\n\tCPED_CONFIG_FLAG_HasHelmet = 34,\n\tCPED_CONFIG_FLAG_UseHelmet = 35,\n\tCPED_CONFIG_FLAG_DontTakeOffHelmet = 36,\n\tCPED_CONFIG_FLAG_HideInCutscene = 37,\n\tCPED_CONFIG_FLAG_PedIsEnemyToPlayer = 38,\n\tCPED_CONFIG_FLAG_DisableEvasiveDives = 39,\n\tCPED_CONFIG_FLAG_PedGeneratesDeadBodyEvents = 40,\n\tCPED_CONFIG_FLAG_DontAttackPlayerWithoutWantedLevel = 41,\n\tCPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,\n\tCPED_CONFIG_FLAG_DisablePlayerLockon = 43,\n\tCPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,\n\tCPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,\n\t_0xDB115BFA = 46,\n\tCPED_CONFIG_FLAG_PedBeingDeleted = 47,\n\tCPED_CONFIG_FLAG_BlockWeaponSwitching = 48,\n\tCPED_CONFIG_FLAG_BlockGroupPedAimedAtResponse = 49,\n\tCPED_CONFIG_FLAG_WillFollowLeaderAnyMeans = 50,\n\tCPED_CONFIG_FLAG_BlippedByScript = 51,\n\tCPED_CONFIG_FLAG_DrawRadarVisualField = 52,\n\tCPED_CONFIG_FLAG_StopWeaponFiringOnImpact = 53,\n\tCPED_CONFIG_FLAG_DissableAutoFallOffTests = 54,\n\tCPED_CONFIG_FLAG_SteerAroundDeadBodies = 55,\n\tCPED_CONFIG_FLAG_ConstrainToNavMesh = 56,\n\tCPED_CONFIG_FLAG_SyncingAnimatedProps = 57,\n\tCPED_CONFIG_FLAG_IsFiring = 58,\n\tCPED_CONFIG_FLAG_WasFiring = 59,\n\tCPED_CONFIG_FLAG_IsStanding = 60,\n\tCPED_CONFIG_FLAG_WasStanding = 61,\n\tCPED_CONFIG_FLAG_InVehicle = 62,\n\tCPED_CONFIG_FLAG_OnMount = 63,\n\tCPED_CONFIG_FLAG_AttachedToVehicle = 64,\n\tCPED_CONFIG_FLAG_IsSwimming = 65,\n\tCPED_CONFIG_FLAG_WasSwimming = 66,\n\tCPED_CONFIG_FLAG_IsSkiing = 67,\n\tCPED_CONFIG_FLAG_IsSitting = 68,\n\tCPED_CONFIG_FLAG_KilledByStealth = 69,\n\tCPED_CONFIG_FLAG_KilledByTakedown = 70,\n\tCPED_CONFIG_FLAG_Knockedout = 71,\n\tCPED_CONFIG_FLAG_ClearRadarBlipOnDeath = 72,\n\tCPED_CONFIG_FLAG_JustGotOffTrain = 73,\n\tCPED_CONFIG_FLAG_JustGotOnTrain = 74,\n\tCPED_CONFIG_FLAG_UsingCoverPoint = 75,\n\tCPED_CONFIG_FLAG_IsInTheAir = 76,\n\tCPED_CONFIG_FLAG_KnockedUpIntoAir = 77,\n\tCPED_CONFIG_FLAG_IsAimingGun = 78,\n\tCPED_CONFIG_FLAG_HasJustLeftCar = 79,\n\tCPED_CONFIG_FLAG_TargetWhenInjuredAllowed = 80,\n\tCPED_CONFIG_FLAG_CurrLeftFootCollNM = 81,\n\tCPED_CONFIG_FLAG_PrevLeftFootCollNM = 82,\n\tCPED_CONFIG_FLAG_CurrRightFootCollNM = 83,\n\tCPED_CONFIG_FLAG_PrevRightFootCollNM = 84,\n\tCPED_CONFIG_FLAG_HasBeenBumpedInCar = 85,\n\tCPED_CONFIG_FLAG_InWaterTaskQuitToClimbLadder = 86,\n\tCPED_CONFIG_FLAG_NMTwoHandedWeaponBothHandsConstrained = 87,\n\tCPED_CONFIG_FLAG_CreatedBloodPoolTimer = 88,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromAnyPedImpact = 89,\n\tCPED_CONFIG_FLAG_GroupPedFailedToEnterCover = 90,\n\tCPED_CONFIG_FLAG_AlreadyChattedOnPhone = 91,\n\tCPED_CONFIG_FLAG_AlreadyReactedToPedOnRoof = 92,\n\tCPED_CONFIG_FLAG_ForcePedLoadCover = 93,\n\tCPED_CONFIG_FLAG_BlockCoweringInCover = 94,\n\tCPED_CONFIG_FLAG_BlockPeekingInCover = 95,\n\tCPED_CONFIG_FLAG_JustLeftCarNotCheckedForDoors = 96,\n\tCPED_CONFIG_FLAG_VaultFromCover = 97,\n\tCPED_CONFIG_FLAG_AutoConversationLookAts = 98,\n\tCPED_CONFIG_FLAG_UsingCrouchedPedCapsule = 99,\n\tCPED_CONFIG_FLAG_HasDeadPedBeenReported = 100,\n\tCPED_CONFIG_FLAG_ForcedAim = 101,\n\tCPED_CONFIG_FLAG_SteersAroundPeds = 102,\n\tCPED_CONFIG_FLAG_SteersAroundObjects = 103,\n\tCPED_CONFIG_FLAG_OpenDoorArmIK = 104,\n\tCPED_CONFIG_FLAG_ForceReload = 105,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,\n\tCPED_CONFIG_FLAG_IsBeingDraggedToSafety = 111,\n\tCPED_CONFIG_FLAG_HasBeenDraggedToSafety = 112,\n\tCPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,\n\tCPED_CONFIG_FLAG_ForceScriptControlledKnockout = 114,\n\tCPED_CONFIG_FLAG_FallOutOfVehicleWhenKilled = 115,\n\tCPED_CONFIG_FLAG_GetOutBurningVehicle = 116,\n\tCPED_CONFIG_FLAG_BumpedByPlayer = 117,\n\tCPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,\n\tCPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,\n\tCPED_CONFIG_FLAG_IsHandCuffed = 120,\n\tCPED_CONFIG_FLAG_IsAnkleCuffed = 121,\n\tCPED_CONFIG_FLAG_DisableMelee = 122,\n\tCPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,\n\tCPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,\n\tCPED_CONFIG_FLAG_UNUSED_REPLACE_ME = 125,\n\tCPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,\n\tCPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,\n\tCPED_CONFIG_FLAG_CanBeAgitated = 128,\n\tCPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,\n\tCPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,\n\tCPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,\n\tCPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,\n\tCPED_CONFIG_FLAG_ForcePedToBeDragged = 133,\n\tCPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,\n\tCPED_CONFIG_FLAG_IsScuba = 135,\n\tCPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,\n\tCPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,\n\tCPED_CONFIG_FLAG_RidingTrain = 138,\n\tCPED_CONFIG_FLAG_ArrestResult = 139,\n\tCPED_CONFIG_FLAG_CanAttackFriendly = 140,\n\tCPED_CONFIG_FLAG_WillJackAnyPlayer = 141,\n\tCPED_CONFIG_FLAG_BumpedByPlayerVehicle = 142,\n\tCPED_CONFIG_FLAG_DodgedPlayerVehicle = 143,\n\tCPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,\n\tCPED_CONFIG_FLAG_NoCopWantedAggro = 145,\n\tCPED_CONFIG_FLAG_DisableLadderClimbing = 146,\n\tCPED_CONFIG_FLAG_StairsDetected = 147,\n\tCPED_CONFIG_FLAG_SlopeDetected = 148,\n\tCPED_CONFIG_FLAG_HelmetHasBeenShot = 149,\n\tCPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,\n\tCPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,\n\tCPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,\n\tCPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,\n\tCPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,\n\tCPED_CONFIG_FLAG_CanPerformArrest = 155,\n\tCPED_CONFIG_FLAG_CanPerformUncuff = 156,\n\tCPED_CONFIG_FLAG_CanBeArrested = 157,\n\tCPED_CONFIG_FLAG_MoverConstrictedByOpposingCollisions = 158,\n\tCPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromImpactObject = 160,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromMelee = 161,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromWaterJet = 162,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromDrowning = 163,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromFalling = 164,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromRubberBullet = 165,\n\tCPED_CONFIG_FLAG_IsInjured = 166,\n\tCPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,\n\tCPED_CONFIG_FLAG_SwimmingTasksRunning = 168,\n\tCPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,\n\tCPED_CONFIG_FLAG_ForceDirectEntry = 170,\n\tCPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,\n\tCPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,\n\tCPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,\n\tCPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,\n\tCPED_CONFIG_FLAG_PlayerInContactWithKinematicPed = 175,\n\tCPED_CONFIG_FLAG_PlayerInContactWithSomethingOtherThanKinematicPed = 176,\n\tCPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,\n\tCPED_CONFIG_FLAG_AdditionalRappellingPed = 178,\n\tCPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,\n\tCPED_CONFIG_FLAG_IsInCustody = 180,\n\tCPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,\n\tCPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,\n\tCPED_CONFIG_FLAG_IsAgitated = 183,\n\tCPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,\n\tCPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,\n\tCPED_CONFIG_FLAG_EnableWeaponBlocking = 186,\n\tCPED_CONFIG_FLAG_HasHurtStarted = 187,\n\tCPED_CONFIG_FLAG_DisableHurt = 188,\n\tCPED_CONFIG_FLAG_PlayerIsWeird = 189,\n\tCPED_CONFIG_FLAG_PedHadPhoneConversation = 190,\n\tCPED_CONFIG_FLAG_BeganCrossingRoad = 191,\n\tCPED_CONFIG_FLAG_WarpIntoLeadersVehicle = 192,\n\tCPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,\n\tCPED_CONFIG_FLAG_UsingScenario = 194,\n\tCPED_CONFIG_FLAG_VisibleOnScreen = 195,\n\tCPED_CONFIG_FLAG_DontCollideWithKinematic = 196,\n\tCPED_CONFIG_FLAG_ActivateOnSwitchFromLowPhysicsLod = 197,\n\tCPED_CONFIG_FLAG_DontActivateRagdollOnPedCollisionWhenDead = 198,\n\tCPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,\n\tCPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,\n\tCPED_CONFIG_FLAG_UseDiminishingAmmoRate = 201,\n\tCPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,\n\tCPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,\n\tCPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,\n\tCPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,\n\tCPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,\n\tCPED_CONFIG_FLAG_LowPhysicsLodMayPlaceOnNavMesh = 207,\n\tCPED_CONFIG_FLAG_DisableExplosionReactions = 208,\n\tCPED_CONFIG_FLAG_DodgedPlayer = 209,\n\tCPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,\n\tCPED_CONFIG_FLAG_ForcedToStayInCover = 211,\n\tCPED_CONFIG_FLAG_GeneratesSoundEvents = 212,\n\tCPED_CONFIG_FLAG_ListensToSoundEvents = 213,\n\tCPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,\n\tCPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,\n\tCPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,\n\tCPED_CONFIG_FLAG_ForceExitToSkyDive = 217,\n\tCPED_CONFIG_FLAG_SteersAroundVehicles = 218,\n\tCPED_CONFIG_FLAG_AllowPedInVehiclesOverrideTaskFlags = 219,\n\tCPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,\n\tCPED_CONFIG_FLAG_DisableExitToSkyDive = 221,\n\tCPED_CONFIG_FLAG_ScriptHasDisabledCollision = 222,\n\tCPED_CONFIG_FLAG_UseAmbientModelScaling = 223,\n\tCPED_CONFIG_FLAG_DontWatchFirstOnNextHurryAway = 224,\n\tCPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,\n\tCPED_CONFIG_FLAG_DisablePedAvoidance = 226,\n\tCPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,\n\tCPED_CONFIG_FLAG_CanLosePropsOnDamage = 228,\n\tCPED_CONFIG_FLAG_DisablePanicInVehicle = 229,\n\tCPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,\n\tCPED_CONFIG_FLAG_HasShotBeenReactedToFromFront = 231,\n\tCPED_CONFIG_FLAG_HasShotBeenReactedToFromBack = 232,\n\tCPED_CONFIG_FLAG_HasShotBeenReactedToFromLeft = 233,\n\tCPED_CONFIG_FLAG_HasShotBeenReactedToFromRight = 234,\n\tCPED_CONFIG_FLAG_AllowBlockDeadPedRagdollActivation = 235,\n\tCPED_CONFIG_FLAG_IsHoldingProp = 236,\n\tCPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,\n\tCPED_CONFIG_FLAG_ForcePlayNormalScenarioExitOnNextScriptCommand = 238,\n\tCPED_CONFIG_FLAG_ForcePlayImmediateScenarioExitOnNextScriptCommand = 239,\n\tCPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,\n\tCPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,\n\tCPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,\n\tCPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,\n\tCPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,\n\tCPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,\n\tCPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,\n\tCPED_CONFIG_FLAG_InStrafeTransition = 247,\n\tCPED_CONFIG_FLAG_CanPlayInCarIdles = 248,\n\tCPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,\n\tCPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,\n\tCPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,\n\tCPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,\n\tCPED_CONFIG_FLAG_OnStairs = 253,\n\tCPED_CONFIG_FLAG_SimulatingAiming = 254,\n\tCPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,\n\tCPED_CONFIG_FLAG_ParentCarIsBeingRemoved = 256,\n\tCPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,\n\tCPED_CONFIG_FLAG_CanLoseHelmetOnDamage = 258,\n\tCPED_CONFIG_FLAG_NeverDoScenarioExitProbeChecks = 259,\n\tCPED_CONFIG_FLAG_SuppressLowLODRagdollSwitchWhenCorpseSettles = 260,\n\tCPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,\n\tCPED_CONFIG_FLAG_JustLeftVehicleNeedsReset = 262,\n\tCPED_CONFIG_FLAG_TeleportIfCantReachPlayer = 263,\n\tCPED_CONFIG_FLAG_PedsInVehiclePositionNeedsReset = 264,\n\tCPED_CONFIG_FLAG_PedsFullyInSeat = 265,\n\tCPED_CONFIG_FLAG_AllowPlayerLockOnIfFriendly = 266,\n\tCPED_CONFIG_FLAG_UseCameraHeadingForDesiredDirectionLockOnTest = 267,\n\tCPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,\n\tCPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,\n\tCPED_CONFIG_FLAG_OnStairSlope = 270,\n\tCPED_CONFIG_FLAG_HasPlayedNMGetup = 271,\n\tCPED_CONFIG_FLAG_DontBlipCop = 272,\n\tCPED_CONFIG_FLAG_SpawnedAtExtendedRangeScenario = 273,\n\tCPED_CONFIG_FLAG_WalkAlongsideLeaderWhenClose = 274,\n\tCPED_CONFIG_FLAG_KillWhenTrapped = 275,\n\tCPED_CONFIG_FLAG_EdgeDetected = 276,\n\tCPED_CONFIG_FLAG_AlwaysWakeUpPhysicsOfIntersectedPeds = 277,\n\tCPED_CONFIG_FLAG_EquippedAmbientLoadOutWeapon = 278,\n\tCPED_CONFIG_FLAG_AvoidTearGas = 279,\n\tCPED_CONFIG_FLAG_StoppedSpeechUponFreezing = 280,\n\tCPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,\n\tCPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,\n\tCPED_CONFIG_FLAG_ThrownFromVehicleDueToExhaustion = 283,\n\tCPED_CONFIG_FLAG_UpdateEnclosedSearchRegion = 284,\n\tCPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,\n\tCPED_CONFIG_FLAG_ShouldChargeNow = 286,\n\tCPED_CONFIG_FLAG_RagdollingOnBoat = 287,\n\tCPED_CONFIG_FLAG_HasBrandishedWeapon = 288,\n\tCPED_CONFIG_FLAG_AllowMinorReactionsAsMissionPed = 289,\n\tCPED_CONFIG_FLAG_BlockDeadBodyShockingEventsWhenDead = 290,\n\tCPED_CONFIG_FLAG_PedHasBeenSeen = 291,\n\tCPED_CONFIG_FLAG_PedIsInReusePool = 292,\n\tCPED_CONFIG_FLAG_PedWasReused = 293,\n\tCPED_CONFIG_FLAG_DisableShockingEvents = 294,\n\tCPED_CONFIG_FLAG_MovedUsingLowLodPhysicsSinceLastActive = 295,\n\tCPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,\n\tCPED_CONFIG_FLAG_ForcePlayFleeScenarioExitOnNextScriptCommand = 297,\n\tCPED_CONFIG_FLAG_JustBumpedIntoVehicle = 298,\n\tCPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,\n\tCPED_CONFIG_FLAG_ShouldThrowSmokeNow = 300,\n\tCPED_CONFIG_FLAG_DisablePedConstraints = 301,\n\tCPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,\n\tCPED_CONFIG_FLAG_CreatedByDispatch = 303,\n\tCPED_CONFIG_FLAG_PointGunLeftHandSupporting = 304,\n\tCPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromPlayerPedImpact = 306,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromAiRagdollImpact = 307,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromPlayerRagdollImpact = 308,\n\tCPED_CONFIG_FLAG_DisableQuadrupedSpring = 309,\n\tCPED_CONFIG_FLAG_IsInCluster = 310,\n\tCPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,\n\tCPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,\n\tCPED_CONFIG_FLAG_PreferInjuredGetup = 313,\n\tCPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,\n\tCPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,\n\tCPED_CONFIG_FLAG_JackedAbandonedCar = 316,\n\tCPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,\n\tCPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,\n\tCPED_CONFIG_FLAG_HasPortablePickupAttached = 319,\n\tCPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,\n\tCPED_CONFIG_FLAG_HasClothCollisionBounds = 321,\n\tCPED_CONFIG_FLAG_HasHighHeels = 322,\n\tCPED_CONFIG_FLAG_TreatAsAmbientPedForDriverLockOn = 323,\n\tCPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,\n\tCPED_CONFIG_FLAG_SpawnedAtScenario = 325,\n\tCPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,\n\tCPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,\n\tCPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,\n\tCPED_CONFIG_FLAG_DisableTalkTo = 329,\n\tCPED_CONFIG_FLAG_DontBlip = 330,\n\tCPED_CONFIG_FLAG_IsSwitchingWeapon = 331,\n\tCPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,\n\tCPED_CONFIG_FLAG_ScriptForceNoTimesliceIntelligenceUpdate = 333,\n\tCPED_CONFIG_FLAG_JackedOutOfMyVehicle = 334,\n\tCPED_CONFIG_FLAG_WentIntoCombatAfterBeingJacked = 335,\n\tCPED_CONFIG_FLAG_DontActivateRagdollForVehicleGrab = 336,\n\tCPED_CONFIG_FLAG_ForcePackageCharacterCloth = 337,\n\tCPED_CONFIG_FLAG_DontRemoveWithValidOrder = 338,\n\tCPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,\n\tCPED_CONFIG_FLAG_ForcedToStayInCoverDueToPlayerSwitch = 340,\n\tCPED_CONFIG_FLAG_ForceProneCharacterCloth = 341,\n\tCPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,\n\tCPED_CONFIG_FLAG_InToStrafeTransition = 343,\n\tCPED_CONFIG_FLAG_KilledByStandardMelee = 344,\n\tCPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,\n\tCPED_CONFIG_FLAG_ForcePlayDirectedNormalScenarioExitOnNextScriptCommand = 346,\n\tCPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,\n\tCPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,\n\tCPED_CONFIG_FLAG_EquipJetpack = 349,\n\tCPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,\n\tCPED_CONFIG_FLAG_ScriptHasCompletelyDisabledCollision = 351,\n\tCPED_CONFIG_FLAG_NeverDoScenarioNavChecks = 352,\n\tCPED_CONFIG_FLAG_ForceSynchronousScenarioExitChecking = 353,\n\tCPED_CONFIG_FLAG_ThrowingGrenadeWhileAiming = 354,\n\tCPED_CONFIG_FLAG_HeadbobToRadioEnabled = 355,\n\tCPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,\n\tCPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,\n\tCPED_CONFIG_FLAG_DontBlipNotSynced = 358,\n\tCPED_CONFIG_FLAG_IsDuckingInVehicle = 359,\n\tCPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,\n\tCPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,\n\tCPED_CONFIG_FLAG_HasReserveParachute = 362,\n\tCPED_CONFIG_FLAG_UseReserveParachute = 363,\n\tCPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,\n\tCPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,\n\tCPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,\n\tCPED_CONFIG_FLAG_DontActivateRagdollFromSmokeGrenade = 367,\n\tCPED_CONFIG_FLAG_LinkMBRToOwnerOnChain = 368,\n\tCPED_CONFIG_FLAG_AmbientFriendBumpedByPlayer = 369,\n\tCPED_CONFIG_FLAG_AmbientFriendBumpedByPlayerVehicle = 370,\n\tCPED_CONFIG_FLAG_InFPSUnholsterTransition = 371,\n\tCPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,\n\tCPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,\n\tCPED_CONFIG_FLAG_NeverLeaveTrain = 374,\n\tCPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,\n\tCPED_CONFIG_FLAG_UseFPSUnholsterTransitionDuringCombatRoll = 376,\n\tCPED_CONFIG_FLAG_ExitingFPSCombatRoll = 377,\n\tCPED_CONFIG_FLAG_ScriptHasControlOfPlayer = 378,\n\tCPED_CONFIG_FLAG_PlayFPSIdleFidgetsForProjectile = 379,\n\tCPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,\n\tCPED_CONFIG_FLAG_DisableAutoEquipHelmetsInAircraft = 381,\n\tCPED_CONFIG_FLAG_WasPlayingFPSGetup = 382,\n\tCPED_CONFIG_FLAG_WasPlayingFPSMeleeActionResult = 383,\n\tCPED_CONFIG_FLAG_PreferNoPriorityRemoval = 384,\n\tCPED_CONFIG_FLAG_FPSFidgetsAbortedOnFire = 385,\n\tCPED_CONFIG_FLAG_ForceFPSIKWithUpperBodyAnim = 386,\n\tCPED_CONFIG_FLAG_SwitchingCharactersInFirstPerson = 387,\n\tCPED_CONFIG_FLAG_IsClimbingLadder = 388,\n\tCPED_CONFIG_FLAG_HasBareFeet = 389,\n\tCPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,\n\tCPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,\n\tCPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,\n\tCPED_CONFIG_FLAG_ResetLastVehicleOnVehicleExit = 393,\n\tCPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,\n\tCPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,\n\tCPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,\n\tCPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,\n\tCPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,\n\tCPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,\n\tCPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,\n\tCPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,\n\tCPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,\n\tCPED_CONFIG_FLAG_ChangeFromPermanentToAmbientPopTypeOnMigration = 403,\n\tCPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,\n\tCPED_CONFIG_FLAG_UsingLowriderLeans = 405,\n\tCPED_CONFIG_FLAG_UsingAlternateLowriderLeans = 406,\n\tCPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,\n\tCPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,\n\tCPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,\n\tCPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,\n\tCPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,\n\tCPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,\n\tCPED_CONFIG_FLAG_IsHolsteringWeapon = 413,\n\tCPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,\n\tCPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,\n\tCPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,\n\tCPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,\n\tCPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,\n\tCPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,\n\tCPED_CONFIG_FLAG_IsPerformingVehicleMelee = 420,\n\tCPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,\n\tCPED_CONFIG_FLAG_DisableVehicleCombat = 422,\n\tCPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamage = 423,\n\tCPED_CONFIG_FLAG_AllowBikeAlternateAnimations = 424,\n\tCPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamageNonSynced = 425,\n\tCPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,\n\tCPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,\n\tCPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,\n\tCPED_CONFIG_FLAG_DisableStartEngine = 429,\n\tCPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,\n\tCPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,\n\tCPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,\n\tCPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,\n\tCPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,\n\tCPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,\n\tCPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,\n\tCPED_CONFIG_FLAG_DontShoutTargetPosition = 437,\n\tCPED_CONFIG_FLAG_DisableHelmetArmor = 438,\n\tCPED_CONFIG_FLAG_CreatedByConcealedPlayer = 439,\n\tCPED_CONFIG_FLAG_PermanentlyDisablePotentialToBeWalkedIntoResponse = 440,\n\tCPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,\n\tCPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,\n\tCPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,\n\tCPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,\n\tCPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,\n\tCPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,\n\tCPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,\n\tCPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,\n\tCPED_CONFIG_FLAG_FiresDummyRockets = 449,\n\tCPED_CONFIG_FLAG_PedIsArresting = 450,\n\tCPED_CONFIG_FLAG_IsDecoyPed = 451,\n\tCPED_CONFIG_FLAG_HasEstablishedDecoy = 452,\n\tCPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,\n\tCPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,\n\tCPED_CONFIG_FLAG_HitByTranqWeapon = 455,\n\tCPED_CONFIG_FLAG_CanBeIncapacitated = 456,\n\tCPED_CONFIG_FLAG_ForcedAimFromArrest = 457,\n\tCPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,\n\t_0x4376ABF2 = 459,\n\tCPED_CONFIG_FLAG_RagdollFloatsIndefinitely = 460,\n\tCPED_CONFIG_FLAG_BlockElectricWeaponDamage = 461,\n\t_0x262A3B8E = 462,\n\t_0x1AA79A25 = 463,\n}"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCoordsKeepVehicle",
    "hash": "0x9AFEFF481A85AB2E",
    "code": "-- SET_PED_COORDS_KEEP_VEHICLE\nSetPedCoordsKeepVehicle(\n\tped --[[ Ped ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "teleports ped to coords along with the vehicle ped is in"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCoordsNoGang",
    "hash": "0x87052FE446E07247",
    "code": "-- SET_PED_COORDS_NO_GANG\nSetPedCoordsNoGang(\n\tped --[[ Ped ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCoverClipsetOverride",
    "hash": "0x9DBA107B4937F809",
    "code": "-- _SET_PED_COVER_CLIPSET_OVERRIDE\nSetPedCoverClipsetOverride(\n\tped --[[ Ped ]], \n\tp1 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Found in the b617d scripts:\nPED::_9DBA107B4937F809(v_7, \"trevor_heist_cover_2h\");\nSET_PED_MO*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedCowerHash",
    "hash": "0xA549131166868ED3",
    "code": "-- SET_PED_COWER_HASH\nSetPedCowerHash(\n\tped --[[ Ped ]], \n\tp1 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1: Only \"CODE_HUMAN_STAND_COWER\" found in the b617d scripts."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDefaultComponentVariation",
    "hash": "0x45EEE61580806D63",
    "code": "-- SET_PED_DEFAULT_COMPONENT_VARIATION\nSetPedDefaultComponentVariation(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets Ped Default Clothes"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDefensiveAreaAttachedToPed",
    "hash": "0x4EF47FE21698A8B6",
    "code": "-- SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED\nSetPedDefensiveAreaAttachedToPed(\n\tped --[[ Ped ]], \n\tattachPed --[[ Ped ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]], \n\tp8 --[[ number ]], \n\tp9 --[[ boolean ]], \n\tp10 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDefensiveAreaDirection",
    "hash": "0x413C6C763A4AFFAD",
    "code": "-- SET_PED_DEFENSIVE_AREA_DIRECTION\nSetPedDefensiveAreaDirection(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDefensiveSphereAttachedToPed",
    "hash": "0xF9B8F91AAD3B953E",
    "code": "-- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED\nSetPedDefensiveSphereAttachedToPed(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tradius --[[ number ]], \n\tp6 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDefensiveSphereAttachedToVehicle",
    "hash": "0xE4723DB6E736CCFF",
    "code": "-- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE\nSetPedDefensiveSphereAttachedToVehicle(\n\tped --[[ Ped ]], \n\ttarget --[[ Vehicle ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tradius --[[ number ]], \n\tp6 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDensityMultiplierThisFrame",
    "hash": "0x95E3D6257B166CF2",
    "code": "-- SET_PED_DENSITY_MULTIPLIER_THIS_FRAME\nSetPedDensityMultiplierThisFrame(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [
      "multiplier: \n\nAdjust from 0.0 (minimum, indicating no pedestrians in the street) to 1.0 (maximum, representing a normal amount of pedestrians on the street)."
    ],
    "returns": [],
    "description": "Parameters:\n\nmultiplier: \n\nAdjust from 0.0 (minimum, indicating no pedestrians in the street) to 1.0 (maximum, representing a normal amount of pedestrians on the street).\n\nUsage: Call this native every frame"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDesiredHeading",
    "hash": "0xAA5A7ECE2AA8FE70",
    "code": "-- SET_PED_DESIRED_HEADING\nSetPedDesiredHeading(\n\tped --[[ Ped ]], \n\theading --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDiesInSinkingVehicle",
    "hash": "0xD718A22995E2B4BC",
    "code": "-- SET_PED_DIES_IN_SINKING_VEHICLE\nSetPedDiesInSinkingVehicle(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDiesInVehicle",
    "hash": "0x2A30922C90C9B42C",
    "code": "-- SET_PED_DIES_IN_VEHICLE\nSetPedDiesInVehicle(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDiesInWater",
    "hash": "0x56CEF0AC79073BDE",
    "code": "-- SET_PED_DIES_IN_WATER\nSetPedDiesInWater(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDiesInstantlyInWater",
    "hash": "0xEEB64139BA29A7CF",
    "code": "-- SET_PED_DIES_INSTANTLY_IN_WATER\nSetPedDiesInstantlyInWater(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDiesWhenInjured",
    "hash": "0x5BA7919BED300023",
    "code": "-- SET_PED_DIES_WHEN_INJURED\nSetPedDiesWhenInjured(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDriveByClipsetOverride",
    "hash": "0xED34AB6C5CB36520",
    "code": "-- SET_PED_DRIVE_BY_CLIPSET_OVERRIDE\nSetPedDriveByClipsetOverride(\n\tped --[[ Ped ]], \n\tclipset --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedDucking",
    "hash": "0x030983CA930B692D",
    "code": "-- SET_PED_DUCKING\nSetPedDucking(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedEmissiveIntensity",
    "hash": "0x4E90D746056E273D",
    "code": "-- _SET_PED_EMISSIVE_INTENSITY\nSetPedEmissiveIntensity(\n\tped --[[ Ped ]], \n\tintensity --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to set the glow intensity on.",
      "intensity: \n\nThe glow intensity, value between 0.0 and 1.0."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to set the glow intensity on.\n\nintensity: \n\nThe glow intensity, value between 0.0 and 1.0.\n\nThis native sets the glow intensity of illuminated clothing items.\n\nThis native does NOT need to be executed every tick. This native is NOT synced with other connected players, you will have to set the opacity on the ped on all clients individually.\n\nGlow intensity is a value between 0.0 and 1.0.\n\nIn some older decompiled scripts this is known as _SET_PED_REFLECTION_INTENSITY. Since there's no joaat hash for this, I find _SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY more descriptive than _SET_PED_REFLECTION_INTENSITY.\n\nUse GetPedIlluminatedClothingGlowIntensity to get the illuminated clothing glow intensity of a specific ped.\n\nIntensity: 1.0: \n\nIntensity: 0.0: \n\nExamples code result: \n\n(Direct link if embed doesn't work: here)"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedEnableWeaponBlocking",
    "hash": "0x97A790315D3831FD",
    "code": "-- SET_PED_ENABLE_WEAPON_BLOCKING\nSetPedEnableWeaponBlocking(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedEnveffColorModulator",
    "hash": "0xD69411AA0CEBF9E9",
    "code": "-- SET_PED_ENVEFF_COLOR_MODULATOR\nSetPedEnveffColorModulator(\n\tped --[[ Ped ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Something related to the environmental effects natives.\nIn the \"agency_heist3b\" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedEnveffScale",
    "hash": "0xBF29516833893561",
    "code": "-- SET_PED_ENVEFF_SCALE\nSetPedEnveffScale(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Values look to be between 0.0 and 1.0  \nFrom decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0  \nYou are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedEyeColor",
    "hash": "0x50B56988B170AFDF",
    "code": "-- _SET_PED_EYE_COLOR\nSetPedEyeColor(\n\tped --[[ Ped ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used for freemode (online) characters.\n\nIndices:\n\nblack\nvery light blue/green\ndark blue\nbrown\ndarker brown\nlight brown\nblue\nlight blue\npink\nyellow\npurple\nblack\ndark green\nlight brown\nyellow/black pattern\nlight colored spiral pattern\nshiny red\nshiny half blue/half red\nhalf black/half light blue\nwhite/red perimter\ngreen snake\nred snake\ndark blue snake\ndark yellow\nbright yellow\nall black\nred small pupil\ndevil blue/black\nwhite small pupil\nglossed over"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedFaceFeature",
    "hash": "0x71A5C1DBA060049E",
    "code": "-- _SET_PED_FACE_FEATURE\nSetPedFaceFeature(\n\tped --[[ Ped ]], \n\tindex --[[ integer ]], \n\tscale --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "index: \n\nAn integer ranging from 0 to 19",
      "scale: \n\nA float ranging from -1.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\nindex: \n\nAn integer ranging from 0 to 19\n\nscale: \n\nA float ranging from -1.0 to 1.0\n\nSets the various freemode face features, e.g. nose length, chin shape.\n\nIndexes (From 0 to 19):\n\nParentheses indicate morph scale/direction as in (-1.0 to 1.0)\n\n0: Nose Width (Thin/Wide)\n1: Nose Peak (Up/Down)\n2: Nose Length (Long/Short)\n3: Nose Bone Curveness (Crooked/Curved)\n4: Nose Tip (Up/Down)\n5: Nose Bone Twist (Left/Right)\n6: Eyebrow (Up/Down)\n7: Eyebrow (In/Out)\n8: Cheek Bones (Up/Down)\n9: Cheek Sideways Bone Size (In/Out)\n10: Cheek Bones Width (Puffed/Gaunt)\n11: Eye Opening (Both) (Wide/Squinted)\n12: Lip Thickness (Both) (Fat/Thin)\n13: Jaw Bone Width (Narrow/Wide)\n14: Jaw Bone Shape (Round/Square)\n15: Chin Bone (Up/Down)\n16: Chin Bone Length (In/Out or Backward/Forward)\n17: Chin Bone Shape (Pointed/Square)\n18: Chin Hole (Chin Bum)\n19: Neck Thickness (Thin/Thick)\n\nNote:\n\nYou may need to call SetPedHeadBlendData prior to calling this native in order for it to work."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedFiringPattern",
    "hash": "0x9AC577F5A12AD8A9",
    "code": "-- SET_PED_FIRING_PATTERN\nSetPedFiringPattern(\n\tped --[[ Ped ]], \n\tpatternHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )  \nFIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )  \nFIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )  \nFIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )  \nFIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )  \nFIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )  \nFIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )  \nFIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )  \nFIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )  \nFIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )  \nFIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )  \nFIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )  \nFIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )  \nFIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )  \nFIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )  \nFIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )  \nif anyone is interested firing pattern info: pastebin.com/Px036isB"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedFleeAttributes",
    "hash": "0x70A2D1137C8ED7C9",
    "code": "-- SET_PED_FLEE_ATTRIBUTES\nSetPedFleeAttributes(\n\tped --[[ Ped ]], \n\tattributeFlags --[[ integer ]], \n\tenable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "bit 15 (0x8000) = force cower"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedGeneratesDeadBodyEvents",
    "hash": "0x7FB17BA2E7DECA5B",
    "code": "-- SET_PED_GENERATES_DEAD_BODY_EVENTS\nSetPedGeneratesDeadBodyEvents(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedGestureGroup",
    "hash": "0xDDF803377F94AAA8",
    "code": "-- SET_PED_GESTURE_GROUP\nSetPedGestureGroup(\n\tped --[[ Ped ]], \n\tanimGroupGesture --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the scripts:  \nPED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  \n\"ANIM_GROUP_GESTURE_MISS_FRA0\");  \nPED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  \n\"ANIM_GROUP_GESTURE_MISS_DocksSetup1\");"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedGetOutUpsideDownVehicle",
    "hash": "0xBC0ED94165A48BC2",
    "code": "-- SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE\nSetPedGetOutUpsideDownVehicle(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedGravity",
    "hash": "0x9FF447B6B6AD960A",
    "code": "-- SET_PED_GRAVITY\nSetPedGravity(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enable or disable the gravity of a ped  \nExamples:  \nPED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);  \nPED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedGroupMemberPassengerIndex",
    "hash": "0x0BDDB8D9EC6BCF3C",
    "code": "-- SET_PED_GROUP_MEMBER_PASSENGER_INDEX\nSetPedGroupMemberPassengerIndex(\n\tped --[[ Ped ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHairTint",
    "hash": "0x4CFFC65454C93A49",
    "code": "-- SET_PED_HAIR_TINT\nSetPedHairTint(\n\tped --[[ Ped ]], \n\tcolorID --[[ integer ]], \n\thighlightColorID --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped whose hair tint is to be set.",
      "colorID: \n\nThe tint index for the primary hair color.",
      "highlightColorID: \n\nThe tint index for the hair highlight color."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped whose hair tint is to be set.\n\ncolorID: \n\nThe tint index for the primary hair color.\n\nhighlightColorID: \n\nThe tint index for the hair highlight color.\n\nSets the tint index for the hair on the specified ped.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHeadBlendData",
    "hash": "0x9414E18B9434C2FE",
    "code": "-- SET_PED_HEAD_BLEND_DATA\nSetPedHeadBlendData(\n\tped --[[ Ped ]], \n\tshapeFirstID --[[ integer ]], \n\tshapeSecondID --[[ integer ]], \n\tshapeThirdID --[[ integer ]], \n\tskinFirstID --[[ integer ]], \n\tskinSecondID --[[ integer ]], \n\tskinThirdID --[[ integer ]], \n\tshapeMix --[[ number ]], \n\tskinMix --[[ number ]], \n\tthirdMix --[[ number ]], \n\tisParent --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "shapeFirstID: \n\nControls the shape of the first ped's face",
      "shapeSecondID: \n\nControls the shape of the second ped's face",
      "shapeThirdID: \n\nControls the shape of the third ped's face",
      "skinFirstID: \n\nControls the first id's skin tone",
      "skinSecondID: \n\nControls the second id's skin tone",
      "skinThirdID: \n\nControls the third id's skin tone",
      "shapeMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (shapeFirstID and shapeSecondID)",
      "skinMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (skinFirstID and skinSecondID)",
      "thirdMix: \n\nOverrides the others in favor of the third IDs.",
      "isParent: \n\nIsParent is set for \"children\" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\nshapeFirstID: \n\nControls the shape of the first ped's face\n\nshapeSecondID: \n\nControls the shape of the second ped's face\n\nshapeThirdID: \n\nControls the shape of the third ped's face\n\nskinFirstID: \n\nControls the first id's skin tone\n\nskinSecondID: \n\nControls the second id's skin tone\n\nskinThirdID: \n\nControls the third id's skin tone\n\nshapeMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (shapeFirstID and shapeSecondID)\n\nskinMix: \n\n0.0 - 1.0 Of whose characteristics to take Mother -> Father (skinFirstID and skinSecondID)\n\nthirdMix: \n\nOverrides the others in favor of the third IDs.\n\nisParent: \n\nIsParent is set for \"children\" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.\n\nFor more info please refer to this topic.\n\nOther information:\n\nIDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.</br>\n\nThis native function is often called prior to calling natives such as:\n\nSetPedHairColor\nSetPedHeadOverlayColor\nSetPedHeadOverlay\nSetPedFaceFeature"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHeadOverlay",
    "hash": "0x48F44967FA05CC1E",
    "code": "-- SET_PED_HEAD_OVERLAY\nSetPedHeadOverlay(\n\tped --[[ Ped ]], \n\toverlayID --[[ integer ]], \n\tindex --[[ integer ]], \n\topacity --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "overlayID: \n\nThe overlay id displayed up above.",
      "index: \n\nAn integer representing the index (from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1)",
      "opacity: \n\nA float ranging from 0.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\noverlayID: \n\nThe overlay id displayed up above.\n\nindex: \n\nAn integer representing the index (from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1)\n\nopacity: \n\nA float ranging from 0.0 to 1.0\n\nOverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.   \noverlayID       Part                  Index, to disable  \n0               Blemishes             0 - 23, 255  \n1               Facial Hair           0 - 28, 255  \n2               Eyebrows              0 - 33, 255  \n3               Ageing                0 - 14, 255  \n4               Makeup                0 - 74, 255  \n5               Blush                 0 - 6, 255  \n6               Complexion            0 - 11, 255  \n7               Sun Damage            0 - 10, 255  \n8               Lipstick              0 - 9, 255  \n9               Moles/Freckles        0 - 17, 255  \n10              Chest Hair            0 - 16, 255  \n11              Body Blemishes        0 - 11, 255  \n12              Add Body Blemishes    0 - 1, 255  \n\n\nNote:\n\nYou may need to call SetPedHeadBlendData prior to calling this native in order for it to work."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHeadOverlayColor",
    "hash": "0x497BF74A7B9CB952",
    "code": "-- _SET_PED_HEAD_OVERLAY_COLOR\nSetPedHeadOverlayColor(\n\tped --[[ Ped ]], \n\toverlayID --[[ integer ]], \n\tcolorType --[[ integer ]], \n\tcolorID --[[ integer ]], \n\tsecondColorID --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "overlayID: \n\nAn integer representing the overlay id",
      "colorType: \n\n1 for eyebrows, beards, makeup, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.",
      "colorID: \n\nAn integer representing the primary color id",
      "secondColorID: \n\nAn integer representing the secondary color id"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\noverlayID: \n\nAn integer representing the overlay id\n\ncolorType: \n\n1 for eyebrows, beards, makeup, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.\n\ncolorID: \n\nAn integer representing the primary color id\n\nsecondColorID: \n\nAn integer representing the secondary color id\n\nUsed for freemode (online) characters. \nCalled after SET_PED_HEAD_OVERLAY().  \n\n\nNote:\n\nYou may need to call SetPedHeadBlendData prior to calling this native in order for it to work."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHearingRange",
    "hash": "0x33A8F7F7D5F7F33C",
    "code": "-- SET_PED_HEARING_RANGE\nSetPedHearingRange(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHeatscaleOverride",
    "hash": "0xC1F6EBF9A3D55538",
    "code": "-- SET_PED_HEATSCALE_OVERRIDE\nSetPedHeatscaleOverride(\n\tped --[[ Ped ]], \n\theatScale --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHelmet",
    "hash": "0x560A43136EB58105",
    "code": "-- SET_PED_HELMET\nSetPedHelmet(\n\tped --[[ Ped ]], \n\tbEnable --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nPed index.",
      "bEnable: \n\nBoolean value that indicates whether the helmet should be worn or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index.\n\nbEnable: \n\nBoolean value that indicates whether the helmet should be worn or not.\n\nSets whether a pedestrian should wear a helmet."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHelmetFlag",
    "hash": "0xC0E78D5C2CE3EB25",
    "code": "-- SET_PED_HELMET_FLAG\nSetPedHelmetFlag(\n\tped --[[ Ped ]], \n\thelmetFlag --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHelmetPropIndex",
    "hash": "0x26D83693ED99291C",
    "code": "-- SET_PED_HELMET_PROP_INDEX\nSetPedHelmetPropIndex(\n\tped --[[ Ped ]], \n\tpropIndex --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "propIndex: \n\nThe prop index to set the helmet to. Refer to SET_PED_PROP_INDEX."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\npropIndex: \n\nThe prop index to set the helmet to. Refer to SET_PED_PROP_INDEX.\n\nNativeDB Added Parameter 3: BOOL p2"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHelmetTextureIndex",
    "hash": "0xF1550C4BD22582E2",
    "code": "-- SET_PED_HELMET_TEXTURE_INDEX\nSetPedHelmetTextureIndex(\n\tped --[[ Ped ]], \n\ttextureIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHelmetUnk",
    "hash": "0x3F7325574E41B44D",
    "code": "-- _SET_PED_HELMET_UNK\nSetPedHelmetUnk(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedHighlyPerceptive",
    "hash": "0x52D59AB61DDC05DD",
    "code": "-- SET_PED_HIGHLY_PERCEPTIVE\nSetPedHighlyPerceptive(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedIdRange",
    "hash": "0xF107E836A70DCE05",
    "code": "-- SET_PED_ID_RANGE\nSetPedIdRange(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedInVehicleContext",
    "hash": "0x530071295899A8C6",
    "code": "-- SET_PED_IN_VEHICLE_CONTEXT\nSetPedInVehicleContext(\n\tped --[[ Ped ]], \n\tcontext --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY(\"MINI_PROSTITUTE_LOW_PASSENGER\"));\nPED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY(\"MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER\"));\nPED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY(\"MISS_FAMILY1_JIMMY_SIT\"));\nPED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY(\"MISS_FAMILY1_JIMMY_SIT_REAR\"));\nPED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY(\"MISS_FAMILY2_JIMMY_BICYCLE\"));\nPED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY(\"MISSFBI2_MICHAEL_DRIVEBY\"));\nPED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"MISS_ARMENIAN3_FRANKLIN_TENSE\"));\nPED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"MISSFBI5_TREVOR_DRIVING\"));"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedIncreasedAvoidanceRadius",
    "hash": "0x570389D1C3DE3C6B",
    "code": "-- SET_PED_INCREASED_AVOIDANCE_RADIUS\nSetPedIncreasedAvoidanceRadius(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedIntoVehicle",
    "hash": "0xF75B0D629E1C063D",
    "code": "-- SET_PED_INTO_VEHICLE\nSetPedIntoVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tseatIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedKeepTask",
    "hash": "0x971D38760FBC02EF",
    "code": "-- SET_PED_KEEP_TASK\nSetPedKeepTask(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedLegIkMode",
    "hash": "0xC396F5B86FF9FEBD",
    "code": "-- SET_PED_LEG_IK_MODE\nSetPedLegIkMode(\n\tped --[[ Ped ]], \n\tmode --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "\"IK\" stands for \"Inverse kinematics.\" I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedLodMultiplier",
    "hash": "0xDC2C5C242AAC342B",
    "code": "-- SET_PED_LOD_MULTIPLIER\nSetPedLodMultiplier(\n\tped --[[ Ped ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMaxHealth",
    "hash": "0xF5F6378C4F3419D3",
    "code": "-- SET_PED_MAX_HEALTH\nSetPedMaxHealth(\n\tped --[[ Ped ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle we're setting this for.",
      "value: \n\nThe new max health."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle we're setting this for.\n\nvalue: \n\nThe new max health."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMaxMoveBlendRatio",
    "hash": "0x433083750C5E064A",
    "code": "-- SET_PED_MAX_MOVE_BLEND_RATIO\nSetPedMaxMoveBlendRatio(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMaxTimeInWater",
    "hash": "0x43C851690662113D",
    "code": "-- SET_PED_MAX_TIME_IN_WATER\nSetPedMaxTimeInWater(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMaxTimeUnderwater",
    "hash": "0x6BA428C528D9E522",
    "code": "-- SET_PED_MAX_TIME_UNDERWATER\nSetPedMaxTimeUnderwater(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nPed id.",
      "value: \n\nTime in seconds. Maximum is 50.0, any value above will be changed to 50.0."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id.\n\nvalue: \n\nTime in seconds. Maximum is 50.0, any value above will be changed to 50.0.\n\nSet the maximum time a ped can stay underwater. Maximum seems to be 50 seconds."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMinGroundTimeForStungun",
    "hash": "0xFA0675AB151073FA",
    "code": "-- SET_PED_MIN_GROUND_TIME_FOR_STUNGUN\nSetPedMinGroundTimeForStungun(\n\tped --[[ Ped ]], \n\tminTimeInMs --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to set the min ground time for",
      "minTimeInMs: \n\nThe minimum time the stun should last in milliseconds."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to set the min ground time for\n\nminTimeInMs: \n\nThe minimum time the stun should last in milliseconds.\n\nOverwrites the minimum time the ped will stay on the ground for after being stunned. Setting this while the ped is stunned will not alter the duration of the current stun but will still effect future stuns.\n\nPassing -1 into the second parameter minTimeInMs will reset the modifier, making it use the weapons original DamageTime as the stun duration (see update/update.rpf/common/data/ai/weapons.meta)\n\nNOTE: Unlike what the native name implies, this works on any weapon that has its DamageType in the weapons.meta set to ELECTRIC."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMinMoveBlendRatio",
    "hash": "0x01A898D26E2333DD",
    "code": "-- SET_PED_MIN_MOVE_BLEND_RATIO\nSetPedMinMoveBlendRatio(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedModelIsSuppressed",
    "hash": "0xE163A4BCE4DE6F11",
    "code": "-- SET_PED_MODEL_IS_SUPPRESSED\nSetPedModelIsSuppressed(\n\tmodel --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMoney",
    "hash": "0xA9C8960E8684C1B5",
    "code": "-- SET_PED_MONEY\nSetPedMoney(\n\tped --[[ Ped ]], \n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Maximum possible amount of money on MP is 2000. ~JX  \n-----------------------------------------------------------------------------  \nMaximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMotionBlur",
    "hash": "0x0A986918B102B448",
    "code": "-- SET_PED_MOTION_BLUR\nSetPedMotionBlur(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMoveAnimsBlendOut",
    "hash": "0x9E8C908F41584ECD",
    "code": "-- SET_PED_MOVE_ANIMS_BLEND_OUT\nSetPedMoveAnimsBlendOut(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMoveRateOverride",
    "hash": "0x085BF80FA50A39D1",
    "code": "-- SET_PED_MOVE_RATE_OVERRIDE\nSetPedMoveRateOverride(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Min: 0.00  \nMax: 10.00  \nCan be used in combo with fast run cheat.  \nWhen value is set to 10.00:  \nSprinting without fast run cheat: 66 m/s  \nSprinting with fast run cheat: 77 m/s  \nNeeds to be looped!  \nNote: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedMovementClipset",
    "hash": "0xAF8A94EDE7712BEF",
    "code": "-- SET_PED_MOVEMENT_CLIPSET\nSetPedMovementClipset(\n\tped --[[ Ped ]], \n\tclipSet --[[ string ]], \n\ttransitionSpeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "List of movement clipsets:\nThanks to elsewhat for list.\n \"ANIM_GROUP_MOVE_BALLISTIC\"\n \"ANIM_GROUP_MOVE_LEMAR_ALLEY\"\n \"clipset@move@trash_fast_turn\"\n \"FEMALE_FAST_RUNNER\"\n \"missfbi4prepp1_garbageman\"\n \"move_characters@franklin@fire\"\n \"move_characters@Jimmy@slow@\"\n \"move_characters@michael@fire\"\n \"move_f@flee@a\"\n \"move_f@scared\"\n \"move_f@sexy@a\"\n \"move_heist_lester\"\n \"move_injured_generic\"\n \"move_lester_CaneUp\"\n \"move_m@bag\"\n \"MOVE_M@BAIL_BOND_NOT_TAZERED\"\n \"MOVE_M@BAIL_BOND_TAZERED\"\n \"move_m@brave\"\n \"move_m@casual@d\"\n \"move_m@drunk@moderatedrunk\"\n \"MOVE_M@DRUNK@MODERATEDRUNK\"\n \"MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP\"\n \"MOVE_M@DRUNK@SLIGHTLYDRUNK\"\n \"MOVE_M@DRUNK@VERYDRUNK\"\n \"move_m@fire\"\n \"move_m@gangster@var_e\"\n \"move_m@gangster@var_f\"\n \"move_m@gangster@var_i\"\n \"move_m@JOG@\"\n \"MOVE_M@PRISON_GAURD\"\n \"MOVE_P_M_ONE\"\n \"MOVE_P_M_ONE_BRIEFCASE\"\n \"move_p_m_zero_janitor\"\n \"move_p_m_zero_slow\"\n \"move_ped_bucket\"\n \"move_ped_crouched\"\n \"move_ped_mop\"\n \"MOVE_M@FEMME@\"\n \"MOVE_F@FEMME@\"\n \"MOVE_M@GANGSTER@NG\"\n \"MOVE_F@GANGSTER@NG\"\n \"MOVE_M@POSH@\"\n \"MOVE_F@POSH@\"\n \"MOVE_M@TOUGH_GUY@\"\n \"MOVE_F@TOUGH_GUY@\"\n~ NotCrunchyTaco"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedNameDebug",
    "hash": "0x98EFA132A4117BE1",
    "code": "-- SET_PED_NAME_DEBUG\nSetPedNameDebug(\n\tped --[[ Ped ]], \n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NOTE: Debugging functions are not present in the retail version of the game.  \n*untested but char *name could also be a hash for a localized string"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedNeverLeavesGroup",
    "hash": "0x3DBFC55D5C9BB447",
    "code": "-- SET_PED_NEVER_LEAVES_GROUP\nSetPedNeverLeavesGroup(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedNonCreationArea",
    "hash": "0xEE01041D559983EA",
    "code": "-- SET_PED_NON_CREATION_AREA\nSetPedNonCreationArea(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The distance between these points, is the diagonal of a box (remember it's 3D)."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPanicExitScenario",
    "hash": "0xFE07FF6495D52E2A",
    "code": "-- SET_PED_PANIC_EXIT_SCENARIO\nlocal retval --[[ Any ]] =\n\tSetPedPanicExitScenario(\n\t\tped --[[ Ped ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedParachuteTintIndex",
    "hash": "0x333FC8DB079B7186",
    "code": "-- SET_PED_PARACHUTE_TINT_INDEX\nSetPedParachuteTintIndex(\n\tped --[[ Ped ]], \n\ttintIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPhonePaletteIdx",
    "hash": "0x83A169EABCDB10A2",
    "code": "-- SET_PED_PHONE_PALETTE_IDX\nSetPedPhonePaletteIdx(\n\tped --[[ Ped ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped whose phone palette is to be set.",
      "index: \n\nThe index of the color palette to apply to the ped's phone."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped whose phone palette is to be set.\n\nindex: \n\nThe index of the color palette to apply to the ped's phone.\n\nSets the palette index of a ped's phone.\n\nValue\tColor\n0\tLight Blue\n1\tGreen\n2\tRed\n3\tOrange\n4\tGrey\n5\tPurple\n6\tPink\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPinnedDown",
    "hash": "0xAAD6D1ACF08F4612",
    "code": "-- SET_PED_PINNED_DOWN\nlocal retval --[[ Any ]] =\n\tSetPedPinnedDown(\n\t\tped --[[ Ped ]], \n\t\tpinned --[[ boolean ]], \n\t\ti --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "i could be time. Only example in the decompiled scripts uses it as -1."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPlaysHeadOnHornAnimWhenDiesInVehicle",
    "hash": "0x94D94BF1A75AED3D",
    "code": "-- SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE\nSetPedPlaysHeadOnHornAnimWhenDiesInVehicle(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub\n\nPoints to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPreferredCoverSet",
    "hash": "0x8421EB4DA7E391B9",
    "code": "-- SET_PED_PREFERRED_COVER_SET\nSetPedPreferredCoverSet(\n\tped --[[ Ped ]], \n\titemSet --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPreloadPropData",
    "hash": "0x2B16A3BFF1FBCE49",
    "code": "-- SET_PED_PRELOAD_PROP_DATA\nlocal retval --[[ boolean ]] =\n\tSetPedPreloadPropData(\n\t\tped --[[ Ped ]], \n\t\tcomponentId --[[ integer ]], \n\t\tdrawableId --[[ integer ]], \n\t\ttextureId --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component that you want to set. Refer to SET_PED_COMPONENT_VARIATION.",
      "drawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component that you want to set. Refer to SET_PED_COMPONENT_VARIATION.\n\ndrawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPreloadVariationData",
    "hash": "0x39D55A620FCB6A3A",
    "code": "-- SET_PED_PRELOAD_VARIATION_DATA\nlocal retval --[[ Any ]] =\n\tSetPedPreloadVariationData(\n\t\tped --[[ Ped ]], \n\t\tslot --[[ integer ]], \n\t\tdrawableId --[[ integer ]], \n\t\ttextureId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "from extreme3.c4\nPED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));\np1 is probably componentId"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPrimaryLookat",
    "hash": "0xCD17B554996A8D9E",
    "code": "-- SET_PED_PRIMARY_LOOKAT\nSetPedPrimaryLookat(\n\tped --[[ Ped ]], \n\tlookAt --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is only called once in the scripts.\nsub_1CD9(&l_49, 0, getElem(3, &l_34, 4), \"MICHAEL\", 0, 1);\n                    sub_1CA8(\"WORLD_HUMAN_SMOKING\", 2);\n                    PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedPropIndex",
    "hash": "0x93376B65A266EB5F",
    "code": "-- SET_PED_PROP_INDEX\nSetPedPropIndex(\n\tped --[[ Ped ]], \n\tcomponentId --[[ integer ]], \n\tdrawableId --[[ integer ]], \n\ttextureId --[[ integer ]], \n\tattach --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "componentId: \n\nThe component that you want to set. Refer to SET_PED_COMPONENT_VARIATION.",
      "drawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.",
      "textureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS.",
      "attach: \n\nAttached or not."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\ncomponentId: \n\nThe component that you want to set. Refer to SET_PED_COMPONENT_VARIATION.\n\ndrawableId: \n\nThe drawable id that is going to be set. Refer to GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS.\n\ntextureId: \n\nThe texture id of the drawable. Refer to GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS.\n\nattach: \n\nAttached or not.\n\nThis native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.\n\nMP Freemode list of props\n\n0: Hats 1: Glasses 2: Ears 6: Watches 7: Bracelets\n\nList of Prop IDs\n\nenum eAnchorPoints\n{\n    ANCHOR_HEAD = 0, // \"p_head\"\n    ANCHOR_EYES = 1, // \"p_eyes\"\n    ANCHOR_EARS = 2, // \"p_ears\"\n    ANCHOR_MOUTH = 3, // \"p_mouth\"\n    ANCHOR_LEFT_HAND = 4, // \"p_lhand\"\n    ANCHOR_RIGHT_HAND = 5, // \"p_rhand\"\n    ANCHOR_LEFT_WRIST = 6, // \"p_lwrist\"\n    ANCHOR_RIGHT_WRIST = 7, // \"p_rwrist\"\n    ANCHOR_HIP = 8, // \"p_lhip\"\n    ANCHOR_LEFT_FOOT = 9, // \"p_lfoot\"\n    ANCHOR_RIGHT_FOOT = 10, // \"p_rfoot\"\n    ANCHOR_PH_L_HAND = 11, // \"ph_lhand\"\n    ANCHOR_PH_R_HAND = 12, // \"ph_rhand\"\n    NUM_ANCHORS = 13,\n};"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedRagdollForceFall",
    "hash": "0x01F6594B923B9251",
    "code": "-- SET_PED_RAGDOLL_FORCE_FALL\nSetPedRagdollForceFall(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedRagdollOnCollision",
    "hash": "0xF0A4F1BBF4FA7497",
    "code": "-- SET_PED_RAGDOLL_ON_COLLISION\nSetPedRagdollOnCollision(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk. Needs to be recalled after each ragdoll from a Collision."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedRandomComponentVariation",
    "hash": "0xC8A9481A01E63C28",
    "code": "-- SET_PED_RANDOM_COMPONENT_VARIATION\nSetPedRandomComponentVariation(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedRandomProps",
    "hash": "0xC44AA05345C992C6",
    "code": "-- SET_PED_RANDOM_PROPS\nSetPedRandomProps(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedRelationshipGroupDefaultHash",
    "hash": "0xADB3F206518799E8",
    "code": "-- SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH\nSetPedRelationshipGroupDefaultHash(\n\tped --[[ Ped ]], \n\thash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedRelationshipGroupHash",
    "hash": "0xC80A74AC829DDD92",
    "code": "-- SET_PED_RELATIONSHIP_GROUP_HASH\nSetPedRelationshipGroupHash(\n\tped --[[ Ped ]], \n\thash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedReserveParachuteTintIndex",
    "hash": "0xE88DA0751C22A2AD",
    "code": "-- SET_PED_RESERVE_PARACHUTE_TINT_INDEX\nSetPedReserveParachuteTintIndex(\n\tped --[[ Ped ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedResetFlag",
    "hash": "0xC1E8A365BF3B29F2",
    "code": "-- SET_PED_RESET_FLAG\nSetPedResetFlag(\n\tped --[[ Ped ]], \n\tflagId --[[ integer ]], \n\tdoReset --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1); Known values:"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedScubaGearVariation",
    "hash": "0x36C6984C3ED0C911",
    "code": "-- _SET_PED_SCUBA_GEAR_VARIATION\nSetPedScubaGearVariation(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native sets a scuba mask for freemode models and an oxygen bottle for player* models. It works on freemode and player* models."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSeeingRange",
    "hash": "0xF29CF591C4BF6CEE",
    "code": "-- SET_PED_SEEING_RANGE\nSetPedSeeingRange(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedShootRate",
    "hash": "0x614DA022990752DC",
    "code": "-- SET_PED_SHOOT_RATE\nSetPedShootRate(\n\tped --[[ Ped ]], \n\tshootRate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "shootRate 0-1000"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedShootsAtCoord",
    "hash": "0x96A05E4FB321B1BA",
    "code": "-- SET_PED_SHOOTS_AT_COORD\nSetPedShootsAtCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nPed index.",
      "x:",
      "y:",
      "z:",
      "toggle:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index.\n\nx:\ny:\nz:\ntoggle:\n\nFires a weapon at a coordinate using a ped."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedShouldPlayDirectedScenarioExit",
    "hash": "0xEC6935EBE0847B90",
    "code": "-- _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT\nlocal retval --[[ boolean ]] =\n\tSetPedShouldPlayDirectedScenarioExit(\n\t\tped --[[ Ped ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [
      "ped: \n\nthe ped who should play a normal (unhurried) exit the next time they are given a script command.",
      "x: \n\nX Coordinate.",
      "y: \n\nY Coordinate.",
      "z: \n\nZ Coordinate."
    ],
    "returns": [
      "Returns true if the position was successfully set."
    ],
    "description": "Parameters:\n\nped: \n\nthe ped who should play a normal (unhurried) exit the next time they are given a script command.\n\nx: \n\nX Coordinate.\n\ny: \n\nY Coordinate.\n\nz: \n\nZ Coordinate.\n\nReturns:\n\nReturns true if the position was successfully set.\n\nWhen this ped receives its next script task, they will exit from their scenario using the normal scenario exit. Exiting the scenario may take several frames while the ped is playing the exit animation. If the ped is not currently using a scenario at the time of the command or 0,0,0 is specified as the reaction position, then the ped will by default attempt to direct their exit forwards."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedShouldPlayFleeScenarioExit",
    "hash": "0xEEED8FAFEC331A70",
    "code": "-- SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT\nlocal retval --[[ Any ]] =\n\tSetPedShouldPlayFleeScenarioExit(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedShouldPlayImmediateScenarioExit",
    "hash": "0xF1C03A5352243A30",
    "code": "-- SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT\nSetPedShouldPlayImmediateScenarioExit(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedShouldPlayNormalScenarioExit",
    "hash": "0xA3A9299C4F2ADB98",
    "code": "-- SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT\nSetPedShouldPlayNormalScenarioExit(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSphereDefensiveArea",
    "hash": "0x9D3151A373974804",
    "code": "-- SET_PED_SPHERE_DEFENSIVE_AREA\nSetPedSphereDefensiveArea(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tp5 --[[ boolean ]], \n\tp6 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedStayInVehicleWhenJacked",
    "hash": "0xEDF4079F9D54C9A1",
    "code": "-- SET_PED_STAY_IN_VEHICLE_WHEN_JACKED\nSetPedStayInVehicleWhenJacked(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedStealthMovement",
    "hash": "0x88CBB5CEB96B7BD2",
    "code": "-- SET_PED_STEALTH_MOVEMENT\nSetPedStealthMovement(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]], \n\taction --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 is usually 0 in the scripts. action is either 0 or a pointer to \"DEFAULT_ACTION\"."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSteersAroundObjects",
    "hash": "0x1509C089ADC208BF",
    "code": "-- SET_PED_STEERS_AROUND_OBJECTS\nSetPedSteersAroundObjects(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSteersAroundPeds",
    "hash": "0x46F2193B3AD1D891",
    "code": "-- SET_PED_STEERS_AROUND_PEDS\nSetPedSteersAroundPeds(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSteersAroundVehicles",
    "hash": "0xEB6FB9D48DDE23EC",
    "code": "-- SET_PED_STEERS_AROUND_VEHICLES\nSetPedSteersAroundVehicles(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedStrafeClipset",
    "hash": "0x29A28F3F8CF6D854",
    "code": "-- SET_PED_STRAFE_CLIPSET\nSetPedStrafeClipset(\n\tped --[[ Ped ]], \n\tclipSet --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSuffersCriticalHits",
    "hash": "0xEBD76F2359F190AC",
    "code": "-- SET_PED_SUFFERS_CRITICAL_HITS\nSetPedSuffersCriticalHits(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Ped no longer takes critical damage modifiers if set to FALSE.\n\nExample: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSurvivesBeingOutOfWater",
    "hash": "0x100CD221F572F6E1",
    "code": "-- _SET_PED_SURVIVES_BEING_OUT_OF_WATER\nlocal retval --[[ boolean ]] =\n\tSetPedSurvivesBeingOutOfWater(\n\t\tped --[[ Ped ]], \n\t\ttoggle --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe marine animal ped",
      "toggle: \n\ntrue to allow survival out of water, false to apply normal water restrictions."
    ],
    "returns": [
      "Returns true if successful."
    ],
    "description": "Parameters:\n\nped: \n\nThe marine animal ped\n\ntoggle: \n\ntrue to allow survival out of water, false to apply normal water restrictions.\n\nReturns:\n\nReturns true if successful.\n\nAllows marine animals to survive outside of water (R* is using it for sharks).\n\nNativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedSweat",
    "hash": "0x27B0405F59637D1F",
    "code": "-- SET_PED_SWEAT\nSetPedSweat(\n\tped --[[ Ped ]], \n\tsweat --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sweat is set to 100.0 or 0.0 in the decompiled scripts."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedTargetLossResponse",
    "hash": "0x0703B9079823DA4A",
    "code": "-- SET_PED_TARGET_LOSS_RESPONSE\nSetPedTargetLossResponse(\n\tped --[[ Ped ]], \n\tresponseType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedToInformRespectedFriends",
    "hash": "0x112942C6E708F70B",
    "code": "-- SET_PED_TO_INFORM_RESPECTED_FRIENDS\nSetPedToInformRespectedFriends(\n\tped --[[ Ped ]], \n\tradius --[[ number ]], \n\tmaxFriends --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedToLoadCover",
    "hash": "0x332B562EEDA62399",
    "code": "-- SET_PED_TO_LOAD_COVER\nSetPedToLoadCover(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedToRagdoll",
    "hash": "0xAE99FB955581844A",
    "code": "-- SET_PED_TO_RAGDOLL\nlocal retval --[[ boolean ]] =\n\tSetPedToRagdoll(\n\t\tped --[[ Ped ]], \n\t\tminTime --[[ integer ]], \n\t\tmaxTime --[[ integer ]], \n\t\tragdollType --[[ integer ]], \n\t\tbAbortIfInjured --[[ boolean ]], \n\t\tbAbortIfDead --[[ boolean ]], \n\t\tbForceScriptControl --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to ragdoll.",
      "minTime: \n\nTime(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.",
      "maxTime:",
      "ragdollType:",
      "bAbortIfInjured: \n\nunused",
      "bAbortIfDead: \n\nunused",
      "bForceScriptControl:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to ragdoll.\n\nminTime: \n\nTime(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.\n\nmaxTime:\nragdollType:\nbAbortIfInjured: \n\nunused\n\nbAbortIfDead: \n\nunused\n\nbForceScriptControl:\n\np4/p5: Unusued in TU27\n\nRagdoll Types\n\n0: CTaskNMRelax 1: CTaskNMScriptControl: Hardcoded not to work in networked environments. Else: CTaskNMBalance"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedToRagdollWithFall",
    "hash": "0xD76632D99E4966C8",
    "code": "-- SET_PED_TO_RAGDOLL_WITH_FALL\nlocal retval --[[ boolean ]] =\n\tSetPedToRagdollWithFall(\n\t\tped --[[ Ped ]], \n\t\tminTime --[[ integer ]], \n\t\tmaxTime --[[ integer ]], \n\t\tnFallType --[[ integer ]], \n\t\tdirX --[[ number ]], \n\t\tdirY --[[ number ]], \n\t\tdirZ --[[ number ]], \n\t\tfGroundHeight --[[ number ]], \n\t\tgrab1X --[[ number ]], \n\t\tgrab1Y --[[ number ]], \n\t\tgrab1Z --[[ number ]], \n\t\tgrab2X --[[ number ]], \n\t\tgrab2Y --[[ number ]], \n\t\tgrab2Z --[[ number ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to ragdoll.",
      "minTime:",
      "maxTime:",
      "nFallType: \n\nThe type of fall.",
      "dirX: \n\nThe x direction of the fall.",
      "dirY: \n\nThe y direction of the fall.",
      "dirZ: \n\nThe z direction of the fall.",
      "fGroundHeight: \n\nThe ground height (z).",
      "grab1X: \n\nunused",
      "grab1Y: \n\nunused",
      "grab1Z: \n\nunused",
      "grab2X: \n\nunused",
      "grab2Y: \n\nunused",
      "grab2Z: \n\nunused"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to ragdoll.\n\nminTime:\nmaxTime:\nnFallType: \n\nThe type of fall.\n\ndirX: \n\nThe x direction of the fall.\n\ndirY: \n\nThe y direction of the fall.\n\ndirZ: \n\nThe z direction of the fall.\n\nfGroundHeight: \n\nThe ground height (z).\n\ngrab1X: \n\nunused\n\ngrab1Y: \n\nunused\n\ngrab1Z: \n\nunused\n\ngrab2X: \n\nunused\n\ngrab2Y: \n\nunused\n\ngrab2Z: \n\nunused\n\nenum eNMFallType {\n    TYPE_FROM_HIGH = 0,\n    TYPE_OVER_WALL = 1,\n    TYPE_DOWN_STAIRS = 2,\n    TYPE_DIE_TYPES = 3,\n    TYPE_DIE_FROM_HIGH = 4,\n    TYPE_DIE_OVER_WALL = 5,\n    TYPE_DIE_DOWN_STAIRS = 6\n}\n\nReturn variable is never used in R*'s scripts.  \nNot sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.  \nx, y, and z are coordinates, most likely to where the ped will fall.  \np7 is probably the force of the fall, but untested, so I left the variable name the same.  \np8 to p13 are always 0f in R*'s scripts.  \n(Simplified) Example of the usage of the function from R*'s scripts:  \nped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedUsingActionMode",
    "hash": "0xD75ACCF5E0FB5367",
    "code": "-- SET_PED_USING_ACTION_MODE\nSetPedUsingActionMode(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ integer ]], \n\taction --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p2 is usually -1 in the scripts. action is either 0 or \"DEFAULT_ACTION\"."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedVehicleForcedSeatUsage",
    "hash": "0x952F06BEECD775CC",
    "code": "-- SET_PED_VEHICLE_FORCED_SEAT_USAGE\nSetPedVehicleForcedSeatUsage(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tseatIndex --[[ integer ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 5: Any p4"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedVisualFieldCenterAngle",
    "hash": "0x3B6405E8AB34A907",
    "code": "-- SET_PED_VISUAL_FIELD_CENTER_ANGLE\nSetPedVisualFieldCenterAngle(\n\tped --[[ Ped ]], \n\tangle --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedVisualFieldMaxAngle",
    "hash": "0x70793BDCA1E854D4",
    "code": "-- SET_PED_VISUAL_FIELD_MAX_ANGLE\nSetPedVisualFieldMaxAngle(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedVisualFieldMaxElevationAngle",
    "hash": "0x78D0B67629D75856",
    "code": "-- SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE\nSetPedVisualFieldMaxElevationAngle(\n\tped --[[ Ped ]], \n\tangle --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedVisualFieldMinAngle",
    "hash": "0x2DB492222FB21E26",
    "code": "-- SET_PED_VISUAL_FIELD_MIN_ANGLE\nSetPedVisualFieldMinAngle(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedVisualFieldMinElevationAngle",
    "hash": "0x7A276EB2C224D70F",
    "code": "-- SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE\nSetPedVisualFieldMinElevationAngle(\n\tped --[[ Ped ]], \n\tangle --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedVisualFieldPeripheralRange",
    "hash": "0x9C74B0BC831B753A",
    "code": "-- SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE\nSetPedVisualFieldPeripheralRange(\n\tped --[[ Ped ]], \n\trange --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedWeaponMovementClipset",
    "hash": "0x2622E35B77D3ACA2",
    "code": "-- SET_PED_WEAPON_MOVEMENT_CLIPSET\nSetPedWeaponMovementClipset(\n\tped --[[ Ped ]], \n\tclipSet --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedWetnessEnabledThisFrame",
    "hash": "0xB5485E4907B53019",
    "code": "-- SET_PED_WETNESS_ENABLED_THIS_FRAME\nSetPedWetnessEnabledThisFrame(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPedWetnessHeight",
    "hash": "0x44CB6447D2571AA0",
    "code": "-- SET_PED_WETNESS_HEIGHT\nSetPedWetnessHeight(\n\tped --[[ Ped ]], \n\theight --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It adds the wetness level to the player clothing/outfit. As if player just got out from water surface."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetPopControlSphereThisFrame",
    "hash": "0xD8C3BE3EE94CAF2D",
    "code": "-- SET_POP_CONTROL_SPHERE_THIS_FRAME\nSetPopControlSphereThisFrame(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tmin --[[ number ]], \n\tmax --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Min and max are usually 100.0 and 200.0"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetRagdollBlockingFlags",
    "hash": "0x26695EC767728D84",
    "code": "-- SET_RAGDOLL_BLOCKING_FLAGS\nSetRagdollBlockingFlags(\n\tped --[[ Ped ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Works for both player and peds, but some flags don't seem to work for the player (1, for example)  \n1 - Blocks ragdolling when shot.  \n2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.  \n4 - Blocks ragdolling when set on fire.  \n-----------------------------------------------------------------------  \nThere seem to be 26 flags"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetRelationshipBetweenGroups",
    "hash": "0xBF25EB89375A37AD",
    "code": "-- SET_RELATIONSHIP_BETWEEN_GROUPS\nSetRelationshipBetweenGroups(\n\trelationship --[[ integer ]], \n\tgroup1 --[[ Hash ]], \n\tgroup2 --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the relationship between two groups. This should be called twice (once for each group).  \nRelationship types:  \n0 = Companion  \n1 = Respect  \n2 = Like  \n3 = Neutral  \n4 = Dislike  \n5 = Hate  \n255 = Pedestrians  \nExample:  \nPED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  \nPED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetRelationshipGroupDontAffectWantedLevel",
    "hash": "0x5615E0C5EB2BC6E2",
    "code": "-- _SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL\nSetRelationshipGroupDontAffectWantedLevel(\n\tgroup --[[ Hash ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetScenarioPedDensityMultiplierThisFrame",
    "hash": "0x7A556143A1C03898",
    "code": "-- SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME\nSetScenarioPedDensityMultiplierThisFrame(\n\tinteriorMult --[[ number ]], \n\texteriorMult --[[ number ]]\n)",
    "parameters": [
      "interiorMult: \n\nMultiplier for ped scenarios inside interiors.",
      "exteriorMult: \n\nMultiplier for ped scenarios outside interiors."
    ],
    "returns": [],
    "description": "Parameters:\n\ninteriorMult: \n\nMultiplier for ped scenarios inside interiors.\n\nexteriorMult: \n\nMultiplier for ped scenarios outside interiors.\n\nSet the number of scenario peds on the entire map"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetScenarioPedsSpawnInSphereArea",
    "hash": "0x28157D43CF600981",
    "code": "-- SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA\nSetScenarioPedsSpawnInSphereArea(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\trange --[[ number ]], \n\tp4 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetScenarioPedsToBeReturnedByNextCommand",
    "hash": "0x14F19A8782C8071E",
    "code": "-- SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND\nSetScenarioPedsToBeReturnedByNextCommand(\n\tvalue --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetScriptedAnimSeatOffset",
    "hash": "0x5917BBA32D06C230",
    "code": "-- SET_SCRIPTED_ANIM_SEAT_OFFSET\nSetScriptedAnimSeatOffset(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetScriptedConversionCoordThisFrame",
    "hash": "0x5086C7843552CF85",
    "code": "-- SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME\nSetScriptedConversionCoordThisFrame(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetSynchronizedSceneHoldLastFrame",
    "hash": "0x394B9CD12435C981",
    "code": "-- SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME\nSetSynchronizedSceneHoldLastFrame(\n\tsceneID --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetSynchronizedSceneLooped",
    "hash": "0xD9A897A4C6C2974F",
    "code": "-- SET_SYNCHRONIZED_SCENE_LOOPED\nSetSynchronizedSceneLooped(\n\tsceneID --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetSynchronizedSceneOrigin",
    "hash": "0x6ACF6B7225801CD7",
    "code": "-- SET_SYNCHRONIZED_SCENE_ORIGIN\nSetSynchronizedSceneOrigin(\n\tsceneID --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\troll --[[ number ]], \n\tpitch --[[ number ]], \n\tyaw --[[ number ]], \n\tp7 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetSynchronizedScenePhase",
    "hash": "0x734292F4F0ABF6D0",
    "code": "-- SET_SYNCHRONIZED_SCENE_PHASE\nSetSynchronizedScenePhase(\n\tsceneID --[[ integer ]], \n\tphase --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SetSynchronizedSceneRate",
    "hash": "0xB6C49F8A5E295A5D",
    "code": "-- SET_SYNCHRONIZED_SCENE_RATE\nSetSynchronizedSceneRate(\n\tsceneID --[[ integer ]], \n\trate --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsCancelSearch",
    "hash": "0xFEE4A5459472A9F8",
    "code": "-- SPAWNPOINTS_CANCEL_SEARCH\nSpawnpointsCancelSearch()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsGetNumSearchResults",
    "hash": "0xA635C11B8C44AFC2",
    "code": "-- SPAWNPOINTS_GET_NUM_SEARCH_RESULTS\nlocal retval --[[ integer ]] =\n\tSpawnpointsGetNumSearchResults()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsGetSearchResult",
    "hash": "0x280C7E3AC7F56E90",
    "code": "-- SPAWNPOINTS_GET_SEARCH_RESULT\nlocal x --[[ number ]], y --[[ number ]], z --[[ number ]] =\n\tSpawnpointsGetSearchResult(\n\t\trandomInt --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsGetSearchResultFlags",
    "hash": "0xB782F8238512BAD5",
    "code": "-- SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS\nlocal p1 --[[ Any ]] =\n\tSpawnpointsGetSearchResultFlags(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsIsSearchActive",
    "hash": "0x3C67506996001F5E",
    "code": "-- SPAWNPOINTS_IS_SEARCH_ACTIVE\nlocal retval --[[ boolean ]] =\n\tSpawnpointsIsSearchActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsIsSearchComplete",
    "hash": "0xA586FBEB32A53DBB",
    "code": "-- SPAWNPOINTS_IS_SEARCH_COMPLETE\nlocal retval --[[ boolean ]] =\n\tSpawnpointsIsSearchComplete()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsIsSearchFailed",
    "hash": "0xF445DE8DA80A1792",
    "code": "-- SPAWNPOINTS_IS_SEARCH_FAILED\nlocal retval --[[ boolean ]] =\n\tSpawnpointsIsSearchFailed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsStartSearch",
    "hash": "0x2DF9038C90AD5264",
    "code": "-- SPAWNPOINTS_START_SEARCH\nSpawnpointsStartSearch(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tinteriorFlags --[[ integer ]], \n\tscale --[[ number ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpawnpointsStartSearchInAngledArea",
    "hash": "0xB2AFF10216DEFA2F",
    "code": "-- SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA\nSpawnpointsStartSearchInAngledArea(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tinteriorFlags --[[ integer ]], \n\tscale --[[ number ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "SpecialFunctionDoNotUse",
    "hash": "0xF9ACF4A08098EA25",
    "code": "-- SPECIAL_FUNCTION_DO_NOT_USE\nSpecialFunctionDoNotUse(\n\tped --[[ Ped ]], \n\tnoCollisionUntilClear --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.\\ Only to be used in very specific situations where the ped needs to be inside the car still but not attached."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "StopAnyPedModelBeingSuppressed",
    "hash": "0xB47BD05FA66B40CF",
    "code": "-- STOP_ANY_PED_MODEL_BEING_SUPPRESSED\nStopAnyPedModelBeingSuppressed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "StopPedWeaponFiringWhenDropped",
    "hash": "0xC158D28142A34608",
    "code": "-- STOP_PED_WEAPON_FIRING_WHEN_DROPPED\nStopPedWeaponFiringWhenDropped(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "TakeOwnershipOfSynchronizedScene",
    "hash": "0xCD9CC7E200A52A6F",
    "code": "-- TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE\nTakeOwnershipOfSynchronizedScene(\n\tscene --[[ integer ]]\n)",
    "parameters": [
      "scene: \n\nScene ID returned by CREATE_SYNCHRONIZED_SCENE"
    ],
    "returns": [],
    "description": "Parameters:\n\nscene: \n\nScene ID returned by CREATE_SYNCHRONIZED_SCENE"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "UnregisterPedheadshot",
    "hash": "0x96B1361D9B24C2FF",
    "code": "-- UNREGISTER_PEDHEADSHOT\nUnregisterPedheadshot(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "gtaforums.com/topic/885580-ped-headshotmugshot-txd/"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "UpdatePedHeadBlendData",
    "hash": "0x723538F61C647C5A",
    "code": "-- UPDATE_PED_HEAD_BLEND_DATA\nUpdatePedHeadBlendData(\n\tped --[[ Ped ]], \n\tshapeMix --[[ number ]], \n\tskinMix --[[ number ]], \n\tthirdMix --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See SET_PED_HEAD_BLEND_DATA"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "WasPedKilledByStealth",
    "hash": "0xF9800AA1A771B000",
    "code": "-- WAS_PED_KILLED_BY_STEALTH\nlocal retval --[[ boolean ]] =\n\tWasPedKilledByStealth(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nPed index"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index\n\nVerifies whether ped was eliminated through stealth."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "WasPedKilledByTakedown",
    "hash": "0x7F08E26039C7347C",
    "code": "-- WAS_PED_KILLED_BY_TAKEDOWN\nlocal retval --[[ boolean ]] =\n\tWasPedKilledByTakedown(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "WasPedKnockedOut",
    "hash": "0x61767F73EACEED21",
    "code": "-- WAS_PED_KNOCKED_OUT\nlocal retval --[[ boolean ]] =\n\tWasPedKnockedOut(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "WasPedSkeletonUpdated",
    "hash": "0x11B499C1E0FF8559",
    "code": "-- WAS_PED_SKELETON_UPDATED\nlocal retval --[[ boolean ]] =\n\tWasPedSkeletonUpdated(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Despite this function's name, it simply returns whether the specified handle is a Ped."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x03ea03af85a85cb7",
    "hash": "0x03EA03AF85A85CB7",
    "code": "-- 0x03EA03AF85A85CB7\nlocal retval --[[ boolean ]] =\n\tN_0x03ea03af85a85cb7(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ boolean ]], \n\t\tp6 --[[ boolean ]], \n\t\tp7 --[[ boolean ]], \n\t\tp8 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x06087579e7aa85a9",
    "hash": "0x06087579E7AA85A9",
    "code": "-- 0x06087579E7AA85A9\nlocal retval --[[ boolean ]] =\n\tN_0x06087579e7aa85a9(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x061cb768363d6424",
    "hash": "0x061CB768363D6424",
    "code": "-- 0x061CB768363D6424\nN_0x061cb768363d6424(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x0b3e35ac043707d9",
    "hash": "0x0B3E35AC043707D9",
    "code": "-- 0x0B3E35AC043707D9\nN_0x0b3e35ac043707d9(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x0f62619393661d6e",
    "hash": "0x0F62619393661D6E",
    "code": "-- 0x0F62619393661D6E\nN_0x0f62619393661d6e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x110f526ab784111f",
    "hash": "0x110F526AB784111F",
    "code": "-- 0x110F526AB784111F\nN_0x110f526ab784111f(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "In agency_heist3b.c4, its like this 90% of the time:  \nPED::_110F526AB784111F(ped, 0.099);  \nPED::SET_PED_ENVEFF_SCALE(ped, 1.0);  \nPED::_D69411AA0CEBF9E9(ped, 87, 81, 68);  \nPED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);  \nand its like this 10% of the time:  \nPED::_110F526AB784111F(ped, 0.2);  \nPED::SET_PED_ENVEFF_SCALE(ped, 0.65);  \nPED::_D69411AA0CEBF9E9(ped, 74, 69, 60);  \nPED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x1216e0bfa72cc703",
    "hash": "0x1216E0BFA72CC703",
    "code": "-- 0x1216E0BFA72CC703\nN_0x1216e0bfa72cc703(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x1a330d297aac6bc1",
    "hash": "0x1A330D297AAC6BC1",
    "code": "-- 0x1A330D297AAC6BC1\nN_0x1a330d297aac6bc1(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only appears in lamar1 script."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x1e77fa7a62ee6c4c",
    "hash": "0x1E77FA7A62EE6C4C",
    "code": "-- 0x1E77FA7A62EE6C4C\nlocal retval --[[ Any ]] =\n\tN_0x1e77fa7a62ee6c4c(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x2016c603d6b8987c",
    "hash": "0x2016C603D6B8987C",
    "code": "-- 0x2016C603D6B8987C\nN_0x2016c603d6b8987c(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PED_STE*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x25361a96e0f7e419",
    "hash": "0x25361A96E0F7E419",
    "code": "-- 0x25361A96E0F7E419\nlocal retval --[[ Any ]] =\n\tN_0x25361a96e0f7e419(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x2735233a786b1bef",
    "hash": "0x2735233A786B1BEF",
    "code": "-- 0x2735233A786B1BEF\nN_0x2735233a786b1bef(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x288df530c92dad6f",
    "hash": "0x288DF530C92DAD6F",
    "code": "-- 0x288DF530C92DAD6F\nN_0x288df530c92dad6f(\n\tped --[[ Ped ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_STEER_BIAS for peds, e.g., _SET_PED_STEER_BIAS."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x2b694afcf64e6994",
    "hash": "0x2B694AFCF64E6994",
    "code": "-- 0x2B694AFCF64E6994\nN_0x2b694afcf64e6994(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x2dfc81c9b9608549",
    "hash": "0x2DFC81C9B9608549",
    "code": "-- 0x2DFC81C9B9608549\nlocal retval --[[ boolean ]], p1 --[[ integer ]] =\n\tN_0x2dfc81c9b9608549(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x2f074c904d85129e",
    "hash": "0x2F074C904D85129E",
    "code": "-- 0x2F074C904D85129E\nN_0x2f074c904d85129e(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x2f3c3d9f50681de4",
    "hash": "0x2F3C3D9F50681DE4",
    "code": "-- 0x2F3C3D9F50681DE4\nN_0x2f3c3d9f50681de4(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x336b3d200ab007cb",
    "hash": "0x336B3D200AB007CB",
    "code": "-- 0x336B3D200AB007CB\nlocal retval --[[ Any ]] =\n\tN_0x336b3d200ab007cb(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x3e9679c1dfcf422c",
    "hash": "0x3E9679C1DFCF422C",
    "code": "-- 0x3E9679C1DFCF422C\nN_0x3e9679c1dfcf422c(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x412f1364fa066cfb",
    "hash": "0x412F1364FA066CFB",
    "code": "-- 0x412F1364FA066CFB\nlocal retval --[[ Any ]] =\n\tN_0x412f1364fa066cfb(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x425aecf167663f48",
    "hash": "0x425AECF167663F48",
    "code": "-- 0x425AECF167663F48\nN_0x425aecf167663f48(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x46b05bcae43856b0",
    "hash": "0x46B05BCAE43856B0",
    "code": "-- 0x46B05BCAE43856B0\nlocal retval --[[ boolean ]] =\n\tN_0x46b05bcae43856b0(\n\t\tped --[[ Ped ]], \n\t\tflag --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if the specified unknown flag is set in the ped's model.  \nThe engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).  \nGame scripts exclusively check for flags 1 and 4."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x49e50bdb8ba4dab2",
    "hash": "0x49E50BDB8BA4DAB2",
    "code": "-- 0x49E50BDB8BA4DAB2\nN_0x49e50bdb8ba4dab2(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PED_ALLOW*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x511f1a683387c7e2",
    "hash": "0x511F1A683387C7E2",
    "code": "-- 0x511F1A683387C7E2\nlocal retval --[[ integer ]] =\n\tN_0x511f1a683387c7e2(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x5407b7288d0478b7",
    "hash": "0x5407B7288D0478B7",
    "code": "-- 0x5407B7288D0478B7\nlocal retval --[[ integer ]] =\n\tN_0x5407b7288d0478b7(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x5a7f62fda59759bd",
    "hash": "0x5A7F62FDA59759BD",
    "code": "-- 0x5A7F62FDA59759BD\nN_0x5a7f62fda59759bd()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x5b6010b3cbc29095",
    "hash": "0x5B6010B3CBC29095",
    "code": "-- 0x5B6010B3CBC29095\nN_0x5b6010b3cbc29095(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x711794453cfd692b",
    "hash": "0x711794453CFD692B",
    "code": "-- 0x711794453CFD692B\nN_0x711794453cfd692b(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x733c87d4ce22bea2",
    "hash": "0x733C87D4CE22BEA2",
    "code": "-- 0x733C87D4CE22BEA2\nN_0x733c87d4ce22bea2(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x75ba1cb3b7d40caf",
    "hash": "0x75BA1CB3B7D40CAF",
    "code": "-- 0x75BA1CB3B7D40CAF\nN_0x75ba1cb3b7d40caf(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REQUEST_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x80054d7fcc70eec6",
    "hash": "0x80054D7FCC70EEC6",
    "code": "-- 0x80054D7FCC70EEC6\nN_0x80054d7fcc70eec6(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "CLEAR_PED_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x820e9892a77e97cd",
    "hash": "0x820E9892A77E97CD",
    "code": "-- 0x820E9892A77E97CD\nN_0x820e9892a77e97cd(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x87ddeb611b329a9c",
    "hash": "0x87DDEB611B329A9C",
    "code": "-- 0x87DDEB611B329A9C\nN_0x87ddeb611b329a9c(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_A*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x9911f4a24485f653",
    "hash": "0x9911F4A24485F653",
    "code": "-- 0x9911F4A24485F653\nN_0x9911f4a24485f653(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x9a77dfd295e29b09",
    "hash": "0x9A77DFD295E29B09",
    "code": "-- 0x9A77DFD295E29B09\nN_0x9a77dfd295e29b09(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x9c6a6c19b6c0c496",
    "hash": "0x9C6A6C19B6C0C496",
    "code": "-- 0x9C6A6C19B6C0C496\nlocal retval --[[ boolean ]], p1 --[[ integer ]] =\n\tN_0x9c6a6c19b6c0c496(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0x9e30e91fb03a2caf",
    "hash": "0x9E30E91FB03A2CAF",
    "code": "-- 0x9E30E91FB03A2CAF\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tN_0x9e30e91fb03a2caf()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xa3f3564a5b3646c0",
    "hash": "0xA3F3564A5B3646C0",
    "code": "-- 0xA3F3564A5B3646C0\nlocal retval --[[ boolean ]] =\n\tN_0xa3f3564a5b3646c0(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only called once in the scripts:\nif (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {\n    if (sub_52e3(\"RESNA_CELLR\", 0)) {\n        PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);\n        PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);\n        PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);\n        l_184 += 1;\n    }\n}\nChecks something related to the mobile phone task.\nIS_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xa52d5247a4227e14",
    "hash": "0xA52D5247A4227E14",
    "code": "-- 0xA52D5247A4227E14\nN_0xa52d5247a4227e14(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xa660faf550eb37e5",
    "hash": "0xA660FAF550EB37E5",
    "code": "-- 0xA660FAF550EB37E5\nN_0xa660faf550eb37e5(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xa9b61a329bfdcbea",
    "hash": "0xA9B61A329BFDCBEA",
    "code": "-- 0xA9B61A329BFDCBEA\nN_0xa9b61a329bfdcbea(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xaaa6a3698a69e048",
    "hash": "0xAAA6A3698A69E048",
    "code": "-- 0xAAA6A3698A69E048\nlocal retval --[[ Any ]] =\n\tN_0xaaa6a3698a69e048(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xad27d957598e49e9",
    "hash": "0xAD27D957598E49E9",
    "code": "-- 0xAD27D957598E49E9\nN_0xad27d957598e49e9(\n\tped --[[ Ped ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ number ]], \n\thash --[[ Hash ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xafc976fd0580c7b3",
    "hash": "0xAFC976FD0580C7B3",
    "code": "-- 0xAFC976FD0580C7B3\nN_0xafc976fd0580c7b3(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PED_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xb282749d5e028163",
    "hash": "0xB282749D5E028163",
    "code": "-- 0xB282749D5E028163\nN_0xb282749d5e028163(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xb3352e018d6f89df",
    "hash": "0xB3352E018D6F89DF",
    "code": "-- 0xB3352E018D6F89DF\nN_0xb3352e018d6f89df(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "_SET_PED_HEAD_* - _SET_PED_HEARING_*\n\n_SET_PED_HEALTH_...\n\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xb8b52e498014f5b0",
    "hash": "0xB8B52E498014F5B0",
    "code": "-- 0xB8B52E498014F5B0\nlocal retval --[[ boolean ]] =\n\tN_0xb8b52e498014f5b0(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xc2ee020f5fb4db53",
    "hash": "0xC2EE020F5FB4DB53",
    "code": "-- 0xC2EE020F5FB4DB53\nN_0xc2ee020f5fb4db53(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xc30bdaee47256c13",
    "hash": "0xC30BDAEE47256C13",
    "code": "-- 0xC30BDAEE47256C13\nlocal retval --[[ Any ]] =\n\tN_0xc30bdaee47256c13(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xc56fbf2f228e1dac",
    "hash": "0xC56FBF2F228E1DAC",
    "code": "-- 0xC56FBF2F228E1DAC\nlocal retval --[[ Any ]] =\n\tN_0xc56fbf2f228e1dac(\n\t\tmodelHash --[[ Hash ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xcd018c591f94cb43",
    "hash": "0xCD018C591F94CB43",
    "code": "-- 0xCD018C591F94CB43\nN_0xcd018c591f94cb43(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REQUEST_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xceda60a74219d064",
    "hash": "0xCEDA60A74219D064",
    "code": "-- 0xCEDA60A74219D064\nN_0xceda60a74219d064(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xd33daa36272177c4",
    "hash": "0xD33DAA36272177C4",
    "code": "-- 0xD33DAA36272177C4\nN_0xd33daa36272177c4(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xdfe68c4b787e1bfb",
    "hash": "0xDFE68C4B787E1BFB",
    "code": "-- 0xDFE68C4B787E1BFB\nN_0xdfe68c4b787e1bfb(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xe906ec930f5fe7c8",
    "hash": "0xE906EC930F5FE7C8",
    "code": "-- 0xE906EC930F5FE7C8\nN_0xe906ec930f5fe7c8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xea9960d07dadcf10",
    "hash": "0xEA9960D07DADCF10",
    "code": "-- 0xEA9960D07DADCF10\nlocal retval --[[ integer ]] =\n\tN_0xea9960d07dadcf10(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xec4b4b3b9908052a",
    "hash": "0xEC4B4B3B9908052A",
    "code": "-- 0xEC4B4B3B9908052A\nN_0xec4b4b3b9908052a(\n\tped --[[ Ped ]], \n\tunk --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PED_*  \nHas most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xed3c76adfa6d07c4",
    "hash": "0xED3C76ADFA6D07C4",
    "code": "-- 0xED3C76ADFA6D07C4\nN_0xed3c76adfa6d07c4(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "FORCE_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xf033419d1b81fae8",
    "hash": "0xF033419D1B81FAE8",
    "code": "-- 0xF033419D1B81FAE8\nlocal retval --[[ Any ]] =\n\tN_0xf033419d1b81fae8(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_*"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xf2385935bffd4d92",
    "hash": "0xF2385935BFFD4D92",
    "code": "-- 0xF2385935BFFD4D92\nlocal retval --[[ boolean ]] =\n\tN_0xf2385935bffd4d92(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Initial guess of native: _IS_PED_WEARING_MOTORCYCLE_HELMET."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xf2bebcdfafdaa19e",
    "hash": "0xF2BEBCDFAFDAA19E",
    "code": "-- 0xF2BEBCDFAFDAA19E\nN_0xf2bebcdfafdaa19e(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PED_ALLOW*\ntoggle was always false except in one instance (b678).\nThe one time this is set to true seems to do with when you fail the mission."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xfab944d4d481accb",
    "hash": "0xFAB944D4D481ACCB",
    "code": "-- 0xFAB944D4D481ACCB\nN_0xfab944d4d481accb(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_A*\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xfd325494792302d7",
    "hash": "0xFD325494792302D7",
    "code": "-- 0xFD325494792302D7\nN_0xfd325494792302d7(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xfec9a3b1820f3331",
    "hash": "0xFEC9A3B1820F3331",
    "code": "-- 0xFEC9A3B1820F3331\nlocal retval --[[ boolean ]] =\n\tN_0xfec9a3b1820f3331(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Native to check whether _SET_PED_SCUBA_GEAR_VARIATION is enabled/actived."
  },
  {
    "namespace": "Namespace: PED",
    "apiset": "API set: client",
    "name": "N_0xff4803bc019852d9",
    "hash": "0xFF4803BC019852D9",
    "code": "-- 0xFF4803BC019852D9\nN_0xff4803bc019852d9(\n\tp0 --[[ number ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "ActivatePhysics",
    "hash": "0x710311ADF0E20730",
    "code": "-- ACTIVATE_PHYSICS\nActivatePhysics(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "AddRope",
    "hash": "0xE832D760399EB220",
    "code": "-- ADD_ROPE\nlocal retval --[[ integer ]], unkPtr --[[ Any ]] =\n\tAddRope(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tmaxLength --[[ number ]], \n\t\tropeType --[[ integer ]], \n\t\tinitLength --[[ number ]], \n\t\tminLength --[[ number ]], \n\t\tlengthChangeRate --[[ number ]], \n\t\tonlyPPU --[[ boolean ]], \n\t\tcollisionOn --[[ boolean ]], \n\t\tlockFromFront --[[ boolean ]], \n\t\ttimeMultiplier --[[ number ]], \n\t\tbreakable --[[ boolean ]]\n\t)",
    "parameters": [
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "rotX: \n\nRotation X component.",
      "rotY: \n\nRotation Y component.",
      "rotZ: \n\nRotation Z component.",
      "maxLength: \n\nThe maximum length the rope can droop.",
      "ropeType: \n\nThe zero-based index of the entry in the ropedata.xml file. NOTE: Using an index which does not exist will crash the game. As of game build 3258, valid values are from 0 to 7 inclusive.",
      "initLength: \n\nThe initial length of the rope.",
      "minLength: \n\nThe minimum length the rope can be.",
      "lengthChangeRate: \n\nThe speed in which the rope will wind if winding is started.",
      "onlyPPU:",
      "collisionOn: \n\nWhether the rope should have collision. In original scripts this is followed by a LoadRopeData call when set.",
      "lockFromFront: \n\nIf max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).",
      "timeMultiplier: \n\nThe speed as which physics should run at. 1.0f is normal, 2.0f is twice as fast, -1.0f is time going backwards. This can affect gravity, etc.",
      "breakable: \n\nWhether shooting the rope will break it.",
      "unkPtr: \n\nUnknown pointer, always 0 in original scrips."
    ],
    "returns": [
      "A script handle for the rope"
    ],
    "description": "Parameters:\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nrotX: \n\nRotation X component.\n\nrotY: \n\nRotation Y component.\n\nrotZ: \n\nRotation Z component.\n\nmaxLength: \n\nThe maximum length the rope can droop.\n\nropeType: \n\nThe zero-based index of the entry in the ropedata.xml file. NOTE: Using an index which does not exist will crash the game. As of game build 3258, valid values are from 0 to 7 inclusive.\n\ninitLength: \n\nThe initial length of the rope.\n\nminLength: \n\nThe minimum length the rope can be.\n\nlengthChangeRate: \n\nThe speed in which the rope will wind if winding is started.\n\nonlyPPU:\ncollisionOn: \n\nWhether the rope should have collision. In original scripts this is followed by a LoadRopeData call when set.\n\nlockFromFront: \n\nIf max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).\n\ntimeMultiplier: \n\nThe speed as which physics should run at. 1.0f is normal, 2.0f is twice as fast, -1.0f is time going backwards. This can affect gravity, etc.\n\nbreakable: \n\nWhether shooting the rope will break it.\n\nunkPtr: \n\nUnknown pointer, always 0 in original scrips.\n\nReturns:\n\nA script handle for the rope\n\nCreates a rope at the specific position, that extends in the specified direction when not attached to any entities.\n__\nRope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).\nRope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.\n\n\nThere are 8 different rope types in the base game. Full rope data can be found in ropedata.xml.\n\nenum ePhysicsRopeType {\n    RopeThin = 0, // Verticies: 1, Radius: 0.03, Textures: rope & rope_n\n    RopeWire6 = 1, // Verticies: 4, Radius: 0.015, Textures: steel_cable & steel_cable_n\n    RopeWire32 = 2, // Verticies: 32, Radius: 0.025, Textures: steel_cable & steel_cable_n\n    RopeMesh = 3, // Verticies: 6, Radius: 0.03, Textures: rope & rope_n\n    RopeThinWire32 = 4, // Verticies: 32, Radius: 0.01, Textures: rope & rope_n\n    RopeReins = 5, // Verticies: 32, Radius: 0.005, Textures: rope & rope_n\n    RopeThin4 = 6, // Verticies: 4, Radius: 0.03, Textures: rope & rope_n\n    RopeWire64 = 7 // Verticies: 64, Radius: 0.025, Textures: steel_cable & steel_cable_n\n}"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "ApplyImpulseToCloth",
    "hash": "0xE37F721824571784",
    "code": "-- APPLY_IMPULSE_TO_CLOTH\nApplyImpulseToCloth(\n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\tvecX --[[ number ]], \n\tvecY --[[ number ]], \n\tvecZ --[[ number ]], \n\timpulse --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "AttachEntitiesToRope",
    "hash": "0x3D95EC8B6D940AC3",
    "code": "-- ATTACH_ENTITIES_TO_ROPE\nAttachEntitiesToRope(\n\tropeId --[[ integer ]], \n\tent1 --[[ Entity ]], \n\tent2 --[[ Entity ]], \n\tent1_x --[[ number ]], \n\tent1_y --[[ number ]], \n\tent1_z --[[ number ]], \n\tent2_x --[[ number ]], \n\tent2_y --[[ number ]], \n\tent2_z --[[ number ]], \n\tlength --[[ number ]], \n\tp10 --[[ boolean ]], \n\tp11 --[[ boolean ]], \n\tboneName1 --[[ string ]], \n\tboneName2 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Attaches entity 1 to entity 2."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "AttachRopeToEntity",
    "hash": "0x4B490A6832559A65",
    "code": "-- ATTACH_ROPE_TO_ENTITY\nAttachRopeToEntity(\n\tropeId --[[ integer ]], \n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "BreakEntityGlass",
    "hash": "0x2E648D16F6E308F3",
    "code": "-- BREAK_ENTITY_GLASS\nBreakEntityGlass(\n\tentity --[[ Entity ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]], \n\tp8 --[[ number ]], \n\tp9 --[[ Any ]], \n\tp10 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "DeleteChildRope",
    "hash": "0xAA5D6B1888E4DB20",
    "code": "-- DELETE_CHILD_ROPE\nDeleteChildRope(\n\tropeId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "DeleteRope",
    "hash": "0x52B4829281364649",
    "code": "-- DELETE_ROPE\nlocal ropeId --[[ integer ]] =\n\tDeleteRope()",
    "parameters": [
      "ropeId: \n\nThe handle of the rope to delete"
    ],
    "returns": [],
    "description": "Parameters:\n\nropeId: \n\nThe handle of the rope to delete\n\nDeletes the rope with the specified handle.\n\nYou should check if the rope exists before trying to delete it, see DOES_ROPE_EXIST.\n\nFor an example on how to use this native please refer to ADD_ROPE"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "DetachRopeFromEntity",
    "hash": "0xBCF3026912A8647D",
    "code": "-- DETACH_ROPE_FROM_ENTITY\nDetachRopeFromEntity(\n\tropeId --[[ integer ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "DoesRopeBelongToThisScript",
    "hash": "0x271C9D3ACA5D6409",
    "code": "-- _DOES_ROPE_BELONG_TO_THIS_SCRIPT\nlocal retval --[[ boolean ]] =\n\tDoesRopeBelongToThisScript(\n\t\tropeId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return if the rope was generated or not by the script where the native is called."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "DoesRopeExist",
    "hash": "0xFD5448BE3111ED96",
    "code": "-- DOES_ROPE_EXIST\nlocal retval --[[ boolean ]], ropeId --[[ integer ]] =\n\tDoesRopeExist()",
    "parameters": [
      "ropeId: \n\nThe handle of the rope to check"
    ],
    "returns": [
      "Returns true if the rope exists, false otherwise."
    ],
    "description": "Parameters:\n\nropeId: \n\nThe handle of the rope to check\n\nReturns:\n\nReturns true if the rope exists, false otherwise.\n\nFor an example on how to use this native please refer to ADD_ROPE"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "GetCgoffset",
    "hash": "0x8214A4B5A7A33612",
    "code": "-- GET_CGOFFSET\nlocal retval --[[ vector3 ]] =\n\tGetCgoffset(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "GetDamping",
    "hash": "0x8C520A929415BCD2",
    "code": "-- GET_DAMPING\nlocal retval --[[ vector3 ]] =\n\tGetDamping(\n\t\tentity --[[ Entity ]], \n\t\ttype --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "GetHasObjectFragInst",
    "hash": "0x0C112765300C7E1E",
    "code": "-- _GET_HAS_OBJECT_FRAG_INST\nlocal retval --[[ boolean ]] =\n\tGetHasObjectFragInst(\n\t\tobject --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_*"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "GetRopeLastVertexCoord",
    "hash": "0x21BB0FBD3E217C2D",
    "code": "-- GET_ROPE_LAST_VERTEX_COORD\nlocal retval --[[ vector3 ]] =\n\tGetRopeLastVertexCoord(\n\t\tropeId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "GetRopeVertexCoord",
    "hash": "0xEA61CA8E80F09E4D",
    "code": "-- GET_ROPE_VERTEX_COORD\nlocal retval --[[ vector3 ]] =\n\tGetRopeVertexCoord(\n\t\tropeId --[[ integer ]], \n\t\tvertex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "GetRopeVertexCount",
    "hash": "0x3655F544CD30F0B5",
    "code": "-- GET_ROPE_VERTEX_COUNT\nlocal retval --[[ integer ]] =\n\tGetRopeVertexCount(\n\t\tropeId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "LoadRopeData",
    "hash": "0xCBB203C04D1ABD27",
    "code": "-- LOAD_ROPE_DATA\nLoadRopeData(\n\tropeId --[[ integer ]], \n\trope_preset --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Rope presets can be found in the gamefiles. One example is \"ropeFamily3\", it is NOT a hash but rather a string."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "PinRopeVertex",
    "hash": "0x2B320CF14146B69A",
    "code": "-- PIN_ROPE_VERTEX\nPinRopeVertex(\n\tropeId --[[ integer ]], \n\tvertex --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeAreTexturesLoaded",
    "hash": "0xF2D0E6A75CC05597",
    "code": "-- ROPE_ARE_TEXTURES_LOADED\nlocal retval --[[ boolean ]] =\n\tRopeAreTexturesLoaded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeConvertToSimple",
    "hash": "0x5389D48EFA2F079A",
    "code": "-- ROPE_CONVERT_TO_SIMPLE\nRopeConvertToSimple(\n\tropeId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeDrawShadowEnabled",
    "hash": "0xF159A63806BB5BA8",
    "code": "-- ROPE_DRAW_SHADOW_ENABLED\nlocal ropeId --[[ integer ]] =\n\tRopeDrawShadowEnabled(\n\t\ttoggle --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeForceLength",
    "hash": "0xD009F759A723DB1B",
    "code": "-- ROPE_FORCE_LENGTH\nRopeForceLength(\n\tropeId --[[ integer ]], \n\tlength --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces a rope to a certain length."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeGetDistanceBetweenEnds",
    "hash": "0x73040398DFF9A4A6",
    "code": "-- ROPE_GET_DISTANCE_BETWEEN_ENDS\nlocal retval --[[ number ]] =\n\tRopeGetDistanceBetweenEnds(\n\t\tropeId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeLoadTextures",
    "hash": "0x9B9039DBF2D258C1",
    "code": "-- ROPE_LOAD_TEXTURES\nRopeLoadTextures()",
    "parameters": [],
    "returns": [],
    "description": "Loads rope textures for all ropes in the current scene."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeResetLength",
    "hash": "0xC16DE94D9BEA14A0",
    "code": "-- ROPE_RESET_LENGTH\nRopeResetLength(\n\tropeId --[[ integer ]], \n\tlength --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Reset a rope to a certain length."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeSetUpdateOrder",
    "hash": "0xDC57A637A20006ED",
    "code": "-- ROPE_SET_UPDATE_ORDER\nRopeSetUpdateOrder(\n\tropeId --[[ integer ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeSetUpdatePinverts",
    "hash": "0xC8D667EE52114ABA",
    "code": "-- ROPE_SET_UPDATE_PINVERTS\nRopeSetUpdatePinverts(\n\tropeId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "RopeUnloadTextures",
    "hash": "0x6CE36C35C1AC8163",
    "code": "-- ROPE_UNLOAD_TEXTURES\nRopeUnloadTextures()",
    "parameters": [],
    "returns": [],
    "description": "Unloads rope textures for all ropes in the current scene."
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "SetCgAtBoundcenter",
    "hash": "0xBE520D9761FF811F",
    "code": "-- SET_CG_AT_BOUNDCENTER\nSetCgAtBoundcenter(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "SetCgoffset",
    "hash": "0xD8FA3908D7B86904",
    "code": "-- SET_CGOFFSET\nSetCgoffset(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "SetDamping",
    "hash": "0xEEA3B200A6FEB65B",
    "code": "-- SET_DAMPING\nSetDamping(\n\tentity --[[ Entity ]], \n\tvertex --[[ integer ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "SetDisableBreaking",
    "hash": "0x5CEC1A84620E7D5B",
    "code": "-- SET_DISABLE_BREAKING\nSetDisableBreaking(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "SetDisableFragDamage",
    "hash": "0x01BA3AED21C16CFB",
    "code": "-- SET_DISABLE_FRAG_DAMAGE\nSetDisableFragDamage(\n\tobject --[[ Object ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "SetEntityProofUnk",
    "hash": "0x15F944730C832252",
    "code": "-- _SET_ENTITY_PROOF_UNK\nSetEntityProofUnk(\n\tentity --[[ Entity ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "SetLaunchControlEnabled",
    "hash": "0xAA6A6098851C396F",
    "code": "-- _SET_LAUNCH_CONTROL_ENABLED\nSetLaunchControlEnabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "StartRopeUnwindingFront",
    "hash": "0x538D1179EC1AA9A9",
    "code": "-- START_ROPE_UNWINDING_FRONT\nStartRopeUnwindingFront(\n\tropeId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "StartRopeWinding",
    "hash": "0x1461C72C889E343E",
    "code": "-- START_ROPE_WINDING\nStartRopeWinding(\n\tropeId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "StopRopeUnwindingFront",
    "hash": "0xFFF3A50779EFBBB3",
    "code": "-- STOP_ROPE_UNWINDING_FRONT\nStopRopeUnwindingFront(\n\tropeId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "StopRopeWinding",
    "hash": "0xCB2D4AB84A19AA7C",
    "code": "-- STOP_ROPE_WINDING\nStopRopeWinding(\n\tropeId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "UnpinRopeVertex",
    "hash": "0x4B5AE2EEE4A8F180",
    "code": "-- UNPIN_ROPE_VERTEX\nUnpinRopeVertex(\n\tropeId --[[ integer ]], \n\tvertex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0x36ccb9be67b970fd",
    "hash": "0x36CCB9BE67B970FD",
    "code": "-- 0x36CCB9BE67B970FD\nN_0x36ccb9be67b970fd(\n\tropeId --[[ integer ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "ROPE_*"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0x84de3b5fb3e666f0",
    "hash": "0x84DE3B5FB3E666F0",
    "code": "-- 0x84DE3B5FB3E666F0\nlocal retval --[[ boolean ]], ropeId --[[ integer ]] =\n\tN_0x84de3b5fb3e666f0()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0x9ebd751e5787baf2",
    "hash": "0x9EBD751E5787BAF2",
    "code": "-- 0x9EBD751E5787BAF2\nN_0x9ebd751e5787baf2(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_*"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0xa1ae736541b0fca3",
    "hash": "0xA1AE736541B0FCA3",
    "code": "-- 0xA1AE736541B0FCA3\nlocal ropeId --[[ integer ]] =\n\tN_0xa1ae736541b0fca3(\n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "ROPE_*\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0xb1b6216ca2e7b55e",
    "hash": "0xB1B6216CA2E7B55E",
    "code": "-- 0xB1B6216CA2E7B55E\nN_0xb1b6216ca2e7b55e(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0xb743f735c03d7810",
    "hash": "0xB743F735C03D7810",
    "code": "-- 0xB743F735C03D7810\nN_0xb743f735c03d7810(\n\tropeId --[[ integer ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "ROPE_*"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0xbc0ce682d4d05650",
    "hash": "0xBC0CE682D4D05650",
    "code": "-- 0xBC0CE682D4D05650\nN_0xbc0ce682d4d05650(\n\tropeId --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]], \n\tp8 --[[ number ]], \n\tp9 --[[ number ]], \n\tp10 --[[ number ]], \n\tp11 --[[ number ]], \n\tp12 --[[ number ]], \n\tp13 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Most likely ROPE_ATTACH_*"
  },
  {
    "namespace": "Namespace: PHYSICS",
    "apiset": "API set: client",
    "name": "N_0xcc6e963682533882",
    "hash": "0xCC6E963682533882",
    "code": "-- 0xCC6E963682533882\nN_0xcc6e963682533882(\n\tobject --[[ Object ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "RESET_*"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ArePlayerFlashingStarsAboutToDrop",
    "hash": "0xAFAF86043E5874E9",
    "code": "-- ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP\nlocal retval --[[ boolean ]] =\n\tArePlayerFlashingStarsAboutToDrop(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ArePlayerStarsGreyedOut",
    "hash": "0x0A6EB355EE14A2DB",
    "code": "-- ARE_PLAYER_STARS_GREYED_OUT\nlocal retval --[[ boolean ]] =\n\tArePlayerStarsGreyedOut(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "AssistedMovementCloseRoute",
    "hash": "0xAEBF081FFC0A0E5E",
    "code": "-- ASSISTED_MOVEMENT_CLOSE_ROUTE\nAssistedMovementCloseRoute()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "AssistedMovementFlushRoute",
    "hash": "0x8621390F0CDCFE1F",
    "code": "-- ASSISTED_MOVEMENT_FLUSH_ROUTE\nAssistedMovementFlushRoute()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "CanPedHearPlayer",
    "hash": "0xF297383AA91DCA29",
    "code": "-- CAN_PED_HEAR_PLAYER\nlocal retval --[[ boolean ]] =\n\tCanPedHearPlayer(\n\t\tplayer --[[ Player ]], \n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "CanPlayerStartMission",
    "hash": "0xDE7465A27D403C06",
    "code": "-- CAN_PLAYER_START_MISSION\nlocal retval --[[ boolean ]] =\n\tCanPlayerStartMission(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ChangePlayerPed",
    "hash": "0x048189FAC643DEEE",
    "code": "-- CHANGE_PLAYER_PED\nChangePlayerPed(\n\tplayer --[[ Player ]], \n\tped --[[ Ped ]], \n\tb2 --[[ boolean ]], \n\tresetDamage --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ClearPlayerHasDamagedAtLeastOneNonAnimalPed",
    "hash": "0x4AACB96203D11A31",
    "code": "-- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED\nClearPlayerHasDamagedAtLeastOneNonAnimalPed(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ClearPlayerHasDamagedAtLeastOnePed",
    "hash": "0xF0B67A4DE6AB5F98",
    "code": "-- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED\nClearPlayerHasDamagedAtLeastOnePed(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ClearPlayerParachuteModelOverride",
    "hash": "0x8753997EB5F6EE3F",
    "code": "-- CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE\nClearPlayerParachuteModelOverride(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ClearPlayerParachutePackModelOverride",
    "hash": "0x10C54E4389C12B42",
    "code": "-- CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE\nClearPlayerParachutePackModelOverride(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ClearPlayerParachuteVariationOverride",
    "hash": "0x0F4CC924CF8C7B21",
    "code": "-- CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE\nClearPlayerParachuteVariationOverride(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ClearPlayerReserveParachuteModelOverride",
    "hash": "0x290D248E25815AE8",
    "code": "-- _CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE\nClearPlayerReserveParachuteModelOverride(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ClearPlayerWantedLevel",
    "hash": "0xB302540597885499",
    "code": "-- CLEAR_PLAYER_WANTED_LEVEL\nClearPlayerWantedLevel(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);  \nPLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "DisablePlayerFiring",
    "hash": "0x5E6CC07646BBEAB8",
    "code": "-- DISABLE_PLAYER_FIRING\nDisablePlayerFiring(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe player for which to disable combat methods.",
      "toggle: \n\nUnused, as this native will disable combat regardless of the value of this parameter."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player for which to disable combat methods.\n\ntoggle: \n\nUnused, as this native will disable combat regardless of the value of this parameter.\n\nInhibits the player from using any method of combat including melee and firearms.\\ NOTE: Only disables the firing for one frame"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "DisablePlayerVehicleRewards",
    "hash": "0xC142BE3BB9CE125F",
    "code": "-- DISABLE_PLAYER_VEHICLE_REWARDS\nDisablePlayerVehicleRewards(\n\tplayer --[[ Player ]]\n)",
    "parameters": [
      "player: \n\nThe player to disable rewards"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player to disable rewards\n\nDisables vehicle rewards for the current frame."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "DisplaySystemSigninUi",
    "hash": "0x94DD7888C10A979E",
    "code": "-- DISPLAY_SYSTEM_SIGNIN_UI\nDisplaySystemSigninUi(\n\tunk --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Purpose of the BOOL currently unknown.  \nBoth, true and false, work"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "EnableSpecialAbility",
    "hash": "0x181EC197DAEFE121",
    "code": "-- ENABLE_SPECIAL_ABILITY\nEnableSpecialAbility(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ExtendWorldBoundaryForPlayer",
    "hash": "0x5006D96C995A5827",
    "code": "-- EXTEND_WORLD_BOUNDARY_FOR_PLAYER\nExtendWorldBoundaryForPlayer(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Appears only 3 times in the scripts, more specifically in michael1.ysc\n-\nThis can be used to prevent dying if you are \"out of the world\""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ForceCleanup",
    "hash": "0xBC8983F38F78ED51",
    "code": "-- FORCE_CLEANUP\nForceCleanup(\n\tcleanupFlags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "used with 1,2,8,64,128 in the scripts"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ForceCleanupForAllThreadsWithThisName",
    "hash": "0x4C68DDDDF0097317",
    "code": "-- FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME\nForceCleanupForAllThreadsWithThisName(\n\tname --[[ string ]], \n\tcleanupFlags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(\"pb_prostitute\", 1); // Found in decompilation"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ForceCleanupForThreadWithThisId",
    "hash": "0xF745B37630DF176B",
    "code": "-- FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID\nForceCleanupForThreadWithThisId(\n\tid --[[ integer ]], \n\tcleanupFlags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetAchievementProgress",
    "hash": "0x1C186837D0619335",
    "code": "-- _GET_ACHIEVEMENT_PROGRESS\nlocal retval --[[ integer ]] =\n\tGetAchievementProgress(\n\t\tachievement --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the progression of an achievement; 0 if the achievement cannot be progressed."
    ],
    "description": "Returns:\n\nReturns the progression of an achievement; 0 if the achievement cannot be progressed.\n\nFor Steam.\nAlways returns 0 in retail version of the game."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetAreCameraControlsDisabled",
    "hash": "0x7C814D2FB49F40C0",
    "code": "-- GET_ARE_CAMERA_CONTROLS_DISABLED\nlocal retval --[[ boolean ]] =\n\tGetAreCameraControlsDisabled()",
    "parameters": [],
    "returns": [
      "Returns true if the main player's camera controls are disabled. Also returns true if the there is no main player info."
    ],
    "description": "Returns:\n\nReturns true if the main player's camera controls are disabled. Also returns true if the there is no main player info."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetCauseOfMostRecentForceCleanup",
    "hash": "0x9A41CF4674A12272",
    "code": "-- GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP\nlocal retval --[[ integer ]] =\n\tGetCauseOfMostRecentForceCleanup()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetEntityPlayerIsFreeAimingAt",
    "hash": "0x2975C866E6713290",
    "code": "-- GET_ENTITY_PLAYER_IS_FREE_AIMING_AT\nlocal retval --[[ boolean ]], entity --[[ Entity ]] =\n\tGetEntityPlayerIsFreeAimingAt(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.  \nReturns false if no entity found."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetIsPlayerDrivingOnHighway",
    "hash": "0x5FC472C501CCADB3",
    "code": "-- GET_IS_PLAYER_DRIVING_ON_HIGHWAY\nlocal retval --[[ boolean ]] =\n\tGetIsPlayerDrivingOnHighway(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe local index of the player to check (see PLAYER_ID)"
    ],
    "returns": [
      "Returns a boolean value representing if the player is driving on a highway."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe local index of the player to check (see PLAYER_ID)\n\nReturns:\n\nReturns a boolean value representing if the player is driving on a highway."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetMaxWantedLevel",
    "hash": "0x462E0DB9B137DC5F",
    "code": "-- GET_MAX_WANTED_LEVEL\nlocal retval --[[ integer ]] =\n\tGetMaxWantedLevel()",
    "parameters": [],
    "returns": [],
    "description": "Gets the maximum wanted level the player can get.  \nRanges from 0 to 5."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetNumberOfPlayers",
    "hash": "0x407C7F91DDB46C16",
    "code": "-- GET_NUMBER_OF_PLAYERS\nlocal retval --[[ integer ]] =\n\tGetNumberOfPlayers()",
    "parameters": [],
    "returns": [],
    "description": "Gets the number of players in the current session.\nIf not multiplayer, always returns 1."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetNumberOfPlayersInTeam",
    "hash": "0x1FC200409F10E6F1",
    "code": "-- _GET_NUMBER_OF_PLAYERS_IN_TEAM\nlocal retval --[[ integer ]] =\n\tGetNumberOfPlayersInTeam(\n\t\tteam --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerCurrentStealthNoise",
    "hash": "0x2F395D61F3A1F877",
    "code": "-- GET_PLAYER_CURRENT_STEALTH_NOISE\nlocal retval --[[ number ]] =\n\tGetPlayerCurrentStealthNoise(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerFakeWantedLevel",
    "hash": "0x56105E599CAB0EFA",
    "code": "-- GET_PLAYER_FAKE_WANTED_LEVEL\nlocal retval --[[ integer ]] =\n\tGetPlayerFakeWantedLevel(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerGroup",
    "hash": "0x0D127585F77030AF",
    "code": "-- GET_PLAYER_GROUP\nlocal retval --[[ integer ]] =\n\tGetPlayerGroup(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the group ID the player is member of."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerHasReserveParachute",
    "hash": "0x5DDFE2FF727F3CA3",
    "code": "-- GET_PLAYER_HAS_RESERVE_PARACHUTE\nlocal retval --[[ boolean ]] =\n\tGetPlayerHasReserveParachute(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerHealthRechargeLimit",
    "hash": "0x8BC515BAE4AAF8FF",
    "code": "-- _GET_PLAYER_HEALTH_RECHARGE_LIMIT\nlocal retval --[[ number ]] =\n\tGetPlayerHealthRechargeLimit(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerIndex",
    "hash": "0xA5EDC40EF369B48D",
    "code": "-- GET_PLAYER_INDEX\nlocal retval --[[ Player ]] =\n\tGetPlayerIndex()",
    "parameters": [],
    "returns": [],
    "description": "Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerInvincible",
    "hash": "0xB721981B2B939E07",
    "code": "-- GET_PLAYER_INVINCIBLE\nlocal retval --[[ boolean ]] =\n\tGetPlayerInvincible(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [
      "player: \n\nThe player index"
    ],
    "returns": [
      "A boolean to tell if the player is invincible."
    ],
    "description": "Parameters:\n\nplayer: \n\nThe player index\n\nReturns:\n\nA boolean to tell if the player is invincible.\n\nThis native will only return true if a player was made invincible with SET_PLAYER_INVINCIBLE.\n\nYou should use GET_PLAYER_INVINCIBLE_2 to get both SET_PLAYER_INVINCIBLE and SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED invincibility state."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerMaxArmour",
    "hash": "0x92659B4CE1863CB3",
    "code": "-- GET_PLAYER_MAX_ARMOUR\nlocal retval --[[ integer ]] =\n\tGetPlayerMaxArmour(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerName",
    "hash": "0x6D0DE6A7B5DA71F8",
    "code": "-- GET_PLAYER_NAME\nlocal retval --[[ string ]] =\n\tGetPlayerName(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [
      "player: \n\nThe player index, or -1 to get the local player ped."
    ],
    "returns": [
      "The name of the queried player. \"Invalid\" if the player does not exist."
    ],
    "description": "Parameters:\n\nplayer: \n\nThe player index, or -1 to get the local player ped.\n\nReturns:\n\nThe name of the queried player. \"Invalid\" if the player does not exist.\n\nReturns the players name from a specified player index"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerParachuteModelOverride",
    "hash": "0xC219887CA3E65C41",
    "code": "-- _GET_PLAYER_PARACHUTE_MODEL_OVERRIDE\nlocal retval --[[ Hash ]] =\n\tGetPlayerParachuteModelOverride(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerParachutePackTintIndex",
    "hash": "0x6E9C742F340CE5A2",
    "code": "-- GET_PLAYER_PARACHUTE_PACK_TINT_INDEX\nlocal tintIndex --[[ integer ]] =\n\tGetPlayerParachutePackTintIndex(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerParachuteSmokeTrailColor",
    "hash": "0xEF56DBABD3CD4887",
    "code": "-- GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetPlayerParachuteSmokeTrailColor(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerParachuteTintIndex",
    "hash": "0x75D3F7A1B0D9B145",
    "code": "-- GET_PLAYER_PARACHUTE_TINT_INDEX\nlocal tintIndex --[[ integer ]] =\n\tGetPlayerParachuteTintIndex(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Tints:  \nNone = -1,  \nRainbow = 0,  \nRed = 1,  \nSeasideStripes = 2,  \nWidowMaker = 3,  \nPatriot = 4,  \nBlue = 5,  \nBlack = 6,  \nHornet = 7,  \nAirFocce = 8,  \nDesert = 9,  \nShadow = 10,  \nHighAltitude = 11,  \nAirbone = 12,  \nSunrise = 13,"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerPed",
    "hash": "0x43A66C31C68491C0",
    "code": "-- GET_PLAYER_PED\nlocal retval --[[ Ped ]] =\n\tGetPlayerPed(\n\t\tplayerId --[[ Player ]]\n\t)",
    "parameters": [
      "playerId: \n\nThe player index, or -1 to get the local player ped."
    ],
    "returns": [
      "The specified player's ped, or 0 if invalid."
    ],
    "description": "Parameters:\n\nplayerId: \n\nThe player index, or -1 to get the local player ped.\n\nReturns:\n\nThe specified player's ped, or 0 if invalid.\n\nGets the ped for a specified player index.\n\nNote: For performance reasons, usage of PLAYER_PED_ID is recommended over the use of GetPlayerPed(-1) when wanting to acquire your local player ped. For more information, please refer to this forum post."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerPedScriptIndex",
    "hash": "0x50FAC3A3E030A6E1",
    "code": "-- GET_PLAYER_PED_SCRIPT_INDEX\nlocal retval --[[ Ped ]] =\n\tGetPlayerPedScriptIndex(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Does the same like PLAYER::GET_PLAYER_PED"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerReserveParachuteModelOverride",
    "hash": "0x37FAAA68DCA9D08D",
    "code": "-- _GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE\nlocal retval --[[ Hash ]] =\n\tGetPlayerReserveParachuteModelOverride(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerReserveParachuteTintIndex",
    "hash": "0xD5A016BC3C09CF40",
    "code": "-- GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX\nlocal index --[[ integer ]] =\n\tGetPlayerReserveParachuteTintIndex(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Tints:  \nNone = -1,  \nRainbow = 0,  \nRed = 1,  \nSeasideStripes = 2,  \nWidowMaker = 3,  \nPatriot = 4,  \nBlue = 5,  \nBlack = 6,  \nHornet = 7,  \nAirFocce = 8,  \nDesert = 9,  \nShadow = 10,  \nHighAltitude = 11,  \nAirbone = 12,  \nSunrise = 13,"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerRgbColour",
    "hash": "0xE902EF951DCE178F",
    "code": "-- GET_PLAYER_RGB_COLOUR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetPlayerRgbColour(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerSprintStaminaRemaining",
    "hash": "0x3F9F16F8E65A7ED7",
    "code": "-- GET_PLAYER_SPRINT_STAMINA_REMAINING\nlocal retval --[[ number ]] =\n\tGetPlayerSprintStaminaRemaining(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerSprintTimeRemaining",
    "hash": "0x1885BC9B108B4C99",
    "code": "-- GET_PLAYER_SPRINT_TIME_REMAINING\nlocal retval --[[ number ]] =\n\tGetPlayerSprintTimeRemaining(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerTargetEntity",
    "hash": "0x13EDE1A5DBF797C9",
    "code": "-- GET_PLAYER_TARGET_ENTITY\nlocal retval --[[ boolean ]], entity --[[ Entity ]] =\n\tGetPlayerTargetEntity(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Assigns the handle of locked-on melee target to *entity that you pass it.  \nReturns false if no entity found."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerTeam",
    "hash": "0x37039302F4E0A008",
    "code": "-- GET_PLAYER_TEAM\nlocal retval --[[ integer ]] =\n\tGetPlayerTeam(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the player's team.  \nDoes nothing in singleplayer."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerUnderwaterTimeRemaining",
    "hash": "0xA1FCF8E6AF40B731",
    "code": "-- GET_PLAYER_UNDERWATER_TIME_REMAINING\nlocal retval --[[ number ]] =\n\tGetPlayerUnderwaterTimeRemaining(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerWantedCentrePosition",
    "hash": "0x0C92BA89F1AF26F8",
    "code": "-- GET_PLAYER_WANTED_CENTRE_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetPlayerWantedCentrePosition(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayerWantedLevel",
    "hash": "0xE28E54788CE8F12D",
    "code": "-- GET_PLAYER_WANTED_LEVEL\nlocal retval --[[ integer ]] =\n\tGetPlayerWantedLevel(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetPlayersLastVehicle",
    "hash": "0xB6997A7EB3F5C8C0",
    "code": "-- GET_PLAYERS_LAST_VEHICLE\nlocal retval --[[ Vehicle ]] =\n\tGetPlayersLastVehicle()",
    "parameters": [],
    "returns": [
      "A vehicle handle containing the last player's vehicle."
    ],
    "description": "Returns:\n\nA vehicle handle containing the last player's vehicle.\n\nWarning\n\nThis native will return 0 if the last vehicle the player was in was destroyed.\n\nAlternative\n\nYou can use GET_VEHICLE_PED_IS_IN, which will actually get the last vehicle, even if it was destroyed."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetTimeSinceLastArrest",
    "hash": "0x5063F92F07C2A316",
    "code": "-- GET_TIME_SINCE_LAST_ARREST\nlocal retval --[[ integer ]] =\n\tGetTimeSinceLastArrest()",
    "parameters": [],
    "returns": [],
    "description": "Returns the time since the character was arrested in (ms) milliseconds.  \nexample  \nvar time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();  \nUI.DrawSubtitle(time.ToString());  \nif player has not been arrested, the int returned will be -1."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetTimeSinceLastDeath",
    "hash": "0xC7034807558DDFCA",
    "code": "-- GET_TIME_SINCE_LAST_DEATH\nlocal retval --[[ integer ]] =\n\tGetTimeSinceLastDeath()",
    "parameters": [],
    "returns": [],
    "description": "Returns the time since the character died in (ms) milliseconds.  \nexample  \nvar time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();  \nUI.DrawSubtitle(time.ToString());  \nif player has not died, the int returned will be -1."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetTimeSincePlayerDroveAgainstTraffic",
    "hash": "0xDB89591E290D9182",
    "code": "-- GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC\nlocal retval --[[ integer ]] =\n\tGetTimeSincePlayerDroveAgainstTraffic(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetTimeSincePlayerDroveOnPavement",
    "hash": "0xD559D2BE9E37853B",
    "code": "-- GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT\nlocal retval --[[ integer ]] =\n\tGetTimeSincePlayerDroveOnPavement(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetTimeSincePlayerHitPed",
    "hash": "0xE36A25322DC35F42",
    "code": "-- GET_TIME_SINCE_PLAYER_HIT_PED\nlocal retval --[[ integer ]] =\n\tGetTimeSincePlayerHitPed(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetTimeSincePlayerHitVehicle",
    "hash": "0x5D35ECF3A81A0EE0",
    "code": "-- GET_TIME_SINCE_PLAYER_HIT_VEHICLE\nlocal retval --[[ integer ]] =\n\tGetTimeSincePlayerHitVehicle(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetWantedLevelParoleDuration",
    "hash": "0xA72200F51875FEA4",
    "code": "-- _GET_WANTED_LEVEL_PAROLE_DURATION\nlocal retval --[[ integer ]] =\n\tGetWantedLevelParoleDuration()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetWantedLevelRadius",
    "hash": "0x085DEB493BE80812",
    "code": "-- GET_WANTED_LEVEL_RADIUS\nlocal retval --[[ number ]] =\n\tGetWantedLevelRadius(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Remnant from GTA IV. Does nothing in GTA V."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GetWantedLevelThreshold",
    "hash": "0xFDD179EAF45B556C",
    "code": "-- GET_WANTED_LEVEL_THRESHOLD\nlocal retval --[[ integer ]] =\n\tGetWantedLevelThreshold(\n\t\twantedLevel --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Drft"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GiveAchievementToPlayer",
    "hash": "0xBEC7076D64130195",
    "code": "-- GIVE_ACHIEVEMENT_TO_PLAYER\nlocal retval --[[ boolean ]] =\n\tGiveAchievementToPlayer(\n\t\tachievement --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Achievements from 0-57\nmore achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "GivePlayerRagdollControl",
    "hash": "0x3C49C870E66F0A28",
    "code": "-- GIVE_PLAYER_RAGDOLL_CONTROL\nGivePlayerRagdollControl(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "HasAchievementBeenPassed",
    "hash": "0x867365E111A3B6EB",
    "code": "-- HAS_ACHIEVEMENT_BEEN_PASSED\nlocal retval --[[ boolean ]] =\n\tHasAchievementBeenPassed(\n\t\tachievement --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "HasForceCleanupOccurred",
    "hash": "0xC968670BFACE42D9",
    "code": "-- HAS_FORCE_CLEANUP_OCCURRED\nlocal retval --[[ boolean ]] =\n\tHasForceCleanupOccurred(\n\t\tcleanupFlags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "HasPlayerBeenShotByCop",
    "hash": "0xBC0753C9CA14B506",
    "code": "-- _HAS_PLAYER_BEEN_SHOT_BY_COP\nlocal retval --[[ boolean ]] =\n\tHasPlayerBeenShotByCop(\n\t\tplayer --[[ Player ]], \n\t\tms --[[ integer ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "HasPlayerBeenSpottedInStolenVehicle",
    "hash": "0xD705740BB0A1CF4C",
    "code": "-- HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE\nlocal retval --[[ boolean ]] =\n\tHasPlayerBeenSpottedInStolenVehicle(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "HasPlayerDamagedAtLeastOneNonAnimalPed",
    "hash": "0xE4B90F367BD81752",
    "code": "-- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED\nlocal retval --[[ boolean ]] =\n\tHasPlayerDamagedAtLeastOneNonAnimalPed(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "HasPlayerDamagedAtLeastOnePed",
    "hash": "0x20CE80B0C2BF4ACC",
    "code": "-- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED\nlocal retval --[[ boolean ]] =\n\tHasPlayerDamagedAtLeastOnePed(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "HasPlayerLeftTheWorld",
    "hash": "0xD55DDFB47991A294",
    "code": "-- HAS_PLAYER_LEFT_THE_WORLD\nlocal retval --[[ boolean ]] =\n\tHasPlayerLeftTheWorld(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IntToParticipantindex",
    "hash": "0x9EC6603812C24710",
    "code": "-- INT_TO_PARTICIPANTINDEX\nlocal retval --[[ integer ]] =\n\tIntToParticipantindex(\n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  \n--------------------------------------------------------  \nif (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IntToPlayerindex",
    "hash": "0x41BD2A6B006AF756",
    "code": "-- INT_TO_PLAYERINDEX\nlocal retval --[[ Player ]] =\n\tIntToPlayerindex(\n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Simply returns whatever is passed to it (Regardless of whether the handle is valid or not)."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerBattleAware",
    "hash": "0x38D28DA81E4E9BF9",
    "code": "-- IS_PLAYER_BATTLE_AWARE\nlocal retval --[[ boolean ]] =\n\tIsPlayerBattleAware(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if an unk value is greater than 0.0f"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerBeingArrested",
    "hash": "0x388A47C51ABDAC8E",
    "code": "-- IS_PLAYER_BEING_ARRESTED\nlocal retval --[[ boolean ]] =\n\tIsPlayerBeingArrested(\n\t\tplayer --[[ Player ]], \n\t\tatArresting --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Return true while player is being arrested / busted.  \nIf atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)  \nIf atArresting is set to 0, this function will return 1 only when the busted screen is shown."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerBluetoothEnable",
    "hash": "0x65FAEE425DE637B0",
    "code": "-- IS_PLAYER_BLUETOOTH_ENABLE\nlocal retval --[[ boolean ]] =\n\tIsPlayerBluetoothEnable(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerClimbing",
    "hash": "0x95E8F73DC65EFB9C",
    "code": "-- IS_PLAYER_CLIMBING\nlocal retval --[[ boolean ]] =\n\tIsPlayerClimbing(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns TRUE if the player ('s ped) is climbing at the moment."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerControlOn",
    "hash": "0x49C32D60007AFA47",
    "code": "-- IS_PLAYER_CONTROL_ON\nlocal retval --[[ boolean ]] =\n\tIsPlayerControlOn(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Can the player control himself, used to disable controls for player for things like a cutscene.  \n---  \nYou can't disable controls with this, use SET_PLAYER_CONTROL(...) for this."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerDead",
    "hash": "0x424D4687FA1E5652",
    "code": "-- IS_PLAYER_DEAD\nlocal retval --[[ boolean ]] =\n\tIsPlayerDead(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerDrivingDangerously",
    "hash": "0xF10B44FD479D69F3",
    "code": "-- _IS_PLAYER_DRIVING_DANGEROUSLY\nlocal retval --[[ boolean ]] =\n\tIsPlayerDrivingDangerously(\n\t\tplayer --[[ Player ]], \n\t\ttype --[[ integer ]]\n\t)",
    "parameters": [
      "player: \n\nPlayer ID",
      "type: \n\nRefer to eViolationType."
    ],
    "returns": [
      "Returns true if the player is performing the type traffic violation."
    ],
    "description": "Parameters:\n\nplayer: \n\nPlayer ID\n\ntype: \n\nRefer to eViolationType.\n\nReturns:\n\nReturns true if the player is performing the type traffic violation.\n\nenum eViolationType {\n  // Checks if the player is driving on pedestrians walk ways\n  VT_PAVED_PEDESTRIAN_AREAS = 0,\n  // Checks if the player is running through red lights\n  // This takes some time to return true.\n  VT_RUNNING_REDS = 1,\n  // checks if the player is driving on the wrong side of the road\n  VT_AGAINST_TRAFFIC = 2\n};\n\n\nUsed solely in \"Al Di Napoli\" with type 2 for a voiceline."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerFreeAiming",
    "hash": "0x2E397FD2ECD37C87",
    "code": "-- IS_PLAYER_FREE_AIMING\nlocal retval --[[ boolean ]] =\n\tIsPlayerFreeAiming(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a value indicating whether the specified player is currently aiming freely."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerFreeAimingAtEntity",
    "hash": "0x3C06B5C839B38F7B",
    "code": "-- IS_PLAYER_FREE_AIMING_AT_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsPlayerFreeAimingAtEntity(\n\t\tplayer --[[ Player ]], \n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a value indicating whether the specified player is currently aiming freely at the specified entity."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerFreeForAmbientTask",
    "hash": "0xDCCFD3F106C36AB4",
    "code": "-- IS_PLAYER_FREE_FOR_AMBIENT_TASK\nlocal retval --[[ boolean ]] =\n\tIsPlayerFreeForAmbientTask(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerLoggingInNp",
    "hash": "0x74556E1420867ECA",
    "code": "-- IS_PLAYER_LOGGING_IN_NP\nlocal retval --[[ boolean ]] =\n\tIsPlayerLoggingInNp()",
    "parameters": [],
    "returns": [],
    "description": "this function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerOnline",
    "hash": "0xF25D331DC2627BBC",
    "code": "-- IS_PLAYER_ONLINE\nlocal retval --[[ boolean ]] =\n\tIsPlayerOnline()",
    "parameters": [],
    "returns": [
      "It provides a true value if the game is in online mode and false if it's in offline mode."
    ],
    "description": "Returns:\n\nIt provides a true value if the game is in online mode and false if it's in offline mode.\n\nIt returns true if the player is online, suggesting they are also logged in locally. Note that this is an alias for NETWORK_IS_SIGNED_ONLINE."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerPlaying",
    "hash": "0x5E9564D8246B909A",
    "code": "-- IS_PLAYER_PLAYING\nlocal retval --[[ boolean ]] =\n\tIsPlayerPlaying(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerPressingHorn",
    "hash": "0xFA1E2BF8B10598F9",
    "code": "-- IS_PLAYER_PRESSING_HORN\nlocal retval --[[ boolean ]] =\n\tIsPlayerPressingHorn(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerReadyForCutscene",
    "hash": "0x908CBECC2CAA3690",
    "code": "-- IS_PLAYER_READY_FOR_CUTSCENE\nlocal retval --[[ boolean ]] =\n\tIsPlayerReadyForCutscene(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerRidingTrain",
    "hash": "0x4EC12697209F2196",
    "code": "-- IS_PLAYER_RIDING_TRAIN\nlocal retval --[[ boolean ]] =\n\tIsPlayerRidingTrain(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the player is riding a train."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerScriptControlOn",
    "hash": "0x8A876A65283DD7D7",
    "code": "-- IS_PLAYER_SCRIPT_CONTROL_ON\nlocal retval --[[ boolean ]] =\n\tIsPlayerScriptControlOn(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerTargettingAnything",
    "hash": "0x78CFE51896B6B8A4",
    "code": "-- IS_PLAYER_TARGETTING_ANYTHING\nlocal retval --[[ boolean ]] =\n\tIsPlayerTargettingAnything(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerTargettingEntity",
    "hash": "0x7912F7FC4F6264B6",
    "code": "-- IS_PLAYER_TARGETTING_ENTITY\nlocal retval --[[ boolean ]] =\n\tIsPlayerTargettingEntity(\n\t\tplayer --[[ Player ]], \n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerTeleportActive",
    "hash": "0x02B15662D7F8886F",
    "code": "-- IS_PLAYER_TELEPORT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsPlayerTeleportActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsPlayerWantedLevelGreater",
    "hash": "0x238DB2A2C23EE9EF",
    "code": "-- IS_PLAYER_WANTED_LEVEL_GREATER\nlocal retval --[[ boolean ]] =\n\tIsPlayerWantedLevelGreater(\n\t\tplayer --[[ Player ]], \n\t\twantedLevel --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsSpecialAbilityActive",
    "hash": "0x3E5F7FC85D854E15",
    "code": "-- IS_SPECIAL_ABILITY_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsSpecialAbilityActive(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsSpecialAbilityEnabled",
    "hash": "0xB1D200FE26AEF3CB",
    "code": "-- IS_SPECIAL_ABILITY_ENABLED\nlocal retval --[[ boolean ]] =\n\tIsSpecialAbilityEnabled(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsSpecialAbilityMeterFull",
    "hash": "0x05A1FE504B7F2587",
    "code": "-- IS_SPECIAL_ABILITY_METER_FULL\nlocal retval --[[ boolean ]] =\n\tIsSpecialAbilityMeterFull(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsSpecialAbilityUnlocked",
    "hash": "0xC6017F6A6CDFA694",
    "code": "-- IS_SPECIAL_ABILITY_UNLOCKED\nlocal retval --[[ boolean ]] =\n\tIsSpecialAbilityUnlocked(\n\t\tplayerModel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "IsSystemUiBeingDisplayed",
    "hash": "0x5D511E3867C87139",
    "code": "-- IS_SYSTEM_UI_BEING_DISPLAYED\nlocal retval --[[ boolean ]] =\n\tIsSystemUiBeingDisplayed()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "NetworkPlayerIdToInt",
    "hash": "0xEE68096F9F37341E",
    "code": "-- NETWORK_PLAYER_ID_TO_INT\nlocal retval --[[ integer ]] =\n\tNetworkPlayerIdToInt()",
    "parameters": [],
    "returns": [],
    "description": "Does exactly the same thing as PLAYER_ID()"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "PlayerAttachVirtualBound",
    "hash": "0xED51733DC73AED51",
    "code": "-- PLAYER_ATTACH_VIRTUAL_BOUND\nPlayerAttachVirtualBound(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only 1 match. ob_sofa_michael.  \nPLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "PlayerDetachVirtualBound",
    "hash": "0x1DD5897E2FA6E7C9",
    "code": "-- PLAYER_DETACH_VIRTUAL_BOUND\nPlayerDetachVirtualBound()",
    "parameters": [],
    "returns": [],
    "description": "1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "PlayerId",
    "hash": "0x4F8644AF03D0E0D6",
    "code": "-- PLAYER_ID\nlocal retval --[[ Player ]] =\n\tPlayerId()",
    "parameters": [],
    "returns": [
      "The local player's player index."
    ],
    "description": "Returns:\n\nThe local player's player index.\n\nReturns the player index for the local player."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "PlayerPedId",
    "hash": "0xD80958FC74E988A6",
    "code": "-- PLAYER_PED_ID\nlocal retval --[[ Ped ]] =\n\tPlayerPedId()",
    "parameters": [],
    "returns": [
      "The local player ped's entity handle."
    ],
    "description": "Returns:\n\nThe local player ped's entity handle.\n\nReturns the entity handle for the local player ped. Note that this entity handle will change after using commands such as SET_PLAYER_MODEL."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "RemovePlayerHelmet",
    "hash": "0xF3AC26D3CC576528",
    "code": "-- REMOVE_PLAYER_HELMET\nRemovePlayerHelmet(\n\tplayer --[[ Player ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ReportCrime",
    "hash": "0xE9B09589827545E7",
    "code": "-- REPORT_CRIME\nReportCrime(\n\tplayer --[[ Player ]], \n\tcrimeType --[[ integer ]], \n\twantedLvlThresh --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));  \nFrom am_armybase.ysc.c4:  \nPLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));  \n-----  \nThis was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7   \n-----  \ncrimeType:  \n1: Firearms possession  \n2: Person running a red light (\"5-0-5\")  \n3: Reckless driver  \n4: Speeding vehicle (a \"5-10\")  \n5: Traffic violation (a \"5-0-5\")  \n6: Motorcycle rider without a helmet  \n7: Vehicle theft (a \"5-0-3\")  \n8: Grand Theft Auto  \n9: ???  \n10: ???  \n11: Assault on a civilian (a \"2-40\")  \n12: Assault on an officer  \n13: Assault with a deadly weapon (a \"2-45\")  \n14: Officer shot (a \"2-45\")  \n15: Pedestrian struck by a vehicle  \n16: Officer struck by a vehicle  \n17: Helicopter down (an \"AC\"?)  \n18: Civilian on fire (a \"2-40\")  \n19: Officer set on fire (a \"10-99\")  \n20: Car on fire  \n21: Air unit down (an \"AC\"?)  \n22: An explosion (a \"9-96\")  \n23: A stabbing (a \"2-45\") (also something else I couldn't understand)  \n24: Officer stabbed (also something else I couldn't understand)  \n25: Attack on a vehicle (\"MDV\"?)  \n26: Damage to property  \n27: Suspect threatening officer with a firearm  \n28: Shots fired  \n29: ???  \n30: ???  \n31: ???  \n32: ???  \n33: ???  \n34: A \"2-45\"  \n35: ???  \n36: A \"9-25\"  \n37: ???  \n38: ???  \n39: ???  \n40: ???  \n41: ???  \n42: ???  \n43: Possible disturbance  \n44: Civilian in need of assistance  \n45: ???  \n46: ???"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ReportPoliceSpottedPlayer",
    "hash": "0xDC64D2C53493ED12",
    "code": "-- REPORT_POLICE_SPOTTED_PLAYER\nReportPoliceSpottedPlayer(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ResetPlayerArrestState",
    "hash": "0x2D03E13C460760D6",
    "code": "-- RESET_PLAYER_ARREST_STATE\nResetPlayerArrestState(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ResetPlayerInputGait",
    "hash": "0x19531C47A2ABD691",
    "code": "-- RESET_PLAYER_INPUT_GAIT\nResetPlayerInputGait(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ResetPlayerStamina",
    "hash": "0xA6F312FCCE9C1DFE",
    "code": "-- RESET_PLAYER_STAMINA\nResetPlayerStamina(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ResetWantedLevelDifficulty",
    "hash": "0xB9D0DD990DC141DD",
    "code": "-- RESET_WANTED_LEVEL_DIFFICULTY\nResetWantedLevelDifficulty(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "ResetWorldBoundaryForPlayer",
    "hash": "0xDA1DF03D5A315F4E",
    "code": "-- RESET_WORLD_BOUNDARY_FOR_PLAYER\nResetWorldBoundaryForPlayer()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "RestorePlayerStamina",
    "hash": "0xA352C1B864CAFD33",
    "code": "-- RESTORE_PLAYER_STAMINA\nRestorePlayerStamina(\n\tplayer --[[ Player ]], \n\tpercentage --[[ number ]]\n)",
    "parameters": [
      "player: \n\nplayer to restore the stamina for",
      "percentage: \n\nseems to be a percentage that ranges from 0.0 to 1.0 (1.0 being 100%)"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nplayer to restore the stamina for\n\npercentage: \n\nseems to be a percentage that ranges from 0.0 to 1.0 (1.0 being 100%)\n\nAdds a percentage to a players stamina"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetAchievementProgress",
    "hash": "0xC2AFFFDABBDC2C5C",
    "code": "-- _SET_ACHIEVEMENT_PROGRESS\nlocal retval --[[ boolean ]] =\n\tSetAchievementProgress(\n\t\tachievement --[[ integer ]], \n\t\tprogress --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "For Steam. Does nothing and always returns false in the retail version of the game."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetAirDragMultiplierForPlayersVehicle",
    "hash": "0xCA7DC8329F0A1E9E",
    "code": "-- SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE\nSetAirDragMultiplierForPlayersVehicle(\n\tplayer --[[ Player ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This can be between 1.0f - 14.9f   \nYou can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.  \nOn PC the multiplier can be between 0.0f and 50.0f (inclusive)."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetAllRandomPedsFlee",
    "hash": "0x056E0FE8534C2949",
    "code": "-- SET_ALL_RANDOM_PEDS_FLEE\nSetAllRandomPedsFlee(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe Player ID for whom you want to set this behavior.",
      "toggle: \n\ntrue/false."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe Player ID for whom you want to set this behavior.\n\ntoggle: \n\ntrue/false.\n\nSets whether all random peds will run away from the player if they are agitated (threatened) (bool=true), or if they will stand their ground (bool=false)."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetAllRandomPedsFleeThisFrame",
    "hash": "0x471D2FF42A94B4F2",
    "code": "-- SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME\nSetAllRandomPedsFleeThisFrame(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetAutoGiveParachuteWhenEnterPlane",
    "hash": "0x9F343285A00B4BB6",
    "code": "-- SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE\nSetAutoGiveParachuteWhenEnterPlane(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetAutoGiveScubaGearWhenExitVehicle",
    "hash": "0xD2B315B6689D537D",
    "code": "-- SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE\nSetAutoGiveScubaGearWhenExitVehicle(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetDisableAmbientMeleeMove",
    "hash": "0x2E8AABFA40A84F8C",
    "code": "-- SET_DISABLE_AMBIENT_MELEE_MOVE\nSetDisableAmbientMeleeMove(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetDispatchCopsForPlayer",
    "hash": "0xDB172424876553F4",
    "code": "-- SET_DISPATCH_COPS_FOR_PLAYER\nSetDispatchCopsForPlayer(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetEveryoneIgnorePlayer",
    "hash": "0x8EEDA153AD141BA4",
    "code": "-- SET_EVERYONE_IGNORE_PLAYER\nSetEveryoneIgnorePlayer(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetIgnoreLowPriorityShockingEvents",
    "hash": "0x596976B02B6B5700",
    "code": "-- SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS\nSetIgnoreLowPriorityShockingEvents(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetMaxWantedLevel",
    "hash": "0xAA5F02DB48D704B9",
    "code": "-- SET_MAX_WANTED_LEVEL\nSetMaxWantedLevel(\n\tmaxWantedLevel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerBluetoothState",
    "hash": "0x5DC40A8869C22141",
    "code": "-- SET_PLAYER_BLUETOOTH_STATE\nSetPlayerBluetoothState(\n\tplayer --[[ Player ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerCanBeHassledByGangs",
    "hash": "0xD5E460AD7020A246",
    "code": "-- SET_PLAYER_CAN_BE_HASSLED_BY_GANGS\nSetPlayerCanBeHassledByGangs(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets whether this player can be hassled by gangs."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerCanDoDriveBy",
    "hash": "0x6E8834B52EC20C77",
    "code": "-- SET_PLAYER_CAN_DO_DRIVE_BY\nSetPlayerCanDoDriveBy(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe player to target.",
      "toggle: \n\nIf set to false, disables the players ability to do drive bys."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player to target.\n\ntoggle: \n\nIf set to false, disables the players ability to do drive bys.\n\nSets whether the player is able to do drive-bys in vehicle (shooting & aiming in vehicles), this also includes middle finger taunts.\n\nThis is a toggle, it does not have to be ran every frame."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerCanLeaveParachuteSmokeTrail",
    "hash": "0xF401B182DBA8AF53",
    "code": "-- SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL\nSetPlayerCanLeaveParachuteSmokeTrail(\n\tplayer --[[ Player ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerCanUseCover",
    "hash": "0xD465A8599DFF6814",
    "code": "-- SET_PLAYER_CAN_USE_COVER\nSetPlayerCanUseCover(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets whether this player can take cover."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerClothLockCounter",
    "hash": "0x14D913B777DFF5DA",
    "code": "-- SET_PLAYER_CLOTH_LOCK_COUNTER\nSetPlayerClothLockCounter(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "6 matches across 4 scripts. 5 occurrences were 240. The other was 255."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerClothPackageIndex",
    "hash": "0x9F7BBA2EA6372500",
    "code": "-- SET_PLAYER_CLOTH_PACKAGE_INDEX\nSetPlayerClothPackageIndex(\n\tindex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Every occurrence was either 0 or 2."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerClothPinFrames",
    "hash": "0x749FADDF97DFE930",
    "code": "-- SET_PLAYER_CLOTH_PIN_FRAMES\nSetPlayerClothPinFrames(\n\tplayer --[[ Player ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerControl",
    "hash": "0x8D32347D6D4C40A2",
    "code": "-- SET_PLAYER_CONTROL\nSetPlayerControl(\n\tplayer --[[ Player ]], \n\tbHasControl --[[ boolean ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Flags:\nSPC_AMBIENT_SCRIPT = (1 << 1),\nSPC_CLEAR_TASKS = (1 << 2),\nSPC_REMOVE_FIRES = (1 << 3),\nSPC_REMOVE_EXPLOSIONS = (1 << 4),\nSPC_REMOVE_PROJECTILES = (1 << 5),\nSPC_DEACTIVATE_GADGETS = (1 << 6),\nSPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),\nSPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),\nSPC_ALLOW_PLAYER_DAMAGE = (1 << 9),\nSPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),\nSPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),\nSPC_ALLOW_PAD_SHAKE = (1 << 12)\nSee: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerFallDistance",
    "hash": "0xEFD79FA81DFBA9CB",
    "code": "-- _SET_PLAYER_FALL_DISTANCE\nSetPlayerFallDistance(\n\tplayer --[[ Player ]], \n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerForceSkipAimIntro",
    "hash": "0x7651BC64AE59E128",
    "code": "-- SET_PLAYER_FORCE_SKIP_AIM_INTRO\nSetPlayerForceSkipAimIntro(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerForcedAim",
    "hash": "0x0FEE4F80AC44A726",
    "code": "-- SET_PLAYER_FORCED_AIM\nSetPlayerForcedAim(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerForcedZoom",
    "hash": "0x75E7D505F2B15902",
    "code": "-- SET_PLAYER_FORCED_ZOOM\nSetPlayerForcedZoom(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerHasReserveParachute",
    "hash": "0x7DDAB28D31FAC363",
    "code": "-- SET_PLAYER_HAS_RESERVE_PARACHUTE\nSetPlayerHasReserveParachute(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerHealthRechargeLimit",
    "hash": "0xC388A0F065F5BC34",
    "code": "-- _SET_PLAYER_HEALTH_RECHARGE_LIMIT\nSetPlayerHealthRechargeLimit(\n\tplayer --[[ Player ]], \n\tlimit --[[ number ]]\n)",
    "parameters": [
      "player: \n\nThe local player ID.",
      "limit: \n\nA value between 0.0 and 1.0, 0.5 is default."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe local player ID.\n\nlimit: \n\nA value between 0.0 and 1.0, 0.5 is default."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerHealthRechargeMultiplier",
    "hash": "0x5DB660B38DD98A31",
    "code": "-- SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER\nSetPlayerHealthRechargeMultiplier(\n\tplayer --[[ Player ]], \n\tregenRate --[[ number ]]\n)",
    "parameters": [
      "player: \n\nThe local player ID, see PLAYER_ID.",
      "regenRate: \n\nThe recharge multiplier, this value needs to be a positive float value to work."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe local player ID, see PLAYER_ID.\n\nregenRate: \n\nThe recharge multiplier, this value needs to be a positive float value to work.\n\nThis multiplier is reset to 1.0 every time the player ped is changed, often times via SET_PLAYER_MODEL or CHANGE_PLAYER_PED."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerHomingRocketDisabled",
    "hash": "0xEE4EBDD2593BA844",
    "code": "-- _SET_PLAYER_HOMING_ROCKET_DISABLED\nSetPlayerHomingRocketDisabled(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerInvincible",
    "hash": "0x239528EACDC3E7DE",
    "code": "-- SET_PLAYER_INVINCIBLE\nSetPlayerInvincible(\n\tplayer --[[ Player ]], \n\tbInvincible --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe player index.",
      "bInvincible:"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player index.\n\nbInvincible:\n\nMake the player impervious to all forms of damage."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerInvincibleKeepRagdollEnabled",
    "hash": "0x6BC97F4F4BB3C04B",
    "code": "-- _SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED\nSetPlayerInvincibleKeepRagdollEnabled(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerLeavePedBehind",
    "hash": "0xFF300C7649724A0B",
    "code": "-- SET_PLAYER_LEAVE_PED_BEHIND\nSetPlayerLeavePedBehind(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerLockon",
    "hash": "0x5C8B2F450EE4328E",
    "code": "-- SET_PLAYER_LOCKON\nSetPlayerLockon(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe player ID to toggle the lock on for.",
      "toggle: \n\nSet to false to prevent lock on, set to true to allow for lock on."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player ID to toggle the lock on for.\n\ntoggle: \n\nSet to false to prevent lock on, set to true to allow for lock on.\n\nUsed to toggle the square up aim."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerLockonRangeOverride",
    "hash": "0x29961D490E5814FD",
    "code": "-- SET_PLAYER_LOCKON_RANGE_OVERRIDE\nSetPlayerLockonRangeOverride(\n\tplayer --[[ Player ]], \n\trange --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Affects the range of auto aim target."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerMaxArmour",
    "hash": "0x77DFCCF5948B8C71",
    "code": "-- SET_PLAYER_MAX_ARMOUR\nSetPlayerMaxArmour(\n\tplayer --[[ Player ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerMayNotEnterAnyVehicle",
    "hash": "0x1DE37BBF9E9CC14A",
    "code": "-- SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE\nSetPlayerMayNotEnterAnyVehicle(\n\tplayer --[[ Player ]]\n)",
    "parameters": [
      "player: \n\nThe player index."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player index.\n\nEstablishes a reset flag to prevent the player from entering any vehicle. Not that this native must be called every frame."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerMayOnlyEnterThisVehicle",
    "hash": "0x8026FF78F208978A",
    "code": "-- SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE\nSetPlayerMayOnlyEnterThisVehicle(\n\tplayer --[[ Player ]], \n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "player: \n\nThe player index.",
      "vehicle: \n\nVehicle id."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player index.\n\nvehicle: \n\nVehicle id.\n\nLimit the player to only enter this vehicle. Note set vehicle to false if you want them to access any vehicle."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerMeleeWeaponDamageModifier",
    "hash": "0x4A3DC7ECCC321032",
    "code": "-- SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER\nSetPlayerMeleeWeaponDamageModifier(\n\tplayer --[[ Player ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 3: BOOL p2"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerMeleeWeaponDefenseModifier",
    "hash": "0xAE540335B4ABC4E2",
    "code": "-- SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER\nSetPlayerMeleeWeaponDefenseModifier(\n\tplayer --[[ Player ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "modifier's min value is 0.1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerModel",
    "hash": "0x00A1CADD00108836",
    "code": "-- SET_PLAYER_MODEL\nSetPlayerModel(\n\tplayer --[[ Player ]], \n\tmodel --[[ Hash ]]\n)",
    "parameters": [
      "player: \n\nThe player to set the model for",
      "model: \n\nThe model to use"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player to set the model for\n\nmodel: \n\nThe model to use\n\nSet the model for a specific Player. Note that this will destroy the current Ped for the Player and create a new one, any reference to the old ped will be invalid after calling this.\n\nAs per usual, make sure to request the model first and wait until it has loaded."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerNoiseMultiplier",
    "hash": "0xDB89EF50FF25FCE9",
    "code": "-- SET_PLAYER_NOISE_MULTIPLIER\nSetPlayerNoiseMultiplier(\n\tplayer --[[ Player ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerParachuteModelOverride",
    "hash": "0x977DB4641F6FC3DB",
    "code": "-- SET_PLAYER_PARACHUTE_MODEL_OVERRIDE\nSetPlayerParachuteModelOverride(\n\tplayer --[[ Player ]], \n\tmodel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "example:  \nPLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerParachutePackModelOverride",
    "hash": "0xDC80A4C2F18A2B64",
    "code": "-- SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE\nSetPlayerParachutePackModelOverride(\n\tplayer --[[ Player ]], \n\tmodel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerParachutePackTintIndex",
    "hash": "0x93B0FB27C9A04060",
    "code": "-- SET_PLAYER_PARACHUTE_PACK_TINT_INDEX\nSetPlayerParachutePackTintIndex(\n\tplayer --[[ Player ]], \n\ttintIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "tints 0- 13\n0 - unkown\n1 - unkown\n2 - unkown\n3 - unkown\n4 - unkown"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerParachuteSmokeTrailColor",
    "hash": "0x8217FD371A4625CF",
    "code": "-- SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR\nSetPlayerParachuteSmokeTrailColor(\n\tplayer --[[ Player ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerParachuteTintIndex",
    "hash": "0xA3D0E54541D9A5E5",
    "code": "-- SET_PLAYER_PARACHUTE_TINT_INDEX\nSetPlayerParachuteTintIndex(\n\tplayer --[[ Player ]], \n\ttintIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Tints:  \nNone = -1,  \nRainbow = 0,  \nRed = 1,  \nSeasideStripes = 2,  \nWidowMaker = 3,  \nPatriot = 4,  \nBlue = 5,  \nBlack = 6,  \nHornet = 7,  \nAirFocce = 8,  \nDesert = 9,  \nShadow = 10,  \nHighAltitude = 11,  \nAirbone = 12,  \nSunrise = 13,"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerParachuteVariationOverride",
    "hash": "0xD9284A8C0D48352C",
    "code": "-- SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE\nSetPlayerParachuteVariationOverride(\n\tplayer --[[ Player ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 was always 5.  \np4 was always false."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerReserveParachuteModelOverride",
    "hash": "0x0764486AEDE748DB",
    "code": "-- _SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE\nSetPlayerReserveParachuteModelOverride(\n\tplayer --[[ Player ]], \n\tmodel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerReserveParachuteTintIndex",
    "hash": "0xAF04C87F5DC1DF38",
    "code": "-- SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX\nSetPlayerReserveParachuteTintIndex(\n\tplayer --[[ Player ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Tints:  \nNone = -1,  \nRainbow = 0,  \nRed = 1,  \nSeasideStripes = 2,  \nWidowMaker = 3,  \nPatriot = 4,  \nBlue = 5,  \nBlack = 6,  \nHornet = 7,  \nAirFocce = 8,  \nDesert = 9,  \nShadow = 10,  \nHighAltitude = 11,  \nAirbone = 12,  \nSunrise = 13,"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerResetFlagPreferRearSeats",
    "hash": "0x11D5F725F0E780E0",
    "code": "-- SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS\nSetPlayerResetFlagPreferRearSeats(\n\tplayer --[[ Player ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "example:  \nflags: 0-6  \nPLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);  \nwouldnt the flag be the seatIndex?"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerSimulateAiming",
    "hash": "0xC54C95DA968EC5B5",
    "code": "-- SET_PLAYER_SIMULATE_AIMING\nSetPlayerSimulateAiming(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerSneakingNoiseMultiplier",
    "hash": "0xB2C1A29588A9F47C",
    "code": "-- SET_PLAYER_SNEAKING_NOISE_MULTIPLIER\nSetPlayerSneakingNoiseMultiplier(\n\tplayer --[[ Player ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Values around 1.0f to 2.0f used in game scripts."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerSprint",
    "hash": "0xA01B8075D8B92DF4",
    "code": "-- SET_PLAYER_SPRINT\nSetPlayerSprint(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerStealthPerceptionModifier",
    "hash": "0x4E9021C1FCDD507A",
    "code": "-- SET_PLAYER_STEALTH_PERCEPTION_MODIFIER\nSetPlayerStealthPerceptionModifier(\n\tplayer --[[ Player ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerTargetLevel",
    "hash": "0x5702B917B99DB1CD",
    "code": "-- SET_PLAYER_TARGET_LEVEL\nSetPlayerTargetLevel(\n\ttargetLevel --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerTargetingMode",
    "hash": "0xB1906895227793F3",
    "code": "-- SET_PLAYER_TARGETING_MODE\nSetPlayerTargetingMode(\n\ttargetMode --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets your targeting mode.\n0 = Assisted Aim - Full\n1 = Assisted Aim - Partial\n2 = Free Aim - Assisted\n3 = Free Aim"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerTeam",
    "hash": "0x0299FA38396A4940",
    "code": "-- SET_PLAYER_TEAM\nSetPlayerTeam(\n\tplayer --[[ Player ]], \n\tteam --[[ integer ]]\n)",
    "parameters": [
      "player: \n\nThe player index.",
      "team:"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player index.\n\nteam:\n\nSet the player's current team."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerUnderwaterTimeRemaining",
    "hash": "0xA0D3E4F7AAFB7E78",
    "code": "-- _SET_PLAYER_UNDERWATER_TIME_REMAINING\nlocal retval --[[ Any ]] =\n\tSetPlayerUnderwaterTimeRemaining(\n\t\tplayer --[[ Player ]], \n\t\tpercentage --[[ number ]]\n\t)",
    "parameters": [
      "player: \n\nPlayer id.",
      "percentage: \n\nMaximum is 100.0. Any value above 100.0 and less than 0.0 will have no effect on GET_PLAYER_UNDERWATER_TIME_REMAINING."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nPlayer id.\n\npercentage: \n\nMaximum is 100.0. Any value above 100.0 and less than 0.0 will have no effect on GET_PLAYER_UNDERWATER_TIME_REMAINING.\n\nSeems to lock the underwater timer of the specified player. Set percentage to 50.0 will reduce the value of GET_PLAYER_UNDERWATER_TIME_REMAINING to 5.0.\n\nIf you want to increase the underwater time for ped, use SET_PED_MAX_TIME_UNDERWATER instead.\n\nUsing this native after SET_PED_MAX_TIME_UNDERWATER WILL NOT get what you want. For example, if you set the max time underwater to 100.0 seconds using SET_PED_MAX_TIME_UNDERWATER and then call this native and set the percentage to 50.0, you will not get 50.0, instead 2.0."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerVehicleDamageModifier",
    "hash": "0xA50E117CDDF82F0C",
    "code": "-- SET_PLAYER_VEHICLE_DAMAGE_MODIFIER\nSetPlayerVehicleDamageModifier(\n\tplayer --[[ Player ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "modifier's min value is 0.1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerVehicleDefenseModifier",
    "hash": "0x4C60E6EFDAFF2462",
    "code": "-- SET_PLAYER_VEHICLE_DEFENSE_MODIFIER\nSetPlayerVehicleDefenseModifier(\n\tplayer --[[ Player ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "modifier's min value is 0.1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerWantedCentrePosition",
    "hash": "0x520E541A97A13354",
    "code": "-- SET_PLAYER_WANTED_CENTRE_POSITION\nlocal position --[[ vector3 ]] =\n\tSetPlayerWantedCentrePosition(\n\t\tplayer --[[ Player ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "# Predominant call signatures  \nPLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));  \n# Parameter value ranges  \nP0: PLAYER::PLAYER_ID()  \nP1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)  \nP2: Not set by any call"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerWantedLevel",
    "hash": "0x39FF19C64EF7DA5B",
    "code": "-- SET_PLAYER_WANTED_LEVEL\nSetPlayerWantedLevel(\n\tplayer --[[ Player ]], \n\twantedLevel --[[ integer ]], \n\tdelayedResponse --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nthe target player",
      "wantedLevel: \n\nthe wanted level 1-5",
      "delayedResponse: \n\nfalse = 0-10sec police spawn response time, true = 10-20sec police spawn response time"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nthe target player\n\nwantedLevel: \n\nthe wanted level 1-5\n\ndelayedResponse: \n\nfalse = 0-10sec police spawn response time, true = 10-20sec police spawn response time"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerWantedLevelNoDrop",
    "hash": "0x340E61DE7F471565",
    "code": "-- SET_PLAYER_WANTED_LEVEL_NO_DROP\nSetPlayerWantedLevelNoDrop(\n\tplayer --[[ Player ]], \n\twantedLevel --[[ integer ]], \n\tdelayedResponse --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nthe target player",
      "wantedLevel: \n\nthe wanted level 1-5",
      "delayedResponse: \n\nfalse = 0-10sec police spawn response time, true = 10-20sec police spawn response time"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nthe target player\n\nwantedLevel: \n\nthe wanted level 1-5\n\ndelayedResponse: \n\nfalse = 0-10sec police spawn response time, true = 10-20sec police spawn response time"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerWantedLevelNow",
    "hash": "0xE0A7D1E497FFCD6F",
    "code": "-- SET_PLAYER_WANTED_LEVEL_NOW\nSetPlayerWantedLevelNow(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Forces any pending wanted level to be applied to the specified player immediately.  \nCall SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.  \nSecond parameter is unknown (always false)."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerWeaponDamageModifier",
    "hash": "0xCE07B9F7817AADA3",
    "code": "-- SET_PLAYER_WEAPON_DAMAGE_MODIFIER\nSetPlayerWeaponDamageModifier(\n\tplayer --[[ Player ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The native ensures the 'modifier' parameter is 0.1 or greater."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerWeaponDefenseModifier",
    "hash": "0x2D83BC011CA14A3C",
    "code": "-- SET_PLAYER_WEAPON_DEFENSE_MODIFIER\nSetPlayerWeaponDefenseModifier(\n\tplayer --[[ Player ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPlayerWeaponDefenseModifier_2",
    "hash": "0xBCFDE9EDE4CF27DC",
    "code": "-- _SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2\nSetPlayerWeaponDefenseModifier_2(\n\tplayer --[[ Player ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPoliceIgnorePlayer",
    "hash": "0x32C62AA929C2DA6A",
    "code": "-- SET_POLICE_IGNORE_PLAYER\nSetPoliceIgnorePlayer(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The player will be ignored by the police if toggle is set to true"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetPoliceRadarBlips",
    "hash": "0x43286D561B72B8BF",
    "code": "-- SET_POLICE_RADAR_BLIPS\nSetPoliceRadarBlips(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If toggle is set to false:\n The police won't be shown on the (mini)map\nIf toggle is set to true:\n The police will be shown on the (mini)map"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetRunSprintMultiplierForPlayer",
    "hash": "0x6DB47AA77FD94E09",
    "code": "-- SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER\nSetRunSprintMultiplierForPlayer(\n\tplayer --[[ Player ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.  \nJust call it one time, it is not required to be called once every tick.  \nNote: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.  \nIt is not possible to \"decrease\" speed. Anything below 1 will be ignored."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetSpecialAbility",
    "hash": "0xB214D570EAD7F81A",
    "code": "-- _SET_SPECIAL_ABILITY\nSetSpecialAbility(\n\tplayer --[[ Player ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetSpecialAbilityMultiplier",
    "hash": "0xA49C426ED0CA4AB7",
    "code": "-- SET_SPECIAL_ABILITY_MULTIPLIER\nSetSpecialAbilityMultiplier(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetSwimMultiplierForPlayer",
    "hash": "0xA91C6F0FF7D16A13",
    "code": "-- SET_SWIM_MULTIPLIER_FOR_PLAYER\nSetSwimMultiplierForPlayer(\n\tplayer --[[ Player ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Swim speed multiplier.  \nMultiplier goes up to 1.49  \nJust call it one time, it is not required to be called once every tick. - Note copied from below native.  \nNote: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetWantedLevelDifficulty",
    "hash": "0x9B0BB33B04405E7A",
    "code": "-- SET_WANTED_LEVEL_DIFFICULTY\nSetWantedLevelDifficulty(\n\tplayer --[[ Player ]], \n\tdifficulty --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Max value is 1.0"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetWantedLevelHiddenEvasionTime",
    "hash": "0x49B856B1360C47C7",
    "code": "-- _SET_WANTED_LEVEL_HIDDEN_EVASION_TIME\nSetWantedLevelHiddenEvasionTime(\n\tplayer --[[ Player ]], \n\twantedLevel --[[ integer ]], \n\tlossTime --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SetWantedLevelMultiplier",
    "hash": "0x020E5F00CDA207BA",
    "code": "-- SET_WANTED_LEVEL_MULTIPLIER\nSetWantedLevelMultiplier(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SimulatePlayerInputGait",
    "hash": "0x477D5D63E63ECA5D",
    "code": "-- SIMULATE_PLAYER_INPUT_GAIT\nSimulatePlayerInputGait(\n\tplayer --[[ Player ]], \n\tamount --[[ number ]], \n\tgaitType --[[ integer ]], \n\trotationSpeed --[[ number ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [
      "player: \n\nThe player to target (always your local player id).",
      "amount: \n\nFor game pads, using anything less than 1.0 will make it partially press analog controls (like sticks/triggers).",
      "gaitType: \n\nValue in increments of 100's. 2000, 500, 300, 200, etc. Set to -1 if you want your ped to walk forever.",
      "rotationSpeed: \n\nDetermines the counterclockwise rotation angle when walking.",
      "p4: \n\nAlways true",
      "p5: \n\nAlways false"
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player to target (always your local player id).\n\namount: \n\nFor game pads, using anything less than 1.0 will make it partially press analog controls (like sticks/triggers).\n\ngaitType: \n\nValue in increments of 100's. 2000, 500, 300, 200, etc. Set to -1 if you want your ped to walk forever.\n\nrotationSpeed: \n\nDetermines the counterclockwise rotation angle when walking.\n\np4: \n\nAlways true\n\np5: \n\nAlways false\n\nThis is to make the player walk without accepting input.\n\nCall this native every frame so you can control the direction of your ped."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityActivate",
    "hash": "0x821FDC827D6F4090",
    "code": "-- _SPECIAL_ABILITY_ACTIVATE\nSpecialAbilityActivate(\n\tplayer --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityChargeAbsolute",
    "hash": "0xB7B0870EB531D08D",
    "code": "-- SPECIAL_ABILITY_CHARGE_ABSOLUTE\nSpecialAbilityChargeAbsolute(\n\tplayer --[[ Player ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 appears as 5, 10, 15, 25, or 30. p2 is always true.\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityChargeContinuous",
    "hash": "0xED481732DFF7E997",
    "code": "-- SPECIAL_ABILITY_CHARGE_CONTINUOUS\nSpecialAbilityChargeContinuous(\n\tplayer --[[ Player ]], \n\tp2 --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 appears to always be 1 (only comes up twice)\nNativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityChargeLarge",
    "hash": "0xF733F45FA4497D93",
    "code": "-- SPECIAL_ABILITY_CHARGE_LARGE\nSpecialAbilityChargeLarge(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "2 matches. p1 was always true.\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityChargeMedium",
    "hash": "0xF113E3AA9BC54613",
    "code": "-- SPECIAL_ABILITY_CHARGE_MEDIUM\nSpecialAbilityChargeMedium(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only 1 match. Both p1 & p2 were true.\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityChargeNormalized",
    "hash": "0xA0696A65F009EE18",
    "code": "-- SPECIAL_ABILITY_CHARGE_NORMALIZED\nSpecialAbilityChargeNormalized(\n\tplayer --[[ Player ]], \n\tnormalizedValue --[[ number ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "normalizedValue is from 0.0 - 1.0\np2 is always 1\n\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityChargeOnMissionFailed",
    "hash": "0xC9A763D8FE87436A",
    "code": "-- SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED\nSpecialAbilityChargeOnMissionFailed(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityChargeSmall",
    "hash": "0x2E7B9B683481687D",
    "code": "-- SPECIAL_ABILITY_CHARGE_SMALL\nSpecialAbilityChargeSmall(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Every occurrence of p1 & p2 were both true.\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityDeactivate",
    "hash": "0xD6A953C6D1492057",
    "code": "-- SPECIAL_ABILITY_DEACTIVATE\nSpecialAbilityDeactivate(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityDeactivateFast",
    "hash": "0x9CB5CE07A3968D5A",
    "code": "-- SPECIAL_ABILITY_DEACTIVATE_FAST\nSpecialAbilityDeactivateFast(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityDeplete",
    "hash": "0x17F7471EACA78290",
    "code": "-- _SPECIAL_ABILITY_DEPLETE\nSpecialAbilityDeplete(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityDepleteMeter",
    "hash": "0x1D506DBBBC51E64B",
    "code": "-- SPECIAL_ABILITY_DEPLETE_METER\nSpecialAbilityDepleteMeter(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 was always true.\nNativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityFillMeter",
    "hash": "0x3DACA8DDC6FD4980",
    "code": "-- SPECIAL_ABILITY_FILL_METER\nSpecialAbilityFillMeter(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Also known as _RECHARGE_SPECIAL_ABILITY\nNativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityLock",
    "hash": "0x6A09D0D590A47D13",
    "code": "-- SPECIAL_ABILITY_LOCK\nSpecialAbilityLock(\n\tplayerModel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityReset",
    "hash": "0x375F0E738F861A94",
    "code": "-- SPECIAL_ABILITY_RESET\nSpecialAbilityReset(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SpecialAbilityUnlock",
    "hash": "0xF145F3BE2EFA9A3B",
    "code": "-- SPECIAL_ABILITY_UNLOCK\nSpecialAbilityUnlock(\n\tplayerModel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "StartFiringAmnesty",
    "hash": "0xBF9BD71691857E48",
    "code": "-- START_FIRING_AMNESTY\nStartFiringAmnesty(\n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "StartPlayerTeleport",
    "hash": "0xAD15F075A4DA0FDE",
    "code": "-- START_PLAYER_TELEPORT\nStartPlayerTeleport(\n\tplayer --[[ Player ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\tteleportWithVehicle --[[ boolean ]], \n\tfindCollisionLand --[[ boolean ]], \n\tp7 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Teleports the player to the given coordinates.\n\nIf findCollisionLand is true it will try to find the Z value for you, this however has a timeout of 100 frames.\n\nWhen trying to find the Z value the native will take longer the higher the difference from the given Z to the ground, this combined with the timeout can cause the teleport to just teleport to the given Z value, so try to estimate the z value, so don't just pass in 1000.0.\n\nAlso if you're in a vehicle and teleportWithVehicle is true it will not find the Z value for you."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "StopPlayerTeleport",
    "hash": "0xC449EDED9D73009C",
    "code": "-- STOP_PLAYER_TELEPORT\nStopPlayerTeleport()",
    "parameters": [],
    "returns": [],
    "description": "Disables the player's teleportation"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "SuppressCrimeThisFrame",
    "hash": "0x9A987297ED8BD838",
    "code": "-- SUPPRESS_CRIME_THIS_FRAME\nSuppressCrimeThisFrame(\n\tplayer --[[ Player ]], \n\tcrimeType --[[ integer ]]\n)",
    "parameters": [
      "player: \n\nThe player we are suppressing the crime for.",
      "crimeType: \n\nThe crime to suppress, see REPORT_CRIME for available types."
    ],
    "returns": [],
    "description": "Parameters:\n\nplayer: \n\nThe player we are suppressing the crime for.\n\ncrimeType: \n\nThe crime to suppress, see REPORT_CRIME for available types.\n\nSuppresses a crime for a given player for this frame only.\n\nNote: This native needs to be executed inside a thread if a crime is meant to be suppressed for a given amount of time."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "UpdatePlayerTeleport",
    "hash": "0xE23D5873C2394C61",
    "code": "-- _UPDATE_PLAYER_TELEPORT\nlocal retval --[[ boolean ]] =\n\tUpdatePlayerTeleport(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x0032a6dba562c518",
    "hash": "0x0032A6DBA562C518",
    "code": "-- 0x0032A6DBA562C518\nN_0x0032a6dba562c518()",
    "parameters": [],
    "returns": [],
    "description": "2 matches in 1 script - am_hold_up\nUsed in multiplayer scripts?"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x237440e46d918649",
    "hash": "0x237440E46D918649",
    "code": "-- 0x237440E46D918649\nN_0x237440e46d918649(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x2382ab11450ae7ba",
    "hash": "0x2382AB11450AE7BA",
    "code": "-- 0x2382AB11450AE7BA\nN_0x2382ab11450ae7ba(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x2f41a3bae005e5fa",
    "hash": "0x2F41A3BAE005E5FA",
    "code": "-- 0x2F41A3BAE005E5FA\nN_0x2f41a3bae005e5fa(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x2f7ceb6520288061",
    "hash": "0x2F7CEB6520288061",
    "code": "-- 0x2F7CEB6520288061\nN_0x2f7ceb6520288061(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used with radios:\nvoid sub_cf383(auto _a0) {\n    if ((a_0)==1) {\n        if (MISC::IS_BIT_SET((g_240005._f1), 3)) {\n            PLAYER::_2F7CEB6520288061(0);\n            AUDIO::SET_AUDIO_FLAG(\"AllowRadioDuringSwitch\", 0);\n            AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);\n            AUDIO::SET_AUDIO_FLAG(\"MobileRadioInGame\", 0);\n        }\n        sub_cf3f6(1);\n    } else {\n        if (MISC::IS_BIT_SET((g_240005._f1), 3)) {\n            PLAYER::_2F7CEB6520288061(1);\n            AUDIO::SET_AUDIO_FLAG(\"AllowRadioDuringSwitch\", 1);\n            AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);\n            AUDIO::SET_AUDIO_FLAG(\"MobileRadioInGame\", 1);\n        }\n        sub_cf3f6(0);\n    }\n}\nSET_PLAYER_S*"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x31e90b8873a4cd3b",
    "hash": "0x31E90B8873A4CD3B",
    "code": "-- 0x31E90B8873A4CD3B\nN_0x31e90b8873a4cd3b(\n\tplayer --[[ Player ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x36f1b38855f2a8df",
    "hash": "0x36F1B38855F2A8DF",
    "code": "-- 0x36F1B38855F2A8DF\nN_0x36f1b38855f2a8df(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x4669b3ed80f24b4e",
    "hash": "0x4669B3ED80F24B4E",
    "code": "-- 0x4669B3ED80F24B4E\nN_0x4669b3ed80f24b4e(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This has been found in use in the decompiled files."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x5501b7a5cdb79d37",
    "hash": "0x5501B7A5CDB79D37",
    "code": "-- 0x5501B7A5CDB79D37\nN_0x5501b7a5cdb79d37(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Name between DISABLE_ALL_CONTROL_ACTIONS and DISABLE_CONTROL_ACTION"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x55fcc0c390620314",
    "hash": "0x55FCC0C390620314",
    "code": "-- 0x55FCC0C390620314\nN_0x55fcc0c390620314(\n\tplayer1 --[[ Player ]], \n\tplayer2 --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x690a61a6d13583f6",
    "hash": "0x690A61A6D13583F6",
    "code": "-- 0x690A61A6D13583F6\nlocal retval --[[ boolean ]] =\n\tN_0x690a61a6d13583f6(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "IS_*"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x6e4361ff3e8cd7ca",
    "hash": "0x6E4361FF3E8CD7CA",
    "code": "-- 0x6E4361FF3E8CD7CA\nlocal retval --[[ Any ]] =\n\tN_0x6e4361ff3e8cd7ca(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x70a382adec069dd3",
    "hash": "0x70A382ADEC069DD3",
    "code": "-- 0x70A382ADEC069DD3\nN_0x70a382adec069dd3(\n\tcoordX --[[ number ]], \n\tcoordY --[[ number ]], \n\tcoordZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x7148e0f43d11f0d9",
    "hash": "0x7148E0F43D11F0D9",
    "code": "-- 0x7148E0F43D11F0D9\nN_0x7148e0f43d11f0d9()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x7bae68775557ae0b",
    "hash": "0x7BAE68775557AE0B",
    "code": "-- 0x7BAE68775557AE0B\nN_0x7bae68775557ae0b(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x7e07c78925d5fd96",
    "hash": "0x7E07C78925D5FD96",
    "code": "-- 0x7E07C78925D5FD96\nlocal retval --[[ Any ]] =\n\tN_0x7e07c78925d5fd96(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x823ec8e82ba45986",
    "hash": "0x823EC8E82BA45986",
    "code": "-- 0x823EC8E82BA45986\nN_0x823ec8e82ba45986(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x8d768602adef2245",
    "hash": "0x8D768602ADEF2245",
    "code": "-- 0x8D768602ADEF2245\nN_0x8d768602adef2245(\n\tplayer --[[ Player ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_PLAYER_MAX_*"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x9097eb6d4bb9a12a",
    "hash": "0x9097EB6D4BB9A12A",
    "code": "-- 0x9097EB6D4BB9A12A\nN_0x9097eb6d4bb9a12a(\n\tplayer --[[ Player ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "ADD_*\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x9edd76e87d5d51ba",
    "hash": "0x9EDD76E87D5D51BA",
    "code": "-- 0x9EDD76E87D5D51BA\nN_0x9edd76e87d5d51ba(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0x9f260bfb59adbca3",
    "hash": "0x9F260BFB59ADBCA3",
    "code": "-- 0x9F260BFB59ADBCA3\nN_0x9f260bfb59adbca3(\n\tplayer --[[ Player ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REMOVE_*\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xad73ce5a09e42d12",
    "hash": "0xAD73CE5A09E42D12",
    "code": "-- 0xAD73CE5A09E42D12\nN_0xad73ce5a09e42d12(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This has been found in use in the decompiled files."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xb45eff719d8427a6",
    "hash": "0xB45EFF719D8427A6",
    "code": "-- 0xB45EFF719D8427A6\nN_0xb45eff719d8427a6(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation\n***\nIn \"am_hold_up.ysc\" used once:\nl_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);\nPLAYER::_B45EFF719D8427A6((l_8d._f47));"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xb885852c39cc265d",
    "hash": "0xB885852C39CC265D",
    "code": "-- 0xB885852C39CC265D\nN_0xb885852c39cc265d()",
    "parameters": [],
    "returns": [],
    "description": "Disables something. Used only once in R* scripts (freemode.ysc).\nDISABLE_PLAYER_*"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xb9cf1f793a9f1bf1",
    "hash": "0xB9CF1F793A9F1BF1",
    "code": "-- 0xB9CF1F793A9F1BF1\nlocal retval --[[ boolean ]] =\n\tN_0xb9cf1f793a9f1bf1()",
    "parameters": [],
    "returns": [],
    "description": "Returns profile setting 237.\nGET_*"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xbc9490ca15aea8fb",
    "hash": "0xBC9490CA15AEA8FB",
    "code": "-- 0xBC9490CA15AEA8FB\nN_0xbc9490ca15aea8fb(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Seems to only appear in scripts used in Singleplayer.  \nAlways used like this in scripts  \nPLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xc3376f42b1faccc6",
    "hash": "0xC3376F42B1FACCC6",
    "code": "-- 0xC3376F42B1FACCC6\nN_0xc3376f42b1faccc6(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "- This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xcac57395b151135f",
    "hash": "0xCAC57395B151135F",
    "code": "-- 0xCAC57395B151135F\nN_0xcac57395b151135f(\n\tplayer --[[ Player ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Found in \"director_mode\", \"fm_bj_race_controler\", \"fm_deathmatch_controler\", \"fm_impromptu_dm_controler\", \"fm_race_controler\", \"gb_deathmatch\"."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xcb645e85e97ea48b",
    "hash": "0xCB645E85E97EA48B",
    "code": "-- 0xCB645E85E97EA48B\nlocal retval --[[ boolean ]] =\n\tN_0xcb645e85e97ea48b()",
    "parameters": [],
    "returns": [],
    "description": "Returns profile setting 243.\nGET_*"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xd821056b9acf8052",
    "hash": "0xD821056B9ACF8052",
    "code": "-- 0xD821056B9ACF8052\nN_0xd821056b9acf8052(\n\tplayer --[[ Player ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xdcc07526b8ec45af",
    "hash": "0xDCC07526B8EC45AF",
    "code": "-- 0xDCC07526B8EC45AF\nlocal retval --[[ boolean ]] =\n\tN_0xdcc07526b8ec45af(\n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Always returns false.\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xdd2620b7b9d16ff1",
    "hash": "0xDD2620B7B9D16FF1",
    "code": "-- 0xDD2620B7B9D16FF1\nlocal retval --[[ boolean ]] =\n\tN_0xdd2620b7b9d16ff1(\n\t\tplayer --[[ Player ]], \n\t\tp1 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f."
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xde45d1a1ef45ee61",
    "hash": "0xDE45D1A1EF45EE61",
    "code": "-- 0xDE45D1A1EF45EE61\nN_0xde45d1a1ef45ee61(\n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xfac75988a7d078d3",
    "hash": "0xFAC75988A7D078D3",
    "code": "-- 0xFAC75988A7D078D3\nN_0xfac75988a7d078d3(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: PLAYER",
    "apiset": "API set: client",
    "name": "N_0xffee8fa29ab9a18e",
    "hash": "0xFFEE8FA29AB9A18E",
    "code": "-- 0xFFEE8FA29AB9A18E\nN_0xffee8fa29ab9a18e(\n\tplayer --[[ Player ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "DisableRockstarEditorCameraChanges",
    "hash": "0xAF66DCEE6609B148",
    "code": "-- _DISABLE_ROCKSTAR_EDITOR_CAMERA_CHANGES\nDisableRockstarEditorCameraChanges()",
    "parameters": [],
    "returns": [],
    "description": "This will disable the ability to make camera changes in R* Editor."
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "IsRecording",
    "hash": "0x1897CA71995A90B4",
    "code": "-- _IS_RECORDING\nlocal retval --[[ boolean ]] =\n\tIsRecording()",
    "parameters": [],
    "returns": [
      "Whether recording is currently running, true when you start recording (F1) or turn on action replay (F2)"
    ],
    "description": "Returns:\n\nWhether recording is currently running, true when you start recording (F1) or turn on action replay (F2)\n\nChecks if you're recording."
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "SaveRecordingClip",
    "hash": "0x644546EC5287471B",
    "code": "-- _SAVE_RECORDING_CLIP\nlocal retval --[[ boolean ]] =\n\tSaveRecordingClip()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "StartRecording",
    "hash": "0xC3AC2FFF9612AC81",
    "code": "-- _START_RECORDING\nStartRecording(\n\tmode --[[ integer ]]\n)",
    "parameters": [
      "mode: \n\n0 turns on action replay, 1 starts recording"
    ],
    "returns": [],
    "description": "Parameters:\n\nmode: \n\n0 turns on action replay, 1 starts recording\n\nStarts recording a replay.\\ If already recording a replay, does nothing."
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "StopRecordingAndDiscardClip",
    "hash": "0x88BB3507ED41A240",
    "code": "-- _STOP_RECORDING_AND_DISCARD_CLIP\nStopRecordingAndDiscardClip()",
    "parameters": [],
    "returns": [],
    "description": "Stops recording and discards the recorded clip."
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "StopRecordingAndSaveClip",
    "hash": "0x071A5197D6AFC8B3",
    "code": "-- _STOP_RECORDING_AND_SAVE_CLIP\nStopRecordingAndSaveClip()",
    "parameters": [],
    "returns": [],
    "description": "Stops recording and saves the recorded clip."
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "StopRecordingThisFrame",
    "hash": "0xEB2D525B57F42B40",
    "code": "-- _STOP_RECORDING_THIS_FRAME\nStopRecordingThisFrame()",
    "parameters": [],
    "returns": [],
    "description": "Disable recording for this frame only."
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x13b350b8ad0eee10",
    "hash": "0x13B350B8AD0EEE10",
    "code": "-- 0x13B350B8AD0EEE10\nN_0x13b350b8ad0eee10()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x208784099002bc30",
    "hash": "0x208784099002BC30",
    "code": "-- 0x208784099002BC30\nN_0x208784099002bc30(\n\tmissionNameLabel --[[ string ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "-This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -  \nfirst one seems to be a string of a mission name, second one seems to be a bool/toggle  \np1 was always 0."
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x293220da1b46cebc",
    "hash": "0x293220DA1B46CEBC",
    "code": "-- 0x293220DA1B46CEBC\nN_0x293220da1b46cebc(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x33d47e85b476abcd",
    "hash": "0x33D47E85B476ABCD",
    "code": "-- 0x33D47E85B476ABCD\nlocal retval --[[ boolean ]] =\n\tN_0x33d47e85b476abcd(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x4282e08174868be3",
    "hash": "0x4282E08174868BE3",
    "code": "-- 0x4282E08174868BE3\nlocal retval --[[ Any ]] =\n\tN_0x4282e08174868be3()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x48621c9fca3ebd28",
    "hash": "0x48621C9FCA3EBD28",
    "code": "-- 0x48621C9FCA3EBD28\nN_0x48621c9fca3ebd28(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x66972397e0757e7a",
    "hash": "0x66972397E0757E7A",
    "code": "-- 0x66972397E0757E7A\nN_0x66972397e0757e7a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0x81cbae94390f9f89",
    "hash": "0x81CBAE94390F9F89",
    "code": "-- 0x81CBAE94390F9F89\nN_0x81cbae94390f9f89()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0xdf4b952f7d381b95",
    "hash": "0xDF4B952F7D381B95",
    "code": "-- 0xDF4B952F7D381B95\nlocal retval --[[ Any ]] =\n\tN_0xdf4b952f7d381b95()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: RECORDING",
    "apiset": "API set: client",
    "name": "N_0xf854439efbb3b583",
    "hash": "0xF854439EFBB3B583",
    "code": "-- 0xF854439EFBB3B583\nN_0xf854439efbb3b583()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: REPLAY",
    "apiset": "API set: client",
    "name": "ActivateRockstarEditor",
    "hash": "0x49DA8145672B2725",
    "code": "-- _ACTIVATE_ROCKSTAR_EDITOR\nActivateRockstarEditor()",
    "parameters": [],
    "returns": [],
    "description": "Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.\n\nNativeDB Added Parameter 1: int p0"
  },
  {
    "namespace": "Namespace: REPLAY",
    "apiset": "API set: client",
    "name": "IsInteriorRenderingDisabled",
    "hash": "0x95AB8B5C992C7B58",
    "code": "-- _IS_INTERIOR_RENDERING_DISABLED\nlocal retval --[[ boolean ]] =\n\tIsInteriorRenderingDisabled()",
    "parameters": [],
    "returns": [],
    "description": "Returns a bool if interior rendering is disabled, if yes, all \"normal\" rendered interiors are invisible"
  },
  {
    "namespace": "Namespace: REPLAY",
    "apiset": "API set: client",
    "name": "ResetEditorValues",
    "hash": "0x3353D13F09307691",
    "code": "-- _RESET_EDITOR_VALUES\nResetEditorValues()",
    "parameters": [],
    "returns": [],
    "description": "Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0."
  },
  {
    "namespace": "Namespace: REPLAY",
    "apiset": "API set: client",
    "name": "N_0x5ad3932daeb1e5d3",
    "hash": "0x5AD3932DAEB1E5D3",
    "code": "-- 0x5AD3932DAEB1E5D3\nN_0x5ad3932daeb1e5d3()",
    "parameters": [],
    "returns": [],
    "description": "Disables some other rendering (internal)"
  },
  {
    "namespace": "Namespace: REPLAY",
    "apiset": "API set: client",
    "name": "N_0x7e2bd3ef6c205f09",
    "hash": "0x7E2BD3EF6C205F09",
    "code": "-- 0x7E2BD3EF6C205F09\nN_0x7e2bd3ef6c205f09(\n\tp0 --[[ string ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub\n\nSomething to do with phone cameras.  \nstartup.c4:  \nvoid sub_2a3d() {  \n    UNK2::_7E2BD3EF6C205F09(\"No_Filter\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam1\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam2\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam3\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam4\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam5\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam6\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam7\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam9\", 1);  \n    UNK2::_7E2BD3EF6C205F09(\"phone_cam12\", 0);  \n}"
  },
  {
    "namespace": "Namespace: REPLAY",
    "apiset": "API set: client",
    "name": "N_0xe058175f8eafe79a",
    "hash": "0xE058175F8EAFE79A",
    "code": "-- 0xE058175F8EAFE79A\nN_0xe058175f8eafe79a(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SAVEMIGRATION",
    "apiset": "API set: client",
    "name": "N_0x690b76bd2763e068",
    "hash": "0x690B76BD2763E068",
    "code": "-- 0x690B76BD2763E068\nlocal retval --[[ Any ]] =\n\tN_0x690b76bd2763e068()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: SAVEMIGRATION",
    "apiset": "API set: client",
    "name": "N_0x84b418e93894ac1c",
    "hash": "0x84B418E93894AC1C",
    "code": "-- 0x84B418E93894AC1C\nlocal retval --[[ Any ]] =\n\tN_0x84b418e93894ac1c()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: SAVEMIGRATION",
    "apiset": "API set: client",
    "name": "N_0xe5e9746a66359f9d",
    "hash": "0xE5E9746A66359F9D",
    "code": "-- 0xE5E9746A66359F9D\nlocal retval --[[ Any ]] =\n\tN_0xe5e9746a66359f9d()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "BgEndContext",
    "hash": "0xDC2BACD920D0A0DD",
    "code": "-- BG_END_CONTEXT\nBgEndContext(\n\tcontextName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Deletes the given context from the background scripts context map.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "BgEndContextHash",
    "hash": "0x107E5CC7CA942BC1",
    "code": "-- BG_END_CONTEXT_HASH\nBgEndContextHash(\n\tcontextHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hashed version of 0xDC2BACD920D0A0DD.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "BgStartContext",
    "hash": "0x9D5A25BADB742ACD",
    "code": "-- BG_START_CONTEXT\nBgStartContext(\n\tcontextName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Inserts the given context into the background scripts context map.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "BgStartContextHash",
    "hash": "0x75B18E49607874C7",
    "code": "-- BG_START_CONTEXT_HASH\nBgStartContextHash(\n\tcontextHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hashed version of 0x9D5A25BADB742ACD.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "DoesScriptExist",
    "hash": "0xFC04745FBE67C19A",
    "code": "-- DOES_SCRIPT_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesScriptExist(\n\t\tscriptName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "DoesScriptWithNameHashExist",
    "hash": "0xF86AA3C56BA31381",
    "code": "-- DOES_SCRIPT_WITH_NAME_HASH_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesScriptWithNameHashExist(\n\t\tscriptHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetEventAtIndex",
    "hash": "0xD8F66A3A60C62153",
    "code": "-- GET_EVENT_AT_INDEX\nlocal retval --[[ integer ]] =\n\tGetEventAtIndex(\n\t\teventGroup --[[ integer ]], \n\t\teventIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetEventData",
    "hash": "0x2902843FCD2B2D79",
    "code": "-- GET_EVENT_DATA\nlocal retval --[[ boolean ]], eventData --[[ integer ]] =\n\tGetEventData(\n\t\teventGroup --[[ integer ]], \n\t\teventIndex --[[ integer ]], \n\t\teventDataSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)\nNote: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!)."
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetEventExists",
    "hash": "0x936E6168A9BCEDB5",
    "code": "-- GET_EVENT_EXISTS\nlocal retval --[[ boolean ]] =\n\tGetEventExists(\n\t\teventGroup --[[ integer ]], \n\t\teventIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetHashOfThisScriptName",
    "hash": "0x8A1C8B1738FFE87E",
    "code": "-- GET_HASH_OF_THIS_SCRIPT_NAME\nlocal retval --[[ Hash ]] =\n\tGetHashOfThisScriptName()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetIdOfThisThread",
    "hash": "0xC30338E8088E2E21",
    "code": "-- GET_ID_OF_THIS_THREAD\nlocal retval --[[ integer ]] =\n\tGetIdOfThisThread()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetNameOfThread",
    "hash": "0x05A42BA9FC8DA96B",
    "code": "-- _GET_NAME_OF_THREAD\nlocal retval --[[ string ]] =\n\tGetNameOfThread(\n\t\tthreadId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetNoLoadingScreen",
    "hash": "0x18C1270EA7F199BC",
    "code": "-- GET_NO_LOADING_SCREEN\nlocal retval --[[ boolean ]] =\n\tGetNoLoadingScreen()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetNumberOfEvents",
    "hash": "0x5F92A689A06620AA",
    "code": "-- GET_NUMBER_OF_EVENTS\nlocal retval --[[ integer ]] =\n\tGetNumberOfEvents(\n\t\teventGroup --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetNumberOfReferencesOfScriptWithNameHash",
    "hash": "0x2C83A9DA6BFFC4F9",
    "code": "-- _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH\nlocal retval --[[ integer ]] =\n\tGetNumberOfReferencesOfScriptWithNameHash(\n\t\tscriptHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the number of instances of the specified script is currently running.\nActually returns numRefs - 1.\nif (program)\n\tv3 = rage::scrProgram::GetNumRefs(program) - 1;\nreturn v3;"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "GetThisScriptName",
    "hash": "0x442E0A7EDE4A738A",
    "code": "-- GET_THIS_SCRIPT_NAME\nlocal retval --[[ string ]] =\n\tGetThisScriptName()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "HasScriptLoaded",
    "hash": "0xE6CC9F3BA0FB9EF1",
    "code": "-- HAS_SCRIPT_LOADED\nlocal retval --[[ boolean ]] =\n\tHasScriptLoaded(\n\t\tscriptName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting."
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "HasScriptWithNameHashLoaded",
    "hash": "0x5F0F0C783EB16C04",
    "code": "-- HAS_SCRIPT_WITH_NAME_HASH_LOADED\nlocal retval --[[ boolean ]] =\n\tHasScriptWithNameHashLoaded(\n\t\tscriptHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "IsThreadActive",
    "hash": "0x46E9AE36D8FA6417",
    "code": "-- IS_THREAD_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsThreadActive(\n\t\tthreadId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "LockLoadingScreenButtons",
    "hash": "0xB1577667C3708F9B",
    "code": "-- _LOCK_LOADING_SCREEN_BUTTONS\nLockLoadingScreenButtons()",
    "parameters": [],
    "returns": [],
    "description": "Updates the display of the MP/SP loading buttons, and locks the state so that other options are not displayed or changed. This can only be done once."
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "RequestScript",
    "hash": "0x6EB5F71AA68F2E8E",
    "code": "-- REQUEST_SCRIPT\nRequestScript(\n\tscriptName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "RequestScriptWithNameHash",
    "hash": "0xD62A67D26D9653E6",
    "code": "-- REQUEST_SCRIPT_WITH_NAME_HASH\nRequestScriptWithNameHash(\n\tscriptHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "formerly _REQUEST_STREAMED_SCRIPT"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "ScriptThreadIteratorGetNextThreadId",
    "hash": "0x30B4FA1C82DD4B9F",
    "code": "-- SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID\nlocal retval --[[ integer ]] =\n\tScriptThreadIteratorGetNextThreadId()",
    "parameters": [],
    "returns": [],
    "description": "If the function returns 0, the end of the iteration has been reached."
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "ScriptThreadIteratorReset",
    "hash": "0xDADFADA5A20143A8",
    "code": "-- SCRIPT_THREAD_ITERATOR_RESET\nScriptThreadIteratorReset()",
    "parameters": [],
    "returns": [],
    "description": "Starts a new iteration of the current threads. Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "SetNoLoadingScreen",
    "hash": "0x5262CC1995D07E09",
    "code": "-- SET_NO_LOADING_SCREEN\nSetNoLoadingScreen(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "SetScriptAsNoLongerNeeded",
    "hash": "0xC90D2DCACD56184C",
    "code": "-- SET_SCRIPT_AS_NO_LONGER_NEEDED\nSetScriptAsNoLongerNeeded(\n\tscriptName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "SetScriptWithNameHashAsNoLongerNeeded",
    "hash": "0xC5BC038960E9DB27",
    "code": "-- SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED\nSetScriptWithNameHashAsNoLongerNeeded(\n\tscriptHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "ShutdownLoadingScreen",
    "hash": "0x078EBE9809CCD637",
    "code": "-- SHUTDOWN_LOADING_SCREEN\nShutdownLoadingScreen()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "TerminateThisThread",
    "hash": "0x1090044AD1DA76FA",
    "code": "-- TERMINATE_THIS_THREAD\nTerminateThisThread()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "TerminateThread",
    "hash": "0xC8B189ED9138BCD4",
    "code": "-- TERMINATE_THREAD\nTerminateThread(\n\tthreadId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "TriggerScriptEvent",
    "hash": "0x5AE99C571D5BBE5D",
    "code": "-- TRIGGER_SCRIPT_EVENT\nlocal eventData --[[ integer ]] =\n\tTriggerScriptEvent(\n\t\teventGroup --[[ integer ]], \n\t\teventDataSize --[[ integer ]], \n\t\tplayerBits --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)\nNote: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).\nplayerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players."
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "TriggerScriptEvent_2",
    "hash": "0xA40CC53DF8E50837",
    "code": "-- _TRIGGER_SCRIPT_EVENT_2\nlocal eventData --[[ integer ]] =\n\tTriggerScriptEvent_2(\n\t\teventGroup --[[ integer ]], \n\t\teventDataSize --[[ integer ]], \n\t\tplayerBits --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See TRIGGER_SCRIPT_EVENT"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "N_0x0f6f1ebbc4e1d5e6",
    "hash": "0x0F6F1EBBC4E1D5E6",
    "code": "-- 0x0F6F1EBBC4E1D5E6\nlocal retval --[[ boolean ]] =\n\tN_0x0f6f1ebbc4e1d5e6(\n\t\tscriptIndex --[[ integer ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "BG_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "N_0x22e21fbcfc88c149",
    "hash": "0x22E21FBCFC88C149",
    "code": "-- 0x22E21FBCFC88C149\nlocal retval --[[ integer ]] =\n\tN_0x22e21fbcfc88c149(\n\t\tscriptIndex --[[ integer ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "BG_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "N_0x760910b49d2b98ea",
    "hash": "0x760910B49D2B98EA",
    "code": "-- 0x760910B49D2B98EA\nN_0x760910b49d2b98ea()",
    "parameters": [],
    "returns": [],
    "description": "Sets bit 1 in GtaThread+0x154\n\nBG_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "N_0x829cd22e043a2577",
    "hash": "0x829CD22E043A2577",
    "code": "-- 0x829CD22E043A2577\nlocal retval --[[ integer ]] =\n\tN_0x829cd22e043a2577(\n\t\tp0 --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "BG_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SCRIPT",
    "apiset": "API set: client",
    "name": "N_0x836b62713e0534ca",
    "hash": "0x836B62713E0534CA",
    "code": "-- 0x836B62713E0534CA\nlocal retval --[[ boolean ]] =\n\tN_0x836b62713e0534ca()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if bit 0 in GtaThread+0x154 is set.\n\nBG_*\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "GetShapeTestResult",
    "hash": "0x3D87450E15D98694",
    "code": "-- GET_SHAPE_TEST_RESULT\nlocal retval --[[ integer ]], hit --[[ boolean ]], endCoords --[[ vector3 ]], surfaceNormal --[[ vector3 ]], entityHit --[[ Entity ]] =\n\tGetShapeTestResult(\n\t\tshapeTestHandle --[[ integer ]]\n\t)",
    "parameters": [
      "shapeTestHandle: \n\nA shape test handle.",
      "hit: \n\nWhether or not the shape test hit any collisions.",
      "endCoords: \n\nThe resulting coordinates where the shape test hit a collision.",
      "surfaceNormal: \n\nThe surface normal of the hit position.",
      "entityHit: \n\nAny dynamic entity hit by the shape test."
    ],
    "returns": [
      "0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated."
    ],
    "description": "Parameters:\n\nshapeTestHandle: \n\nA shape test handle.\n\nhit: \n\nWhether or not the shape test hit any collisions.\n\nendCoords: \n\nThe resulting coordinates where the shape test hit a collision.\n\nsurfaceNormal: \n\nThe surface normal of the hit position.\n\nentityHit: \n\nAny dynamic entity hit by the shape test.\n\nReturns:\n\n0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.\n\nReturns the result of a shape test.\n\nWhen used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.\n\nUnless the return value is 2, the other return values are undefined."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "GetShapeTestResultIncludingMaterial",
    "hash": "0x65287525D951F6BE",
    "code": "-- GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL\nlocal retval --[[ integer ]], hit --[[ boolean ]], endCoords --[[ vector3 ]], surfaceNormal --[[ vector3 ]], materialHash --[[ Hash ]], entityHit --[[ Entity ]] =\n\tGetShapeTestResultIncludingMaterial(\n\t\tshapeTestHandle --[[ integer ]]\n\t)",
    "parameters": [
      "shapeTestHandle: \n\nA shape test handle.",
      "hit: \n\nWhether or not the shape test hit any collisions.",
      "endCoords: \n\nThe resulting coordinates where the shape test hit a collision.",
      "surfaceNormal: \n\nThe surface normal of the hit position.",
      "materialHash: \n\nhash of the hit material or surface type, see materialFX.dat",
      "entityHit: \n\nAny dynamic entity hit by the shape test."
    ],
    "returns": [
      "0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated."
    ],
    "description": "Parameters:\n\nshapeTestHandle: \n\nA shape test handle.\n\nhit: \n\nWhether or not the shape test hit any collisions.\n\nendCoords: \n\nThe resulting coordinates where the shape test hit a collision.\n\nsurfaceNormal: \n\nThe surface normal of the hit position.\n\nmaterialHash: \n\nhash of the hit material or surface type, see materialFX.dat\n\nentityHit: \n\nAny dynamic entity hit by the shape test.\n\nReturns:\n\n0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.\n\nReturns the result of a shape test, also returning the material of any touched surface.\n\nWhen used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.\n\nUnless the return value is 2, the other return values are undefined."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "ReleaseScriptGuidFromEntity",
    "hash": "0x2B3334BCA57CD799",
    "code": "-- RELEASE_SCRIPT_GUID_FROM_ENTITY\nReleaseScriptGuidFromEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [
      "entity: \n\nThe entity handle to invalidate."
    ],
    "returns": [],
    "description": "Parameters:\n\nentity: \n\nThe entity handle to invalidate.\n\nInvalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartExpensiveSynchronousShapeTestLosProbe",
    "hash": "0x377906D8A31E5586",
    "code": "-- START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE\nlocal retval --[[ integer ]] =\n\tStartExpensiveSynchronousShapeTestLosProbe(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tflags --[[ integer ]], \n\t\tentity --[[ Entity ]], \n\t\tp8 --[[ integer ]]\n\t)",
    "parameters": [
      "x1: \n\nStarting X coordinate.",
      "y1: \n\nStarting Y coordinate.",
      "z1: \n\nStarting Z coordinate.",
      "x2: \n\nEnding X coordinate.",
      "y2: \n\nEnding Y coordinate.",
      "z2: \n\nEnding Z coordinate.",
      "flags: \n\nSee START_SHAPE_TEST_LOS_PROBE.",
      "entity: \n\nAn entity to ignore, or 0.",
      "p8: \n\nA bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used."
    ],
    "returns": [
      "A shape test handle."
    ],
    "description": "Parameters:\n\nx1: \n\nStarting X coordinate.\n\ny1: \n\nStarting Y coordinate.\n\nz1: \n\nStarting Z coordinate.\n\nx2: \n\nEnding X coordinate.\n\ny2: \n\nEnding Y coordinate.\n\nz2: \n\nEnding Z coordinate.\n\nflags: \n\nSee START_SHAPE_TEST_LOS_PROBE.\n\nentity: \n\nAn entity to ignore, or 0.\n\np8: \n\nA bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.\n\nReturns:\n\nA shape test handle.\n\nDoes the same as START_SHAPE_TEST_LOS_PROBE, except blocking until the shape test completes.\n\nUse START_SHAPE_TEST_LOS_PROBE instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartShapeTestBound",
    "hash": "0x37181417CE7C8900",
    "code": "-- START_SHAPE_TEST_BOUND\nlocal retval --[[ integer ]] =\n\tStartShapeTestBound(\n\t\tentity --[[ Entity ]], \n\t\tflags1 --[[ integer ]], \n\t\tflags2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See START_SHAPE_TEST_LOS_PROBE for flags."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartShapeTestBoundingBox",
    "hash": "0x052837721A854EC7",
    "code": "-- START_SHAPE_TEST_BOUNDING_BOX\nlocal retval --[[ integer ]] =\n\tStartShapeTestBoundingBox(\n\t\tentity --[[ Entity ]], \n\t\tflags1 --[[ integer ]], \n\t\tflags2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See START_SHAPE_TEST_LOS_PROBE for flags."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartShapeTestBox",
    "hash": "0xFE466162C4401D18",
    "code": "-- START_SHAPE_TEST_BOX\nlocal retval --[[ integer ]] =\n\tStartShapeTestBox(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tp9 --[[ integer ]], \n\t\tflags --[[ integer ]], \n\t\tentity --[[ Entity ]], \n\t\tp12 --[[ integer ]]\n\t)",
    "parameters": [
      "x: \n\nStarting X coordinate.",
      "y: \n\nStarting Y coordinate.",
      "z: \n\nStarting Z coordinate.",
      "x1: \n\nEnding X coordinate.",
      "y1: \n\nEnding Y coordinate.",
      "z1: \n\nEnding Z coordinate.",
      "rotX:",
      "rotY:",
      "rotZ:",
      "p9: \n\nUnknown, always 2 or 0",
      "flags: \n\nSee START_SHAPE_TEST_LOS_PROBE",
      "entity:",
      "p12: \n\nA bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used."
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nStarting X coordinate.\n\ny: \n\nStarting Y coordinate.\n\nz: \n\nStarting Z coordinate.\n\nx1: \n\nEnding X coordinate.\n\ny1: \n\nEnding Y coordinate.\n\nz1: \n\nEnding Z coordinate.\n\nrotX:\nrotY:\nrotZ:\np9: \n\nUnknown, always 2 or 0\n\nflags: \n\nSee START_SHAPE_TEST_LOS_PROBE\n\nentity:\np12: \n\nA bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.\n\nFor more information, see START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE and START_SHAPE_TEST_LOS_PROBE."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartShapeTestCapsule",
    "hash": "0x28579D1B8F8AAC80",
    "code": "-- START_SHAPE_TEST_CAPSULE\nlocal retval --[[ integer ]] =\n\tStartShapeTestCapsule(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tflags --[[ integer ]], \n\t\tentity --[[ Entity ]], \n\t\tp9 --[[ integer ]]\n\t)",
    "parameters": [
      "x1: \n\nStarting X coordinate.",
      "y1: \n\nStarting Y coordinate.",
      "z1: \n\nStarting Z coordinate.",
      "x2: \n\nEnding X coordinate.",
      "y2: \n\nEnding Y coordinate.",
      "z2: \n\nEnding Z coordinate.",
      "radius:",
      "flags: \n\nSee START_SHAPE_TEST_LOS_PROBE",
      "entity: \n\nEntity to ignore, or 0.",
      "p9: \n\nA bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used."
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nStarting X coordinate.\n\ny1: \n\nStarting Y coordinate.\n\nz1: \n\nStarting Z coordinate.\n\nx2: \n\nEnding X coordinate.\n\ny2: \n\nEnding Y coordinate.\n\nz2: \n\nEnding Z coordinate.\n\nradius:\nflags: \n\nSee START_SHAPE_TEST_LOS_PROBE\n\nentity: \n\nEntity to ignore, or 0.\n\np9: \n\nA bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.\n\nRaycast from point to point, where the ray has a radius."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartShapeTestLosProbe",
    "hash": "0x7EE9F5D83DD4F90E",
    "code": "-- START_SHAPE_TEST_LOS_PROBE\nlocal retval --[[ integer ]] =\n\tStartShapeTestLosProbe(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\ttraceFlags --[[ integer ]], \n\t\tentity --[[ Entity ]], \n\t\toptionFlags --[[ integer ]]\n\t)",
    "parameters": [
      "x1: \n\nStarting X coordinate.",
      "y1: \n\nStarting Y coordinate.",
      "z1: \n\nStarting Z coordinate.",
      "x2: \n\nEnding X coordinate.",
      "y2: \n\nEnding Y coordinate.",
      "z2: \n\nEnding Z coordinate.",
      "traceFlags: \n\nRefer to eTraceFlags, this defines what the shape test will intersect with",
      "entity: \n\nAn entity to ignore, or 0.",
      "optionFlags: \n\nRefer to eTraceOptionFlags, this defines additional options for the shape test"
    ],
    "returns": [
      "A shape test handle."
    ],
    "description": "Parameters:\n\nx1: \n\nStarting X coordinate.\n\ny1: \n\nStarting Y coordinate.\n\nz1: \n\nStarting Z coordinate.\n\nx2: \n\nEnding X coordinate.\n\ny2: \n\nEnding Y coordinate.\n\nz2: \n\nEnding Z coordinate.\n\ntraceFlags: \n\nRefer to eTraceFlags, this defines what the shape test will intersect with\n\nentity: \n\nAn entity to ignore, or 0.\n\noptionFlags: \n\nRefer to eTraceOptionFlags, this defines additional options for the shape test\n\nReturns:\n\nA shape test handle.\n\nAsynchronously starts a line-of-sight (raycast) world probe shape test.\n\nenum eTraceFlags\n{\n  None = 0,\n  IntersectWorld = 1,\n  IntersectVehicles = 2,\n  IntersectPeds = 4,\n  IntersectRagdolls = 8,\n  IntersectObjects = 16,\n  IntersectPickup = 32,\n  IntersectGlass = 64,\n  IntersectRiver = 128,\n  IntersectFoliage = 256,\n\n  IntersectEverything = 511\n}\n\nenum eTraceOptionFlags\n{\n  None = 0,\n  OptionIgnoreGlass = 1,\n  OptionIgnoreSeeThrough = 2,\n  OptionIgnoreNoCollision = 4,\n\n  OptionDefault = 7\n}\n\n\nNOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.\n\nUse the handle with GET_SHAPE_TEST_RESULT or GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL until it returns 0 or 2."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartShapeTestSurroundingCoords",
    "hash": "0xFF6BE494C7987F34",
    "code": "-- _START_SHAPE_TEST_SURROUNDING_COORDS\nlocal retval --[[ integer ]], pVec1 --[[ vector3 ]], pVec2 --[[ vector3 ]] =\n\tStartShapeTestSurroundingCoords(\n\t\tflag --[[ integer ]], \n\t\tentity --[[ Entity ]], \n\t\tflag2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Since it is only used in the PC version, likely some mouse-friendly shape test. Uses in vector arguments.\n\nAsynchronous.\n\nit returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.  \nIn its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7  \n\n\nSee START_SHAPE_TEST_LOS_PROBE for flags."
  },
  {
    "namespace": "Namespace: SHAPETEST",
    "apiset": "API set: client",
    "name": "StartShapeTestSweptSphere",
    "hash": "0xE6AC6C45FBE83004",
    "code": "-- START_SHAPE_TEST_SWEPT_SPHERE\nlocal retval --[[ integer ]] =\n\tStartShapeTestSweptSphere(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tflags --[[ integer ]], \n\t\tentity --[[ Entity ]], \n\t\tp9 --[[ integer ]]\n\t)",
    "parameters": [
      "x1: \n\nStarting X coordinate.",
      "y1: \n\nStarting Y coordinate.",
      "z1: \n\nStarting Z coordinate.",
      "x2: \n\nEnding X coordinate.",
      "y2: \n\nEnding Y coordinate.",
      "z2: \n\nEnding Z coordinate.",
      "radius:",
      "flags: \n\nSee START_SHAPE_TEST_LOS_PROBE",
      "entity: \n\nAn entity to ignore, or 0.",
      "p9: \n\nA bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used."
    ],
    "returns": [],
    "description": "Parameters:\n\nx1: \n\nStarting X coordinate.\n\ny1: \n\nStarting Y coordinate.\n\nz1: \n\nStarting Z coordinate.\n\nx2: \n\nEnding X coordinate.\n\ny2: \n\nEnding Y coordinate.\n\nz2: \n\nEnding Z coordinate.\n\nradius:\nflags: \n\nSee START_SHAPE_TEST_LOS_PROBE\n\nentity: \n\nAn entity to ignore, or 0.\n\np9: \n\nA bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.\n\nPerforms the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters."
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "IsRockstarMessageReadyForScript",
    "hash": "0xBC1CC91205EC8D6E",
    "code": "-- _IS_ROCKSTAR_MESSAGE_READY_FOR_SCRIPT\nlocal retval --[[ boolean ]] =\n\tIsRockstarMessageReadyForScript()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "RockstarMessageGetString",
    "hash": "0xDF649C4E9AFDD788",
    "code": "-- _ROCKSTAR_MESSAGE_GET_STRING\nlocal retval --[[ string ]] =\n\tRockstarMessageGetString()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScEmailMessageClearRecipList",
    "hash": "0x55DF6DB45179236E",
    "code": "-- SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST\nScEmailMessageClearRecipList()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScEmailMessagePushGamerToRecipList",
    "hash": "0x2330C12A7A605D16",
    "code": "-- SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST\nlocal networkHandle --[[ integer ]] =\n\tScEmailMessagePushGamerToRecipList()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScGamerdataGetBool",
    "hash": "0x8416FE4E4629D7D7",
    "code": "-- SC_GAMERDATA_GET_BOOL\nlocal retval --[[ boolean ]] =\n\tScGamerdataGetBool(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "sfink: from scripts:\nfunc_720(socialclub::_0x8416FE4E4629D7D7(\"bIgnoreCheaterOverride\"));\nfunc_719(socialclub::_0x8416FE4E4629D7D7(\"bIgnoreBadSportOverride\"));"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScGamerdataGetFloat",
    "hash": "0xA770C8EEC6FB2AC5",
    "code": "-- SC_GAMERDATA_GET_FLOAT\nlocal retval --[[ boolean ]], outValue --[[ number ]] =\n\tScGamerdataGetFloat(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScGamerdataGetInt",
    "hash": "0xC85A7127E7AD02AA",
    "code": "-- SC_GAMERDATA_GET_INT\nlocal retval --[[ boolean ]], outValue --[[ integer ]] =\n\tScGamerdataGetInt(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScGetHasAchievementBeenPassed",
    "hash": "0x418DC16FAE452C1C",
    "code": "-- _SC_GET_HAS_ACHIEVEMENT_BEEN_PASSED\nlocal retval --[[ boolean ]] =\n\tScGetHasAchievementBeenPassed(\n\t\tachievement --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Same as HAS_ACHIEVEMENT_BEEN_PASSED"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScGetNickname",
    "hash": "0x198D161F458ECC7F",
    "code": "-- _SC_GET_NICKNAME\nlocal retval --[[ string ]] =\n\tScGetNickname()",
    "parameters": [],
    "returns": [],
    "description": "Returns the nickname of the logged-in Rockstar Social Club account."
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxGetEmails",
    "hash": "0x040ADDCBAFA1018A",
    "code": "-- _SC_INBOX_GET_EMAILS\nScInboxGetEmails(\n\toffset --[[ integer ]], \n\tlimit --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxGetMessageIsReadAtIndex",
    "hash": "0x93028F1DB42BFD08",
    "code": "-- SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX\nlocal retval --[[ boolean ]] =\n\tScInboxGetMessageIsReadAtIndex(\n\t\tmsgIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxGetMessageTypeAtIndex",
    "hash": "0xBB8EA16ECBC976C4",
    "code": "-- SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX\nlocal retval --[[ Hash ]] =\n\tScInboxGetMessageTypeAtIndex(\n\t\tmsgIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxGetTotalNumMessages",
    "hash": "0x03A93FF1A2CA0864",
    "code": "-- SC_INBOX_GET_TOTAL_NUM_MESSAGES\nlocal retval --[[ integer ]] =\n\tScInboxGetTotalNumMessages()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageDoApply",
    "hash": "0x9A2C8064B6C1E41A",
    "code": "-- SC_INBOX_MESSAGE_DO_APPLY\nlocal retval --[[ boolean ]] =\n\tScInboxMessageDoApply(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageGetBountyData",
    "hash": "0x87E0052F08BD64E6",
    "code": "-- _SC_INBOX_MESSAGE_GET_BOUNTY_DATA\nlocal retval --[[ boolean ]], outData --[[ integer ]] =\n\tScInboxMessageGetBountyData(\n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageGetDataBool",
    "hash": "0xFFE5C16F402D851D",
    "code": "-- _SC_INBOX_MESSAGE_GET_DATA_BOOL\nlocal retval --[[ boolean ]] =\n\tScInboxMessageGetDataBool(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageGetDataInt",
    "hash": "0xA00EFE4082C4056E",
    "code": "-- SC_INBOX_MESSAGE_GET_DATA_INT\nlocal retval --[[ boolean ]], out --[[ integer ]] =\n\tScInboxMessageGetDataInt(\n\t\tp0 --[[ integer ]], \n\t\tcontext --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageGetDataString",
    "hash": "0x7572EF42FC6A9B6D",
    "code": "-- SC_INBOX_MESSAGE_GET_DATA_STRING\nlocal retval --[[ boolean ]] =\n\tScInboxMessageGetDataString(\n\t\tp0 --[[ integer ]], \n\t\tcontext --[[ string ]], \n\t\tout --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageGetString",
    "hash": "0xF3E31D16CBDCB304",
    "code": "-- _SC_INBOX_MESSAGE_GET_STRING\nlocal retval --[[ string ]] =\n\tScInboxMessageGetString(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageGetUgcdata",
    "hash": "0x69D82604A1A5A254",
    "code": "-- SC_INBOX_MESSAGE_GET_UGCDATA\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tScInboxMessageGetUgcdata(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessagePop",
    "hash": "0x2C015348CF19CA1D",
    "code": "-- _SC_INBOX_MESSAGE_POP\nlocal retval --[[ boolean ]] =\n\tScInboxMessagePop(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessagePushGamerToEventRecipList",
    "hash": "0xDA024BDBD600F44A",
    "code": "-- _SC_INBOX_MESSAGE_PUSH_GAMER_TO_EVENT_RECIP_LIST\nlocal networkHandle --[[ integer ]] =\n\tScInboxMessagePushGamerToEventRecipList()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageSendBountyPresenceEvent",
    "hash": "0x6AFD2CD753FEEF83",
    "code": "-- _SC_INBOX_MESSAGE_SEND_BOUNTY_PRESENCE_EVENT\nlocal retval --[[ boolean ]] =\n\tScInboxMessageSendBountyPresenceEvent(\n\t\tdata --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScInboxMessageSendUgcStatUpdateEvent",
    "hash": "0xA68D3D229F4F3B06",
    "code": "-- _SC_INBOX_MESSAGE_SEND_UGC_STAT_UPDATE_EVENT\nScInboxMessageSendUgcStatUpdateEvent(\n\tdata --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateAdd",
    "hash": "0x1989C6E6F67E76A8",
    "code": "-- SC_LICENSEPLATE_ADD\nlocal retval --[[ boolean ]], tokenOut --[[ integer ]] =\n\tScLicenseplateAdd(\n\t\tplateText --[[ string ]], \n\t\tplateData --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Social Club native to add license plate for the user"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateGetAddIsPending",
    "hash": "0x07C61676E5BB52CD",
    "code": "-- SC_LICENSEPLATE_GET_ADD_IS_PENDING\nlocal retval --[[ boolean ]] =\n\tScLicenseplateGetAddIsPending(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the add license plate text request is still pending."
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateGetAddStatus",
    "hash": "0x8147FFF6A718E1AD",
    "code": "-- SC_LICENSEPLATE_GET_ADD_STATUS\nlocal retval --[[ integer ]] =\n\tScLicenseplateGetAddStatus(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a status for adding the license plate"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateGetCount",
    "hash": "0x700569DBA175A77C",
    "code": "-- SC_LICENSEPLATE_GET_COUNT\nlocal retval --[[ integer ]] =\n\tScLicenseplateGetCount(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets number of plates in the response of the get license plates request. Range: [0, count) can be used as second argument to _0x1D4446A62D35B0D0 and _0x2E89990DDFF670C3"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateGetIsvalidIsPending",
    "hash": "0xD302E99EDF0449CF",
    "code": "-- SC_LICENSEPLATE_GET_ISVALID_IS_PENDING\nlocal retval --[[ boolean ]] =\n\tScLicenseplateGetIsvalidIsPending(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if the \"is valid license plate\" request is still pending."
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateGetIsvalidStatus",
    "hash": "0x5C4EBFFA98BDB41C",
    "code": "-- SC_LICENSEPLATE_GET_ISVALID_STATUS\nlocal retval --[[ integer ]] =\n\tScLicenseplateGetIsvalidStatus(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the status of the is valid license plate request"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateGetPlate",
    "hash": "0x1D4446A62D35B0D0",
    "code": "-- SC_LICENSEPLATE_GET_PLATE\nlocal retval --[[ string ]] =\n\tScLicenseplateGetPlate(\n\t\ttoken --[[ integer ]], \n\t\tplateIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets license plate text related to the get license plate info request"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateGetPlateData",
    "hash": "0x2E89990DDFF670C3",
    "code": "-- SC_LICENSEPLATE_GET_PLATE_DATA\nlocal retval --[[ string ]] =\n\tScLicenseplateGetPlateData(\n\t\ttoken --[[ integer ]], \n\t\tplateIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets license plate data related to the get license plate info request"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateIsvalid",
    "hash": "0x0F73393BAC7E6730",
    "code": "-- SC_LICENSEPLATE_ISVALID\nlocal retval --[[ boolean ]], tokenOut --[[ integer ]] =\n\tScLicenseplateIsvalid(\n\t\tplateText --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "SC native to start a request for if license plate text is valid"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScLicenseplateSetPlateData",
    "hash": "0xD0EE05FE193646EA",
    "code": "-- SC_LICENSEPLATE_SET_PLATE_DATA\nlocal retval --[[ boolean ]] =\n\tScLicenseplateSetPlateData(\n\t\toldPlateText --[[ string ]], \n\t\tnewPlateText --[[ string ]], \n\t\tplateData --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Changes the license plate for the user (no insert)."
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScPresenceAttrSetFloat",
    "hash": "0xC4C4575F62534A24",
    "code": "-- SC_PRESENCE_ATTR_SET_FLOAT\nlocal retval --[[ boolean ]] =\n\tScPresenceAttrSetFloat()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323\nNativeDB Added Parameter 1: Hash attrHash\nNativeDB Added Parameter 2: float value"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScPresenceAttrSetInt",
    "hash": "0x1F1E9682483697C7",
    "code": "-- SC_PRESENCE_ATTR_SET_INT\nlocal retval --[[ boolean ]] =\n\tScPresenceAttrSetInt(\n\t\tattrHash --[[ Hash ]], \n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScPresenceAttrSetString",
    "hash": "0x287F1F75D2803595",
    "code": "-- SC_PRESENCE_ATTR_SET_STRING\nlocal retval --[[ boolean ]] =\n\tScPresenceAttrSetString(\n\t\tattrHash --[[ Hash ]], \n\t\tvalue --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScProfanityCheckString",
    "hash": "0x75632C5ECD7ED843",
    "code": "-- SC_PROFANITY_CHECK_STRING\nlocal retval --[[ boolean ]], token --[[ integer ]] =\n\tScProfanityCheckString(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Starts a task to check an entered string for profanity on the ROS/Social Club services.\n\nSee also: SC_PROFANITY_GET_CHECK_IS_VALID and SC_PROFANITY_GET_CHECK_IS_PENDING."
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScProfanityCheckUgcString",
    "hash": "0xEB2BF817463DFA28",
    "code": "-- _SC_PROFANITY_CHECK_UGC_STRING\nlocal retval --[[ boolean ]], token --[[ integer ]] =\n\tScProfanityCheckUgcString(\n\t\tstring --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScProfanityGetCheckIsPending",
    "hash": "0x82E4A58BABC15AE7",
    "code": "-- SC_PROFANITY_GET_CHECK_IS_PENDING\nlocal retval --[[ boolean ]] =\n\tScProfanityGetCheckIsPending(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScProfanityGetCheckIsValid",
    "hash": "0x1753344C770358AE",
    "code": "-- SC_PROFANITY_GET_CHECK_IS_VALID\nlocal retval --[[ boolean ]] =\n\tScProfanityGetCheckIsValid(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScProfanityGetStringPassed",
    "hash": "0x85535ACF97FC0969",
    "code": "-- SC_PROFANITY_GET_STRING_PASSED\nlocal retval --[[ boolean ]] =\n\tScProfanityGetStringPassed(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "ScProfanityGetStringStatus",
    "hash": "0x930DE22F07B1CCE3",
    "code": "-- SC_PROFANITY_GET_STRING_STATUS\nlocal retval --[[ integer ]] =\n\tScProfanityGetStringStatus(\n\t\ttoken --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "SetHandleRockstarMessageViaScript",
    "hash": "0xBFA0A56A817C6C7D",
    "code": "-- _SET_HANDLE_ROCKSTAR_MESSAGE_VIA_SCRIPT\nSetHandleRockstarMessageViaScript(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x07dbd622d9533857",
    "hash": "0x07DBD622D9533857",
    "code": "-- 0x07DBD622D9533857\nlocal retval --[[ Any ]] =\n\tN_0x07dbd622d9533857(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x116fb94dc4b79f17",
    "hash": "0x116FB94DC4B79F17",
    "code": "-- 0x116FB94DC4B79F17\nN_0x116fb94dc4b79f17(\n\tp0 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x16da8172459434aa",
    "hash": "0x16DA8172459434AA",
    "code": "-- 0x16DA8172459434AA\nlocal retval --[[ Any ]] =\n\tN_0x16da8172459434aa()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x19853b5b17d77bca",
    "hash": "0x19853B5B17D77BCA",
    "code": "-- 0x19853B5B17D77BCA\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tN_0x19853b5b17d77bca(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x1d12a56fc95be92e",
    "hash": "0x1D12A56FC95BE92E",
    "code": "-- 0x1D12A56FC95BE92E\nlocal retval --[[ boolean ]] =\n\tN_0x1d12a56fc95be92e()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Added Parameter 2: char* p1\nNativeDB Added Parameter 3: char* p2\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x225798743970412b",
    "hash": "0x225798743970412B",
    "code": "-- 0x225798743970412B\nlocal retval --[[ boolean ]], p0 --[[ integer ]] =\n\tN_0x225798743970412b()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x2570e26be63964e3",
    "hash": "0x2570E26BE63964E3",
    "code": "-- 0x2570E26BE63964E3\nlocal retval --[[ boolean ]] =\n\tN_0x2570e26be63964e3()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Added Parameter 2: float* p1\nNativeDB Added Parameter 3: char* p2\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x2d874d4ae612a65f",
    "hash": "0x2D874D4AE612A65F",
    "code": "-- 0x2D874D4AE612A65F\nlocal retval --[[ Any ]] =\n\tN_0x2d874d4ae612a65f()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x3001bef2feca3680",
    "hash": "0x3001BEF2FECA3680",
    "code": "-- 0x3001BEF2FECA3680\nlocal retval --[[ boolean ]] =\n\tN_0x3001bef2feca3680()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x33df47cc0642061b",
    "hash": "0x33DF47CC0642061B",
    "code": "-- 0x33DF47CC0642061B\nlocal retval --[[ boolean ]] =\n\tN_0x33df47cc0642061b()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Added Parameter 2: char* p1\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x44aca259d67651db",
    "hash": "0x44ACA259D67651DB",
    "code": "-- 0x44ACA259D67651DB\nlocal p0 --[[ Any ]] =\n\tN_0x44aca259d67651db(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x450819d8cf90c416",
    "hash": "0x450819D8CF90C416",
    "code": "-- 0x450819D8CF90C416\nlocal retval --[[ boolean ]] =\n\tN_0x450819d8cf90c416()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x4737980e8a283806",
    "hash": "0x4737980E8A283806",
    "code": "-- 0x4737980E8A283806\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tN_0x4737980e8a283806(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x487912fd248efddf",
    "hash": "0x487912FD248EFDDF",
    "code": "-- 0x487912FD248EFDDF\nlocal retval --[[ boolean ]] =\n\tN_0x487912fd248efddf(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x4a7d6e727f941747",
    "hash": "0x4A7D6E727F941747",
    "code": "-- 0x4A7D6E727F941747\nlocal retval --[[ Any ]], p0 --[[ Any ]] =\n\tN_0x4a7d6e727f941747()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x4ed9c8d6da297639",
    "hash": "0x4ED9C8D6DA297639",
    "code": "-- 0x4ED9C8D6DA297639\nlocal retval --[[ Any ]] =\n\tN_0x4ed9c8d6da297639()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x50a8a36201dbf83e",
    "hash": "0x50A8A36201DBF83E",
    "code": "-- 0x50A8A36201DBF83E\nlocal retval --[[ boolean ]] =\n\tN_0x50a8a36201dbf83e()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Added Parameter 2: float* p1\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x675721c9f644d161",
    "hash": "0x675721C9F644D161",
    "code": "-- 0x675721C9F644D161\nN_0x675721c9f644d161()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x699e4a5c8c893a18",
    "hash": "0x699E4A5C8C893A18",
    "code": "-- 0x699E4A5C8C893A18\nlocal retval --[[ boolean ]], p2 --[[ Any ]] =\n\tN_0x699e4a5c8c893a18(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x6bfb12ce158e3dd4",
    "hash": "0x6BFB12CE158E3DD4",
    "code": "-- 0x6BFB12CE158E3DD4\nlocal retval --[[ boolean ]] =\n\tN_0x6bfb12ce158e3dd4(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x710bcda8071eded1",
    "hash": "0x710BCDA8071EDED1",
    "code": "-- 0x710BCDA8071EDED1\nlocal retval --[[ boolean ]] =\n\tN_0x710bcda8071eded1()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Added Parameter 2: int* p1\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x7db18ca8cad5b098",
    "hash": "0x7DB18CA8CAD5B098",
    "code": "-- 0x7DB18CA8CAD5B098\nlocal retval --[[ Any ]] =\n\tN_0x7db18ca8cad5b098()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x7ffcbfee44ecfabf",
    "hash": "0x7FFCBFEE44ECFABF",
    "code": "-- 0x7FFCBFEE44ECFABF\nlocal retval --[[ Any ]] =\n\tN_0x7ffcbfee44ecfabf()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x8a4416c0db05fa66",
    "hash": "0x8A4416C0DB05FA66",
    "code": "-- 0x8A4416C0DB05FA66\nlocal retval --[[ boolean ]], newsStoryData --[[ Any ]] =\n\tN_0x8a4416c0db05fa66()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x8cc469ab4d349b7c",
    "hash": "0x8CC469AB4D349B7C",
    "code": "-- 0x8CC469AB4D349B7C\nlocal retval --[[ boolean ]], p2 --[[ Any ]] =\n\tN_0x8cc469ab4d349b7c(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x9237e334f6e43156",
    "hash": "0x9237E334F6E43156",
    "code": "-- 0x9237E334F6E43156\nlocal retval --[[ Any ]] =\n\tN_0x9237e334f6e43156(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x92da6e70ef249bd1",
    "hash": "0x92DA6E70EF249BD1",
    "code": "-- 0x92DA6E70EF249BD1\nlocal retval --[[ boolean ]], p1 --[[ integer ]] =\n\tN_0x92da6e70ef249bd1(\n\t\tp0 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0x9de5d2f723575ed0",
    "hash": "0x9DE5D2F723575ED0",
    "code": "-- 0x9DE5D2F723575ED0\nlocal retval --[[ boolean ]] =\n\tN_0x9de5d2f723575ed0()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Added Parameter 2: char* p1\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xa468e0be12b12c70",
    "hash": "0xA468E0BE12B12C70",
    "code": "-- 0xA468E0BE12B12C70\nlocal retval --[[ boolean ]] =\n\tN_0xa468e0be12b12c70()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xc2c97ea97711d1ae",
    "hash": "0xC2C97EA97711D1AE",
    "code": "-- 0xC2C97EA97711D1AE\nlocal retval --[[ boolean ]] =\n\tN_0xc2c97ea97711d1ae()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xc5a35c73b68f3c49",
    "hash": "0xC5A35C73B68F3C49",
    "code": "-- 0xC5A35C73B68F3C49\nlocal retval --[[ boolean ]] =\n\tN_0xc5a35c73b68f3c49()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: int p0\nNativeDB Added Parameter 2: char* p1\nNativeDB Added Parameter 3: float* p2\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xd8122c407663b995",
    "hash": "0xD8122C407663B995",
    "code": "-- 0xD8122C407663B995\nlocal retval --[[ Any ]] =\n\tN_0xd8122c407663b995()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xe4f6e8d07a2f0f51",
    "hash": "0xE4F6E8D07A2F0F51",
    "code": "-- 0xE4F6E8D07A2F0F51\nlocal retval --[[ Any ]] =\n\tN_0xe4f6e8d07a2f0f51(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xe75a4a2e5e316d86",
    "hash": "0xE75A4A2E5E316D86",
    "code": "-- 0xE75A4A2E5E316D86\nlocal retval --[[ boolean ]] =\n\tN_0xe75a4a2e5e316d86()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: char* p0\nNativeDB Added Parameter 2: int* p1\nNativeDB Added Parameter 3: char* p2\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xea95c0853a27888e",
    "hash": "0xEA95C0853A27888E",
    "code": "-- 0xEA95C0853A27888E\nN_0xea95c0853a27888e()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xf22ca0fd74b80e7a",
    "hash": "0xF22CA0FD74B80E7A",
    "code": "-- 0xF22CA0FD74B80E7A\nlocal retval --[[ boolean ]] =\n\tN_0xf22ca0fd74b80e7a(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xf6baaaf762e1bf40",
    "hash": "0xF6BAAAF762E1BF40",
    "code": "-- 0xF6BAAAF762E1BF40\nlocal retval --[[ boolean ]], p1 --[[ integer ]] =\n\tN_0xf6baaaf762e1bf40(\n\t\tp0 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xfe4c1d0d3b9cc17e",
    "hash": "0xFE4C1D0D3B9CC17E",
    "code": "-- 0xFE4C1D0D3B9CC17E\nlocal retval --[[ boolean ]] =\n\tN_0xfe4c1d0d3b9cc17e(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SOCIALCLUB",
    "apiset": "API set: client",
    "name": "N_0xff8f3a92b75ed67a",
    "hash": "0xFF8F3A92B75ED67A",
    "code": "-- 0xFF8F3A92B75ED67A\nlocal retval --[[ Any ]] =\n\tN_0xff8f3a92b75ed67a()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "GetNgstatBoolHash",
    "hash": "0xBA52FF538ED2BC71",
    "code": "-- _GET_NGSTAT_BOOL_HASH\nlocal retval --[[ Hash ]] =\n\tGetNgstatBoolHash(\n\t\tindex --[[ integer ]], \n\t\tspStat --[[ boolean ]], \n\t\tcharStat --[[ boolean ]], \n\t\tcharacter --[[ integer ]], \n\t\tsection --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Needs more research. Gets the stat name of a masked bool?\nsection - values used in the decompiled scripts:\n\"_NGPSTAT_BOOL\"\n\"_NGTATPSTAT_BOOL\"\n\"_NGDLCPSTAT_BOOL\"\n\"_DLCBIKEPSTAT_BOOL\"\n\"_DLCGUNPSTAT_BOOL\"\n\"_GUNTATPSTAT_BOOL\"\n\"_DLCSMUGCHARPSTAT_BOOL\"\n\"_GANGOPSPSTAT_BOOL\"\n\"_BUSINESSBATPSTAT_BOOL\"\n\"_ARENAWARSPSTAT_BOOL\"\n\"_CASINOPSTAT_BOOL\"\n\"_CASINOHSTPSTAT_BOOL\"\n\"_HEIST3TATTOOSTAT_BOOL\""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "GetNgstatIntHash",
    "hash": "0x2B4CDCA6F07FF3DA",
    "code": "-- _GET_NGSTAT_INT_HASH\nlocal retval --[[ Hash ]] =\n\tGetNgstatIntHash(\n\t\tindex --[[ integer ]], \n\t\tspStat --[[ boolean ]], \n\t\tcharStat --[[ boolean ]], \n\t\tcharacter --[[ integer ]], \n\t\tsection --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Needs more research. Gets the stat name of a masked int?\nsection - values used in the decompiled scripts:\n\"_NGPSTAT_INT\"\n\"_MP_NGPSTAT_INT\"\n\"_MP_LRPSTAT_INT\"\n\"_MP_APAPSTAT_INT\"\n\"_MP_LR2PSTAT_INT\"\n\"_MP_BIKEPSTAT_INT\"\n\"_MP_IMPEXPPSTAT_INT\"\n\"_MP_GUNRPSTAT_INT\"\n\"_NGDLCPSTAT_INT\"\n\"_MP_NGDLCPSTAT_INT\"\n\"_DLCSMUGCHARPSTAT_INT\"\n\"_GANGOPSPSTAT_INT\"\n\"_BUSINESSBATPSTAT_INT\"\n\"_ARENAWARSPSTAT_INT\"\n\"_CASINOPSTAT_INT\"\n\"_CASINOHSTPSTAT_INT\""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "GetPackedBoolStatKey",
    "hash": "0x80C75307B1C42837",
    "code": "-- GET_PACKED_BOOL_STAT_KEY\nlocal retval --[[ Hash ]] =\n\tGetPackedBoolStatKey(\n\t\tindex --[[ integer ]], \n\t\tspStat --[[ boolean ]], \n\t\tcharStat --[[ boolean ]], \n\t\tcharacter --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "GetPackedIntStatKey",
    "hash": "0x61E111E323419E07",
    "code": "-- GET_PACKED_INT_STAT_KEY\nlocal retval --[[ Hash ]] =\n\tGetPackedIntStatKey(\n\t\tindex --[[ integer ]], \n\t\tspStat --[[ boolean ]], \n\t\tcharStat --[[ boolean ]], \n\t\tcharacter --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "GetPackedTuBoolStatKey",
    "hash": "0xC4BB08EE7907471E",
    "code": "-- GET_PACKED_TU_BOOL_STAT_KEY\nlocal retval --[[ Hash ]] =\n\tGetPackedTuBoolStatKey(\n\t\tindex --[[ integer ]], \n\t\tspStat --[[ boolean ]], \n\t\tcharStat --[[ boolean ]], \n\t\tcharacter --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "GetPackedTuIntStatKey",
    "hash": "0xD16C2AD6B8E32854",
    "code": "-- GET_PACKED_TU_INT_STAT_KEY\nlocal retval --[[ Hash ]] =\n\tGetPackedTuIntStatKey(\n\t\tindex --[[ integer ]], \n\t\tspStat --[[ boolean ]], \n\t\tcharStat --[[ boolean ]], \n\t\tcharacter --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "HiredLimo",
    "hash": "0x792271AB35C356A4",
    "code": "-- _HIRED_LIMO\nHiredLimo(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsCacheDataRow",
    "hash": "0xB9BB18E2C40142ED",
    "code": "-- LEADERBOARDS_CACHE_DATA_ROW\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tLeaderboardsCacheDataRow()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsClearCacheData",
    "hash": "0xD4B02A6B476E1FDC",
    "code": "-- LEADERBOARDS_CLEAR_CACHE_DATA\nLeaderboardsClearCacheData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsDeaths",
    "hash": "0x428EAF89E24F6C36",
    "code": "-- _LEADERBOARDS_DEATHS\nLeaderboardsDeaths(\n\tstatName --[[ Hash ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsGetCacheDataRow",
    "hash": "0x9120E8DBA3D69273",
    "code": "-- LEADERBOARDS_GET_CACHE_DATA_ROW\nlocal retval --[[ boolean ]], p2 --[[ Any ]] =\n\tLeaderboardsGetCacheDataRow(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsGetCacheExists",
    "hash": "0x9C51349BE6CDFE2C",
    "code": "-- LEADERBOARDS_GET_CACHE_EXISTS\nlocal retval --[[ boolean ]] =\n\tLeaderboardsGetCacheExists(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsGetCacheNumberOfRows",
    "hash": "0x58A651CD201D89AD",
    "code": "-- LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS\nlocal retval --[[ integer ]] =\n\tLeaderboardsGetCacheNumberOfRows(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsGetCacheTime",
    "hash": "0xF04C1C27DA35F6C8",
    "code": "-- LEADERBOARDS_GET_CACHE_TIME\nlocal retval --[[ Any ]] =\n\tLeaderboardsGetCacheTime(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsGetColumnId",
    "hash": "0xC4B5467A1886EA7E",
    "code": "-- LEADERBOARDS_GET_COLUMN_ID\nlocal retval --[[ Any ]] =\n\tLeaderboardsGetColumnId(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsGetColumnType",
    "hash": "0xBF4FEF46DB7894D3",
    "code": "-- LEADERBOARDS_GET_COLUMN_TYPE\nlocal retval --[[ Any ]] =\n\tLeaderboardsGetColumnType(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsGetNumberOfColumns",
    "hash": "0x117B45156D7EFF2E",
    "code": "-- LEADERBOARDS_GET_NUMBER_OF_COLUMNS\nlocal retval --[[ Any ]] =\n\tLeaderboardsGetNumberOfColumns(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsReadAnyPending",
    "hash": "0xA31FD15197B192BD",
    "code": "-- LEADERBOARDS_READ_ANY_PENDING\nlocal retval --[[ boolean ]] =\n\tLeaderboardsReadAnyPending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsReadClear",
    "hash": "0x7CCE5C737A665701",
    "code": "-- LEADERBOARDS_READ_CLEAR\nlocal retval --[[ Any ]] =\n\tLeaderboardsReadClear(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsReadClearAll",
    "hash": "0xA34CB6E6F0DF4A0B",
    "code": "-- LEADERBOARDS_READ_CLEAR_ALL\nlocal retval --[[ Any ]] =\n\tLeaderboardsReadClearAll()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsReadPending",
    "hash": "0xAC392C8483342AC2",
    "code": "-- LEADERBOARDS_READ_PENDING\nlocal retval --[[ boolean ]] =\n\tLeaderboardsReadPending(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsReadSuccessful",
    "hash": "0x2FB19228983E832C",
    "code": "-- LEADERBOARDS_READ_SUCCESSFUL\nlocal retval --[[ boolean ]] =\n\tLeaderboardsReadSuccessful(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsWriteAddColumn",
    "hash": "0x0BCA1D2C47B0D269",
    "code": "-- LEADERBOARDS_WRITE_ADD_COLUMN\nLeaderboardsWriteAddColumn(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "LeaderboardsWriteAddColumnLong",
    "hash": "0x2E65248609523599",
    "code": "-- LEADERBOARDS_WRITE_ADD_COLUMN_LONG\nLeaderboardsWriteAddColumnLong(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadByHandle",
    "hash": "0xC30713A383BFBF0E",
    "code": "-- LEADERBOARDS2_READ_BY_HANDLE\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tLeaderboards2ReadByHandle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadByPlatform",
    "hash": "0xF1AE5DCDBFCA2721",
    "code": "-- _LEADERBOARDS2_READ_BY_PLATFORM\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tLeaderboards2ReadByPlatform(\n\t\tgamerHandleCsv --[[ string ]], \n\t\tplatformName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadByRadius",
    "hash": "0x5CE587FB5A42C8C4",
    "code": "-- LEADERBOARDS2_READ_BY_RADIUS\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p2 --[[ Any ]] =\n\tLeaderboards2ReadByRadius(\n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadByRank",
    "hash": "0xBA2C7DB0C129449A",
    "code": "-- LEADERBOARDS2_READ_BY_RANK\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tLeaderboards2ReadByRank(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadByRow",
    "hash": "0xA9CDB1E3F0A49883",
    "code": "-- LEADERBOARDS2_READ_BY_ROW\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]], p3 --[[ Any ]], p5 --[[ Any ]] =\n\tLeaderboards2ReadByRow(\n\t\tp2 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp6 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadByScoreFloat",
    "hash": "0xE662C8B759D08F3C",
    "code": "-- LEADERBOARDS2_READ_BY_SCORE_FLOAT\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tLeaderboards2ReadByScoreFloat(\n\t\tp1 --[[ number ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadByScoreInt",
    "hash": "0x7EEC7E4F6984A16A",
    "code": "-- LEADERBOARDS2_READ_BY_SCORE_INT\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tLeaderboards2ReadByScoreInt(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadFriendsByRow",
    "hash": "0x918B101666F9CB83",
    "code": "-- LEADERBOARDS2_READ_FRIENDS_BY_ROW\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tLeaderboards2ReadFriendsByRow(\n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2ReadRankPrediction",
    "hash": "0xC38DC1E90D22547C",
    "code": "-- LEADERBOARDS2_READ_RANK_PREDICTION\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]], p2 --[[ Any ]] =\n\tLeaderboards2ReadRankPrediction()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2WriteData",
    "hash": "0xAE2206545888AE49",
    "code": "-- LEADERBOARDS2_WRITE_DATA\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tLeaderboards2WriteData()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "Leaderboards2WriteDataForEventType",
    "hash": "0xC980E62E33DF1D5C",
    "code": "-- LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE\nlocal retval --[[ boolean ]], p0 --[[ Any ]], p1 --[[ Any ]] =\n\tLeaderboards2WriteDataForEventType()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "OrderedBossVehicle",
    "hash": "0xCEA553E35C2246E1",
    "code": "-- _ORDERED_BOSS_VEHICLE\nOrderedBossVehicle(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tvehicleHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsAcquiredHiddenPackage",
    "hash": "0x79AB33F0FBFAC40C",
    "code": "-- PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE\nPlaystatsAcquiredHiddenPackage(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsActivityDone",
    "hash": "0xA071E0ED98F91286",
    "code": "-- PLAYSTATS_ACTIVITY_DONE\nPlaystatsActivityDone(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsArcadegame",
    "hash": "0x533A7D1EA58DF958",
    "code": "-- _PLAYSTATS_ARCADEGAME\nPlaystatsArcadegame(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsArenaWarSpectator",
    "hash": "0x6F4F599753F8200A",
    "code": "-- _PLAYSTATS_ARENA_WAR_SPECTATOR\nPlaystatsArenaWarSpectator(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]], \n\tp4 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsArenaWarsEnded",
    "hash": "0xB479D9F0D48A1BC5",
    "code": "-- _PLAYSTATS_ARENA_WARS_ENDED\nlocal data --[[ Any ]] =\n\tPlaystatsArenaWarsEnded()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsAwardBadsport",
    "hash": "0x47B32F5611E6E483",
    "code": "-- _PLAYSTATS_AWARD_BADSPORT\nPlaystatsAwardBadsport(\n\tid --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsAwardXp",
    "hash": "0x46F917F6B4128FE4",
    "code": "-- PLAYSTATS_AWARD_XP\nPlaystatsAwardXp(\n\tamount --[[ integer ]], \n\ttype --[[ Hash ]], \n\tcategory --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsBackgroundScriptAction",
    "hash": "0x5009DFD741329729",
    "code": "-- PLAYSTATS_BACKGROUND_SCRIPT_ACTION\nPlaystatsBackgroundScriptAction(\n\taction --[[ string ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsBanAlert",
    "hash": "0x516FC96EB88EEFE5",
    "code": "-- _PLAYSTATS_BAN_ALERT\nPlaystatsBanAlert(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsBuyContraband",
    "hash": "0xD6781E42755531F7",
    "code": "-- _PLAYSTATS_BUY_CONTRABAND\nlocal data --[[ Any ]] =\n\tPlaystatsBuyContraband()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCarclubChallenge",
    "hash": "0x1187CB58D7F3BED7",
    "code": "-- _PLAYSTATS_CARCLUB_CHALLENGE\nPlaystatsCarclubChallenge(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCarclubPoints",
    "hash": "0xFF14D6FEEC507BBE",
    "code": "-- _PLAYSTATS_CARCLUB_POINTS\nPlaystatsCarclubPoints(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCarclubPrize",
    "hash": "0x69C922B677621428",
    "code": "-- _PLAYSTATS_CARCLUB_PRIZE\nPlaystatsCarclubPrize(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoBlackjack",
    "hash": "0x3EAE97309727E7AD",
    "code": "-- _PLAYSTATS_CASINO_BLACKJACK\nPlaystatsCasinoBlackjack(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoBlackjackLight",
    "hash": "0xD5451C7BF151EB6F",
    "code": "-- _PLAYSTATS_CASINO_BLACKJACK_LIGHT\nPlaystatsCasinoBlackjackLight(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoChip",
    "hash": "0x0999F3F090EC5012",
    "code": "-- _PLAYSTATS_CASINO_CHIP\nPlaystatsCasinoChip(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoInsidetrack",
    "hash": "0x049F059625058A86",
    "code": "-- _PLAYSTATS_CASINO_INSIDETRACK\nPlaystatsCasinoInsidetrack(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoInsidetrackLight",
    "hash": "0x23A3CBCD50D54E47",
    "code": "-- _PLAYSTATS_CASINO_INSIDETRACK_LIGHT\nPlaystatsCasinoInsidetrackLight(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoLuckyseven",
    "hash": "0x0C432C1435F5E4FA",
    "code": "-- _PLAYSTATS_CASINO_LUCKYSEVEN\nPlaystatsCasinoLuckyseven(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoMissionEnded",
    "hash": "0x1A0D4A6C336B7BC5",
    "code": "-- _PLAYSTATS_CASINO_MISSION_ENDED\nlocal data --[[ Any ]] =\n\tPlaystatsCasinoMissionEnded()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoRoulette",
    "hash": "0x95101C443A84E7F1",
    "code": "-- _PLAYSTATS_CASINO_ROULETTE\nPlaystatsCasinoRoulette(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoRouletteLight",
    "hash": "0x6572ABA3DE1197FC",
    "code": "-- _PLAYSTATS_CASINO_ROULETTE_LIGHT\nPlaystatsCasinoRouletteLight(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoSlotmachine",
    "hash": "0xEF5EC67D392B830A",
    "code": "-- _PLAYSTATS_CASINO_SLOTMACHINE\nPlaystatsCasinoSlotmachine(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoSlotmachineLight",
    "hash": "0xE60054A0FAE8227F",
    "code": "-- _PLAYSTATS_CASINO_SLOTMACHINE_LIGHT\nPlaystatsCasinoSlotmachineLight(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoStoryMissionEnded",
    "hash": "0xFCCCAC2BD3C1F180",
    "code": "-- _PLAYSTATS_CASINO_STORY_MISSION_ENDED\nPlaystatsCasinoStoryMissionEnded(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoThreecardpoker",
    "hash": "0xF740FB339D471C35",
    "code": "-- _PLAYSTATS_CASINO_THREECARDPOKER\nPlaystatsCasinoThreecardpoker(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCasinoThreecardpokerLight",
    "hash": "0xC9001364B4388F22",
    "code": "-- _PLAYSTATS_CASINO_THREECARDPOKER_LIGHT\nPlaystatsCasinoThreecardpokerLight(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsChangeMcEmblem",
    "hash": "0x0A50D2604E05CB94",
    "code": "-- _PLAYSTATS_CHANGE_MC_EMBLEM\nPlaystatsChangeMcEmblem(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCheatApplied",
    "hash": "0x6058665D72302D3F",
    "code": "-- PLAYSTATS_CHEAT_APPLIED\nPlaystatsCheatApplied(\n\tcheat --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsClothChange",
    "hash": "0x34B973047A2268B9",
    "code": "-- PLAYSTATS_CLOTH_CHANGE\nPlaystatsClothChange(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCollectible",
    "hash": "0xCD0A8A9338681CF2",
    "code": "-- _PLAYSTATS_COLLECTIBLE\nPlaystatsCollectible(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCopyRankIntoNewSlot",
    "hash": "0xB7257BA2550EA10A",
    "code": "-- _PLAYSTATS_COPY_RANK_INTO_NEW_SLOT\nPlaystatsCopyRankIntoNewSlot(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCrateCreated",
    "hash": "0xAFC7E5E075A96F46",
    "code": "-- PLAYSTATS_CRATE_CREATED\nPlaystatsCrateCreated(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsCrateDropMissionDone",
    "hash": "0x1CAE5D2E3F9A07F0",
    "code": "-- PLAYSTATS_CRATE_DROP_MISSION_DONE\nPlaystatsCrateDropMissionDone(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 7: Any p6\nNativeDB Added Parameter 8: Any p7"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsDarMissionEnd",
    "hash": "0x0BC254FF3A911501",
    "code": "-- _PLAYSTATS_DAR_MISSION_END\nlocal data --[[ Any ]] =\n\tPlaystatsDarMissionEnd()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsDefendContraband",
    "hash": "0x2605663BD4F23B5D",
    "code": "-- _PLAYSTATS_DEFEND_CONTRABAND\nlocal data --[[ Any ]] =\n\tPlaystatsDefendContraband()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsDirectorMode",
    "hash": "0x46326E13DA4E0546",
    "code": "-- _PLAYSTATS_DIRECTOR_MODE\nlocal p0 --[[ Any ]] =\n\tPlaystatsDirectorMode()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsDroneUsage",
    "hash": "0x66C7BB2416ED3FCE",
    "code": "-- _PLAYSTATS_DRONE_USAGE\nPlaystatsDroneUsage(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsDupeDetection",
    "hash": "0x848B66100EE33B05",
    "code": "-- _PLAYSTATS_DUPE_DETECTION\nlocal data --[[ Any ]] =\n\tPlaystatsDupeDetection()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsEarnedMcPoints",
    "hash": "0x501478855A6074CE",
    "code": "-- _PLAYSTATS_EARNED_MC_POINTS\nPlaystatsEarnedMcPoints(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsEnterSessionPack",
    "hash": "0x878FF156D36E9956",
    "code": "-- _PLAYSTATS_ENTER_SESSION_PACK\nlocal data --[[ Any ]] =\n\tPlaystatsEnterSessionPack()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsExtraEvent",
    "hash": "0xFA5B74BAB8A7EF99",
    "code": "-- _PLAYSTATS_EXTRA_EVENT\nPlaystatsExtraEvent(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsFriendActivity",
    "hash": "0x0F71DE29AB2258F1",
    "code": "-- PLAYSTATS_FRIEND_ACTIVITY\nPlaystatsFriendActivity(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsGunrunMissionEnded",
    "hash": "0x0EACDF8487D5155A",
    "code": "-- _PLAYSTATS_GUNRUN_MISSION_ENDED\nlocal data --[[ Any ]] =\n\tPlaystatsGunrunMissionEnded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsH2FmprepEnd",
    "hash": "0xD8AFB345A9C5CCBB",
    "code": "-- _PLAYSTATS_H2_FMPREP_END\nlocal data --[[ Any ]] =\n\tPlaystatsH2FmprepEnd()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsH2InstanceEnd",
    "hash": "0x1E1497D0D2108115",
    "code": "-- _PLAYSTATS_H2_INSTANCE_END\nlocal data --[[ Any ]] =\n\tPlaystatsH2InstanceEnd(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsHeistSaveCheat",
    "hash": "0xF4FF020A08BC8863",
    "code": "-- PLAYSTATS_HEIST_SAVE_CHEAT\nPlaystatsHeistSaveCheat(\n\thash --[[ Hash ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsHoldUpMissionDone",
    "hash": "0xCB00196B31C39EB1",
    "code": "-- PLAYSTATS_HOLD_UP_MISSION_DONE\nPlaystatsHoldUpMissionDone(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsIdleKick",
    "hash": "0x5DA3A8DE8CB6226F",
    "code": "-- PLAYSTATS_IDLE_KICK\nPlaystatsIdleKick(\n\ttime --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "longest time being ilde?"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsImportExportMissionDone",
    "hash": "0x2B69F5074C894811",
    "code": "-- PLAYSTATS_IMPORT_EXPORT_MISSION_DONE\nPlaystatsImportExportMissionDone(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsInventory",
    "hash": "0x887DAD63CF5B7908",
    "code": "-- _PLAYSTATS_INVENTORY\nPlaystatsInventory(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsJobBend",
    "hash": "0xF5BB8DAC426A52C0",
    "code": "-- PLAYSTATS_JOB_BEND\nlocal p0 --[[ Any ]], p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tPlaystatsJobBend()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsLeaveJobChain",
    "hash": "0xC5BE134EC7BA96A0",
    "code": "-- PLAYSTATS_LEAVE_JOB_CHAIN\nPlaystatsLeaveJobChain(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsMatchStarted",
    "hash": "0xBC80E22DED931E3D",
    "code": "-- PLAYSTATS_MATCH_STARTED\nPlaystatsMatchStarted(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Removed Parameter 4: Any p3\nNativeDB Removed Parameter 5: Any p4\nNativeDB Removed Parameter 6: Any p5\nNativeDB Removed Parameter 7: Any p6"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsMissionCheckpoint",
    "hash": "0xC900596A63978C1D",
    "code": "-- PLAYSTATS_MISSION_CHECKPOINT\nlocal p0 --[[ Any ]] =\n\tPlaystatsMissionCheckpoint(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsMissionOver",
    "hash": "0x7C4BB33A8CED7324",
    "code": "-- PLAYSTATS_MISSION_OVER\nlocal p0 --[[ Any ]] =\n\tPlaystatsMissionOver(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ boolean ]], \n\t\tp4 --[[ boolean ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsMissionStarted",
    "hash": "0xC19A2925C34D2231",
    "code": "-- PLAYSTATS_MISSION_STARTED\nlocal p0 --[[ Any ]] =\n\tPlaystatsMissionStarted(\n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsNpcInvite",
    "hash": "0x93054C88E6AA7C44",
    "code": "-- PLAYSTATS_NPC_INVITE\nlocal p0 --[[ Any ]] =\n\tPlaystatsNpcInvite()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsOddjobDone",
    "hash": "0x69DEA3E9DB727B4C",
    "code": "-- PLAYSTATS_ODDJOB_DONE\nPlaystatsOddjobDone(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsPassiveMode",
    "hash": "0x35EEC6C2BC821A71",
    "code": "-- _PLAYSTATS_PASSIVE_MODE\nPlaystatsPassiveMode(\n\tp0 --[[ boolean ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsPegasaircraft",
    "hash": "0x9572BD4DD6B72122",
    "code": "-- _PLAYSTATS_PEGASAIRCRAFT\nPlaystatsPegasaircraft(\n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsPiMenuHideSettings",
    "hash": "0x203B381133817079",
    "code": "-- _PLAYSTATS_PI_MENU_HIDE_SETTINGS\nlocal data --[[ Any ]] =\n\tPlaystatsPiMenuHideSettings()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsPropChange",
    "hash": "0xBA739D6D5A05D6E7",
    "code": "-- PLAYSTATS_PROP_CHANGE\nPlaystatsPropChange(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsQuickfixTool",
    "hash": "0x90D0622866E80445",
    "code": "-- PLAYSTATS_QUICKFIX_TOOL\nPlaystatsQuickfixTool(\n\telement --[[ integer ]], \n\titem --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRaceCheckpoint",
    "hash": "0x9C375C315099DDE4",
    "code": "-- PLAYSTATS_RACE_CHECKPOINT\nPlaystatsRaceCheckpoint(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRaceToPointMissionDone",
    "hash": "0xADDD1C754E2E2914",
    "code": "-- PLAYSTATS_RACE_TO_POINT_MISSION_DONE\nPlaystatsRaceToPointMissionDone(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Removed Parameter 5: Any p4\nNativeDB Removed Parameter 6: Any p5\nNativeDB Removed Parameter 7: Any p6\nNativeDB Removed Parameter 8: Any p7\nNativeDB Removed Parameter 9: Any p8\nNativeDB Removed Parameter 10: Any p9"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRandomMissionDone",
    "hash": "0x71862B1D855F32E1",
    "code": "-- PLAYSTATS_RANDOM_MISSION_DONE\nPlaystatsRandomMissionDone(\n\tname --[[ string ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRankUp",
    "hash": "0xC7F2DE41D102BFB4",
    "code": "-- PLAYSTATS_RANK_UP\nPlaystatsRankUp(\n\trank --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRecoverContraband",
    "hash": "0x04D90BA8207ADA2D",
    "code": "-- _PLAYSTATS_RECOVER_CONTRABAND\nlocal data --[[ Any ]] =\n\tPlaystatsRecoverContraband()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRobberyFinale",
    "hash": "0xBBA55BE9AAAABF44",
    "code": "-- _PLAYSTATS_ROBBERY_FINALE\nPlaystatsRobberyFinale(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRobberyPrep",
    "hash": "0x1A67DFBF1F5C3835",
    "code": "-- _PLAYSTATS_ROBBERY_PREP\nPlaystatsRobberyPrep(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsRosBet",
    "hash": "0x121FB4DDDC2D5291",
    "code": "-- PLAYSTATS_ROS_BET\nPlaystatsRosBet(\n\tamount --[[ integer ]], \n\tact --[[ integer ]], \n\tplayer --[[ Player ]], \n\tcm --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsSellContraband",
    "hash": "0xC729991A9065376E",
    "code": "-- _PLAYSTATS_SELL_CONTRABAND\nlocal data --[[ Any ]] =\n\tPlaystatsSellContraband()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsSetJoinType",
    "hash": "0xD1032E482629049E",
    "code": "-- PLAYSTATS_SET_JOIN_TYPE\nPlaystatsSetJoinType(\n\tjoinType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a byte that is then used in session_host and session_join metrics when hosting or joining a session"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsShopItem",
    "hash": "0x176852ACAAC173D1",
    "code": "-- PLAYSTATS_SHOP_ITEM\nPlaystatsShopItem(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsSmugMissionEnded",
    "hash": "0x320C35147D5B5DDD",
    "code": "-- _PLAYSTATS_SMUG_MISSION_ENDED\nlocal data --[[ Any ]] =\n\tPlaystatsSmugMissionEnded()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsSpectatorWheelSpin",
    "hash": "0x6731DE84A38BFAD0",
    "code": "-- _PLAYSTATS_SPECTATOR_WHEEL_SPIN\nPlaystatsSpectatorWheelSpin(\n\tp0 --[[ integer ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsSpentPiCustomLoadout",
    "hash": "0xBE509B0A3693DE8B",
    "code": "-- _PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT\nPlaystatsSpentPiCustomLoadout(\n\tamount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsStartOfflineMode",
    "hash": "0x098760C7461724CD",
    "code": "-- _PLAYSTATS_START_OFFLINE_MODE\nPlaystatsStartOfflineMode()",
    "parameters": [],
    "returns": [],
    "description": "PLAYSTATS_START_INVITE_DESPAWNING?"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsStartTrackingStunts",
    "hash": "0x928DBFB892638EF3",
    "code": "-- PLAYSTATS_START_TRACKING_STUNTS\nPlaystatsStartTrackingStunts()",
    "parameters": [],
    "returns": [],
    "description": "Allows stunts to be triggered and sent as a CEventNetworkStuntPerformed event.\n\nEvent types are shown below:\n\nenum eTrackedStuntType\n{\n    ST_FRONTFLIP = 0,\n    ST_BACKFLIP = 1,\n    ST_SPIN = 2,\n    ST_WHEELIE = 3,\n    ST_STOPPIE = 4,\n    ST_BOWLING_PIN = 5,\n    ST_FOOTBALL = 6,\n    ST_ROLL = 7\n};"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsStoneHatchetEnd",
    "hash": "0x35E39E5570358630",
    "code": "-- _PLAYSTATS_STONE_HATCHET_END\nlocal data --[[ Any ]] =\n\tPlaystatsStoneHatchetEnd()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsStopTrackingStunts",
    "hash": "0x8A800DACCC0DA55D",
    "code": "-- PLAYSTATS_STOP_TRACKING_STUNTS\nPlaystatsStopTrackingStunts()",
    "parameters": [],
    "returns": [],
    "description": "Disallows CEventNetworkStuntPerformed to be triggered (Resets PLAYSTATS_START_TRACKING_STUNTS)."
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsWeaponModeChange",
    "hash": "0xE95C8A1875A02CA4",
    "code": "-- PLAYSTATS_WEAPON_MODE_CHANGE\nPlaystatsWeaponModeChange(\n\tweaponHash --[[ Hash ]], \n\tcomponentHashTo --[[ Hash ]], \n\tcomponentHashFrom --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PlaystatsWebsiteVisited",
    "hash": "0xDDF24D535060F811",
    "code": "-- PLAYSTATS_WEBSITE_VISITED\nPlaystatsWebsiteVisited(\n\tscaleformHash --[[ Hash ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PresenceEventUpdatestatFloat",
    "hash": "0x30A6614C1F7799B8",
    "code": "-- PRESENCE_EVENT_UPDATESTAT_FLOAT\nPresenceEventUpdatestatFloat(\n\tstatHash --[[ Hash ]], \n\tvalue --[[ number ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "PresenceEventUpdatestatInt",
    "hash": "0x11FF1C80276097ED",
    "code": "-- PRESENCE_EVENT_UPDATESTAT_INT\nPresenceEventUpdatestatInt(\n\tstatHash --[[ Hash ]], \n\tvalue --[[ integer ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "SetHasContentUnlocksFlags",
    "hash": "0xDAC073C7901F9E15",
    "code": "-- _SET_HAS_CONTENT_UNLOCKS_FLAGS\nSetHasContentUnlocksFlags(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets profile setting 866\nSET_*"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "SetProfileSettingPrologueComplete",
    "hash": "0xB475F27C6A994D65",
    "code": "-- SET_PROFILE_SETTING_PROLOGUE_COMPLETE\nSetProfileSettingPrologueComplete()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "SetSaveMigrationTransactionId",
    "hash": "0xF6792800AC95350D",
    "code": "-- _SET_SAVE_MIGRATION_TRANSACTION_ID\nSetSaveMigrationTransactionId(\n\ttransactionId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets profile setting 501"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatClearSlotForReload",
    "hash": "0xEB0A72181D4AA4AD",
    "code": "-- STAT_CLEAR_SLOT_FOR_RELOAD\nlocal retval --[[ Any ]] =\n\tStatClearSlotForReload(\n\t\tstatSlot --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nfor (v_2 = 0; v_2 <= 4; v_2 += 1) {\n    STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);\n}"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatDeleteSlot",
    "hash": "0x49A49BED12794D70",
    "code": "-- STAT_DELETE_SLOT\nlocal retval --[[ Any ]] =\n\tStatDeleteSlot(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetBool",
    "hash": "0x11B5E6D2AE73F48E",
    "code": "-- STAT_GET_BOOL\nlocal retval --[[ boolean ]], outValue --[[ boolean ]] =\n\tStatGetBool(\n\t\tstatHash --[[ Hash ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetBoolMasked",
    "hash": "0x10FE3F1B79F9B071",
    "code": "-- STAT_GET_BOOL_MASKED\nlocal retval --[[ boolean ]] =\n\tStatGetBoolMasked(\n\t\tstatName --[[ Hash ]], \n\t\tmask --[[ integer ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p2 - Default value? Seems to be -1 most of the time."
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetCancelSaveMigrationStatus",
    "hash": "0x567384DFA67029E6",
    "code": "-- _STAT_GET_CANCEL_SAVE_MIGRATION_STATUS\nlocal retval --[[ integer ]] =\n\tStatGetCancelSaveMigrationStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetDate",
    "hash": "0x8B0FACEFC36C824B",
    "code": "-- STAT_GET_DATE\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tStatGetDate(\n\t\tstatHash --[[ Hash ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetFloat",
    "hash": "0xD7AE6C9C9C6AC54C",
    "code": "-- STAT_GET_FLOAT\nlocal retval --[[ boolean ]], outValue --[[ number ]] =\n\tStatGetFloat(\n\t\tstatHash --[[ Hash ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetInt",
    "hash": "0x767FBC2AC802EF3D",
    "code": "-- STAT_GET_INT\nlocal retval --[[ boolean ]], outValue --[[ integer ]] =\n\tStatGetInt(\n\t\tstatHash --[[ Hash ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p2 appears to always be -1"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetLicensePlate",
    "hash": "0x5473D4195058B2E4",
    "code": "-- STAT_GET_LICENSE_PLATE\nlocal retval --[[ string ]] =\n\tStatGetLicensePlate(\n\t\tstatName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetMaskedInt",
    "hash": "0x655185A06D9EEAAB",
    "code": "-- STAT_GET_MASKED_INT\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tStatGetMaskedInt(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetNumberOfDays",
    "hash": "0xE0E854F5280FB769",
    "code": "-- STAT_GET_NUMBER_OF_DAYS\nlocal retval --[[ integer ]] =\n\tStatGetNumberOfDays(\n\t\tstatName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetNumberOfHours",
    "hash": "0xF2D4B2FE415AAFC3",
    "code": "-- STAT_GET_NUMBER_OF_HOURS\nlocal retval --[[ integer ]] =\n\tStatGetNumberOfHours(\n\t\tstatName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetNumberOfMinutes",
    "hash": "0x7583B4BE4C5A41B5",
    "code": "-- STAT_GET_NUMBER_OF_MINUTES\nlocal retval --[[ integer ]] =\n\tStatGetNumberOfMinutes(\n\t\tstatName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetNumberOfSeconds",
    "hash": "0x2CE056FF3723F00B",
    "code": "-- STAT_GET_NUMBER_OF_SECONDS\nlocal retval --[[ integer ]] =\n\tStatGetNumberOfSeconds(\n\t\tstatName --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetPackedBoolMask",
    "hash": "0xF4D8E7AC2A27758C",
    "code": "-- _STAT_GET_PACKED_BOOL_MASK\nlocal retval --[[ integer ]] =\n\tStatGetPackedBoolMask(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Needs more research. Possibly used to calculate the \"mask\" when calling \"STAT_SET_BOOL_MASKED\"?"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetPackedIntMask",
    "hash": "0x94F12ABF9C79E339",
    "code": "-- _STAT_GET_PACKED_INT_MASK\nlocal retval --[[ integer ]] =\n\tStatGetPackedIntMask(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Needs more research. Possibly used to calculate the \"mask\" when calling \"STAT_SET_MASKED_INT\"?"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetPos",
    "hash": "0x350F82CCB186AA1B",
    "code": "-- STAT_GET_POS\nlocal retval --[[ boolean ]], p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tStatGetPos(\n\t\tp0 --[[ Any ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetSaveMigrationConsumeContentUnlockStatus",
    "hash": "0xCE5AA445ABA8DEE0",
    "code": "-- _STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_STATUS\nlocal retval --[[ integer ]], p0 --[[ integer ]] =\n\tStatGetSaveMigrationConsumeContentUnlockStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetSaveMigrationStatus",
    "hash": "0x886913BBEACA68C1",
    "code": "-- STAT_GET_SAVE_MIGRATION_STATUS\nlocal retval --[[ integer ]], data --[[ Any ]] =\n\tStatGetSaveMigrationStatus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetString",
    "hash": "0xE50384ACC2C3DB74",
    "code": "-- STAT_GET_STRING\nlocal retval --[[ string ]] =\n\tStatGetString(\n\t\tstatHash --[[ Hash ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always -1 in the script files"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatGetUserId",
    "hash": "0x2365C388E393BBE2",
    "code": "-- STAT_GET_USER_ID\nlocal retval --[[ string ]] =\n\tStatGetUserId(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Needs more research. Seems to return \"STAT_UNKNOWN\" if no such user id exists."
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatIncrement",
    "hash": "0x9B5A68C6489E9909",
    "code": "-- STAT_INCREMENT\nStatIncrement(\n\tstatName --[[ Hash ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatLoad",
    "hash": "0xA651443F437B1CE6",
    "code": "-- STAT_LOAD\nlocal retval --[[ boolean ]] =\n\tStatLoad(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatLoadPending",
    "hash": "0xA1750FFAFA181661",
    "code": "-- STAT_LOAD_PENDING\nlocal retval --[[ boolean ]] =\n\tStatLoadPending(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatMigrateSave",
    "hash": "0xA5C80D8E768A9E66",
    "code": "-- _STAT_MIGRATE_SAVE\nlocal retval --[[ boolean ]] =\n\tStatMigrateSave(\n\t\tplatformName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "platformName must be one of the following: ps3, xbox360, ps4, xboxone"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSave",
    "hash": "0xE07BCA305B82D2FD",
    "code": "-- STAT_SAVE\nlocal retval --[[ boolean ]] =\n\tStatSave(\n\t\tp0 --[[ integer ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSaveMigrationCancel",
    "hash": "0x4FEF53183C3C6414",
    "code": "-- _STAT_SAVE_MIGRATION_CANCEL\nlocal retval --[[ boolean ]] =\n\tStatSaveMigrationCancel()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSaveMigrationConsumeContentUnlock",
    "hash": "0x3270F67EED31FBC1",
    "code": "-- _STAT_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK\nlocal retval --[[ boolean ]] =\n\tStatSaveMigrationConsumeContentUnlock(\n\t\tcontentId --[[ Hash ]], \n\t\tsrcPlatform --[[ string ]], \n\t\tsrcGamerHandle --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSaveMigrationStatusStart",
    "hash": "0xC70DDCE56D0D3A99",
    "code": "-- STAT_SAVE_MIGRATION_STATUS_START\nlocal retval --[[ boolean ]] =\n\tStatSaveMigrationStatusStart()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSavePending",
    "hash": "0x7D3A583856F2C5AC",
    "code": "-- STAT_SAVE_PENDING\nlocal retval --[[ boolean ]] =\n\tStatSavePending()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSavePendingOrRequested",
    "hash": "0xBBB6AD006F1BBEA3",
    "code": "-- STAT_SAVE_PENDING_OR_REQUESTED\nlocal retval --[[ boolean ]] =\n\tStatSavePendingOrRequested()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetBlockSaves",
    "hash": "0xF434A10BA01C37D0",
    "code": "-- STAT_SET_BLOCK_SAVES\nStatSetBlockSaves(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetBool",
    "hash": "0x4B33C4243DE0C432",
    "code": "-- STAT_SET_BOOL\nlocal retval --[[ boolean ]] =\n\tStatSetBool(\n\t\tstatName --[[ Hash ]], \n\t\tvalue --[[ boolean ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example:\n STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY(\"MPPLY_MELEECHLENGECOMPLETED\"), trur, true);"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetBoolMasked",
    "hash": "0x5BC62EC1937B9E5B",
    "code": "-- STAT_SET_BOOL_MASKED\nlocal retval --[[ boolean ]] =\n\tStatSetBoolMasked(\n\t\tstatName --[[ Hash ]], \n\t\tvalue --[[ boolean ]], \n\t\tmask --[[ integer ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetCheatIsActive",
    "hash": "0x047CBED6F6F8B63C",
    "code": "-- STAT_SET_CHEAT_IS_ACTIVE\nStatSetCheatIsActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetCurrentPosixTime",
    "hash": "0xC2F84B7F9C4D0C61",
    "code": "-- STAT_SET_CURRENT_POSIX_TIME\nlocal retval --[[ boolean ]] =\n\tStatSetCurrentPosixTime(\n\t\tstatName --[[ Hash ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 always true."
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetDate",
    "hash": "0x2C29BFB64F4FCBE4",
    "code": "-- STAT_SET_DATE\nlocal retval --[[ boolean ]], value --[[ Any ]] =\n\tStatSetDate(\n\t\tstatName --[[ Hash ]], \n\t\tnumFields --[[ integer ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).  \nThe structure looks like this:  \nint year  \nint month  \nint day  \nint hour  \nint minute  \nint second  \nint millisecond  \nThe decompiled scripts use TIME::GET_POSIX_TIME to fill this structure."
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetFloat",
    "hash": "0x4851997F37FE9B3C",
    "code": "-- STAT_SET_FLOAT\nlocal retval --[[ boolean ]] =\n\tStatSetFloat(\n\t\tstatName --[[ Hash ]], \n\t\tvalue --[[ number ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example:\n STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY(\"MP0_WEAPON_ACCURACY\"), 66.6f, true);"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetGxtLabel",
    "hash": "0x17695002FD8B2AE0",
    "code": "-- STAT_SET_GXT_LABEL\nlocal retval --[[ boolean ]] =\n\tStatSetGxtLabel(\n\t\tstatName --[[ Hash ]], \n\t\tvalue --[[ string ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "The following values have been found in the decompiled scripts:  \n\"RC_ABI1\"  \n\"RC_ABI2\"  \n\"RC_BA1\"  \n\"RC_BA2\"  \n\"RC_BA3\"  \n\"RC_BA3A\"  \n\"RC_BA3C\"  \n\"RC_BA4\"  \n\"RC_DRE1\"  \n\"RC_EPS1\"  \n\"RC_EPS2\"  \n\"RC_EPS3\"  \n\"RC_EPS4\"  \n\"RC_EPS5\"  \n\"RC_EPS6\"  \n\"RC_EPS7\"  \n\"RC_EPS8\"  \n\"RC_EXT1\"  \n\"RC_EXT2\"  \n\"RC_EXT3\"  \n\"RC_EXT4\"  \n\"RC_FAN1\"  \n\"RC_FAN2\"  \n\"RC_FAN3\"  \n\"RC_HAO1\"  \n\"RC_HUN1\"  \n\"RC_HUN2\"  \n\"RC_JOS1\"  \n\"RC_JOS2\"  \n\"RC_JOS3\"  \n\"RC_JOS4\"  \n\"RC_MAU1\"  \n\"RC_MIN1\"  \n\"RC_MIN2\"  \n\"RC_MIN3\"  \n\"RC_MRS1\"  \n\"RC_MRS2\"  \n\"RC_NI1\"  \n\"RC_NI1A\"  \n\"RC_NI1B\"  \n\"RC_NI1C\"  \n\"RC_NI1D\"  \n\"RC_NI2\"  \n\"RC_NI3\"  \n\"RC_OME1\"  \n\"RC_OME2\"  \n\"RC_PA1\"  \n\"RC_PA2\"  \n\"RC_PA3\"  \n\"RC_PA3A\"  \n\"RC_PA3B\"  \n\"RC_PA4\"  \n\"RC_RAM1\"  \n\"RC_RAM2\"  \n\"RC_RAM3\"  \n\"RC_RAM4\"  \n\"RC_RAM5\"  \n\"RC_SAS1\"  \n\"RC_TON1\"  \n\"RC_TON2\"  \n\"RC_TON3\"  \n\"RC_TON4\"  \n\"RC_TON5\""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetInt",
    "hash": "0xB3271D7AB655B441",
    "code": "-- STAT_SET_INT\nlocal retval --[[ boolean ]] =\n\tStatSetInt(\n\t\tstatName --[[ Hash ]], \n\t\tvalue --[[ integer ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetLicensePlate",
    "hash": "0x69FF13266D7296DA",
    "code": "-- STAT_SET_LICENSE_PLATE\nlocal retval --[[ boolean ]] =\n\tStatSetLicensePlate(\n\t\tstatName --[[ Hash ]], \n\t\tstr --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetMaskedInt",
    "hash": "0x7BBB1B54583ED410",
    "code": "-- STAT_SET_MASKED_INT\nlocal retval --[[ boolean ]] =\n\tStatSetMaskedInt(\n\t\tstatName --[[ Hash ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ integer ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetPos",
    "hash": "0xDB283FDE680FE72E",
    "code": "-- STAT_SET_POS\nlocal retval --[[ boolean ]] =\n\tStatSetPos(\n\t\tstatName --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetProfileSettingValue",
    "hash": "0x68F01422BE1D838F",
    "code": "-- STAT_SET_PROFILE_SETTING_VALUE\nStatSetProfileSettingValue(\n\tprofileSetting --[[ integer ]], \n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does not take effect immediately, unfortunately.\nprofileSetting seems to only be 936, 937 and 938 in scripts"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetString",
    "hash": "0xA87B2335D12531D7",
    "code": "-- STAT_SET_STRING\nlocal retval --[[ boolean ]] =\n\tStatSetString(\n\t\tstatName --[[ Hash ]], \n\t\tvalue --[[ string ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSetUserId",
    "hash": "0x8CDDF1E452BABE11",
    "code": "-- STAT_SET_USER_ID\nlocal retval --[[ boolean ]] =\n\tStatSetUserId(\n\t\tstatName --[[ Hash ]], \n\t\tvalue --[[ string ]], \n\t\tsave --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "StatSlotIsLoaded",
    "hash": "0x0D0A9F0E7BD91E3C",
    "code": "-- STAT_SLOT_IS_LOADED\nlocal retval --[[ boolean ]] =\n\tStatSlotIsLoaded(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x0077f15613d36993",
    "hash": "0x0077F15613D36993",
    "code": "-- 0x0077F15613D36993\nN_0x0077f15613d36993(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x015b03ee1c43e6ec",
    "hash": "0x015B03EE1C43E6EC",
    "code": "-- 0x015B03EE1C43E6EC\nN_0x015b03ee1c43e6ec(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x03c2eebb04b3fb72",
    "hash": "0x03C2EEBB04B3FB72",
    "code": "-- 0x03C2EEBB04B3FB72\nN_0x03c2eebb04b3fb72(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x06eaf70ae066441e",
    "hash": "0x06EAF70AE066441E",
    "code": "-- 0x06EAF70AE066441E\nN_0x06eaf70ae066441e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x0a9c7f36e5d7b683",
    "hash": "0x0A9C7F36E5D7B683",
    "code": "-- 0x0A9C7F36E5D7B683\nN_0x0a9c7f36e5d7b683(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x0b565b0aae56a0e8",
    "hash": "0x0B565B0AAE56A0E8",
    "code": "-- 0x0B565B0AAE56A0E8\nN_0x0b565b0aae56a0e8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x0b8b7f74bf061c6d",
    "hash": "0x0B8B7F74BF061C6D",
    "code": "-- 0x0B8B7F74BF061C6D\nlocal retval --[[ Any ]] =\n\tN_0x0b8b7f74bf061c6d()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x0d01d20616fc73fb",
    "hash": "0x0D01D20616FC73FB",
    "code": "-- 0x0D01D20616FC73FB\nN_0x0d01d20616fc73fb(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x14e0b2d1ad1044e0",
    "hash": "0x14E0B2D1AD1044E0",
    "code": "-- 0x14E0B2D1AD1044E0\nlocal p0 --[[ Any ]], p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tN_0x14e0b2d1ad1044e0()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x14eda9ee27bd1626",
    "hash": "0x14EDA9EE27BD1626",
    "code": "-- 0x14EDA9EE27BD1626\nN_0x14eda9ee27bd1626(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x164c5ff663790845",
    "hash": "0x164C5FF663790845",
    "code": "-- 0x164C5FF663790845\nN_0x164c5ff663790845(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x1a7ce7cd3e653485",
    "hash": "0x1A7CE7CD3E653485",
    "code": "-- 0x1A7CE7CD3E653485\nN_0x1a7ce7cd3e653485(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x1a8ea222f9c67dbb",
    "hash": "0x1A8EA222F9C67DBB",
    "code": "-- 0x1A8EA222F9C67DBB\nlocal retval --[[ Any ]], p0 --[[ number ]] =\n\tN_0x1a8ea222f9c67dbb()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x26d7399b9587fe89",
    "hash": "0x26D7399B9587FE89",
    "code": "-- 0x26D7399B9587FE89\nN_0x26d7399b9587fe89(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "STATS::0x343B27E2(0);  \nSTATS::0x343B27E2(1);  \nSTATS::0x343B27E2(2);  \nSTATS::0x343B27E2(3);  \nSTATS::0x343B27E2(4);  \nSTATS::0x343B27E2(5);  \nSTATS::0x343B27E2(6);  \nSTATS::0x343B27E2(7);  \nIdentical in ingamehud & maintransition."
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x27aa1c973cacfe63",
    "hash": "0x27AA1C973CACFE63",
    "code": "-- 0x27AA1C973CACFE63\nN_0x27aa1c973cacfe63(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x2818ff6638cb09de",
    "hash": "0x2818FF6638CB09DE",
    "code": "-- 0x2818FF6638CB09DE\nN_0x2818ff6638cb09de(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x282b6739644f4347",
    "hash": "0x282B6739644F4347",
    "code": "-- 0x282B6739644F4347\nN_0x282b6739644f4347(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x28ecb8ac2f607db2",
    "hash": "0x28ECB8AC2F607DB2",
    "code": "-- 0x28ECB8AC2F607DB2\nN_0x28ecb8ac2f607db2(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x2cd90358f67d0aa8",
    "hash": "0x2CD90358F67D0AA8",
    "code": "-- 0x2CD90358F67D0AA8\nN_0x2cd90358f67d0aa8(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x2d7a9b577e72385e",
    "hash": "0x2D7A9B577E72385E",
    "code": "-- 0x2D7A9B577E72385E\nN_0x2d7a9b577e72385e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x2e0259babc27a327",
    "hash": "0x2E0259BABC27A327",
    "code": "-- 0x2E0259BABC27A327\nN_0x2e0259babc27a327(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x2fa3173480008493",
    "hash": "0x2FA3173480008493",
    "code": "-- 0x2FA3173480008493\nN_0x2fa3173480008493(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x316db59cd14c1774",
    "hash": "0x316DB59CD14C1774",
    "code": "-- 0x316DB59CD14C1774\nN_0x316db59cd14c1774(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x32cac93c9de73d32",
    "hash": "0x32CAC93C9DE73D32",
    "code": "-- 0x32CAC93C9DE73D32\nlocal retval --[[ Any ]] =\n\tN_0x32cac93c9de73d32()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x33d72899e24c3365",
    "hash": "0x33D72899E24C3365",
    "code": "-- 0x33D72899E24C3365\nlocal retval --[[ Any ]] =\n\tN_0x33d72899e24c3365(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x34770b9ce0e03b91",
    "hash": "0x34770B9CE0E03B91",
    "code": "-- 0x34770B9CE0E03B91\nlocal retval --[[ boolean ]], p1 --[[ Any ]] =\n\tN_0x34770b9ce0e03b91(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x38491439b6ba7f7d",
    "hash": "0x38491439B6BA7F7D",
    "code": "-- 0x38491439B6BA7F7D\nlocal retval --[[ number ]] =\n\tN_0x38491439b6ba7f7d(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x38baaa5dd4c9d19f",
    "hash": "0x38BAAA5DD4C9D19F",
    "code": "-- 0x38BAAA5DD4C9D19F\nN_0x38baaa5dd4c9d19f(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets profile setting 934"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x3de3aa516fb126a4",
    "hash": "0x3DE3AA516FB126A4",
    "code": "-- 0x3DE3AA516FB126A4\nN_0x3de3aa516fb126a4(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x3ebeac6c3f81f6bd",
    "hash": "0x3EBEAC6C3F81F6BD",
    "code": "-- 0x3EBEAC6C3F81F6BD\nN_0x3ebeac6c3f81f6bd(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x419615486bbf1956",
    "hash": "0x419615486BBF1956",
    "code": "-- 0x419615486BBF1956\nN_0x419615486bbf1956(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x44919cc079bb60bf",
    "hash": "0x44919CC079BB60BF",
    "code": "-- 0x44919CC079BB60BF\nN_0x44919cc079bb60bf(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x4aff7e02e485e92b",
    "hash": "0x4AFF7E02E485E92B",
    "code": "-- 0x4AFF7E02E485E92B\nN_0x4aff7e02e485e92b()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x4c89fe2bdeb3f169",
    "hash": "0x4C89FE2BDEB3F169",
    "code": "-- 0x4C89FE2BDEB3F169\nlocal retval --[[ Any ]] =\n\tN_0x4c89fe2bdeb3f169()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x4dc416f246a41fc8",
    "hash": "0x4DC416F246A41FC8",
    "code": "-- 0x4DC416F246A41FC8\nN_0x4dc416f246a41fc8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x4fcdbd3f0a813c25",
    "hash": "0x4FCDBD3F0A813C25",
    "code": "-- 0x4FCDBD3F0A813C25\nN_0x4fcdbd3f0a813c25(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x53c31853ec9531ff",
    "hash": "0x53C31853EC9531FF",
    "code": "-- 0x53C31853EC9531FF\nN_0x53c31853ec9531ff(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x53cae13e9b426993",
    "hash": "0x53CAE13E9B426993",
    "code": "-- 0x53CAE13E9B426993\nN_0x53cae13e9b426993(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x55384438fc55ad8e",
    "hash": "0x55384438FC55AD8E",
    "code": "-- 0x55384438FC55AD8E\nN_0x55384438fc55ad8e(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets profile setting 935"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x55a8becaf28a4eb7",
    "hash": "0x55A8BECAF28A4EB7",
    "code": "-- 0x55A8BECAF28A4EB7\nlocal retval --[[ Any ]] =\n\tN_0x55a8becaf28a4eb7()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x5688585e6d563cd8",
    "hash": "0x5688585E6D563CD8",
    "code": "-- 0x5688585E6D563CD8\nN_0x5688585e6d563cd8(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "STAT_SET_*"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x5a556b229a169402",
    "hash": "0x5A556B229A169402",
    "code": "-- 0x5A556B229A169402\nlocal retval --[[ boolean ]] =\n\tN_0x5a556b229a169402()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x5bd5f255321c4aaf",
    "hash": "0x5BD5F255321C4AAF",
    "code": "-- 0x5BD5F255321C4AAF\nlocal retval --[[ Any ]] =\n\tN_0x5bd5f255321c4aaf(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x5bf29846c6527c54",
    "hash": "0x5BF29846C6527C54",
    "code": "-- 0x5BF29846C6527C54\nN_0x5bf29846c6527c54(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x5cdaed54b34b0ed0",
    "hash": "0x5CDAED54B34B0ED0",
    "code": "-- 0x5CDAED54B34B0ED0\nN_0x5cdaed54b34b0ed0(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x5ead2bf6484852e4",
    "hash": "0x5EAD2BF6484852E4",
    "code": "-- 0x5EAD2BF6484852E4\nlocal retval --[[ boolean ]] =\n\tN_0x5ead2bf6484852e4()",
    "parameters": [],
    "returns": [],
    "description": "example from completionpercentage_controller.ysc.c4\nif (STATS::_5EAD2BF6484852E4()) {\n            MISC::SET_BIT(g_17b95._f20df._ff10, 15);\n            STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);\n        }"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x5ff2c33b13a02a11",
    "hash": "0x5FF2C33B13A02A11",
    "code": "-- 0x5FF2C33B13A02A11\nN_0x5ff2c33b13a02a11(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x60eedc12af66e846",
    "hash": "0x60EEDC12AF66E846",
    "code": "-- 0x60EEDC12AF66E846\nN_0x60eedc12af66e846(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x629526aba383bcaa",
    "hash": "0x629526ABA383BCAA",
    "code": "-- 0x629526ABA383BCAA\nN_0x629526aba383bcaa()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6483c25849031c4f",
    "hash": "0x6483C25849031C4F",
    "code": "-- 0x6483C25849031C4F\nlocal p3 --[[ Any ]] =\n\tN_0x6483c25849031c4f(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6551b1f7f6cd46ea",
    "hash": "0x6551B1F7F6CD46EA",
    "code": "-- 0x6551B1F7F6CD46EA\nN_0x6551b1f7f6cd46ea(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x678f86d8fc040bdb",
    "hash": "0x678F86D8FC040BDB",
    "code": "-- 0x678F86D8FC040BDB\nN_0x678f86d8fc040bdb(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6a60e43998228229",
    "hash": "0x6A60E43998228229",
    "code": "-- 0x6A60E43998228229\nN_0x6a60e43998228229(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6a7f19756f1a9016",
    "hash": "0x6A7F19756F1A9016",
    "code": "-- 0x6A7F19756F1A9016\nlocal retval --[[ boolean ]] =\n\tN_0x6a7f19756f1a9016()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6bc0acd0673acebe",
    "hash": "0x6BC0ACD0673ACEBE",
    "code": "-- 0x6BC0ACD0673ACEBE\nlocal valueA --[[ integer ]], valueB --[[ integer ]] =\n\tN_0x6bc0acd0673acebe(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6bccf9948492fd85",
    "hash": "0x6BCCF9948492FD85",
    "code": "-- 0x6BCCF9948492FD85\nN_0x6bccf9948492fd85(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6dee77aff8c21bd1",
    "hash": "0x6DEE77AFF8C21BD1",
    "code": "-- 0x6DEE77AFF8C21BD1\nlocal retval --[[ boolean ]], playerAccountId --[[ integer ]], posixTime --[[ integer ]] =\n\tN_0x6dee77aff8c21bd1()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6e0a5253375c4584",
    "hash": "0x6E0A5253375C4584",
    "code": "-- 0x6E0A5253375C4584\nlocal retval --[[ Any ]] =\n\tN_0x6e0a5253375c4584()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x6f361b8889a792a3",
    "hash": "0x6F361B8889A792A3",
    "code": "-- 0x6F361B8889A792A3\nN_0x6f361b8889a792a3()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x7033eefd9b28088e",
    "hash": "0x7033EEFD9B28088E",
    "code": "-- 0x7033EEFD9B28088E\nN_0x7033eefd9b28088e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x71b008056e5692d6",
    "hash": "0x71B008056E5692D6",
    "code": "-- 0x71B008056E5692D6\nN_0x71b008056e5692d6()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x723c1ce13fbfdb67",
    "hash": "0x723C1CE13FBFDB67",
    "code": "-- 0x723C1CE13FBFDB67\nN_0x723c1ce13fbfdb67(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x73001e34f85137f8",
    "hash": "0x73001E34F85137F8",
    "code": "-- 0x73001E34F85137F8\nN_0x73001e34f85137f8(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x79d310a861697cc9",
    "hash": "0x79D310A861697CC9",
    "code": "-- 0x79D310A861697CC9\nN_0x79d310a861697cc9(\n\tprofileSetting --[[ integer ]], \n\tsettingValue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets profile setting 940 and 941\n\n_SET_F* - _SET_G*\n\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x7b18da61f6bae9d5",
    "hash": "0x7B18DA61F6BAE9D5",
    "code": "-- 0x7B18DA61F6BAE9D5\nN_0x7b18da61f6bae9d5(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x7d36291161859389",
    "hash": "0x7D36291161859389",
    "code": "-- 0x7D36291161859389\nN_0x7d36291161859389(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x7d8ba05688ad64c7",
    "hash": "0x7D8BA05688AD64C7",
    "code": "-- 0x7D8BA05688AD64C7\nN_0x7d8ba05688ad64c7(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x7e6946f68a38b74f",
    "hash": "0x7E6946F68A38B74F",
    "code": "-- 0x7E6946F68A38B74F\nlocal retval --[[ boolean ]] =\n\tN_0x7e6946f68a38b74f(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x7eec2a316c250073",
    "hash": "0x7EEC2A316C250073",
    "code": "-- 0x7EEC2A316C250073\nN_0x7eec2a316c250073(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "_PLAYSTATS_ROB_ARMOURD_TRUCK"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x7f2c4cdf2e82df4c",
    "hash": "0x7F2C4CDF2E82DF4C",
    "code": "-- 0x7F2C4CDF2E82DF4C\nlocal retval --[[ boolean ]] =\n\tN_0x7f2c4cdf2e82df4c(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x810b5fcc52ec7ff0",
    "hash": "0x810B5FCC52EC7FF0",
    "code": "-- 0x810B5FCC52EC7FF0\nN_0x810b5fcc52ec7ff0(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x830c3a44eb3f2cf9",
    "hash": "0x830C3A44EB3F2CF9",
    "code": "-- 0x830C3A44EB3F2CF9\nN_0x830c3a44eb3f2cf9(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x84a810b375e69c0e",
    "hash": "0x84A810B375E69C0E",
    "code": "-- 0x84A810B375E69C0E\nlocal retval --[[ Any ]] =\n\tN_0x84a810b375e69c0e()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x84dfc579c2fc214c",
    "hash": "0x84DFC579C2FC214C",
    "code": "-- 0x84DFC579C2FC214C\nN_0x84dfc579c2fc214c(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x88087ee1f28024ae",
    "hash": "0x88087EE1F28024AE",
    "code": "-- 0x88087EE1F28024AE\nN_0x88087ee1f28024ae(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x88578f6ec36b4a3a",
    "hash": "0x88578F6EC36B4A3A",
    "code": "-- 0x88578F6EC36B4A3A\nlocal retval --[[ Any ]] =\n\tN_0x88578f6ec36b4a3a(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x8989cbd7b4e82534",
    "hash": "0x8989CBD7B4E82534",
    "code": "-- 0x8989CBD7B4E82534\nN_0x8989cbd7b4e82534(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x8b9cdbd6c566c38c",
    "hash": "0x8B9CDBD6C566C38C",
    "code": "-- 0x8B9CDBD6C566C38C\nlocal retval --[[ Any ]] =\n\tN_0x8b9cdbd6c566c38c()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x8c9d11605e59d955",
    "hash": "0x8C9D11605E59D955",
    "code": "-- 0x8C9D11605E59D955\nN_0x8c9d11605e59d955(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x8d8adb562f09a245",
    "hash": "0x8D8ADB562F09A245",
    "code": "-- 0x8D8ADB562F09A245\nN_0x8d8adb562f09a245(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x8ec74ceb042e7cff",
    "hash": "0x8EC74CEB042E7CFF",
    "code": "-- 0x8EC74CEB042E7CFF\nN_0x8ec74ceb042e7cff(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x92fc0eedfac04a14",
    "hash": "0x92FC0EEDFAC04A14",
    "code": "-- 0x92FC0EEDFAC04A14\nN_0x92fc0eedfac04a14(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x930f504203f561c9",
    "hash": "0x930F504203F561C9",
    "code": "-- 0x930F504203F561C9\nN_0x930f504203f561c9(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x96e6d5150dbf1c09",
    "hash": "0x96E6D5150DBF1C09",
    "code": "-- 0x96E6D5150DBF1C09\nN_0x96e6d5150dbf1c09(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x98e2bc1ca26287c3",
    "hash": "0x98E2BC1CA26287C3",
    "code": "-- 0x98E2BC1CA26287C3\nN_0x98e2bc1ca26287c3()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x9a62ec95ae10e011",
    "hash": "0x9A62EC95AE10E011",
    "code": "-- 0x9A62EC95AE10E011\nlocal retval --[[ integer ]] =\n\tN_0x9a62ec95ae10e011()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x9b4bd21d69b1e609",
    "hash": "0x9B4BD21D69B1E609",
    "code": "-- 0x9B4BD21D69B1E609\nN_0x9b4bd21d69b1e609()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0x9ec8858184cd253a",
    "hash": "0x9EC8858184CD253A",
    "code": "-- 0x9EC8858184CD253A\nlocal retval --[[ Any ]] =\n\tN_0x9ec8858184cd253a()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa0f93d5465b3094d",
    "hash": "0xA0F93D5465B3094D",
    "code": "-- 0xA0F93D5465B3094D\nlocal retval --[[ boolean ]], p0 --[[ Any ]] =\n\tN_0xa0f93d5465b3094d()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa3c53804bdb68ed2",
    "hash": "0xA3C53804BDB68ED2",
    "code": "-- 0xA3C53804BDB68ED2\nN_0xa3c53804bdb68ed2(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa6f54bb2ffca35ea",
    "hash": "0xA6F54BB2FFCA35EA",
    "code": "-- 0xA6F54BB2FFCA35EA\nN_0xa6f54bb2ffca35ea(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa736cf7fb7c5bff4",
    "hash": "0xA736CF7FB7C5BFF4",
    "code": "-- 0xA736CF7FB7C5BFF4\nlocal p0 --[[ Any ]], p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tN_0xa736cf7fb7c5bff4()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa761d4ac6115623d",
    "hash": "0xA761D4AC6115623D",
    "code": "-- 0xA761D4AC6115623D\nlocal retval --[[ Any ]] =\n\tN_0xa761d4ac6115623d()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa78b8fa58200da56",
    "hash": "0xA78B8FA58200DA56",
    "code": "-- 0xA78B8FA58200DA56\nN_0xa78b8fa58200da56(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "STATS::0xE3247582(0);  \nSTATS::0xE3247582(1);  \nSTATS::0xE3247582(2);  \nSTATS::0xE3247582(3);  \nSTATS::0xE3247582(4);  \nSTATS::0xE3247582(5);  \nSTATS::0xE3247582(6);"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa8733668d1047b51",
    "hash": "0xA8733668D1047B51",
    "code": "-- 0xA8733668D1047B51\nN_0xa8733668d1047b51(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xa943fd1722e11efd",
    "hash": "0xA943FD1722E11EFD",
    "code": "-- 0xA943FD1722E11EFD\nlocal retval --[[ Any ]] =\n\tN_0xa943fd1722e11efd()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xaa525dff66bb82f5",
    "hash": "0xAA525DFF66BB82F5",
    "code": "-- 0xAA525DFF66BB82F5\nN_0xaa525dff66bb82f5(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xaff47709f1d5dcce",
    "hash": "0xAFF47709F1D5DCCE",
    "code": "-- 0xAFF47709F1D5DCCE\nlocal retval --[[ Any ]] =\n\tN_0xaff47709f1d5dcce()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xb1d2bb1e1631f5b1",
    "hash": "0xB1D2BB1E1631F5B1",
    "code": "-- 0xB1D2BB1E1631F5B1\nlocal retval --[[ boolean ]] =\n\tN_0xb1d2bb1e1631f5b1()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xb26f670685631727",
    "hash": "0xB26F670685631727",
    "code": "-- 0xB26F670685631727\nN_0xb26f670685631727(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xb3da2606774a8e2d",
    "hash": "0xB3DA2606774A8E2D",
    "code": "-- 0xB3DA2606774A8E2D\nlocal retval --[[ boolean ]] =\n\tN_0xb3da2606774a8e2d()",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 1.\nNETWORK_IS_*"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xba9749cc94c1fd85",
    "hash": "0xBA9749CC94C1FD85",
    "code": "-- 0xBA9749CC94C1FD85\nlocal retval --[[ Any ]] =\n\tN_0xba9749cc94c1fd85()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xbaa2f0490e146be8",
    "hash": "0xBAA2F0490E146BE8",
    "code": "-- 0xBAA2F0490E146BE8\nN_0xbaa2f0490e146be8(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xbe3db208333d9844",
    "hash": "0xBE3DB208333D9844",
    "code": "-- 0xBE3DB208333D9844\nlocal retval --[[ Any ]] =\n\tN_0xbe3db208333d9844()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xbed9f5693f34ed17",
    "hash": "0xBED9F5693F34ED17",
    "code": "-- 0xBED9F5693F34ED17\nlocal retval --[[ boolean ]], outValue --[[ number ]] =\n\tN_0xbed9f5693f34ed17(\n\t\tstatName --[[ Hash ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xbf371cd2b64212fd",
    "hash": "0xBF371CD2B64212FD",
    "code": "-- 0xBF371CD2B64212FD\nN_0xbf371cd2b64212fd(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xbfafdb5faaa5c5ab",
    "hash": "0xBFAFDB5FAAA5C5AB",
    "code": "-- 0xBFAFDB5FAAA5C5AB\nN_0xbfafdb5faaa5c5ab(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc01d2470f22cde5a",
    "hash": "0xC01D2470F22CDE5A",
    "code": "-- 0xC01D2470F22CDE5A\nN_0xc01d2470f22cde5a()",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub\n\nNativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc03fab2c2f92289b",
    "hash": "0xC03FAB2C2F92289B",
    "code": "-- 0xC03FAB2C2F92289B\nN_0xc03fab2c2f92289b(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc0e0d686ddfc6eae",
    "hash": "0xC0E0D686DDFC6EAE",
    "code": "-- 0xC0E0D686DDFC6EAE\nlocal retval --[[ Any ]] =\n\tN_0xc0e0d686ddfc6eae()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc141b8917e0017ec",
    "hash": "0xC141B8917E0017EC",
    "code": "-- 0xC141B8917E0017EC\nN_0xc141b8917e0017ec()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc14bd9f5337219b2",
    "hash": "0xC14BD9F5337219B2",
    "code": "-- 0xC14BD9F5337219B2\nN_0xc14bd9f5337219b2(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc1e963c58664b556",
    "hash": "0xC1E963C58664B556",
    "code": "-- 0xC1E963C58664B556\nN_0xc1e963c58664b556(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc67e2da1cbe759e2",
    "hash": "0xC67E2DA1CBE759E2",
    "code": "-- 0xC67E2DA1CBE759E2\nN_0xc67e2da1cbe759e2()",
    "parameters": [],
    "returns": [],
    "description": "Sets profile setting 939\n\nNativeDB Introduced: v1734"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc6e0e2616a7576bb",
    "hash": "0xC6E0E2616A7576BB",
    "code": "-- 0xC6E0E2616A7576BB\nlocal retval --[[ Any ]] =\n\tN_0xc6e0e2616a7576bb()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xc847b43f369ac0b5",
    "hash": "0xC847B43F369AC0B5",
    "code": "-- 0xC847B43F369AC0B5\nN_0xc847b43f369ac0b5()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xcc25a4553dfbf9ea",
    "hash": "0xCC25A4553DFBF9EA",
    "code": "-- 0xCC25A4553DFBF9EA\nN_0xcc25a4553dfbf9ea(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xd1a1ee3b4fa8e760",
    "hash": "0xD1A1EE3B4FA8E760",
    "code": "-- 0xD1A1EE3B4FA8E760\nN_0xd1a1ee3b4fa8e760(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xd1c9b92bdd3f151d",
    "hash": "0xD1C9B92BDD3F151D",
    "code": "-- 0xD1C9B92BDD3F151D\nN_0xd1c9b92bdd3f151d(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xd4367d310f079db0",
    "hash": "0xD4367D310F079DB0",
    "code": "-- 0xD4367D310F079DB0\nN_0xd4367d310f079db0(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xd558bec0bba7e8d2",
    "hash": "0xD558BEC0BBA7E8D2",
    "code": "-- 0xD558BEC0BBA7E8D2\nN_0xd558bec0bba7e8d2(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xd6ca58b3b53a0f22",
    "hash": "0xD6CA58B3B53A0F22",
    "code": "-- 0xD6CA58B3B53A0F22\nN_0xd6ca58b3b53a0f22(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xdaf80797fc534bec",
    "hash": "0xDAF80797FC534BEC",
    "code": "-- 0xDAF80797FC534BEC\nN_0xdaf80797fc534bec(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xdeaaf77eb3687e97",
    "hash": "0xDEAAF77EB3687E97",
    "code": "-- 0xDEAAF77EB3687E97\nlocal retval --[[ Any ]], p1 --[[ Any ]] =\n\tN_0xdeaaf77eb3687e97(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xdfbd93bf2943e29b",
    "hash": "0xDFBD93BF2943E29B",
    "code": "-- 0xDFBD93BF2943E29B\nN_0xdfbd93bf2943e29b(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xdfcdb14317a9b361",
    "hash": "0xDFCDB14317A9B361",
    "code": "-- 0xDFCDB14317A9B361\nN_0xdfcdb14317a9b361(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xe3261d791eb44acb",
    "hash": "0xE3261D791EB44ACB",
    "code": "-- 0xE3261D791EB44ACB\nN_0xe3261d791eb44acb(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xe496a53ba5f50a56",
    "hash": "0xE496A53BA5F50A56",
    "code": "-- 0xE496A53BA5F50A56\nlocal retval --[[ Any ]] =\n\tN_0xe496a53ba5f50a56(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xe8853fbce7d8d0d6",
    "hash": "0xE8853FBCE7D8D0D6",
    "code": "-- 0xE8853FBCE7D8D0D6\nlocal retval --[[ Any ]] =\n\tN_0xe8853fbce7d8d0d6()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xecb41ac6ab754401",
    "hash": "0xECB41AC6AB754401",
    "code": "-- 0xECB41AC6AB754401\nlocal retval --[[ boolean ]] =\n\tN_0xecb41ac6ab754401()",
    "parameters": [],
    "returns": [],
    "description": "STAT_LOAD_*"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xedbf6c9b0d2c65c8",
    "hash": "0xEDBF6C9B0D2C65C8",
    "code": "-- 0xEDBF6C9B0D2C65C8\nN_0xedbf6c9b0d2c65c8(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xf06a6f41cb445443",
    "hash": "0xF06A6F41CB445443",
    "code": "-- 0xF06A6F41CB445443\nN_0xf06a6f41cb445443(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xf11f01d98113536a",
    "hash": "0xF11F01D98113536A",
    "code": "-- 0xF11F01D98113536A\nlocal retval --[[ Any ]], p0 --[[ number ]] =\n\tN_0xf11f01d98113536a()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xf1a1803d3476f215",
    "hash": "0xF1A1803D3476F215",
    "code": "-- 0xF1A1803D3476F215\nN_0xf1a1803d3476f215(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets profile setting 933"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xf534d94dfa2ead26",
    "hash": "0xF534D94DFA2EAD26",
    "code": "-- 0xF534D94DFA2EAD26\nN_0xf534d94dfa2ead26(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xf8c54a461c3e11dc",
    "hash": "0xF8C54A461C3E11DC",
    "code": "-- 0xF8C54A461C3E11DC\nlocal p0 --[[ Any ]], p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tN_0xf8c54a461c3e11dc()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xf9096193df1f99d4",
    "hash": "0xF9096193DF1F99D4",
    "code": "-- 0xF9096193DF1F99D4\nN_0xf9096193df1f99d4(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xf9f2922717b819ec",
    "hash": "0xF9F2922717B819EC",
    "code": "-- 0xF9F2922717B819EC\nlocal retval --[[ Any ]] =\n\tN_0xf9f2922717b819ec()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STATS",
    "apiset": "API set: client",
    "name": "N_0xfcc228e07217fcac",
    "hash": "0xFCC228E07217FCAC",
    "code": "-- 0xFCC228E07217FCAC\nN_0xfcc228e07217fcac(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "AddModelToCreatorBudget",
    "hash": "0x0BC3144DEB678666",
    "code": "-- ADD_MODEL_TO_CREATOR_BUDGET\nlocal retval --[[ boolean ]] =\n\tAddModelToCreatorBudget(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "AllowPlayerSwitchAscent",
    "hash": "0x8E2A065ABDAE6994",
    "code": "-- ALLOW_PLAYER_SWITCH_ASCENT\nAllowPlayerSwitchAscent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "AllowPlayerSwitchDescent",
    "hash": "0xAD5FDF34B81BFE79",
    "code": "-- ALLOW_PLAYER_SWITCH_DESCENT\nAllowPlayerSwitchDescent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "AllowPlayerSwitchOutro",
    "hash": "0x74DE2E8739086740",
    "code": "-- ALLOW_PLAYER_SWITCH_OUTRO\nAllowPlayerSwitchOutro()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "AllowPlayerSwitchPan",
    "hash": "0x43D1680C6D19A8E9",
    "code": "-- ALLOW_PLAYER_SWITCH_PAN\nAllowPlayerSwitchPan()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "BeginSrl",
    "hash": "0x9BADDC94EF83B823",
    "code": "-- BEGIN_SRL\nBeginSrl()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "ClearFocus",
    "hash": "0x31B73D1EA9F01DA2",
    "code": "-- CLEAR_FOCUS\nClearFocus()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "ClearHdArea",
    "hash": "0xCE58B1CFB9290813",
    "code": "-- CLEAR_HD_AREA\nClearHdArea()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "DisableSwitchOutroFx",
    "hash": "0xBD605B8E0E18B3BB",
    "code": "-- DISABLE_SWITCH_OUTRO_FX\nDisableSwitchOutroFx()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "DoesAnimDictExist",
    "hash": "0x2DA49C3B79856961",
    "code": "-- DOES_ANIM_DICT_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesAnimDictExist(\n\t\tanimDict --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "EnableSwitchPauseBeforeDescent",
    "hash": "0xD4793DFF3AF2ABCD",
    "code": "-- ENABLE_SWITCH_PAUSE_BEFORE_DESCENT\nEnableSwitchPauseBeforeDescent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "EndSrl",
    "hash": "0x0A41540E63C9EE17",
    "code": "-- END_SRL\nEndSrl()",
    "parameters": [],
    "returns": [],
    "description": "Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetGlobalWaterType",
    "hash": "0xF741BD853611592D",
    "code": "-- _GET_GLOBAL_WATER_TYPE\nlocal retval --[[ integer ]] =\n\tGetGlobalWaterType()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetIdealPlayerSwitchType",
    "hash": "0xB5D7B26B45720E05",
    "code": "-- GET_IDEAL_PLAYER_SWITCH_TYPE\nlocal retval --[[ integer ]] =\n\tGetIdealPlayerSwitchType(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "x1, y1, z1 -- Coords of your ped model  \nx2, y2, z2 -- Coords of the ped you want to switch to"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetLodscale",
    "hash": "0x0C15B0E443B2349D",
    "code": "-- GET_LODSCALE\nlocal retval --[[ number ]] =\n\tGetLodscale()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetNumberOfStreamingRequests",
    "hash": "0x4060057271CEBC89",
    "code": "-- GET_NUMBER_OF_STREAMING_REQUESTS\nlocal retval --[[ integer ]] =\n\tGetNumberOfStreamingRequests()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetPlayerShortSwitchState",
    "hash": "0x20F898A5D9782800",
    "code": "-- GET_PLAYER_SHORT_SWITCH_STATE\nlocal retval --[[ integer ]] =\n\tGetPlayerShortSwitchState()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetPlayerSwitchInterpOutCurrentTime",
    "hash": "0x5B48A06DD0E792A5",
    "code": "-- GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME\nlocal retval --[[ Any ]] =\n\tGetPlayerSwitchInterpOutCurrentTime()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetPlayerSwitchInterpOutDuration",
    "hash": "0x08C2D6C52A3104BB",
    "code": "-- GET_PLAYER_SWITCH_INTERP_OUT_DURATION\nlocal retval --[[ integer ]] =\n\tGetPlayerSwitchInterpOutDuration()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetPlayerSwitchJumpCutIndex",
    "hash": "0x78C0D93253149435",
    "code": "-- GET_PLAYER_SWITCH_JUMP_CUT_INDEX\nlocal retval --[[ integer ]] =\n\tGetPlayerSwitchJumpCutIndex()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetPlayerSwitchState",
    "hash": "0x470555300D10B2A5",
    "code": "-- GET_PLAYER_SWITCH_STATE\nlocal retval --[[ integer ]] =\n\tGetPlayerSwitchState()",
    "parameters": [],
    "returns": [],
    "description": "Returns:\nReturns 5 if the player is in the air (in a state of switch).\nReturns 12 if the player is either not in the air or if the switch is completed."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetPlayerSwitchType",
    "hash": "0xB3C94A90D9FC9E62",
    "code": "-- GET_PLAYER_SWITCH_TYPE\nlocal retval --[[ integer ]] =\n\tGetPlayerSwitchType()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "GetUsedCreatorModelMemoryPercentage",
    "hash": "0x3D3D8B3BE5A83D35",
    "code": "-- _GET_USED_CREATOR_MODEL_MEMORY_PERCENTAGE\nlocal retval --[[ number ]] =\n\tGetUsedCreatorModelMemoryPercentage()",
    "parameters": [],
    "returns": [],
    "description": "0.0 = no memory used\n1.0 = all memory used\n\nMaximum model memory (as defined in common\\data\\missioncreatordata.meta) is 100 MiB\n\nGET_*"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "HasAnimDictLoaded",
    "hash": "0xD031A9162D01088C",
    "code": "-- HAS_ANIM_DICT_LOADED\nlocal retval --[[ boolean ]] =\n\tHasAnimDictLoaded(\n\t\tanimDict --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "HasAnimSetLoaded",
    "hash": "0xC4EA073D86FB29B0",
    "code": "-- HAS_ANIM_SET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasAnimSetLoaded(\n\t\tanimSet --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped.\n\nAnimation set and clip set are synonymous. See SET_PED_MOVEMENT_CLIPSET."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "HasClipSetLoaded",
    "hash": "0x318234F4F3738AF3",
    "code": "-- HAS_CLIP_SET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasClipSetLoaded(\n\t\tclipSet --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Alias for HAS_ANIM_SET_LOADED."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "HasCollisionForModelLoaded",
    "hash": "0x22CCA434E368F03A",
    "code": "-- HAS_COLLISION_FOR_MODEL_LOADED\nlocal retval --[[ boolean ]] =\n\tHasCollisionForModelLoaded(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "HasModelLoaded",
    "hash": "0x98A4EB5D89A0C952",
    "code": "-- HAS_MODEL_LOADED\nlocal retval --[[ boolean ]] =\n\tHasModelLoaded(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [
      "model: \n\nThe model hash to check for."
    ],
    "returns": [
      "A boolean indicating whether the archetype is loaded (true) or not (false)."
    ],
    "description": "Parameters:\n\nmodel: \n\nThe model hash to check for.\n\nReturns:\n\nA boolean indicating whether the archetype is loaded (true) or not (false).\n\nReturns whether the specified model (archetype) is currently loaded.\n\nNote that this will return 'true' even if the model has been requested and loaded by something other than the current script, if you're intending to actually use the model in a later frame, you should call REQUEST_MODEL anyway."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "HasNamedPtfxAssetLoaded",
    "hash": "0x8702416E512EC454",
    "code": "-- HAS_NAMED_PTFX_ASSET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasNamedPtfxAssetLoaded(\n\t\tfxName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "HasPtfxAssetLoaded",
    "hash": "0xCA7D9B86ECA7481B",
    "code": "-- HAS_PTFX_ASSET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasPtfxAssetLoaded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "InitCreatorBudget",
    "hash": "0xB5A4DB34FE89B88A",
    "code": "-- INIT_CREATOR_BUDGET\nInitCreatorBudget()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsEntityFocus",
    "hash": "0x2DDFF3FB9075D747",
    "code": "-- IS_ENTITY_FOCUS\nlocal retval --[[ boolean ]] =\n\tIsEntityFocus(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsIplActive",
    "hash": "0x88A741E44A2B3495",
    "code": "-- IS_IPL_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsIplActive(\n\t\tiplName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsModelAPed",
    "hash": "0x75816577FEA6DAD5",
    "code": "-- _IS_MODEL_A_PED\nlocal retval --[[ boolean ]] =\n\tIsModelAPed(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsModelAVehicle",
    "hash": "0x19AAC8F07BFEC53E",
    "code": "-- IS_MODEL_A_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsModelAVehicle(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the specified model represents a vehicle."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsModelInCdimage",
    "hash": "0x35B9E0803292B641",
    "code": "-- IS_MODEL_IN_CDIMAGE\nlocal retval --[[ boolean ]] =\n\tIsModelInCdimage(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Check if model is in cdimage(rpf)"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsModelValid",
    "hash": "0xC0296A2EDF545E92",
    "code": "-- IS_MODEL_VALID\nlocal retval --[[ boolean ]] =\n\tIsModelValid(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the specified model exists in the game."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsNetworkLoadingScene",
    "hash": "0x41CA5A33160EA4AB",
    "code": "-- IS_NETWORK_LOADING_SCENE\nlocal retval --[[ boolean ]] =\n\tIsNetworkLoadingScene()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsNewLoadSceneActive",
    "hash": "0xA41A05B6CB741B85",
    "code": "-- IS_NEW_LOAD_SCENE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsNewLoadSceneActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsNewLoadSceneLoaded",
    "hash": "0x01B8247A7A8B9AD1",
    "code": "-- IS_NEW_LOAD_SCENE_LOADED\nlocal retval --[[ boolean ]] =\n\tIsNewLoadSceneLoaded()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsPlayerSwitchInProgress",
    "hash": "0xD9D2CFFF49FAB35F",
    "code": "-- IS_PLAYER_SWITCH_IN_PROGRESS\nlocal retval --[[ boolean ]] =\n\tIsPlayerSwitchInProgress()",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the player is currently switching, false otherwise.  \n(When the camera is in the sky moving from Trevor to Franklin for example)"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsSrlLoaded",
    "hash": "0xD0263801A4C5B0BB",
    "code": "-- IS_SRL_LOADED\nlocal retval --[[ boolean ]] =\n\tIsSrlLoaded()",
    "parameters": [],
    "returns": [],
    "description": "Returns:\nA boolean once BeginSrl srl is loaded.\n\nReturns true when the srl from BEGIN_SRL is loaded."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsStreamvolActive",
    "hash": "0xBC9823AB80A3DCAC",
    "code": "-- IS_STREAMVOL_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsStreamvolActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsSwitchReadyForDescent",
    "hash": "0xDFA80CB25D0A19B3",
    "code": "-- IS_SWITCH_READY_FOR_DESCENT\nlocal retval --[[ boolean ]] =\n\tIsSwitchReadyForDescent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "IsSwitchSkippingDescent",
    "hash": "0x5B74EA8CFD5E3E7E",
    "code": "-- IS_SWITCH_SKIPPING_DESCENT\nlocal retval --[[ boolean ]] =\n\tIsSwitchSkippingDescent()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "LoadAllObjectsNow",
    "hash": "0xBD6E84632DD4CB3F",
    "code": "-- LOAD_ALL_OBJECTS_NOW\nLoadAllObjectsNow()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "LoadGlobalWaterType",
    "hash": "0x7E3F55ED251B76D3",
    "code": "-- _LOAD_GLOBAL_WATER_TYPE\nLoadGlobalWaterType(\n\twaterType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "0 - default 1 - HeistIsland\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "LoadScene",
    "hash": "0x4448EB75B4904BDB",
    "code": "-- LOAD_SCENE\nLoadScene(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "NetworkStopLoadScene",
    "hash": "0x64E630FAF5F60F44",
    "code": "-- NETWORK_STOP_LOAD_SCENE\nNetworkStopLoadScene()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "NetworkUpdateLoadScene",
    "hash": "0xC4582015556D1C46",
    "code": "-- NETWORK_UPDATE_LOAD_SCENE\nlocal retval --[[ boolean ]] =\n\tNetworkUpdateLoadScene()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "NewLoadSceneStart",
    "hash": "0x212A8D0D2BABFAC2",
    "code": "-- NEW_LOAD_SCENE_START\nlocal retval --[[ boolean ]] =\n\tNewLoadSceneStart(\n\t\tposX --[[ number ]], \n\t\tposY --[[ number ]], \n\t\tposZ --[[ number ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tp7 --[[ integer ]]\n\t)",
    "parameters": [
      "posX: \n\nWorld x coordinate.",
      "posY: \n\nWorld y coordinate.",
      "posZ: \n\nWorld z coordinate.",
      "offsetX: \n\nOffset x coordinate.",
      "offsetY: \n\nOffset y coordinate.",
      "offsetZ: \n\nOffset z coordinate.",
      "radius: \n\nAction radius, value is usually between 3f and 7000f in original 1868 scripts.",
      "p7: \n\n0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common."
    ],
    "returns": [
      "True if success, used only 7 times in decompiled scripts of 1868 (https://github.com/root-cause/v-decompiled-scripts)."
    ],
    "description": "Parameters:\n\nposX: \n\nWorld x coordinate.\n\nposY: \n\nWorld y coordinate.\n\nposZ: \n\nWorld z coordinate.\n\noffsetX: \n\nOffset x coordinate.\n\noffsetY: \n\nOffset y coordinate.\n\noffsetZ: \n\nOffset z coordinate.\n\nradius: \n\nAction radius, value is usually between 3f and 7000f in original 1868 scripts.\n\np7: \n\n0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.\n\nReturns:\n\nTrue if success, used only 7 times in decompiled scripts of 1868 (https://github.com/root-cause/v-decompiled-scripts).\n\n`radius` value is usually between `3f` and `7000f` in original 1868 scripts.\n`p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.\nReturns True if success, used only 7 times in decompiled scripts of 1868"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "NewLoadSceneStartSphere",
    "hash": "0xACCFB4ACF53551B0",
    "code": "-- NEW_LOAD_SCENE_START_SPHERE\nlocal retval --[[ boolean ]] =\n\tNewLoadSceneStartSphere(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tp4 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "if (!sub_8f12(\"START LOAD SCENE SAFE\")) {\n    if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {\n        STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);\n        sub_8e9e(\"START LOAD SCENE SAFE\", 1);\n    }\n}\n(Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "NewLoadSceneStop",
    "hash": "0xC197616D221FF4A4",
    "code": "-- NEW_LOAD_SCENE_STOP\nNewLoadSceneStop()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "OverrideLodscaleThisFrame",
    "hash": "0xA76359FC80B2438E",
    "code": "-- OVERRIDE_LODSCALE_THIS_FRAME\nOverrideLodscaleThisFrame(\n\tscaling --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This allows you to override \"extended distance scaling\" setting. Needs to be called each frame.\nMax scaling seems to be 200.0, normal is 1.0\nSee https://gfycat.com/DetailedHauntingIncatern"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "PrefetchSrl",
    "hash": "0x3D245789CE12982C",
    "code": "-- PREFETCH_SRL\nPrefetchSrl(\n\tsrl --[[ string ]]\n)",
    "parameters": [
      "srl: \n\nA SRL name."
    ],
    "returns": [],
    "description": "Parameters:\n\nsrl: \n\nA SRL name.\n\nThis native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas. For instance, GTA:O opening cutscene.\n\nhttps://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta https://pastebin.com/zd9XYUWY : here is the content of a SRL file opened with codewalker."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RemoveAnimDict",
    "hash": "0xF66A602F829E2A06",
    "code": "-- REMOVE_ANIM_DICT\nRemoveAnimDict(\n\tanimDict --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RemoveAnimSet",
    "hash": "0x16350528F93024B3",
    "code": "-- REMOVE_ANIM_SET\nRemoveAnimSet(\n\tanimSet --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Unloads the specified animation set. An animation set provides movement animations for a ped.\n\nAnimation set and clip set are synonymous. See SET_PED_MOVEMENT_CLIPSET."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RemoveClipSet",
    "hash": "0x01F73A131C18CD94",
    "code": "-- REMOVE_CLIP_SET\nRemoveClipSet(\n\tclipSet --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Alias for REMOVE_ANIM_SET."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RemoveIpl",
    "hash": "0xEE6C5AD3ECE0A82D",
    "code": "-- REMOVE_IPL\nRemoveIpl(\n\tiplName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "IPL list can be found here."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RemoveModelFromCreatorBudget",
    "hash": "0xF086AD9354FAC3A3",
    "code": "-- REMOVE_MODEL_FROM_CREATOR_BUDGET\nRemoveModelFromCreatorBudget(\n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RemoveNamedPtfxAsset",
    "hash": "0x5F61EBBE1A00F96D",
    "code": "-- REMOVE_NAMED_PTFX_ASSET\nRemoveNamedPtfxAsset(\n\tfxName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RemovePtfxAsset",
    "hash": "0x88C6814073DD4A73",
    "code": "-- REMOVE_PTFX_ASSET\nRemovePtfxAsset()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestAdditionalCollisionAtCoord",
    "hash": "0xC9156DC11411A9EA",
    "code": "-- REQUEST_ADDITIONAL_COLLISION_AT_COORD\nRequestAdditionalCollisionAtCoord(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestAnimDict",
    "hash": "0xD3BD40951412FEF6",
    "code": "-- REQUEST_ANIM_DICT\nRequestAnimDict(\n\tanimDict --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestAnimSet",
    "hash": "0x6EA47DAE7FAD0EED",
    "code": "-- REQUEST_ANIM_SET\nRequestAnimSet(\n\tanimSet --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Starts loading the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestClipSet",
    "hash": "0xD2A71E1A77418A49",
    "code": "-- REQUEST_CLIP_SET\nRequestClipSet(\n\tclipSet --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestCollisionAtCoord",
    "hash": "0x07503F7948F491A7",
    "code": "-- REQUEST_COLLISION_AT_COORD\nRequestCollisionAtCoord(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestCollisionForModel",
    "hash": "0x923CB32A3B874FCB",
    "code": "-- REQUEST_COLLISION_FOR_MODEL\nRequestCollisionForModel(\n\tmodel --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestIpl",
    "hash": "0x41B4893843BBDB74",
    "code": "-- REQUEST_IPL\nRequestIpl(\n\tiplName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Exemple: REQUEST_IPL(\"TrevorsTrailerTrash\");"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestMenuPedModel",
    "hash": "0xA0261AEF7ACFC51E",
    "code": "-- REQUEST_MENU_PED_MODEL\nRequestMenuPedModel(\n\tmodel --[[ Hash ]]\n)",
    "parameters": [
      "model: \n\nThe model to request."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodel: \n\nThe model to request.\n\nCalls REQUEST_MODEL with the STRFLAG_PRIORITY_LOAD and STRFLAG_FORCE_LOAD set."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestModel",
    "hash": "0x963D27A58DF860AC",
    "code": "-- REQUEST_MODEL\nRequestModel(\n\tmodel --[[ Hash ]]\n)",
    "parameters": [
      "model: \n\nThe model to request."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodel: \n\nThe model to request.\n\nRequest a model (archetype) to be loaded for use by the current script. Use SET_MODEL_AS_NO_LONGER_NEEDED when done using the model in script."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestModelsInRoom",
    "hash": "0x8A7A40100EDFEC58",
    "code": "-- REQUEST_MODELS_IN_ROOM\nRequestModelsInRoom(\n\tinterior --[[ integer ]], \n\troomName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, \"V_FIB01_cur_elev\");\nSTREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, \"limbo\");\nSTREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, \"V_Office_gnd_lifts\");\nSTREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, \"limbo\");\nSTREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, \"v_fib01_jan_elev\");\nSTREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, \"limbo\");"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestNamedPtfxAsset",
    "hash": "0xB80D8756B4668AB6",
    "code": "-- REQUEST_NAMED_PTFX_ASSET\nRequestNamedPtfxAsset(\n\tfxName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the b678d decompiled scripts:\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"core_snow\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"fm_mission_controler\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"proj_xmas_firework\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_apartment_mp\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_biolab_heist\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_indep_fireworks\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_indep_parachute\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_indep_wheelsmoke\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_mp_cig_plane\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_mp_creator\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_mp_tankbattle\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_ornate_heist\");\n STREAMING::REQUEST_NAMED_PTFX_ASSET(\"scr_prison_break_heist_station\");"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "RequestPtfxAsset",
    "hash": "0x944955FB2A3935C8",
    "code": "-- REQUEST_PTFX_ASSET\nRequestPtfxAsset()",
    "parameters": [],
    "returns": [],
    "description": "maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetDitchPoliceModels",
    "hash": "0x42CBE54462D92634",
    "code": "-- SET_DITCH_POLICE_MODELS\nSetDitchPoliceModels(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is a NOP function. It does nothing at all."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetFocusEntity",
    "hash": "0x198F77705FA0931D",
    "code": "-- SET_FOCUS_ENTITY\nSetFocusEntity(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetFocusPosAndVel",
    "hash": "0xBB7454BAFF08FE25",
    "code": "-- SET_FOCUS_POS_AND_VEL\nSetFocusPosAndVel(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]], \n\toffsetZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Override the area where the camera will render the terrain.\np3, p4 and p5 are usually set to 0.0"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetGamePausesForStreaming",
    "hash": "0x717CD6E6FAEBBEDC",
    "code": "-- SET_GAME_PAUSES_FOR_STREAMING\nSetGamePausesForStreaming(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetHdArea",
    "hash": "0xB85F26619073E775",
    "code": "-- SET_HD_AREA\nSetHdArea(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetInteriorActive",
    "hash": "0xE37B76C387BE28ED",
    "code": "-- SET_INTERIOR_ACTIVE\nSetInteriorActive(\n\tinteriorID --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetIslandEnabled",
    "hash": "0x9A9D1BA639675CF1",
    "code": "-- SET_ISLAND_ENABLED\nSetIslandEnabled(\n\tislandName --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "islandName: \n\nThe name of the island to be enabled or disabled.",
      "toggle: \n\nA boolean value where true enables the island and false disables it."
    ],
    "returns": [],
    "description": "Parameters:\n\nislandName: \n\nThe name of the island to be enabled or disabled.\n\ntoggle: \n\nA boolean value where true enables the island and false disables it.\n\nEnables the specified island. For more information, see islandhopper.meta\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetMapdatacullboxEnabled",
    "hash": "0xAF12610C644A35C9",
    "code": "-- SET_MAPDATACULLBOX_ENABLED\nSetMapdatacullboxEnabled(\n\tname --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Possible p0 values:  \n\"prologue\"  \n\"Prologue_Main\""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetModelAsNoLongerNeeded",
    "hash": "0xE532F5D78798DAAB",
    "code": "-- SET_MODEL_AS_NO_LONGER_NEEDED\nSetModelAsNoLongerNeeded(\n\tmodel --[[ Hash ]]\n)",
    "parameters": [
      "model: \n\nThe model to release ownership of."
    ],
    "returns": [],
    "description": "Parameters:\n\nmodel: \n\nThe model to release ownership of.\n\nReleases the script ownership assigned by REQUEST_MODEL. This command should be used when done using a specific model hash in script."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetPedPopulationBudget",
    "hash": "0x8C95333CFC3340F3",
    "code": "-- SET_PED_POPULATION_BUDGET\nSetPedPopulationBudget(\n\tbudgetLevel --[[ integer ]]\n)",
    "parameters": [
      "budgetLevel: \n\nRanges from 0 to 3, where 0 is lowest (no peds) and 3 is the full budget level."
    ],
    "returns": [],
    "description": "Parameters:\n\nbudgetLevel: \n\nRanges from 0 to 3, where 0 is lowest (no peds) and 3 is the full budget level.\n\nSets the memory budget level for ped population."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetPlayerShortSwitchStyle",
    "hash": "0x5F2013F8BC24EE69",
    "code": "-- SET_PLAYER_SHORT_SWITCH_STYLE\nSetPlayerShortSwitchStyle(\n\tstyle --[[ integer ]]\n)",
    "parameters": [
      "style: \n\nAlways 0"
    ],
    "returns": [],
    "description": "Parameters:\n\nstyle: \n\nAlways 0"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetPlayerSwitchEstablishingShot",
    "hash": "0x0FDE9DBFC0A6BC65",
    "code": "-- SET_PLAYER_SWITCH_ESTABLISHING_SHOT\nSetPlayerSwitchEstablishingShot(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "All names can be found in playerswitchestablishingshots.meta"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetPlayerSwitchOutro",
    "hash": "0xC208B673CE446B61",
    "code": "-- SET_PLAYER_SWITCH_OUTRO\nSetPlayerSwitchOutro(\n\tcameraCoordX --[[ number ]], \n\tcameraCoordY --[[ number ]], \n\tcameraCoordZ --[[ number ]], \n\tcamRotationX --[[ number ]], \n\tcamRotationY --[[ number ]], \n\tcamRotationZ --[[ number ]], \n\tcamFov --[[ number ]], \n\tcamFarClip --[[ number ]], \n\trotationOrder --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetReducePedModelBudget",
    "hash": "0x77B5F9A36BF96710",
    "code": "-- SET_REDUCE_PED_MODEL_BUDGET\nSetReducePedModelBudget(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetReduceVehicleModelBudget",
    "hash": "0x80C527893080CCF3",
    "code": "-- SET_REDUCE_VEHICLE_MODEL_BUDGET\nSetReduceVehicleModelBudget(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetRenderHdOnly",
    "hash": "0x40AEFD1A244741F2",
    "code": "-- SET_RENDER_HD_ONLY\nSetRenderHdOnly(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetSrlTime",
    "hash": "0xA74A541C6884E7B8",
    "code": "-- SET_SRL_TIME\nSetSrlTime(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetStreaming",
    "hash": "0x6E0C692677008888",
    "code": "-- SET_STREAMING\nSetStreaming(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SetVehiclePopulationBudget",
    "hash": "0xCB9E1EB3BE2AF4E9",
    "code": "-- SET_VEHICLE_POPULATION_BUDGET\nSetVehiclePopulationBudget(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "ShutdownCreatorBudget",
    "hash": "0xCCE26000E9A6FAD7",
    "code": "-- SHUTDOWN_CREATOR_BUDGET\nShutdownCreatorBudget()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StartPlayerSwitch",
    "hash": "0xFAA23F2CBA159D67",
    "code": "-- START_PLAYER_SWITCH\nStartPlayerSwitch(\n\tfrom --[[ Ped ]], \n\tto --[[ Ped ]], \n\tflags --[[ integer ]], \n\tswitchType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum ePlayerSwitchType  \n{  \n\tSWITCH_TYPE_AUTO = 0,\n\tSWITCH_TYPE_LONG = 1,\n\tSWITCH_TYPE_MEDIUM = 2,\n\tSWITCH_TYPE_SHORT = 3\n};  \n\nenum eSwitchFlags {\n\tSKIP_INTRO = 1,\n\tSKIP_OUTRO = 2,\n\tPAUSE_BEFORE_PAN = 4,\n\tPAUSE_BEFORE_OUTRO = 8,\n\tSKIP_PAN = 16,\n\tUNKNOWN_DEST = 32,\n\tDESCENT_ONLY = 64,\n\tSTART_FROM_CAMPOS = 128,\n\tPAUSE_BEFORE_ASCENT = 256,\n\tPAUSE_BEFORE_DESCENT = 512,\n\tALLOW_SNIPER_AIM_INTRO = 1024,\n\tALLOW_SNIPER_AIM_OUTRO = 2048,\n\tSKIP_TOP_DESCENT = 4096,\n\tSUPPRESS_OUTRO_FX = 8192,\n\tSUPPRESS_INTRO_FX = 16384,\n\tDELAY_ASCENT_FX = 32768\n}"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StopPlayerSwitch",
    "hash": "0x95C0A5BBDC189AA1",
    "code": "-- STOP_PLAYER_SWITCH\nStopPlayerSwitch()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StreamvolCreateFrustum",
    "hash": "0x1F3F018BC3AFA77C",
    "code": "-- STREAMVOL_CREATE_FRUSTUM\nlocal retval --[[ Any ]] =\n\tStreamvolCreateFrustum(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ number ]], \n\t\tp7 --[[ Any ]], \n\t\tp8 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Always returns zero."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StreamvolCreateLine",
    "hash": "0x0AD9710CEE2F590F",
    "code": "-- STREAMVOL_CREATE_LINE\nlocal retval --[[ Any ]] =\n\tStreamvolCreateLine(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Always returns zero."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StreamvolCreateSphere",
    "hash": "0x219C7B8D53E429FD",
    "code": "-- STREAMVOL_CREATE_SPHERE\nlocal retval --[[ Any ]] =\n\tStreamvolCreateSphere(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\trad --[[ number ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Always returns zero."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StreamvolDelete",
    "hash": "0x1EE7D8DF4425F053",
    "code": "-- STREAMVOL_DELETE\nStreamvolDelete(\n\tunused --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StreamvolHasLoaded",
    "hash": "0x7D41E9D2D17C5B2D",
    "code": "-- STREAMVOL_HAS_LOADED\nlocal retval --[[ boolean ]] =\n\tStreamvolHasLoaded(\n\t\tunused --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "StreamvolIsValid",
    "hash": "0x07C313F94746702C",
    "code": "-- STREAMVOL_IS_VALID\nlocal retval --[[ boolean ]] =\n\tStreamvolIsValid(\n\t\tunused --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SwitchToMultiFirstpart",
    "hash": "0xAAB3200ED59016BC",
    "code": "-- SWITCH_TO_MULTI_FIRSTPART\nSwitchToMultiFirstpart(\n\tped --[[ Ped ]], \n\tflags --[[ integer ]], \n\tswitchType --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped (player character) for which the switch is initiated.",
      "flags: \n\nFlags control various functionalities: 0 for normal behavior, 1 for no transition, and 255 for Switch IN.",
      "switchType: \n\nSpecifies the type of switch (0 - 3): 0 for 1 step towards ped, 1 for 3 steps out from ped, 2 for 1 step out from ped, and 3 for 1 step towards ped."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped (player character) for which the switch is initiated.\n\nflags: \n\nFlags control various functionalities: 0 for normal behavior, 1 for no transition, and 255 for Switch IN.\n\nswitchType: \n\nSpecifies the type of switch (0 - 3): 0 for 1 step towards ped, 1 for 3 steps out from ped, 2 for 1 step out from ped, and 3 for 1 step towards ped.\n\nYou can check if the player is in a Switch state with IS_PLAYER_SWITCH_IN_PROGRESS.\n\n*Note: Doesn't act normally when used on Mount Chiliad.*"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "SwitchToMultiSecondpart",
    "hash": "0xD8295AF639FD9CB8",
    "code": "-- SWITCH_TO_MULTI_SECONDPART\nSwitchToMultiSecondpart(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "After using SWITCH_TO_MULTI_FIRSTPART , use this native to smoothly return the camera to the player's character."
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x03f1a106bda7dd3e",
    "hash": "0x03F1A106BDA7DD3E",
    "code": "-- 0x03F1A106BDA7DD3E\nN_0x03f1a106bda7dd3e()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x0811381ef5062fec",
    "hash": "0x0811381EF5062FEC",
    "code": "-- 0x0811381EF5062FEC\nN_0x0811381ef5062fec(\n\tp0 --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x1e9057a74fd73e23",
    "hash": "0x1E9057A74FD73E23",
    "code": "-- 0x1E9057A74FD73E23\nN_0x1e9057a74fd73e23()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x20c6c7e4eb082a7f",
    "hash": "0x20C6C7E4EB082A7F",
    "code": "-- 0x20C6C7E4EB082A7F\nN_0x20c6c7e4eb082a7f(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x472397322e92a856",
    "hash": "0x472397322E92A856",
    "code": "-- 0x472397322E92A856\nN_0x472397322e92a856()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x4e52e752c76e7e7a",
    "hash": "0x4E52E752C76E7E7A",
    "code": "-- 0x4E52E752C76E7E7A\nN_0x4e52e752c76e7e7a(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x5068f488ddb54dd8",
    "hash": "0x5068F488DDB54DD8",
    "code": "-- 0x5068F488DDB54DD8\nlocal retval --[[ Any ]] =\n\tN_0x5068f488ddb54dd8()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x63eb2b972a218cac",
    "hash": "0x63EB2B972A218CAC",
    "code": "-- 0x63EB2B972A218CAC\nN_0x63eb2b972a218cac()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x71e7b2e657449aad",
    "hash": "0x71E7B2E657449AAD",
    "code": "-- 0x71E7B2E657449AAD\nlocal retval --[[ Any ]] =\n\tN_0x71e7b2e657449aad()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x933bbeeb8c61b5f4",
    "hash": "0x933BBEEB8C61B5F4",
    "code": "-- 0x933BBEEB8C61B5F4\nlocal retval --[[ boolean ]] =\n\tN_0x933bbeeb8c61b5f4()",
    "parameters": [],
    "returns": [],
    "description": "Probably IS_SWITCH_*"
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0x95a7dabddbb78ae7",
    "hash": "0x95A7DABDDBB78AE7",
    "code": "-- 0x95A7DABDDBB78AE7\nN_0x95a7dabddbb78ae7(\n\tiplName1 --[[ string ]], \n\tiplName2 --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0xbeb2d9a1d9a8f55a",
    "hash": "0xBEB2D9A1D9A8F55A",
    "code": "-- 0xBEB2D9A1D9A8F55A\nN_0xbeb2d9a1d9a8f55a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0xbed8ca5ff5e04113",
    "hash": "0xBED8CA5FF5E04113",
    "code": "-- 0xBED8CA5FF5E04113\nN_0xbed8ca5ff5e04113(\n\tp0 --[[ number ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0xef39ee20c537e98c",
    "hash": "0xEF39EE20C537E98C",
    "code": "-- 0xEF39EE20C537E98C\nN_0xef39ee20c537e98c(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0xf4a0dadb70f57fa6",
    "hash": "0xF4A0DADB70F57FA6",
    "code": "-- 0xF4A0DADB70F57FA6\nN_0xf4a0dadb70f57fa6()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0xf8155a7f03ddfc8e",
    "hash": "0xF8155A7F03DDFC8E",
    "code": "-- 0xF8155A7F03DDFC8E\nN_0xf8155a7f03ddfc8e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: STREAMING",
    "apiset": "API set: client",
    "name": "N_0xfb199266061f820a",
    "hash": "0xFB199266061F820A",
    "code": "-- 0xFB199266061F820A\nlocal retval --[[ boolean ]] =\n\tN_0xfb199266061f820a()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Ceil",
    "hash": "0x11E019C8F43ACC8A",
    "code": "-- CEIL\nlocal retval --[[ integer ]] =\n\tCeil(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Cos",
    "hash": "0xD0FFB162F40A139C",
    "code": "-- COS\nlocal retval --[[ number ]] =\n\tCos(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [
      "value: \n\nThe number of degrees (in degrees, not radians)"
    ],
    "returns": [
      "The cosine of the given number"
    ],
    "description": "Parameters:\n\nvalue: \n\nThe number of degrees (in degrees, not radians)\n\nReturns:\n\nThe cosine of the given number\n\nReturns the cosine of the given number."
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Floor",
    "hash": "0xF34EE736CF047844",
    "code": "-- FLOOR\nlocal retval --[[ integer ]] =\n\tFloor(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Log10",
    "hash": "0xE816E655DE37FE20",
    "code": "-- _LOG10\nlocal retval --[[ number ]] =\n\tLog10(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Pow",
    "hash": "0xE3621CC40F31FE2E",
    "code": "-- POW\nlocal retval --[[ number ]] =\n\tPow(\n\t\tbase --[[ number ]], \n\t\texponent --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Round",
    "hash": "0xF2DB717A73826179",
    "code": "-- ROUND\nlocal retval --[[ integer ]] =\n\tRound(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "SetThreadPriority",
    "hash": "0x42B65DEEF2EDF2A1",
    "code": "-- _SET_THREAD_PRIORITY\nSetThreadPriority(\n\tpriority --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "0 = high\n1 = normal\n2 = low"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Settimera",
    "hash": "0xC1B1E9A034A63A62",
    "code": "-- SETTIMERA\nSettimera(\n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "value: \n\nIn milliseconds."
    ],
    "returns": [],
    "description": "Parameters:\n\nvalue: \n\nIn milliseconds.\n\nSets the value for the timer A in milliseconds"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Settimerb",
    "hash": "0x5AE11BC36633DE4E",
    "code": "-- SETTIMERB\nSettimerb(\n\tvalue --[[ integer ]]\n)",
    "parameters": [
      "value: \n\nIn milliseconds."
    ],
    "returns": [],
    "description": "Parameters:\n\nvalue: \n\nIn milliseconds.\n\nSets the value for the timer B in milliseconds"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "ShiftLeft",
    "hash": "0xEDD95A39E5544DE8",
    "code": "-- SHIFT_LEFT\nlocal retval --[[ integer ]] =\n\tShiftLeft(\n\t\tvalue --[[ integer ]], \n\t\tbitShift --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Left bit shifts a value. It is advised you use the << operator instead of this native. It does the same and is faster."
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "ShiftRight",
    "hash": "0x97EF1E5BCE9DC075",
    "code": "-- SHIFT_RIGHT\nlocal retval --[[ integer ]] =\n\tShiftRight(\n\t\tvalue --[[ integer ]], \n\t\tbitShift --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Right bit shifts a value. It is advised you use the >> operator instead of this native. It does the same and is faster."
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Sin",
    "hash": "0x0BADBFA3B172435F",
    "code": "-- SIN\nlocal retval --[[ number ]] =\n\tSin(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [
      "value: \n\nThe number of degrees (in degrees, not radians)"
    ],
    "returns": [
      "The sine of the given number"
    ],
    "description": "Parameters:\n\nvalue: \n\nThe number of degrees (in degrees, not radians)\n\nReturns:\n\nThe sine of the given number\n\nReturns the sine of the given number."
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Sqrt",
    "hash": "0x71D93B57D07F9804",
    "code": "-- SQRT\nlocal retval --[[ number ]] =\n\tSqrt(\n\t\tvalue --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "StartNewScript",
    "hash": "0xE81651AD79516E48",
    "code": "-- START_NEW_SCRIPT\nlocal retval --[[ integer ]] =\n\tStartNewScript(\n\t\tscriptName --[[ string ]], \n\t\tstackSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Examples:\n g_384A = SYSTEM::START_NEW_SCRIPT(\"cellphone_flashhand\", 1424);\n l_10D = SYSTEM::START_NEW_SCRIPT(\"taxiService\", 1828);\n SYSTEM::START_NEW_SCRIPT(\"AM_MP_YACHT\", 5000);\n SYSTEM::START_NEW_SCRIPT(\"emergencycall\", 512);\n SYSTEM::START_NEW_SCRIPT(\"emergencycall\", 512);\n SYSTEM::START_NEW_SCRIPT(\"FM_maintain_cloud_header_data\", 1424);\n SYSTEM::START_NEW_SCRIPT(\"FM_Mission_Controller\", 31000);\n SYSTEM::START_NEW_SCRIPT(\"tennis_family\", 3650);\n SYSTEM::START_NEW_SCRIPT(\"Celebrations\", 3650);\nDecompiled examples of usage when starting a script:\n\n    SCRIPT::REQUEST_SCRIPT(a_0);\n    if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {\n        SYSTEM::START_NEW_SCRIPT(a_0, v_3);\n        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);\n        return 1;\n    }\n\nor:\n    v_2 = \"MrsPhilips2\";\n    SCRIPT::REQUEST_SCRIPT(v_2);\n    while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {\n    SCRIPT::REQUEST_SCRIPT(v_2);\n    SYSTEM::WAIT(0);\n    }\n    sub_8792(36);\n    SYSTEM::START_NEW_SCRIPT(v_2, 17000);\n    SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);\nAll native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "StartNewScriptWithArgs",
    "hash": "0xB8BA7F44DF1575E1",
    "code": "-- START_NEW_SCRIPT_WITH_ARGS\nlocal retval --[[ integer ]], args --[[ Any ]] =\n\tStartNewScriptWithArgs(\n\t\tscriptName --[[ string ]], \n\t\targCount --[[ integer ]], \n\t\tstackSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "return : script thread id, 0 if failed  \nPass pointer to struct of args in p1, size of struct goes into p2"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "StartNewScriptWithNameHash",
    "hash": "0xEB1C67C3A5333A92",
    "code": "-- START_NEW_SCRIPT_WITH_NAME_HASH\nlocal retval --[[ integer ]] =\n\tStartNewScriptWithNameHash(\n\t\tscriptHash --[[ Hash ]], \n\t\tstackSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "StartNewScriptWithNameHashAndArgs",
    "hash": "0xC4BB298BD441BE78",
    "code": "-- START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS\nlocal retval --[[ integer ]], args --[[ Any ]] =\n\tStartNewScriptWithNameHashAndArgs(\n\t\tscriptHash --[[ Hash ]], \n\t\targCount --[[ integer ]], \n\t\tstackSize --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Timera",
    "hash": "0x83666F9FB8FEBD4B",
    "code": "-- TIMERA\nlocal retval --[[ integer ]] =\n\tTimera()",
    "parameters": [],
    "returns": [],
    "description": "Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0))."
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Timerb",
    "hash": "0xC9D9444186B5A374",
    "code": "-- TIMERB\nlocal retval --[[ integer ]] =\n\tTimerb()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Timestep",
    "hash": "0x0000000050597EE2",
    "code": "-- TIMESTEP\nlocal retval --[[ number ]] =\n\tTimestep()",
    "parameters": [],
    "returns": [],
    "description": "Gets the current frame time."
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "ToFloat",
    "hash": "0xBBDA792448DB5A89",
    "code": "-- TO_FLOAT\nlocal retval --[[ number ]] =\n\tToFloat(\n\t\tvalue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Vdist",
    "hash": "0x2A488C176D52CCA5",
    "code": "-- VDIST\nlocal retval --[[ number ]] =\n\tVdist(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [
      "x1: \n\nX coordinate of the first point.",
      "y1: \n\nY coordinate of the first point.",
      "z1: \n\nZ coordinate of the first point. Represents the height or elevation at the first point.",
      "x2: \n\nX coordinate of the second point.",
      "y2: \n\nY coordinate of the second point.",
      "z2: \n\nZ coordinate of the second point. Represents the height or elevation at the second point."
    ],
    "returns": [
      "Returns the distance as a float between the two points (x1, y1, z1) and (x2, y2, z2) in the game world."
    ],
    "description": "Parameters:\n\nx1: \n\nX coordinate of the first point.\n\ny1: \n\nY coordinate of the first point.\n\nz1: \n\nZ coordinate of the first point. Represents the height or elevation at the first point.\n\nx2: \n\nX coordinate of the second point.\n\ny2: \n\nY coordinate of the second point.\n\nz2: \n\nZ coordinate of the second point. Represents the height or elevation at the second point.\n\nReturns:\n\nReturns the distance as a float between the two points (x1, y1, z1) and (x2, y2, z2) in the game world.\n\nCalculates the distance between two points in 3D space. For performance reasons, consider using direct mathematical calculations for distance, as they can be more efficient than calling this native function.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Vdist2",
    "hash": "0xB7A628320EFF8E47",
    "code": "-- VDIST2\nlocal retval --[[ number ]] =\n\tVdist2(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [
      "x1: \n\nX coordinate of the first point.",
      "y1: \n\nY coordinate of the first point.",
      "z1: \n\nZ coordinate of the first point. Represents the height or elevation at the first point.",
      "x2: \n\nX coordinate of the second point.",
      "y2: \n\nY coordinate of the second point.",
      "z2: \n\nZ coordinate of the second point. Represents the height or elevation at the second point."
    ],
    "returns": [
      "Returns the distance as a float between the two points (x1, y1, z1) and (x2, y2, z2) in the game world."
    ],
    "description": "Parameters:\n\nx1: \n\nX coordinate of the first point.\n\ny1: \n\nY coordinate of the first point.\n\nz1: \n\nZ coordinate of the first point. Represents the height or elevation at the first point.\n\nx2: \n\nX coordinate of the second point.\n\ny2: \n\nY coordinate of the second point.\n\nz2: \n\nZ coordinate of the second point. Represents the height or elevation at the second point.\n\nReturns:\n\nReturns the distance as a float between the two points (x1, y1, z1) and (x2, y2, z2) in the game world.\n\nCalculates distance between vectors but does not perform Sqrt operations. Its way faster than VDIST, but it's not faster than direct mathematical calculations.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Vmag",
    "hash": "0x652D2EEEF1D3E62C",
    "code": "-- VMAG\nlocal retval --[[ number ]] =\n\tVmag(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Calculates the magnitude of a vector."
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Vmag2",
    "hash": "0xA8CEACB4F35AE058",
    "code": "-- VMAG2\nlocal retval --[[ number ]] =\n\tVmag2(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)"
  },
  {
    "namespace": "Namespace: SYSTEM",
    "apiset": "API set: client",
    "name": "Wait",
    "hash": "0x4EDE34FBADD967A6",
    "code": "-- WAIT\nWait(\n\tms --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use \"static void WAIT(DWORD time);\" found in main.h"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AddCoverBlockingArea",
    "hash": "0x45C597097DD7CB81",
    "code": "-- ADD_COVER_BLOCKING_AREA\nAddCoverBlockingArea(\n\tplayerX --[[ number ]], \n\tplayerY --[[ number ]], \n\tplayerZ --[[ number ]], \n\tradiusX --[[ number ]], \n\tradiusY --[[ number ]], \n\tradiusZ --[[ number ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ boolean ]], \n\tp8 --[[ boolean ]], \n\tp9 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AddCoverPoint",
    "hash": "0xD5C12A75C7B9497F",
    "code": "-- ADD_COVER_POINT\nlocal retval --[[ ScrHandle ]] =\n\tAddCoverPoint(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]], \n\t\tp7 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AddPatrolRouteLink",
    "hash": "0x23083260DEC3A551",
    "code": "-- ADD_PATROL_ROUTE_LINK\nAddPatrolRouteLink(\n\tid1 --[[ integer ]], \n\tid2 --[[ integer ]]\n)",
    "parameters": [
      "id1: \n\nthe id representing the first route node",
      "id2: \n\nthe id representing the second route node"
    ],
    "returns": [],
    "description": "Parameters:\n\nid1: \n\nthe id representing the first route node\n\nid2: \n\nthe id representing the second route node\n\nconnects/links 2 route nodes\\ image representing the cyclic example below:\\"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AddPatrolRouteNode",
    "hash": "0x8EDF950167586B7C",
    "code": "-- ADD_PATROL_ROUTE_NODE\nAddPatrolRouteNode(\n\tid --[[ integer ]], \n\tguardScenario --[[ string ]], \n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\twaitTime --[[ integer ]]\n)",
    "parameters": [
      "id: \n\nis an integer that \"identifies\" the route node for linking to the route with ADD_PATROL_ROUTE_LINK.",
      "guardScenario: \n\ncan be \"WORLD_HUMAN_GUARD_STAND\" or \"StandGuard\"",
      "x1: \n\ndestination",
      "y1: \n\ndestination",
      "z1: \n\ndestination",
      "x2: \n\ncoordinates to which the ped should look",
      "y2: \n\ncoordinates to which the ped should look",
      "z2: \n\ncoordinates to which the ped should look",
      "waitTime: \n\nwritten in ms"
    ],
    "returns": [],
    "description": "Parameters:\n\nid: \n\nis an integer that \"identifies\" the route node for linking to the route with ADD_PATROL_ROUTE_LINK.\n\nguardScenario: \n\ncan be \"WORLD_HUMAN_GUARD_STAND\" or \"StandGuard\"\n\nx1: \n\ndestination\n\ny1: \n\ndestination\n\nz1: \n\ndestination\n\nx2: \n\ncoordinates to which the ped should look\n\ny2: \n\ncoordinates to which the ped should look\n\nz2: \n\ncoordinates to which the ped should look\n\nwaitTime: \n\nwritten in ms\n\nx2,y2 and z2 are the coordinates to which the ped should look at"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AddVehicleSubtaskAttackCoord",
    "hash": "0x5CF0D8F9BBA0DD75",
    "code": "-- ADD_VEHICLE_SUBTASK_ATTACK_COORD\nAddVehicleSubtaskAttackCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "x, y, z: offset in world coords from some entity."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AddVehicleSubtaskAttackPed",
    "hash": "0x85F462BADC7DA47F",
    "code": "-- ADD_VEHICLE_SUBTASK_ATTACK_PED\nAddVehicleSubtaskAttackPed(\n\tped --[[ Ped ]], \n\tped2 --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AssistedMovementIsRouteLoaded",
    "hash": "0x60F9A4393A21F741",
    "code": "-- ASSISTED_MOVEMENT_IS_ROUTE_LOADED\nlocal retval --[[ boolean ]] =\n\tAssistedMovementIsRouteLoaded(\n\t\troute --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AssistedMovementOverrideLoadDistanceThisFrame",
    "hash": "0x13945951E16EF912",
    "code": "-- ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME\nAssistedMovementOverrideLoadDistanceThisFrame(\n\tdist --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AssistedMovementRemoveRoute",
    "hash": "0x3548536485DD792B",
    "code": "-- ASSISTED_MOVEMENT_REMOVE_ROUTE\nAssistedMovementRemoveRoute(\n\troute --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AssistedMovementRequestRoute",
    "hash": "0x817268968605947A",
    "code": "-- ASSISTED_MOVEMENT_REQUEST_ROUTE\nAssistedMovementRequestRoute(\n\troute --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Routes: \"1_FIBStairs\", \"2_FIBStairs\", \"3_FIBStairs\", \"4_FIBStairs\", \"5_FIBStairs\", \"5_TowardsFire\", \"6a_FIBStairs\", \"7_FIBStairs\", \"8_FIBStairs\", \"Aprtmnt_1\", \"AssAfterLift\", \"ATM_1\", \"coroner2\", \"coroner_stairs\", \"f5_jimmy1\", \"fame1\", \"family5b\", \"family5c\", \"Family5d\", \"family5d\", \"FIB_Glass1\", \"FIB_Glass2\", \"FIB_Glass3\", \"finaBroute1A\", \"finalb1st\", \"finalB1sta\", \"finalbround\", \"finalbroute2\", \"Hairdresser1\", \"jan_foyet_ft_door\", \"Jo_3\", \"Lemar1\", \"Lemar2\", \"mansion_1\", \"Mansion_1\", \"pols_1\", \"pols_2\", \"pols_3\", \"pols_4\", \"pols_5\", \"pols_6\", \"pols_7\", \"pols_8\", \"Pro_S1\", \"Pro_S1a\", \"Pro_S2\", \"Towards_case\", \"trev_steps\", \"tunrs1\", \"tunrs2\", \"tunrs3\", \"Wave01457s\""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "AssistedMovementSetRouteProperties",
    "hash": "0xD5002D78B7162E1B",
    "code": "-- ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES\nAssistedMovementSetRouteProperties(\n\troute --[[ string ]], \n\tprops --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClearDrivebyTaskUnderneathDrivingTask",
    "hash": "0xC35B5CDB2824CF69",
    "code": "-- CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK\nClearDrivebyTaskUnderneathDrivingTask(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClearPedScriptTaskIfRunningThreatResponseNonTempTask",
    "hash": "0xF6DC48E56BE1243A",
    "code": "-- CLEAR_PED_SCRIPT_TASK_IF_RUNNING_THREAT_RESPONSE_NON_TEMP_TASK\nClearPedScriptTaskIfRunningThreatResponseNonTempTask(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClearPedSecondaryTask",
    "hash": "0x176CECF6F920D707",
    "code": "-- CLEAR_PED_SECONDARY_TASK\nClearPedSecondaryTask(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClearPedTasks",
    "hash": "0xE1EF3C1216AFF2CD",
    "code": "-- CLEAR_PED_TASKS\nClearPedTasks(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nPed id. Use PlayerPedId() for your own character."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id. Use PlayerPedId() for your own character.\n\nClear a ped's tasks. Stop animations and other tasks created by scripts."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClearPedTasksImmediately",
    "hash": "0xAAA34F8A7CB32098",
    "code": "-- CLEAR_PED_TASKS_IMMEDIATELY\nClearPedTasksImmediately(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nPed id."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id.\n\nImmediately stops the pedestrian from whatever it's doing. The difference between this and CLEAR_PED_TASKS is that this one teleports the ped but does not change the position of the ped."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClearSequenceTask",
    "hash": "0x3841422E9C488D8C",
    "code": "-- CLEAR_SEQUENCE_TASK\nlocal taskSequenceId --[[ integer ]] =\n\tClearSequenceTask()",
    "parameters": [
      "taskSequenceId: \n\nThe task sequence to clear"
    ],
    "returns": [],
    "description": "Parameters:\n\ntaskSequenceId: \n\nThe task sequence to clear\n\nFor an example on how to use this please refer to OPEN_SEQUENCE_TASK\n\nNOTE\n\nIf you fail to call CLOSE_SEQUENCE_TASK and CLEAR_SEQUENCE_TASK the sequence system can get stuck in a broken state until you restart your client."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClearVehicleTasks",
    "hash": "0xDBBC7A2432524127",
    "code": "-- _CLEAR_VEHICLE_TASKS\nClearVehicleTasks(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to have tasks cleared"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to have tasks cleared\n\nCLEAR_*\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ClosePatrolRoute",
    "hash": "0xB043ECA801B8CBC1",
    "code": "-- CLOSE_PATROL_ROUTE\nClosePatrolRoute()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "CloseSequenceTask",
    "hash": "0x39E72BC99E6360CB",
    "code": "-- CLOSE_SEQUENCE_TASK\nCloseSequenceTask(\n\ttaskSequenceId --[[ integer ]]\n)",
    "parameters": [
      "taskSequenceId: \n\nThe task sequence to close"
    ],
    "returns": [],
    "description": "Parameters:\n\ntaskSequenceId: \n\nThe task sequence to close\n\nFor an example on how to use this please refer to OPEN_SEQUENCE_TASK\n\nNOTE\n\nIf you fail to call CLOSE_SEQUENCE_TASK and CLEAR_SEQUENCE_TASK this can get stuck in a broken state until you restart your client."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ControlMountedWeapon",
    "hash": "0xDCFE42068FE0135A",
    "code": "-- CONTROL_MOUNTED_WEAPON\nlocal retval --[[ boolean ]] =\n\tControlMountedWeapon(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Forces the ped to use the mounted weapon.  \nReturns false if task is not possible."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "CreatePatrolRoute",
    "hash": "0xAF8A443CCC8018DC",
    "code": "-- CREATE_PATROL_ROUTE\nCreatePatrolRoute()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "DeletePatrolRoute",
    "hash": "0x7767DD9D65E91319",
    "code": "-- DELETE_PATROL_ROUTE\nDeletePatrolRoute(\n\tpatrolRoute --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From the b617d scripts:\nTASK::DELETE_PATROL_ROUTE(\"miss_merc0\");\nTASK::DELETE_PATROL_ROUTE(\"miss_merc1\");\nTASK::DELETE_PATROL_ROUTE(\"miss_merc2\");\nTASK::DELETE_PATROL_ROUTE(\"miss_dock\");"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "DoesScenarioExistInArea",
    "hash": "0x5A59271FFADD33C1",
    "code": "-- DOES_SCENARIO_EXIST_IN_AREA\nlocal retval --[[ boolean ]] =\n\tDoesScenarioExistInArea(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tb --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "DoesScenarioGroupExist",
    "hash": "0xF9034C136C9E00D3",
    "code": "-- DOES_SCENARIO_GROUP_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesScenarioGroupExist(\n\t\tscenarioGroup --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Occurrences in the b617d scripts:\n\"ARMY_GUARD\",\n\"ARMY_HELI\",\n\"Cinema_Downtown\",\n\"Cinema_Morningwood\",\n\"Cinema_Textile\",\n\"City_Banks\",\n\"Countryside_Banks\",\n\"DEALERSHIP\",\n\"GRAPESEED_PLANES\",\n\"KORTZ_SECURITY\",\n\"LOST_BIKERS\",\n\"LSA_Planes\",\n\"LSA_Planes\",\n\"MP_POLICE\",\n\"Observatory_Bikers\",\n\"POLICE_POUND1\",\n\"POLICE_POUND2\",\n\"POLICE_POUND3\",\n\"POLICE_POUND4\",\n\"POLICE_POUND5\"\n\"QUARRY\",\n\"SANDY_PLANES\",\n\"SCRAP_SECURITY\",\n\"SEW_MACHINE\",\n\"SOLOMON_GATE\",\n\"Triathlon_1_Start\",\n\"Triathlon_2_Start\",\n\"Triathlon_3_Start\"\nSometimes used with IS_SCENARIO_GROUP_ENABLED:\nif (TASK::DOES_SCENARIO_GROUP_EXIST(\"Observatory_Bikers\") && (!TASK::IS_SCENARIO_GROUP_ENABLED(\"Observatory_Bikers\"))) {\nelse if (TASK::IS_SCENARIO_GROUP_ENABLED(\"BLIMP\")) {"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "DoesScenarioOfTypeExistInArea",
    "hash": "0x0A9D0C2A3BBC86C1",
    "code": "-- DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA\nlocal retval --[[ boolean ]] =\n\tDoesScenarioOfTypeExistInArea(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ string ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "DoesScriptedCoverPointExistAtCoords",
    "hash": "0xA98B8E3C088E5A31",
    "code": "-- DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS\nlocal retval --[[ boolean ]] =\n\tDoesScriptedCoverPointExistAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if there is a cover point at position"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetActiveVehicleMissionType",
    "hash": "0x534AEBA6E5ED4CAB",
    "code": "-- GET_ACTIVE_VEHICLE_MISSION_TYPE\nlocal retval --[[ integer ]] =\n\tGetActiveVehicleMissionType(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetClipSetForScriptedGunTask",
    "hash": "0x3A8CADC7D37AACC5",
    "code": "-- GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK\nlocal retval --[[ string ]] =\n\tGetClipSetForScriptedGunTask(\n\t\tp0 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetIsTaskActive",
    "hash": "0xB0760331C7AA4155",
    "code": "-- GET_IS_TASK_ACTIVE\nlocal retval --[[ boolean ]] =\n\tGetIsTaskActive(\n\t\tped --[[ Ped ]], \n\t\ttaskIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetIsWaypointRecordingLoaded",
    "hash": "0xCB4E8BE8A0063C5D",
    "code": "-- GET_IS_WAYPOINT_RECORDING_LOADED\nlocal retval --[[ boolean ]] =\n\tGetIsWaypointRecordingLoaded(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetNavmeshRouteDistanceRemaining",
    "hash": "0xC6F5C0BCDC74D62D",
    "code": "-- GET_NAVMESH_ROUTE_DISTANCE_REMAINING\nlocal retval --[[ integer ]], distanceRemaining --[[ number ]], isPathReady --[[ boolean ]] =\n\tGetNavmeshRouteDistanceRemaining(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.\nReturn value of native is the same as GET_NAVMESH_ROUTE_RESULT\nLooks like the native returns an int for the path's state:\n1 - ???\n2 - ???\n3 - Finished Generating"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetNavmeshRouteResult",
    "hash": "0x632E831F382A0FA8",
    "code": "-- GET_NAVMESH_ROUTE_RESULT\nlocal retval --[[ integer ]] =\n\tGetNavmeshRouteResult(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See GET_NAVMESH_ROUTE_DISTANCE_REMAINING for more details."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetPedDesiredMoveBlendRatio",
    "hash": "0x8517D4A6CA8513ED",
    "code": "-- GET_PED_DESIRED_MOVE_BLEND_RATIO\nlocal retval --[[ number ]] =\n\tGetPedDesiredMoveBlendRatio(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetPedWaypointDistance",
    "hash": "0xE6A877C64CAF1BC5",
    "code": "-- GET_PED_WAYPOINT_DISTANCE\nlocal retval --[[ number ]] =\n\tGetPedWaypointDistance(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetPedWaypointProgress",
    "hash": "0x2720AAA75001E094",
    "code": "-- GET_PED_WAYPOINT_PROGRESS\nlocal retval --[[ integer ]] =\n\tGetPedWaypointProgress(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetPhoneGestureAnimCurrentTime",
    "hash": "0x47619ABE8B268C60",
    "code": "-- GET_PHONE_GESTURE_ANIM_CURRENT_TIME\nlocal retval --[[ number ]] =\n\tGetPhoneGestureAnimCurrentTime(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetPhoneGestureAnimTotalTime",
    "hash": "0x1EE0F68A7C25DEC6",
    "code": "-- GET_PHONE_GESTURE_ANIM_TOTAL_TIME\nlocal retval --[[ number ]] =\n\tGetPhoneGestureAnimTotalTime(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetScriptTaskStatus",
    "hash": "0x77F1BEB8863288D5",
    "code": "-- GET_SCRIPT_TASK_STATUS\nlocal retval --[[ integer ]] =\n\tGetScriptTaskStatus(\n\t\tped --[[ Ped ]], \n\t\ttaskHash --[[ Hash ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped the task is running on",
      "taskHash: \n\nThe hash of the task"
    ],
    "returns": [
      "The status of the script-assigned task."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped the task is running on\n\ntaskHash: \n\nThe hash of the task\n\nReturns:\n\nThe status of the script-assigned task.\n\nGets the status of a spesifed script-assigned task on the given ped. The return value is always an int between 0-7.\n\nYou can set taskHash to SCRIPT_TASK_ANY to check if any task is active, it will return 1 for active, 3 for no active. SCRIPT_TASK_INVALID can be similarly used, it returns 7 if there are any active task, and 3 if there are no active tasks.\n\ntaskHash list: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt\n\nReturns:\n\n0 = WAITING_TO_START_TASK\n1 = PERFORMING_TASK\n2 = DORMANT_TASK\n3 = VACANT_STAGE\n7 = TASK_FINISHED_OR_NOT_FOUND"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetScriptedCoverPointCoords",
    "hash": "0x594A1028FC2A3E85",
    "code": "-- GET_SCRIPTED_COVER_POINT_COORDS\nlocal retval --[[ vector3 ]] =\n\tGetScriptedCoverPointCoords(\n\t\tcoverpoint --[[ ScrHandle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetSequenceProgress",
    "hash": "0x00A9010CFE1E3533",
    "code": "-- GET_SEQUENCE_PROGRESS\nlocal retval --[[ integer ]] =\n\tGetSequenceProgress(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returned values:\n0 to 7 = task that's currently in progress, 0 meaning the first one.\n-1 no task sequence in progress."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetTaskMoveNetworkEvent",
    "hash": "0xB4F47213DF45A64C",
    "code": "-- GET_TASK_MOVE_NETWORK_EVENT\nlocal retval --[[ boolean ]] =\n\tGetTaskMoveNetworkEvent(\n\t\tped --[[ Ped ]], \n\t\teventName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetTaskMoveNetworkSignalBool",
    "hash": "0xA7FFBA498E4AAF67",
    "code": "-- GET_TASK_MOVE_NETWORK_SIGNAL_BOOL\nlocal retval --[[ boolean ]] =\n\tGetTaskMoveNetworkSignalBool(\n\t\tped --[[ Ped ]], \n\t\tsignalName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetTaskMoveNetworkSignalFloat",
    "hash": "0x44AB0B3AFECCE242",
    "code": "-- _GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT\nlocal retval --[[ number ]] =\n\tGetTaskMoveNetworkSignalFloat(\n\t\tped --[[ Ped ]], \n\t\tsignalName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetTaskMoveNetworkState",
    "hash": "0x717E4D1F2048376D",
    "code": "-- GET_TASK_MOVE_NETWORK_STATE\nlocal retval --[[ string ]] =\n\tGetTaskMoveNetworkState(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetVehicleWaypointProgress",
    "hash": "0x9824CFF8FC66E159",
    "code": "-- GET_VEHICLE_WAYPOINT_PROGRESS\nlocal retval --[[ integer ]] =\n\tGetVehicleWaypointProgress(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetVehicleWaypointTargetPoint",
    "hash": "0x416B62AC8B9E5BBD",
    "code": "-- GET_VEHICLE_WAYPOINT_TARGET_POINT\nlocal retval --[[ integer ]] =\n\tGetVehicleWaypointTargetPoint(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "GetWaypointDistanceAlongRoute",
    "hash": "0xA5B769058763E497",
    "code": "-- GET_WAYPOINT_DISTANCE_ALONG_ROUTE\nlocal retval --[[ number ]] =\n\tGetWaypointDistanceAlongRoute(\n\t\tp0 --[[ string ]], \n\t\tp1 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsDrivebyTaskUnderneathDrivingTask",
    "hash": "0x8785E6E40C7A8818",
    "code": "-- IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK\nlocal retval --[[ boolean ]] =\n\tIsDrivebyTaskUnderneathDrivingTask(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsMountedWeaponTaskUnderneathDrivingTask",
    "hash": "0xA320EF046186FA3B",
    "code": "-- IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK\nlocal retval --[[ boolean ]] =\n\tIsMountedWeaponTaskUnderneathDrivingTask(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsMoveBlendRatioRunning",
    "hash": "0xD4D8636C0199A939",
    "code": "-- IS_MOVE_BLEND_RATIO_RUNNING\nlocal retval --[[ boolean ]] =\n\tIsMoveBlendRatioRunning(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsMoveBlendRatioSprinting",
    "hash": "0x24A2AD74FA9814E2",
    "code": "-- IS_MOVE_BLEND_RATIO_SPRINTING\nlocal retval --[[ boolean ]] =\n\tIsMoveBlendRatioSprinting(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsMoveBlendRatioStill",
    "hash": "0x349CE7B56DAFD95C",
    "code": "-- IS_MOVE_BLEND_RATIO_STILL\nlocal retval --[[ boolean ]] =\n\tIsMoveBlendRatioStill(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsMoveBlendRatioWalking",
    "hash": "0xF133BBBE91E1691F",
    "code": "-- IS_MOVE_BLEND_RATIO_WALKING\nlocal retval --[[ boolean ]] =\n\tIsMoveBlendRatioWalking(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedActiveInScenario",
    "hash": "0xAA135F9482C82CC3",
    "code": "-- IS_PED_ACTIVE_IN_SCENARIO\nlocal retval --[[ boolean ]] =\n\tIsPedActiveInScenario(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped handle."
    ],
    "returns": [
      "Returns true if the ped is in a using a scenario and is doing the ambient animations."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nReturns:\n\nReturns true if the ped is in a using a scenario and is doing the ambient animations.\n\nThis is a stricter version of IS_PED_USING_ANY_SCENARIO. It only returns true if the ped is playing the ambient animations associated with the scenario."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedBeingArrested",
    "hash": "0x90A09F3A45FED688",
    "code": "-- IS_PED_BEING_ARRESTED\nlocal retval --[[ boolean ]] =\n\tIsPedBeingArrested(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This function is hard-coded to always return 0."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedCuffed",
    "hash": "0x74E559B3BC910685",
    "code": "-- IS_PED_CUFFED\nlocal retval --[[ boolean ]] =\n\tIsPedCuffed(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedGettingUp",
    "hash": "0x2A74E1D5F2F00EEC",
    "code": "-- IS_PED_GETTING_UP\nlocal retval --[[ boolean ]] =\n\tIsPedGettingUp(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedInWrithe",
    "hash": "0xDEB6D52126E7D640",
    "code": "-- IS_PED_IN_WRITHE\nlocal retval --[[ boolean ]] =\n\tIsPedInWrithe(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns true if the ped is in writhe, false otherwise."
    ],
    "description": "Returns:\n\nReturns true if the ped is in writhe, false otherwise.\n\nThis native checks if a ped is on the ground, in pain from a (gunshot) wound."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedPlayingBaseClipInScenario",
    "hash": "0x621C6E4729388E41",
    "code": "-- IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO\nlocal retval --[[ boolean ]] =\n\tIsPedPlayingBaseClipInScenario(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedRunning",
    "hash": "0xC5286FFC176F28A2",
    "code": "-- IS_PED_RUNNING\nlocal retval --[[ boolean ]] =\n\tIsPedRunning(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedRunningArrestTask",
    "hash": "0x3DC52677769B4AE0",
    "code": "-- IS_PED_RUNNING_ARREST_TASK\nlocal retval --[[ boolean ]] =\n\tIsPedRunningArrestTask(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedSprinting",
    "hash": "0x57E457CD2C0FC168",
    "code": "-- IS_PED_SPRINTING\nlocal retval --[[ boolean ]] =\n\tIsPedSprinting(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedStill",
    "hash": "0xAC29253EEF8F0180",
    "code": "-- IS_PED_STILL\nlocal retval --[[ boolean ]] =\n\tIsPedStill(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedStrafing",
    "hash": "0xE45B7F222DE47E09",
    "code": "-- IS_PED_STRAFING\nlocal retval --[[ boolean ]] =\n\tIsPedStrafing(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "What's strafing?"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPedWalking",
    "hash": "0xDE4C184B2B9B071A",
    "code": "-- IS_PED_WALKING\nlocal retval --[[ boolean ]] =\n\tIsPedWalking(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsPlayingPhoneGestureAnim",
    "hash": "0xB8EBB1E9D3588C10",
    "code": "-- IS_PLAYING_PHONE_GESTURE_ANIM\nlocal retval --[[ boolean ]] =\n\tIsPlayingPhoneGestureAnim(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsScenarioGroupEnabled",
    "hash": "0x367A09DED4E05B99",
    "code": "-- IS_SCENARIO_GROUP_ENABLED\nlocal retval --[[ boolean ]] =\n\tIsScenarioGroupEnabled(\n\t\tscenarioGroup --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Occurrences in the b617d scripts:\n \"ARMY_GUARD\",\n \"ARMY_HELI\",\n \"BLIMP\",\n \"Cinema_Downtown\",\n \"Cinema_Morningwood\",\n \"Cinema_Textile\",\n \"City_Banks\",\n \"Countryside_Banks\",\n \"DEALERSHIP\",\n \"KORTZ_SECURITY\",\n \"LSA_Planes\",\n \"MP_POLICE\",\n \"Observatory_Bikers\",\n \"POLICE_POUND1\",\n \"POLICE_POUND2\",\n \"POLICE_POUND3\",\n \"POLICE_POUND4\",\n \"POLICE_POUND5\",\n \"Rampage1\",\n \"SANDY_PLANES\",\n \"SCRAP_SECURITY\",\n \"SEW_MACHINE\",\n \"SOLOMON_GATE\"\nSometimes used with DOES_SCENARIO_GROUP_EXIST:\nif (TASK::DOES_SCENARIO_GROUP_EXIST(\"Observatory_Bikers\") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED(\"Observatory_Bikers\"))) {\nelse if (TASK::IS_SCENARIO_GROUP_ENABLED(\"BLIMP\")) {"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsScenarioOccupied",
    "hash": "0x788756D73AC2E07C",
    "code": "-- IS_SCENARIO_OCCUPIED\nlocal retval --[[ boolean ]] =\n\tIsScenarioOccupied(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsScenarioTypeEnabled",
    "hash": "0x3A815DB3EA088722",
    "code": "-- IS_SCENARIO_TYPE_ENABLED\nlocal retval --[[ boolean ]] =\n\tIsScenarioTypeEnabled(\n\t\tscenarioType --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Occurrences in the b617d scripts:\n\"PROP_HUMAN_SEAT_CHAIR\",\n\"WORLD_HUMAN_DRINKING\",\n\"WORLD_HUMAN_HANG_OUT_STREET\",\n\"WORLD_HUMAN_SMOKING\",\n\"WORLD_MOUNTAIN_LION_WANDER\",\n\"WORLD_HUMAN_DRINKING\"\nSometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.\nscenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsTaskMoveNetworkActive",
    "hash": "0x921CE12C489C4C41",
    "code": "-- IS_TASK_MOVE_NETWORK_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsTaskMoveNetworkActive(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsTaskMoveNetworkReadyForTransition",
    "hash": "0x30ED88D5E0C56A37",
    "code": "-- IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION\nlocal retval --[[ boolean ]] =\n\tIsTaskMoveNetworkReadyForTransition(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsWaypointPlaybackGoingOnForPed",
    "hash": "0xE03B3F2D3DC59B64",
    "code": "-- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED\nlocal retval --[[ boolean ]] =\n\tIsWaypointPlaybackGoingOnForPed(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "IsWaypointPlaybackGoingOnForVehicle",
    "hash": "0xF5134943EA29868C",
    "code": "-- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsWaypointPlaybackGoingOnForVehicle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "OpenPatrolRoute",
    "hash": "0xA36BFB5EE89F3D82",
    "code": "-- OPEN_PATROL_ROUTE\nOpenPatrolRoute(\n\tpatrolRoute --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The patrol route name must starts with \"miss_\" to be properly created. \n\n patrolRoutes found in the b617d scripts:\n \"miss_Ass0\",\n \"miss_Ass1\",\n \"miss_Ass2\",\n \"miss_Ass3\",\n \"miss_Ass4\",\n \"miss_Ass5\",\n \"miss_Ass6\",\n \"MISS_PATROL_6\",\n \"MISS_PATROL_7\",\n \"MISS_PATROL_8\",\n \"MISS_PATROL_9\",\n \"miss_Tower_01\",\n \"miss_Tower_02\",\n \"miss_Tower_03\",\n \"miss_Tower_04\",\n \"miss_Tower_05\",\n \"miss_Tower_06\",\n \"miss_Tower_07\",\n \"miss_Tower_08\",\n \"miss_Tower_10\""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "OpenSequenceTask",
    "hash": "0xE8854A4326B9E12B",
    "code": "-- OPEN_SEQUENCE_TASK\nlocal taskSequenceId --[[ integer ]] =\n\tOpenSequenceTask()",
    "parameters": [
      "taskSequenceId: \n\nThe reference to bind to, in Lua/JS this will be returned as a value"
    ],
    "returns": [],
    "description": "Parameters:\n\ntaskSequenceId: \n\nThe reference to bind to, in Lua/JS this will be returned as a value\n\nNOTE\n\nIf this returns 0 that means it failed to get a sequence id.\n\nIf you fail to call CLOSE_SEQUENCE_TASK and CLEAR_SEQUENCE_TASK the sequence system can get stuck in a broken state until you restart your client."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "PedHasUseScenarioTask",
    "hash": "0x295E3CCEC879CCD7",
    "code": "-- PED_HAS_USE_SCENARIO_TASK\nlocal retval --[[ boolean ]] =\n\tPedHasUseScenarioTask(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "PlayAnimOnRunningScenario",
    "hash": "0x748040460F8DF5DC",
    "code": "-- PLAY_ANIM_ON_RUNNING_SCENARIO\nPlayAnimOnRunningScenario(\n\tped --[[ Ped ]], \n\tanimDict --[[ string ]], \n\tanimName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "PlayEntityScriptedAnim",
    "hash": "0x77A1EEC547E7FCF1",
    "code": "-- PLAY_ENTITY_SCRIPTED_ANIM\nlocal p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tPlayEntityScriptedAnim(\n\t\tp0 --[[ Any ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "RemoveAllCoverBlockingAreas",
    "hash": "0xDB6708C0B46F56D8",
    "code": "-- REMOVE_ALL_COVER_BLOCKING_AREAS\nRemoveAllCoverBlockingAreas()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "RemoveCoverPoint",
    "hash": "0xAE287C923D891715",
    "code": "-- REMOVE_COVER_POINT\nRemoveCoverPoint(\n\tcoverpoint --[[ ScrHandle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "RemoveWaypointRecording",
    "hash": "0xFF1B8B4AA1C25DC8",
    "code": "-- REMOVE_WAYPOINT_RECORDING\nRemoveWaypointRecording(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "RequestTaskMoveNetworkStateTransition",
    "hash": "0xD01015C7316AE176",
    "code": "-- REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION\nlocal retval --[[ boolean ]] =\n\tRequestTaskMoveNetworkStateTransition(\n\t\tped --[[ Ped ]], \n\t\tname --[[ string ]]\n\t)",
    "parameters": [
      "ped: \n\nA ped handle.",
      "name: \n\nThe name of the target request state in the move network file."
    ],
    "returns": [
      "Technically a void. Scripts treat this as a boolean, but the game never sets the result, so it will return the ped handle instead."
    ],
    "description": "Parameters:\n\nped: \n\nA ped handle.\n\nname: \n\nThe name of the target request state in the move network file.\n\nReturns:\n\nTechnically a void. Scripts treat this as a boolean, but the game never sets the result, so it will return the ped handle instead."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "RequestWaypointRecording",
    "hash": "0x9EEFB62EB27B5792",
    "code": "-- REQUEST_WAYPOINT_RECORDING\nRequestWaypointRecording(\n\tname --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "For a full list of the points, see here: goo.gl/wIH0vn\nMax number of loaded recordings is 32."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ResetExclusiveScenarioGroup",
    "hash": "0x4202BBCB8684563D",
    "code": "-- RESET_EXCLUSIVE_SCENARIO_GROUP\nResetExclusiveScenarioGroup()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ResetScenarioGroupsEnabled",
    "hash": "0xDD902D0349AFAD3A",
    "code": "-- RESET_SCENARIO_GROUPS_ENABLED\nResetScenarioGroupsEnabled()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "ResetScenarioTypesEnabled",
    "hash": "0x0D40EE2A7F2B2D6D",
    "code": "-- RESET_SCENARIO_TYPES_ENABLED\nResetScenarioTypesEnabled()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetAnimLooped",
    "hash": "0x70033C3CC29A1FF4",
    "code": "-- SET_ANIM_LOOPED\nSetAnimLooped(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetAnimPhase",
    "hash": "0xDDF3CB5A0A4C0B49",
    "code": "-- SET_ANIM_PHASE\nSetAnimPhase(\n\tentity --[[ Entity ]], \n\tp1 --[[ number ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetAnimRate",
    "hash": "0x032D49C5E359C847",
    "code": "-- SET_ANIM_RATE\nSetAnimRate(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetAnimWeight",
    "hash": "0x207F1A47C0342F48",
    "code": "-- SET_ANIM_WEIGHT\nSetAnimWeight(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetDriveTaskCruiseSpeed",
    "hash": "0x5C9B84BD7D31D908",
    "code": "-- SET_DRIVE_TASK_CRUISE_SPEED\nSetDriveTaskCruiseSpeed(\n\tdriver --[[ Ped ]], \n\tcruiseSpeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetDriveTaskDrivingStyle",
    "hash": "0xDACE1BE37D88AF67",
    "code": "-- SET_DRIVE_TASK_DRIVING_STYLE\nSetDriveTaskDrivingStyle(\n\tped --[[ Ped ]], \n\tdrivingStyle --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to have their driving style set.",
      "drivingStyle: \n\nThe driving style (see eVehicleDrivingFlags)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to have their driving style set.\n\ndrivingStyle: \n\nThe driving style (see eVehicleDrivingFlags).\n\nSets the driving style for a ped currently performing a driving task.\n\nEach flag in the eVehicleDrivingFlags enum can be combined to create a driving style, with each enabling or disabling a specific driving behavior. The driving style can be set to one of the predefined driving styles, or a custom driving style can be created by combining the flags. This can be done by using the bitwise OR operator (|) to combine the flags or by adding the decimal values of the flags together.\n\nenum eVehicleDrivingFlags\n{\n  None = 0,\n  StopForVehicles = 1,\n  StopForPeds = 2,\n  SwerveAroundAllVehicles = 4,\n  SteerAroundStationaryVehicles = 8,\n  SteerAroundPeds = 16,\n  SteerAroundObjects = 32,\n  DontSteerAroundPlayerPed = 64,\n  StopAtTrafficLights = 128,\n  GoOffRoadWhenAvoiding = 256,\n  AllowGoingWrongWay = 512,\n  Reverse = 1024,\n  UseWanderFallbackInsteadOfStraightLine = 2048,\n  AvoidRestrictedAreas = 4096,\n  PreventBackgroundPathfinding = 8192,\n  AdjustCruiseSpeedBasedOnRoadSpeed = 16384,\n  UseShortCutLinks = 262144,\n  ChangeLanesAroundObstructions = 524288,\n  UseSwitchedOffNodes = 2097152,\n  PreferNavmeshRoute = 4194304,\n  PlaneTaxiMode = 8388608,\n  ForceStraightLine = 16777216,\n  UseStringPullingAtJunctions = 33554432,\n  TryToAvoidHighways = 536870912,\n  ForceJoinInRoadDirection = 1073741824,\n  StopAtDestination = 2147483648,\n  // StopForVehicles | StopForPeds | SteerAroundObjects | SteerAroundStationaryVehicles | StopAtTrafficLights | UseShortCutLinks | ChangeLanesAroundObstructions\n  DrivingModeStopForVehicles = 786603,\n  // StopForVehicles | StopForPeds | StopAtTrafficLights | UseShortCutLinks\n  DrivingModeStopForVehiclesStrict = 262275,\n  // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles\n  DrivingModeAvoidVehicles = 786469,\n  // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions\n  DrivingModeAvoidVehiclesReckless = 786468,\n  // StopForVehicles | SteerAroundStationaryVehicles | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions\n  DrivingModeStopForVehiclesIgnoreLights = 786475,\n  // SwerveAroundAllVehicles | StopAtTrafficLights | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles\n  DrivingModeAvoidVehiclesObeyLights = 786597,\n  // SwerveAroundAllVehicles | StopAtTrafficLights | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles\n  DrivingModeAvoidVehiclesStopForPedsObeyLights = 786599,\n}"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetDriveTaskMaxCruiseSpeed",
    "hash": "0x404A5AA9B9F0B746",
    "code": "-- SET_DRIVE_TASK_MAX_CRUISE_SPEED\nSetDriveTaskMaxCruiseSpeed(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetDrivebyTaskTarget",
    "hash": "0xE5B302114D8162EE",
    "code": "-- SET_DRIVEBY_TASK_TARGET\nSetDrivebyTaskTarget(\n\tshootingPed --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\ttargetVehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetExclusiveScenarioGroup",
    "hash": "0x535E97E1F7FC0C6A",
    "code": "-- SET_EXCLUSIVE_SCENARIO_GROUP\nSetExclusiveScenarioGroup(\n\tscenarioGroup --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Groups found in the scripts used with this native:  \n\"AMMUNATION\",  \n\"QUARRY\",  \n\"Triathlon_1\",  \n\"Triathlon_2\",  \n\"Triathlon_3\""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetGlobalMinBirdFlightHeight",
    "hash": "0x6C6B148586F934F7",
    "code": "-- SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT\nSetGlobalMinBirdFlightHeight(\n\theight --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Birds will try to reach the given height."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetHighFallTask",
    "hash": "0x8C825BDC7741D37C",
    "code": "-- SET_HIGH_FALL_TASK\nSetHighFallTask(\n\tped --[[ Ped ]], \n\tduration --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetMountedWeaponTarget",
    "hash": "0xCCD892192C6D2BB9",
    "code": "-- SET_MOUNTED_WEAPON_TARGET\nSetMountedWeaponTarget(\n\tshootingPed --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\ttargetVehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.  \nNativeDB Added Parameter 7: Any p6\nNativeDB Added Parameter 8: Any p7"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetNextDesiredMoveState",
    "hash": "0xF1B9F16E89E2C93A",
    "code": "-- SET_NEXT_DESIRED_MOVE_STATE\nSetNextDesiredMoveState(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native does absolutely nothing, just a nullsub"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetParachuteTaskTarget",
    "hash": "0xC313379AF0FCEDA7",
    "code": "-- SET_PARACHUTE_TASK_TARGET\nSetParachuteTaskTarget(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetParachuteTaskThrust",
    "hash": "0x0729BAC1B8C64317",
    "code": "-- SET_PARACHUTE_TASK_THRUST\nSetParachuteTaskThrust(\n\tped --[[ Ped ]], \n\tthrust --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedCanPlayAmbientIdles",
    "hash": "0x8FD89A6240813FD0",
    "code": "-- SET_PED_CAN_PLAY_AMBIENT_IDLES\nSetPedCanPlayAmbientIdles(\n\tped --[[ Ped ]], \n\tbBlockIdleClips --[[ boolean ]], \n\tbRemoveIdleClipIfPlaying --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nPed index.",
      "bBlockIdleClips: \n\nIf true, prevents a ped from playing an idle animation this frame.",
      "bRemoveIdleClipIfPlaying: \n\nIf true and the ped is playing an idle animation, the clip is stopped."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed index.\n\nbBlockIdleClips: \n\nIf true, prevents a ped from playing an idle animation this frame.\n\nbRemoveIdleClipIfPlaying: \n\nIf true and the ped is playing an idle animation, the clip is stopped.\n\nPrevents a ped from playing ambient idle animations.\n\nNote: This native must be called every frame."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedDesiredMoveBlendRatio",
    "hash": "0x1E982AC8716912C5",
    "code": "-- SET_PED_DESIRED_MOVE_BLEND_RATIO\nSetPedDesiredMoveBlendRatio(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedPathAvoidFire",
    "hash": "0x4455517B28441E60",
    "code": "-- SET_PED_PATH_AVOID_FIRE\nSetPedPathAvoidFire(\n\tped --[[ Ped ]], \n\tavoidFire --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedPathCanDropFromHeight",
    "hash": "0xE361C5C71C431A4F",
    "code": "-- SET_PED_PATH_CAN_DROP_FROM_HEIGHT\nSetPedPathCanDropFromHeight(\n\tped --[[ Ped ]], \n\tToggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedPathCanUseClimbovers",
    "hash": "0x8E06A6FE76C9EFF4",
    "code": "-- SET_PED_PATH_CAN_USE_CLIMBOVERS\nSetPedPathCanUseClimbovers(\n\tped --[[ Ped ]], \n\tToggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedPathCanUseLadders",
    "hash": "0x77A5B103C87F476E",
    "code": "-- SET_PED_PATH_CAN_USE_LADDERS\nSetPedPathCanUseLadders(\n\tped --[[ Ped ]], \n\tToggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedPathClimbCostModifier",
    "hash": "0x88E32DB8C1A4AA4B",
    "code": "-- SET_PED_PATH_CLIMB_COST_MODIFIER\nSetPedPathClimbCostModifier(\n\tped --[[ Ped ]], \n\tmodifier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Default modifier is 1.0, minimum is 0.0 and maximum is 10.0."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedPathMayEnterWater",
    "hash": "0xF35425A4204367EC",
    "code": "-- SET_PED_PATH_MAY_ENTER_WATER\nSetPedPathMayEnterWater(\n\tped --[[ Ped ]], \n\tmayEnterWater --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedPathPreferToAvoidWater",
    "hash": "0x38FE1EC73743793C",
    "code": "-- SET_PED_PATH_PREFER_TO_AVOID_WATER\nSetPedPathPreferToAvoidWater(\n\tped --[[ Ped ]], \n\tavoidWater --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetPedWaypointRouteOffset",
    "hash": "0xED98E10B0AFCE4B4",
    "code": "-- SET_PED_WAYPOINT_ROUTE_OFFSET\nlocal retval --[[ Any ]] =\n\tSetPedWaypointRouteOffset(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]], \n\t\tp2 --[[ Any ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetScenarioGroupEnabled",
    "hash": "0x02C8E5B49848664E",
    "code": "-- SET_SCENARIO_GROUP_ENABLED\nSetScenarioGroupEnabled(\n\tscenarioGroup --[[ string ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetScenarioTypeEnabled",
    "hash": "0xEB47EC4E34FB7EE1",
    "code": "-- SET_SCENARIO_TYPE_ENABLED\nSetScenarioTypeEnabled(\n\tscenarioType --[[ string ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "seems to enable/disable specific scenario-types from happening in the game world.\nHere are some scenario types from the scripts:\n\"WORLD_MOUNTAIN_LION_REST\"\n\"WORLD_MOUNTAIN_LION_WANDER\"\n\"DRIVE\"\n\"WORLD_VEHICLE_POLICE_BIKE\"\n\"WORLD_VEHICLE_POLICE_CAR\"\n\"WORLD_VEHICLE_POLICE_NEXT_TO_CAR\"\n\"WORLD_VEHICLE_DRIVE_SOLO\"\n\"WORLD_VEHICLE_BIKER\"\n\"WORLD_VEHICLE_DRIVE_PASSENGERS\"\n\"WORLD_VEHICLE_SALTON_DIRT_BIKE\"\n\"WORLD_VEHICLE_BICYCLE_MOUNTAIN\"\n\"PROP_HUMAN_SEAT_CHAIR\"\n\"WORLD_VEHICLE_ATTRACTOR\"\n\"WORLD_HUMAN_LEANING\"\n\"WORLD_HUMAN_HANG_OUT_STREET\"\n\"WORLD_HUMAN_DRINKING\"\n\"WORLD_HUMAN_SMOKING\"\n\"WORLD_HUMAN_GUARD_STAND\"\n\"WORLD_HUMAN_CLIPBOARD\"\n\"WORLD_HUMAN_HIKER\"\n\"WORLD_VEHICLE_EMPTY\"\n\"WORLD_VEHICLE_BIKE_OFF_ROAD_RACE\"\n\"WORLD_HUMAN_PAPARAZZI\"\n\"WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN\"\n\"WORLD_VEHICLE_PARK_PARALLEL\"\n\"WORLD_VEHICLE_CONSTRUCTION_SOLO\"\n\"WORLD_VEHICLE_CONSTRUCTION_PASSENGERS\"\n\"WORLD_VEHICLE_TRUCK_LOGS\"\nscenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetSequenceToRepeat",
    "hash": "0x58C70CF3A41E4AE7",
    "code": "-- SET_SEQUENCE_TO_REPEAT\nSetSequenceToRepeat(\n\ttaskSequenceId --[[ integer ]], \n\trepeat --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetTaskMoveNetworkSignalBool",
    "hash": "0xB0A6CFD2C69C1088",
    "code": "-- SET_TASK_MOVE_NETWORK_SIGNAL_BOOL\nSetTaskMoveNetworkSignalBool(\n\tped --[[ Ped ]], \n\tsignalName --[[ string ]], \n\tvalue --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped that's performing the task.",
      "signalName: \n\nThe property name.",
      "value: \n\nThe property value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped that's performing the task.\n\nsignalName: \n\nThe property name.\n\nvalue: \n\nThe property value to set."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetTaskMoveNetworkSignalFloat",
    "hash": "0xD5BB4025AE449A4E",
    "code": "-- SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT\nSetTaskMoveNetworkSignalFloat(\n\tped --[[ Ped ]], \n\tsignalName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped on which the task is playing.",
      "signalName: \n\nThe property name.",
      "value: \n\nThe property value to set."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped on which the task is playing.\n\nsignalName: \n\nThe property name.\n\nvalue: \n\nThe property value to set.\n\np0 - PLAYER::PLAYER_PED_ID();\np1 - \"Phase\", \"Wobble\", \"x_axis\",\"y_axis\",\"introphase\",\"speed\".\np2 - From what i can see it goes up to 1f (maybe).\n-LcGamingHD\nExample: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), \"Phase\", 0.5);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetTaskMoveNetworkSignalFloat_2",
    "hash": "0x373EF409B82697A3",
    "code": "-- _SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2\nSetTaskMoveNetworkSignalFloat_2(\n\tped --[[ Ped ]], \n\tsignalName --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetTaskVehicleChaseBehaviorFlag",
    "hash": "0xCC665AAC360D31E7",
    "code": "-- SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG\nSetTaskVehicleChaseBehaviorFlag(\n\tped --[[ Ped ]], \n\tflag --[[ integer ]], \n\tset --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "* Flag 1: Aggressive ramming of suspect\n* Flag 2: Ram attempts\n* Flag 8: Medium-aggressive boxing tactic with a bit of PIT\n* Flag 16: Ramming, seems to be slightly less aggressive than 1-2.\n* Flag 32: Stay back from suspect, no tactical contact. Convoy-like."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "SetTaskVehicleChaseIdealPursuitDistance",
    "hash": "0x639B642FACBE4EDD",
    "code": "-- SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE\nSetTaskVehicleChaseIdealPursuitDistance(\n\tped --[[ Ped ]], \n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "StopAnimPlayback",
    "hash": "0xEE08C992D238C5D1",
    "code": "-- STOP_ANIM_PLAYBACK\nStopAnimPlayback(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Looks like p1 may be a flag, still need to do some research, though."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "StopAnimTask",
    "hash": "0x97FF36A1D40EA00A",
    "code": "-- STOP_ANIM_TASK\nStopAnimTask(\n\tped --[[ Ped ]], \n\tanimDictionary --[[ string ]], \n\tanimationName --[[ string ]], \n\tanimExitSpeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Animations list"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskAchieveHeading",
    "hash": "0x93B93A37987F1F3D",
    "code": "-- TASK_ACHIEVE_HEADING\nTaskAchieveHeading(\n\tped --[[ Ped ]], \n\theading --[[ number ]], \n\ttimeout --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the specified ped achieve the specified heading.  \npedHandle: The handle of the ped to assign the task to.  \nheading: The desired heading.  \ntimeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskAgitatedAction",
    "hash": "0x19D1B791CB3670FE",
    "code": "-- _TASK_AGITATED_ACTION\nTaskAgitatedAction(\n\tped --[[ Ped ]], \n\tped2 --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskAimGunAtCoord",
    "hash": "0x6671F3EEC681BDA1",
    "code": "-- TASK_AIM_GUN_AT_COORD\nTaskAimGunAtCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\ttime --[[ integer ]], \n\tbInstantBlendToAim --[[ boolean ]], \n\tbPlayAimIntro --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskAimGunAtEntity",
    "hash": "0x9B53BB6E8943AF53",
    "code": "-- TASK_AIM_GUN_AT_ENTITY\nTaskAimGunAtEntity(\n\tped --[[ Ped ]], \n\tentity --[[ Entity ]], \n\tduration --[[ integer ]], \n\tbInstantBlendToAim --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskAimGunScripted",
    "hash": "0x7A192BE16D373D00",
    "code": "-- TASK_AIM_GUN_SCRIPTED\nTaskAimGunScripted(\n\tped --[[ Ped ]], \n\tscriptTask --[[ Hash ]], \n\tbDisableBlockingClip --[[ boolean ]], \n\tbInstantBlendToAim --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskAimGunScriptedWithTarget",
    "hash": "0x8605AF0DE8B3A5AC",
    "code": "-- TASK_AIM_GUN_SCRIPTED_WITH_TARGET\nTaskAimGunScriptedWithTarget(\n\tped --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tiGunTaskType --[[ Hash ]], \n\tbDisableBlockingClip --[[ boolean ]], \n\tbForceAim --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskArrestPed",
    "hash": "0xF3B9A78A178572B1",
    "code": "-- TASK_ARREST_PED\nTaskArrestPed(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example from \"me_amanda1.ysc.c4\":\nTASK::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());\nExample from \"armenian1.ysc.c4\":\nif (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {\n    TASK::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());\n}\nI would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.\nLooks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskBoatMission",
    "hash": "0x15C86013127CE63F",
    "code": "-- TASK_BOAT_MISSION\nTaskBoatMission(\n\tped --[[ Ped ]], \n\tboat --[[ Vehicle ]], \n\tvehicleTarget --[[ Vehicle ]], \n\tpedTarget --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tmissionType --[[ integer ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]], \n\tradius --[[ number ]], \n\tmissionFlags --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to be tasked.",
      "boat: \n\nThe boats' entity handle.",
      "vehicleTarget: \n\nThe target vehicle (default is 0).",
      "pedTarget: \n\nThe target ped (default is 0).",
      "x: \n\nThe x coordinate of the target (default is 0.0f).",
      "y: \n\nThe y coordinate of the target (default is 0.0f).",
      "z: \n\nThe z coordinate of the target (default is 0.0f).",
      "missionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).",
      "speed: \n\nThe speed in m/s (default is -1.0f).",
      "drivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).",
      "radius: \n\nThe radius of when the task will be completed (default is -1.0f).",
      "missionFlags: \n\nThe mission flags (default is 0) (see eBoatMissionFlags)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to be tasked.\n\nboat: \n\nThe boats' entity handle.\n\nvehicleTarget: \n\nThe target vehicle (default is 0).\n\npedTarget: \n\nThe target ped (default is 0).\n\nx: \n\nThe x coordinate of the target (default is 0.0f).\n\ny: \n\nThe y coordinate of the target (default is 0.0f).\n\nz: \n\nThe z coordinate of the target (default is 0.0f).\n\nmissionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).\n\nspeed: \n\nThe speed in m/s (default is -1.0f).\n\ndrivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).\n\nradius: \n\nThe radius of when the task will be completed (default is -1.0f).\n\nmissionFlags: \n\nThe mission flags (default is 0) (see eBoatMissionFlags).\n\nAll parameters except ped and boat are optional, with pedTarget, vehicleTarget, x, y, z being dependent on missionType (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either x, y, z or a target ped/vehicle).\n\nIf you don't want to use a parameter; pass 0.0f for x, y and z, 0 for pedTarget, vehicleTarget and other int parameters, and -1.0f for the remaining float parameters.\n\nenum eBoatMissionFlags\n{\n  None = 0,\n  StopAtEnd = 1,\n  StopAtShore = 2,\n  AvoidShore = 4,\n  PreferForward = 8,\n  NeverStop = 16,\n  NeverNavMesh = 32,\n  NeverRoute = 64,\n  ForceBeached = 128,\n  UseWanderRoute = 256,\n  UseFleeRoute = 512,\n  NeverPause = 1024,\n  // StopAtEnd | StopAtShore | AvoidShore\n  DefaultSettings = 7,\n  // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverRoute\n  OpenOceanSettings = 111,\n  // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverPause\n  BoatTaxiSettings = 1071,\n}"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskChatToPed",
    "hash": "0x8C338E0263E4FD19",
    "code": "-- TASK_CHAT_TO_PED\nTaskChatToPed(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p2 tend to be 16, 17 or 1  \np3 to p7 tend to be 0.0"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskClearDefensiveArea",
    "hash": "0x95A6C46A31D1917D",
    "code": "-- TASK_CLEAR_DEFENSIVE_AREA\nTaskClearDefensiveArea(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskClearLookAt",
    "hash": "0x0F804F1DB19B9689",
    "code": "-- TASK_CLEAR_LOOK_AT\nTaskClearLookAt(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Not clear what it actually does, but here's how script uses it -\nif (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)\n{\n if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))\n    {\n     TASK::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());\n  }\n ...\n}\nAnother one where it doesn't \"look\" at current player -\nTASK::TASK_PLAY_ANIM(l_3ED, \"missheist_agency2aig_2\", \"look_at_phone_a\", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);\nPED::_2208438012482A1A(l_3ED, 0, 0);\nTASK::TASK_CLEAR_LOOK_AT(l_3ED);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskClimb",
    "hash": "0x89D9FCC2435112F1",
    "code": "-- TASK_CLIMB\nTaskClimb(\n\tped --[[ Ped ]], \n\tunused --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Climbs or vaults the nearest thing."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskClimbLadder",
    "hash": "0xB6C987F9285A3814",
    "code": "-- TASK_CLIMB_LADDER\nTaskClimbLadder(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskCombatHatedTargetsAroundPed",
    "hash": "0x7BF835BB9E2698C8",
    "code": "-- TASK_COMBAT_HATED_TARGETS_AROUND_PED\nTaskCombatHatedTargetsAroundPed(\n\tped --[[ Ped ]], \n\tradius --[[ number ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Despite its name, it only attacks ONE hated target. The one closest hated target.  \np2 seems to be always 0"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskCombatHatedTargetsAroundPedTimed",
    "hash": "0x2BBA30B854534A0C",
    "code": "-- TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED\nTaskCombatHatedTargetsAroundPedTimed(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskCombatHatedTargetsInArea",
    "hash": "0x4CF5F55DAC3280A0",
    "code": "-- TASK_COMBAT_HATED_TARGETS_IN_AREA\nTaskCombatHatedTargetsInArea(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Despite its name, it only attacks ONE hated target. The one closest to the specified position."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskCombatPed",
    "hash": "0xF166E48407BAC484",
    "code": "-- TASK_COMBAT_PED\nTaskCombatPed(\n\tped --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the specified ped attack the target ped.  \np2 should be 0  \np3 should be 16"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskCombatPedTimed",
    "hash": "0x944F30DCB7096BDE",
    "code": "-- TASK_COMBAT_PED_TIMED\nTaskCombatPedTimed(\n\tp0 --[[ Any ]], \n\tped --[[ Ped ]], \n\tp2 --[[ integer ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskCower",
    "hash": "0x3EB1FE9E8E908E15",
    "code": "-- TASK_COWER\nTaskCower(\n\tped --[[ Ped ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nPed id.",
      "duration: \n\nDuration of the animation in ms. Set to -1 if you do not want a duration."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id.\n\nduration: \n\nDuration of the animation in ms. Set to -1 if you do not want a duration.\n\nThe ped will act like NPC's involved in a gunfight. The ped will squat down with their heads held in place and look around."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskDriveBy",
    "hash": "0x2F8AF0E82773A171",
    "code": "-- TASK_DRIVE_BY\nTaskDriveBy(\n\tdriverPed --[[ Ped ]], \n\ttargetPed --[[ Ped ]], \n\ttargetVehicle --[[ Vehicle ]], \n\ttargetX --[[ number ]], \n\ttargetY --[[ number ]], \n\ttargetZ --[[ number ]], \n\tdistanceToShoot --[[ number ]], \n\tpedAccuracy --[[ integer ]], \n\tp8 --[[ boolean ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nTASK::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});\nNeeds working example. Doesn't seem to do anything.\nI marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.\nI marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.\nI marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskEnterVehicle",
    "hash": "0xC20E50AA46D09CA8",
    "code": "-- TASK_ENTER_VEHICLE\nTaskEnterVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\ttimeout --[[ integer ]], \n\tseatIndex --[[ integer ]], \n\tspeed --[[ number ]], \n\tflag --[[ integer ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "speed 1.0 = walk, 2.0 = run  \np5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle  \np6 is always 0"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskEveryoneLeaveVehicle",
    "hash": "0x7F93691AB4B92272",
    "code": "-- TASK_EVERYONE_LEAVE_VEHICLE\nTaskEveryoneLeaveVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskExitCover",
    "hash": "0x79B258E397854D29",
    "code": "-- TASK_EXIT_COVER\nTaskExitCover(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskExtendRoute",
    "hash": "0x1E7889778264843A",
    "code": "-- TASK_EXTEND_ROUTE\nTaskExtendRoute(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds a new point to the current point route; a maximum of 8 points can be added.\n\nCall TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskFlushRoute",
    "hash": "0x841142A1376E9006",
    "code": "-- TASK_FLUSH_ROUTE\nTaskFlushRoute()",
    "parameters": [],
    "returns": [],
    "description": "Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskFollowNavMeshToCoord",
    "hash": "0x15D3A79D4E44B913",
    "code": "-- TASK_FOLLOW_NAV_MESH_TO_COORD\nTaskFollowNavMeshToCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tmoveBlendRatio --[[ number ]], \n\ttime --[[ integer ]], \n\tradius --[[ number ]], \n\tflags --[[ integer ]], \n\tfinalHeading --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nPed Index.",
      "x: \n\nX Position Coordinate.",
      "y: \n\nY Position Coordinate.",
      "z: \n\nZ Position Coordinate",
      "moveBlendRatio: \n\nRatio for ped movement (0 to 3.0 in the following order: still, walk, run and sprint)",
      "time: \n\nINT value in milliseconds.",
      "radius: \n\ndistance from the final coordinates that the pedestrian should be to consider itself at the target.",
      "flags: \n\nNavigation Flags for the ped (see eNavScriptFlags).",
      "finalHeading: \n\nPeds heading when finished."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed Index.\n\nx: \n\nX Position Coordinate.\n\ny: \n\nY Position Coordinate.\n\nz: \n\nZ Position Coordinate\n\nmoveBlendRatio: \n\nRatio for ped movement (0 to 3.0 in the following order: still, walk, run and sprint)\n\ntime: \n\nINT value in milliseconds.\n\nradius: \n\ndistance from the final coordinates that the pedestrian should be to consider itself at the target.\n\nflags: \n\nNavigation Flags for the ped (see eNavScriptFlags).\n\nfinalHeading: \n\nPeds heading when finished.\n\nSometimes a path may not be able to be found. This could happen because there simply isn't any way to get there, or maybe a bunch of dynamic objects have blocked the way, or maybe the destination is too far away. In this case the ped will simply stand still. To identify when this has happened, you can use GET_NAVMESH_ROUTE_RESULT. This will help you find situations where peds cannot get to their target.\n\nenum eNavScriptFlags {\n    // Default flag\n    ENAV_DEFAULT = 0,\n    // Will ensure the ped continues to move whilst waiting for the path\n    // to be found, and will not slow down at the end of their route.\n    ENAV_NO_STOPPING = 1,\n    // Performs a slide-to-coord at the end of the task. This requires that the\n    // accompanying NAVDATA structure has the 'SlideToCoordHeading' member set correctly.\n    ENAV_ADV_SLIDE_TO_COORD_AND_ACHIEVE_HEADING_AT_END = 2,\n    // If the navmesh is not loaded in under the target position, then this will\n    // cause the ped to get as close as is possible on whatever navmesh is loaded.\n    // The navmesh must still be loaded at the path start.\n    ENAV_GO_FAR_AS_POSSIBLE_IF_TARGET_NAVMESH_NOT_LOADED = 4,\n    // Will allow navigation underwater - by default this is not allowed.\n    ENAV_ALLOW_SWIMMING_UNDERWATER = 8,\n    // Will only allow navigation on pavements. If the path starts or ends off\n    // the pavement, the command will fail. Likewise if no pavement-only route\n    // can be found even although the start and end are on pavement.\n    ENAV_KEEP_TO_PAVEMENTS = 16,\n    // Prevents the path from entering water at all.\n    ENAV_NEVER_ENTER_WATER = 32,\n    // Disables object-avoidance for this path. The ped may still make minor\n    // steering adjustments to avoid objects, but will not pathfind around them.\n    ENAV_DONT_AVOID_OBJECTS = 64,\n    // Specifies that the navmesh route will only be able to traverse up slopes\n    // which are under the angle specified, in the MaxSlopeNavigable member of the accompanying NAVDATA structure.\n    ENAV_ADVANCED_USE_MAX_SLOPE_NAVIGABLE = 128,\n    // Unused.\n    ENAV_STOP_EXACTLY = 512,\n    // The entity will look ahead in its path for a longer distance to make the\n    // walk/run start go more in the right direction.\n    ENAV_ACCURATE_WALKRUN_START = 1024,\n    // Disables ped-avoidance for this path while we move.\n    ENAV_DONT_AVOID_PEDS = 2048,\n    // If target pos is inside the boundingbox of an object it will otherwise be pushed out.\n    ENAV_DONT_ADJUST_TARGET_POSITION = 4096,\n    // Turns off the default behaviour, which is to stop exactly at the target position.\n    // Occasionally this can cause footsliding/skating problems.\n    ENAV_SUPPRESS_EXACT_STOP = 8192,\n    // Prevents the path-search from finding paths outside of this search distance.\n    // This can be used to prevent peds from finding long undesired routes.\n    ENAV_ADVANCED_USE_CLAMP_MAX_SEARCH_DISTANCE = 16384,\n    // Pulls out the paths from edges at corners for a longer distance, to prevent peds walking into stuff.\n    ENAV_PULL_FROM_EDGE_EXTRA = 32768\n};"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskFollowNavMeshToCoordAdvanced",
    "hash": "0x17F58B88D085DBAC",
    "code": "-- TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED\nTaskFollowNavMeshToCoordAdvanced(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\ttimeout --[[ integer ]], \n\tunkFloat --[[ number ]], \n\tunkInt --[[ integer ]], \n\tunkX --[[ number ]], \n\tunkY --[[ number ]], \n\tunkZ --[[ number ]], \n\tunk_40000f --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskFollowPointRoute",
    "hash": "0x595583281858626E",
    "code": "-- TASK_FOLLOW_POINT_ROUTE\nTaskFollowPointRoute(\n\tped --[[ Ped ]], \n\tspeed --[[ number ]], \n\trouteMode --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to give the task to.",
      "speed: \n\nThe speed to move at in m/s.",
      "routeMode: \n\nThe route mode to use, refer to eFollowPointRouteMode"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to give the task to.\n\nspeed: \n\nThe speed to move at in m/s.\n\nrouteMode: \n\nThe route mode to use, refer to eFollowPointRouteMode\n\nMakes the ped go on a point route.\n\nenum eFollowPointRouteMode {\n\tTICKET_SINGLE = 0,\n\tTICKET_RETURN = 1,\n\tTICKET_SEASON = 2,\n\tTICKET_LOOP = 3\n}\n\n\nThis native is often times used with TASK_FLUSH_ROUTE and TASK_EXTEND_ROUTE"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskFollowToOffsetOfEntity",
    "hash": "0x304AE42E357B8C7E",
    "code": "-- TASK_FOLLOW_TO_OFFSET_OF_ENTITY\nTaskFollowToOffsetOfEntity(\n\tped --[[ Ped ]], \n\tentity --[[ Entity ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]], \n\toffsetZ --[[ number ]], \n\tmovementSpeed --[[ number ]], \n\ttimeout --[[ integer ]], \n\tstoppingRange --[[ number ]], \n\tpersistFollowing --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p6 always -1  \np7 always 10.0  \np8 always 1"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskFollowWaypointRecording",
    "hash": "0x0759591819534F7B",
    "code": "-- TASK_FOLLOW_WAYPOINT_RECORDING\nTaskFollowWaypointRecording(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskForceMotionState",
    "hash": "0x4F056E1AFFEF17AB",
    "code": "-- TASK_FORCE_MOTION_STATE\nTaskForceMotionState(\n\tped --[[ Ped ]], \n\tstate --[[ Hash ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See FORCE_PED_MOTION_STATE"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGetOffBoat",
    "hash": "0x9C00E77AF14B2DFF",
    "code": "-- TASK_GET_OFF_BOAT\nTaskGetOffBoat(\n\tped --[[ Ped ]], \n\tboat --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoStraightToCoord",
    "hash": "0xD76B57B44F1E6F8B",
    "code": "-- TASK_GO_STRAIGHT_TO_COORD\nTaskGoStraightToCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\ttimeout --[[ integer ]], \n\ttargetHeading --[[ number ]], \n\tdistanceToSlide --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "x: \n\nThe x coordinate.",
      "y: \n\nThe y coordinate.",
      "z: \n\nThe z coordinate.",
      "speed: \n\nThe ped movement speed.",
      "timeout: \n\n-1 , other values appear to break the ped movement.",
      "targetHeading: \n\nThe heading you want the ped to be on x,y,z coord.",
      "distanceToSlide: \n\nThe distance from x,y,z where the ped will start sliding."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nx: \n\nThe x coordinate.\n\ny: \n\nThe y coordinate.\n\nz: \n\nThe z coordinate.\n\nspeed: \n\nThe ped movement speed.\n\ntimeout: \n\n-1 , other values appear to break the ped movement.\n\ntargetHeading: \n\nThe heading you want the ped to be on x,y,z coord.\n\ndistanceToSlide: \n\nThe distance from x,y,z where the ped will start sliding."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoStraightToCoordRelativeToEntity",
    "hash": "0x61E360B7E040D12E",
    "code": "-- TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY\nTaskGoStraightToCoordRelativeToEntity(\n\tentity1 --[[ Entity ]], \n\tentity2 --[[ Entity ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToCoordAndAimAtHatedEntitiesNearCoord",
    "hash": "0xA55547801EB331FC",
    "code": "-- TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD\nTaskGoToCoordAndAimAtHatedEntitiesNearCoord(\n\tpedHandle --[[ Ped ]], \n\tgoToLocationX --[[ number ]], \n\tgoToLocationY --[[ number ]], \n\tgoToLocationZ --[[ number ]], \n\tfocusLocationX --[[ number ]], \n\tfocusLocationY --[[ number ]], \n\tfocusLocationZ --[[ number ]], \n\tspeed --[[ number ]], \n\tshootAtEnemies --[[ boolean ]], \n\tdistanceToStopAt --[[ number ]], \n\tnoRoadsDistance --[[ number ]], \n\tunkTrue --[[ boolean ]], \n\tunkFlag --[[ integer ]], \n\taimingFlag --[[ integer ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.\nIf the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.\nIf the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.\nThe ped will stop aiming when he is closer than distanceToStopAt to goToLocation.\nI still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.\nI think that unkFlag, like the driving styles, could be a flag that \"work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function\". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.\nNote: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.\nThe aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).\nExample:\nenum AimFlag\n{\n   AimAtFocusLocation,\n   AimAtGoToLocation\n};\nVector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.\nVector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.\nVector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground\n// 1st example\nTASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtGoToLocation, -957453492 /*FullAuto pattern*/);\n// 2nd example\nTASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don't shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);\n1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using \"FullAuto\" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.\n2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToCoordAnyMeans",
    "hash": "0x5BC448CB78FA3E88",
    "code": "-- TASK_GO_TO_COORD_ANY_MEANS\nTaskGoToCoordAnyMeans(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tfMoveBlendRatio --[[ number ]], \n\tvehicle --[[ Vehicle ]], \n\tbUseLongRangeVehiclePathing --[[ boolean ]], \n\tdrivingFlags --[[ integer ]], \n\tfMaxRangeToShootTargets --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped Handle.",
      "x: \n\nThe goto target coordinate.",
      "y: \n\nThe goto target coordinate.",
      "z: \n\nThe goto target coordinate.",
      "fMoveBlendRatio: \n\n0.0 = still, 1.0 = walk, 2.0 = run, 3.0 = sprint.",
      "vehicle: \n\nIf defined, the pedestrian will only move if said vehicle exists. If you don't want any sort of association, just set it to 0.",
      "bUseLongRangeVehiclePathing: \n\nSetting to true tells the vehicle to use longrange vehicle pathing.",
      "drivingFlags: \n\nSee eDrivingMode enum.",
      "fMaxRangeToShootTargets: \n\nDetermines the maximum distance at which the Ped will engage in combat with threatening targets."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped Handle.\n\nx: \n\nThe goto target coordinate.\n\ny: \n\nThe goto target coordinate.\n\nz: \n\nThe goto target coordinate.\n\nfMoveBlendRatio: \n\n0.0 = still, 1.0 = walk, 2.0 = run, 3.0 = sprint.\n\nvehicle: \n\nIf defined, the pedestrian will only move if said vehicle exists. If you don't want any sort of association, just set it to 0.\n\nbUseLongRangeVehiclePathing: \n\nSetting to true tells the vehicle to use longrange vehicle pathing.\n\ndrivingFlags: \n\nSee eDrivingMode enum.\n\nfMaxRangeToShootTargets: \n\nDetermines the maximum distance at which the Ped will engage in combat with threatening targets.\n\nTells a ped to go to a coord by any means.\n\nenum eDrivingMode {\n  DF_StopForCars = 1,\n  DF_StopForPeds = 2,\n  DF_SwerveAroundAllCars = 4,\n  DF_SteerAroundStationaryCars = 8,\n  DF_SteerAroundPeds = 16,\n  DF_SteerAroundObjects = 32,\n  DF_DontSteerAroundPlayerPed = 64,\n  DF_StopAtLights = 128,\n  DF_GoOffRoadWhenAvoiding = 256,\n  DF_DriveIntoOncomingTraffic = 512,\n  DF_DriveInReverse = 1024,\n\n  // If pathfinding fails, cruise randomly instead of going on a straight line\n  DF_UseWanderFallbackInsteadOfStraightLine = 2048,\n\n  DF_AvoidRestrictedAreas = 4096,\n\n  // These only work on MISSION_CRUISE\n  DF_PreventBackgroundPathfinding = 8192,\n  DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,\n\n  DF_UseShortCutLinks =  262144,\n  DF_ChangeLanesAroundObstructions = 524288,\n  // cruise tasks ignore this anyway--only used for goto's\n  DF_UseSwitchedOffNodes =  2097152,\n  // if you're going to be primarily driving off road\n  DF_PreferNavmeshRoute =  4194304,\n\n  // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly\n  DF_PlaneTaxiMode =  8388608,\n\n  DF_ForceStraightLine = 16777216,\n  DF_UseStringPullingAtJunctions = 33554432,\n\n  DF_AvoidHighways = 536870912,\n  DF_ForceJoinInRoadDirection = 1073741824,\n\n  // Standard driving mode. stops for cars, peds, and lights, goes around stationary obstructions\n  DRIVINGMODE_STOPFORCARS = 786603, // DF_StopForCars|DF_StopForPeds|DF_SteerAroundObjects|DF_SteerAroundStationaryCars|DF_StopAtLights|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,\t\t// Obey lights too\n\n  // Like the above, but doesn't steer around anything in its way - will only wait instead.\n  DRIVINGMODE_STOPFORCARS_STRICT = 262275, // DF_StopForCars|DF_StopForPeds|DF_StopAtLights|DF_UseShortCutLinks, // Doesn't deviate an inch.\n\n  // Default \"alerted\" driving mode. drives around everything, doesn't obey lights\n  DRIVINGMODE_AVOIDCARS = 786469, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars,\n\n  // Very erratic driving. difference between this and AvoidCars is that it doesn't use the brakes at ALL to help with steering\n  DRIVINGMODE_AVOIDCARS_RECKLESS = 786468, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,\n\n  // Smashes through everything\n  DRIVINGMODE_PLOUGHTHROUGH = 262144, // DF_UseShortCutLinks\n\n  // Drives normally except for the fact that it ignores lights\n  DRIVINGMODE_STOPFORCARS_IGNORELIGHTS = 786475, // DF_StopForCars|DF_SteerAroundStationaryCars|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions\n\n  // Try to swerve around everything, but stop for lights if necessary\n  DRIVINGMODE_AVOIDCARS_OBEYLIGHTS = 786597, // DF_SwerveAroundAllCars|DF_StopAtLights|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars\n\n  // Swerve around cars, be careful around peds, and stop for lights\n  DRIVINGMODE_AVOIDCARS_STOPFORPEDS_OBEYLIGHTS = 786599 // DF_SwerveAroundAllCars|DF_StopAtLights|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars\n};"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToCoordAnyMeansExtraParams",
    "hash": "0x1DD45F9ECFDB1BC9",
    "code": "-- TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS\nTaskGoToCoordAnyMeansExtraParams(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ boolean ]], \n\twalkingStyle --[[ integer ]], \n\tp8 --[[ number ]], \n\tp9 --[[ Any ]], \n\tp10 --[[ Any ]], \n\tp11 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 13: Any p12"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed",
    "hash": "0xB8ECD61F531A7B02",
    "code": "-- TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED\nTaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ boolean ]], \n\twalkingStyle --[[ integer ]], \n\tp8 --[[ number ]], \n\tp9 --[[ Any ]], \n\tp10 --[[ Any ]], \n\tp11 --[[ Any ]], \n\tp12 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 14: Any p13"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToCoordWhileAimingAtCoord",
    "hash": "0x11315AB3385B8AC0",
    "code": "-- TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD\nTaskGoToCoordWhileAimingAtCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\taimAtX --[[ number ]], \n\taimAtY --[[ number ]], \n\taimAtZ --[[ number ]], \n\tmoveSpeed --[[ number ]], \n\tshoot --[[ boolean ]], \n\tp9 --[[ number ]], \n\tp10 --[[ number ]], \n\tp11 --[[ boolean ]], \n\tflags --[[ Any ]], \n\tp13 --[[ boolean ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [
      "ped: \n\nPed to task",
      "x: \n\nDestination X position",
      "y: \n\nDestination Y position",
      "z: \n\nDestination Z position",
      "aimAtX: \n\nAim at target x position",
      "aimAtY: \n\nAim at target Y position",
      "aimAtZ: \n\nAim at target Z position",
      "moveSpeed: \n\nmostly 2f, but also 1/1.2f, etc.",
      "shoot: \n\nIf true ped will shoot; false - will not",
      "p9: \n\nUsually 2.0f",
      "p10: \n\nUsually 0.5f",
      "p11: \n\nIf true ped will stay still; false - will not",
      "flags: \n\n0 / 512 / 513, etc",
      "p13:",
      "firingPattern: \n\n${firing_pattern_full_auto}, 0xC6EE6B4C"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed to task\n\nx: \n\nDestination X position\n\ny: \n\nDestination Y position\n\nz: \n\nDestination Z position\n\naimAtX: \n\nAim at target x position\n\naimAtY: \n\nAim at target Y position\n\naimAtZ: \n\nAim at target Z position\n\nmoveSpeed: \n\nmostly 2f, but also 1/1.2f, etc.\n\nshoot: \n\nIf true ped will shoot; false - will not\n\np9: \n\nUsually 2.0f\n\np10: \n\nUsually 0.5f\n\np11: \n\nIf true ped will stay still; false - will not\n\nflags: \n\n0 / 512 / 513, etc\n\np13:\nfiringPattern: \n\n${firing_pattern_full_auto}, 0xC6EE6B4C\n\nWill make the ped move to a coordinate while aiming (and optionally shooting) at given coordinates."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToCoordWhileAimingAtEntity",
    "hash": "0xB2A16444EAD9AE47",
    "code": "-- TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY\nTaskGoToCoordWhileAimingAtEntity(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tentityToAimAt --[[ Entity ]], \n\tmoveSpeed --[[ number ]], \n\tshoot --[[ boolean ]], \n\ttargetRadius --[[ number ]], \n\tslowDistance --[[ number ]], \n\tuseNavMesh --[[ boolean ]], \n\tnavFlags --[[ integer ]], \n\tinstantBlendAtAim --[[ boolean ]], \n\tfiringPattern --[[ Hash ]], \n\ttime --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nPed to task",
      "x: \n\nDestination X position",
      "y: \n\nDestination Y position",
      "z: \n\nDestination Z position",
      "entityToAimAt: \n\nEntity that the ped will aim at.",
      "moveSpeed: \n\nMostly 2f, but also 1/1.2f, etc.",
      "shoot: \n\nIf true ped will shoot; false - will not",
      "targetRadius: \n\nUsually 0.5f",
      "slowDistance: \n\nUsually 4f",
      "useNavMesh:",
      "navFlags: \n\nUsually 0 or 64",
      "instantBlendAtAim:",
      "firingPattern: \n\nThe firing pattern to use, refer to eFiringPatternHashes",
      "time: \n\nUsually 20000 (ms)"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed to task\n\nx: \n\nDestination X position\n\ny: \n\nDestination Y position\n\nz: \n\nDestination Z position\n\nentityToAimAt: \n\nEntity that the ped will aim at.\n\nmoveSpeed: \n\nMostly 2f, but also 1/1.2f, etc.\n\nshoot: \n\nIf true ped will shoot; false - will not\n\ntargetRadius: \n\nUsually 0.5f\n\nslowDistance: \n\nUsually 4f\n\nuseNavMesh:\nnavFlags: \n\nUsually 0 or 64\n\ninstantBlendAtAim:\nfiringPattern: \n\nThe firing pattern to use, refer to eFiringPatternHashes\n\ntime: \n\nUsually 20000 (ms)\n\nWill make the ped move to a coordinate while aiming (and optionally shooting) at the given entity.\n\nenum eFiringPatternHashes {\n    FIRING_PATTERN_DEFAULT = 0,\n    FIRING_PATTERN_BURST_FIRE = -687903391,\n    FIRING_PATTERN_BURST_FIRE_DRIVEBY = -753768974,\n    FIRING_PATTERN_FULL_AUTO = -957453492,\n    FIRING_PATTERN_SINGLE_SHOT = 1566631136,\n    FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 2055493265,\n    FIRING_PATTERN_BURST_FIRE_HELI = -1857128337,\n    FIRING_PATTERN_SHORT_BURSTS = 445831135,\n    FIRING_PATTERN_BURST_FIRE_MICRO = 1122960381,\n    FIRING_PATTERN_SLOW_FIRE_TANK = -490063247,\n    FIRING_PATTERN_TAMPA_MORTAR = -1842093953\n}"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToEntity",
    "hash": "0x6A071245EB0D1882",
    "code": "-- TASK_GO_TO_ENTITY\nTaskGoToEntity(\n\tentity --[[ Entity ]], \n\ttarget --[[ Entity ]], \n\tduration --[[ integer ]], \n\tdistance --[[ number ]], \n\tspeed --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0\nNote: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.\nExample: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)\nPed will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored)."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToEntityWhileAimingAtCoord",
    "hash": "0x04701832B739DCE5",
    "code": "-- TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD\nTaskGoToEntityWhileAimingAtCoord(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ number ]], \n\tp8 --[[ number ]], \n\tp9 --[[ boolean ]], \n\tp10 --[[ boolean ]], \n\tp11 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGoToEntityWhileAimingAtEntity",
    "hash": "0x97465886D35210E9",
    "code": "-- TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY\nTaskGoToEntityWhileAimingAtEntity(\n\tped --[[ Ped ]], \n\tentityToWalkTo --[[ Entity ]], \n\tentityToAimAt --[[ Entity ]], \n\tspeed --[[ number ]], \n\tshootatEntity --[[ boolean ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ boolean ]], \n\tp8 --[[ boolean ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "shootatEntity:  \nIf true, peds will shoot at Entity till it is dead.  \nIf false, peds will just walk till they reach the entity and will cease shooting."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGotoEntityAiming",
    "hash": "0xA9DA48FAB8A76C12",
    "code": "-- TASK_GOTO_ENTITY_AIMING\nTaskGotoEntityAiming(\n\tped --[[ Ped ]], \n\ttarget --[[ Entity ]], \n\tdistanceToStopAt --[[ number ]], \n\tStartAimingDist --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "eg\n TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);\nped = Ped you want to perform this task.\ntarget = the Entity they should aim at.\ndistanceToStopAt = distance from the target, where the ped should stop to aim.\nStartAimingDist = distance where the ped should start to aim."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGotoEntityOffset",
    "hash": "0xE39B4FF4FDEBDE27",
    "code": "-- TASK_GOTO_ENTITY_OFFSET\nTaskGotoEntityOffset(\n\tped --[[ Ped ]], \n\tentity --[[ Entity ]], \n\tduration --[[ integer ]], \n\tseekRadius --[[ number ]], \n\tseekAngleDeg --[[ number ]], \n\tmoveBlendRatio --[[ number ]], \n\tgotoEntityOffsetFlags --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle",
      "entity: \n\nThe target entity handle",
      "duration: \n\nThe duration in seconds or -1 for forever",
      "seekRadius: \n\nHow many meters the destination is from the entity",
      "seekAngleDeg: \n\nThe angle the destination is from the entity",
      "moveBlendRatio: \n\nThe move blend ratio (speed)",
      "gotoEntityOffsetFlags: \n\nThe goto entity offset flags"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle\n\nentity: \n\nThe target entity handle\n\nduration: \n\nThe duration in seconds or -1 for forever\n\nseekRadius: \n\nHow many meters the destination is from the entity\n\nseekAngleDeg: \n\nThe angle the destination is from the entity\n\nmoveBlendRatio: \n\nThe move blend ratio (speed)\n\ngotoEntityOffsetFlags: \n\nThe goto entity offset flags\n\nInstructs the ped to go to the entity with the given offset.\n\nenum eSeekEntityOffsetFlags {\n    ESEEK_OFFSET_ORIENTATES_WITH_ENTITY = 1,\n    ESEEK_KEEP_TO_PAVEMENTS = 2\n};"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGotoEntityOffsetXy",
    "hash": "0x338E7EF52B6095A9",
    "code": "-- TASK_GOTO_ENTITY_OFFSET_XY\nTaskGotoEntityOffsetXy(\n\tped --[[ Ped ]], \n\tentity --[[ Entity ]], \n\tduration --[[ integer ]], \n\ttargetRadius --[[ number ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]], \n\tmoveBlendRatio --[[ number ]], \n\tgotoEntityOffsetFlags --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle",
      "entity: \n\nThe target entity handle",
      "duration: \n\nThe duration in seconds or -1 for forever",
      "targetRadius: \n\nHow far away the ped needs to be from the target entity before it starts moving",
      "offsetX: \n\nThe X offset",
      "offsetY: \n\nThe Y offset",
      "moveBlendRatio: \n\nThe move blend ratio (speed)",
      "gotoEntityOffsetFlags: \n\nThe goto entity offset flags (see TASK_GOTO_ENTITY_OFFSET)"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle\n\nentity: \n\nThe target entity handle\n\nduration: \n\nThe duration in seconds or -1 for forever\n\ntargetRadius: \n\nHow far away the ped needs to be from the target entity before it starts moving\n\noffsetX: \n\nThe X offset\n\noffsetY: \n\nThe Y offset\n\nmoveBlendRatio: \n\nThe move blend ratio (speed)\n\ngotoEntityOffsetFlags: \n\nThe goto entity offset flags (see TASK_GOTO_ENTITY_OFFSET)\n\nInstructs the ped to go to the entity with the given offset."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGuardAssignedDefensiveArea",
    "hash": "0xD2A207EEBDF9889B",
    "code": "-- TASK_GUARD_ASSIGNED_DEFENSIVE_AREA\nTaskGuardAssignedDefensiveArea(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGuardCurrentPosition",
    "hash": "0x4A58A47A72E3FCB4",
    "code": "-- TASK_GUARD_CURRENT_POSITION\nTaskGuardCurrentPosition(\n\tp0 --[[ Ped ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "From re_prisonvanbreak:\nTASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskGuardSphereDefensiveArea",
    "hash": "0xC946FE14BE0EB5E2",
    "code": "-- TASK_GUARD_SPHERE_DEFENSIVE_AREA\nTaskGuardSphereDefensiveArea(\n\tp0 --[[ Ped ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ number ]], \n\tp8 --[[ number ]], \n\tp9 --[[ number ]], \n\tp10 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p0 - Guessing PedID  \np1, p2, p3 - XYZ?  \np4 - ???  \np5 - Maybe the size of sphere from XYZ?  \np6 - ???  \np7, p8, p9 - XYZ again?  \np10 - Maybe the size of sphere from second XYZ?"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskHandsUp",
    "hash": "0xF2EAB31979A7F910",
    "code": "-- TASK_HANDS_UP\nTaskHandsUp(\n\tped --[[ Ped ]], \n\tduration --[[ integer ]], \n\tfacingPed --[[ Ped ]], \n\tp3 --[[ integer ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "In the scripts, p3 was always -1.  \np3 seems to be duration or timeout of turn animation.  \nAlso facingPed can be 0 or -1 so ped will just raise hands up."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskHeliChase",
    "hash": "0xAC83B1DB38D0ADA0",
    "code": "-- TASK_HELI_CHASE\nTaskHeliChase(\n\tpilot --[[ Ped ]], \n\tentityToFollow --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Ped pilot should be in a heli.  \nEntityToFollow can be a vehicle or Ped.  \nx,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)  \nNOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskHeliEscortHeli",
    "hash": "0xB385523325077210",
    "code": "-- _TASK_HELI_ESCORT_HELI\nTaskHeliEscortHeli(\n\tpilot --[[ Ped ]], \n\theli1 --[[ Vehicle ]], \n\theli2 --[[ Vehicle ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskHeliMission",
    "hash": "0xDAD029E187A2BEB4",
    "code": "-- TASK_HELI_MISSION\nTaskHeliMission(\n\tped --[[ Ped ]], \n\theli --[[ Vehicle ]], \n\tvehicleTarget --[[ Vehicle ]], \n\tpedTarget --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tmissionType --[[ integer ]], \n\tspeed --[[ number ]], \n\tradius --[[ number ]], \n\theading --[[ number ]], \n\theight --[[ number ]], \n\tminHeight --[[ number ]], \n\tslowDist --[[ number ]], \n\tmissionFlags --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to be tasked.",
      "heli: \n\nThe helicopters' entity handle.",
      "vehicleTarget: \n\nThe target vehicle (default is 0).",
      "pedTarget: \n\nThe target ped (default is 0).",
      "x: \n\nThe x coordinate of the target (default is 0.0f).",
      "y: \n\nThe y coordinate of the target (default is 0.0f).",
      "z: \n\nThe z coordinate of the target (default is 0.0f).",
      "missionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).",
      "speed: \n\nThe speed in m/s.",
      "radius: \n\nThe radius of when the task will be completed (default is -1.0f).",
      "heading: \n\nThe heading the helicopter will face at task completion (default is -1.0f).",
      "height: \n\nThe height the helicopter will fly at (default is -1.0f).",
      "minHeight: \n\nThe height the helicopter will not fly below (default is -1.0f).",
      "slowDist: \n\nThe distance to the target at which the helicopter will slow down (default is -1.0f).",
      "missionFlags: \n\nThe mission flags (default is 0) (see eHeliMissionFlags)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to be tasked.\n\nheli: \n\nThe helicopters' entity handle.\n\nvehicleTarget: \n\nThe target vehicle (default is 0).\n\npedTarget: \n\nThe target ped (default is 0).\n\nx: \n\nThe x coordinate of the target (default is 0.0f).\n\ny: \n\nThe y coordinate of the target (default is 0.0f).\n\nz: \n\nThe z coordinate of the target (default is 0.0f).\n\nmissionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).\n\nspeed: \n\nThe speed in m/s.\n\nradius: \n\nThe radius of when the task will be completed (default is -1.0f).\n\nheading: \n\nThe heading the helicopter will face at task completion (default is -1.0f).\n\nheight: \n\nThe height the helicopter will fly at (default is -1.0f).\n\nminHeight: \n\nThe height the helicopter will not fly below (default is -1.0f).\n\nslowDist: \n\nThe distance to the target at which the helicopter will slow down (default is -1.0f).\n\nmissionFlags: \n\nThe mission flags (default is 0) (see eHeliMissionFlags).\n\nAll parameters except ped, heli and speed are optional, with pedTarget, vehicleTarget, x, y, z being dependent on missionType (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either x, y, z or a target ped/vehicle).\n\nIf you don't want to use a parameter; pass 0.0f for x, y and z, 0 for pedTarget, vehicleTarget, 0 for other int parameters, and -1.0f for the remaining float parameters.\n\nenum eHeliMissionFlags\n{\n  None = 0,\n  AttainRequestedOrientation = 1,\n  DontModifyOrientation = 2,\n  DontModifyPitch = 4,\n  DontModifyThrottle = 8,\n  DontModifyRoll = 16,\n  LandOnArrival = 32,\n  DontDoAvoidance = 64,\n  StartEngineImmediately = 128,\n  ForceHeightMapAvoidance = 256,\n  DontClampProbesToDestination = 512,\n  EnableTimeslicingWhenPossible = 1024,\n  CircleOppositeDirection = 2048,\n  MaintainHeightAboveTerrain = 4096,\n  IgnoreHiddenEntitiesDuringLand = 8192,\n  DisableAllHeightMapAvoidance = 16384,\n  // ForceHeightMapAvoidance | DontDoAvoidance\n  HeightMapOnlyAvoidance = 320,\n}"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskJump",
    "hash": "0x0AE4086104E067B1",
    "code": "-- TASK_JUMP\nTaskJump(\n\tped --[[ Ped ]], \n\tunused --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).  \nv350: Ped ped, bool unused  \nv678: Ped ped, bool unused, bool flag1, bool flag2  \nflag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.  \n\nNativeDB Added Parameter 3: Any p2\nNativeDB Added Parameter 4: Any p3"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskLeaveAnyVehicle",
    "hash": "0x504D54DF3F6F2247",
    "code": "-- TASK_LEAVE_ANY_VEHICLE\nTaskLeaveAnyVehicle(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Flags are the same flags used in TASK_LEAVE_VEHICLE"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskLeaveVehicle",
    "hash": "0xD3DBCE61A490BE02",
    "code": "-- TASK_LEAVE_VEHICLE\nTaskLeaveVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Flags from decompiled scripts:  \n0 = normal exit and closes door.  \n1 = normal exit and closes door.  \n16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)\n64 = normal exit and closes door, maybe a bit slower animation than 0.  \n256 = normal exit but does not close the door.  \n4160 = ped is throwing himself out, even when the vehicle is still.  \n262144 = ped moves to passenger seat first, then exits normally  \nOthers to be tried out: 320, 512, 131072."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskLookAtCoord",
    "hash": "0x6FA46612594F7973",
    "code": "-- TASK_LOOK_AT_COORD\nTaskLookAtCoord(\n\tentity --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tduration --[[ integer ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskLookAtEntity",
    "hash": "0x69F4BE8C8CC4796C",
    "code": "-- TASK_LOOK_AT_ENTITY\nTaskLookAtEntity(\n\tped --[[ Ped ]], \n\tlookAt --[[ Entity ]], \n\tduration --[[ integer ]], \n\tunknown1 --[[ integer ]], \n\tunknown2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "param3: duration in ms, use -1 to look forever  \nparam4: using 2048 is fine  \nparam5: using 3 is fine"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskMoveNetworkAdvancedByName",
    "hash": "0xD5B35BEA41919ACB",
    "code": "-- TASK_MOVE_NETWORK_ADVANCED_BY_NAME\nTaskMoveNetworkAdvancedByName(\n\tped --[[ Ped ]], \n\tp1 --[[ string ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]], \n\tp7 --[[ number ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ number ]], \n\tp10 --[[ boolean ]], \n\tanimDict --[[ string ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nTASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), \"minigame_tattoo_michael_parts\", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskMoveNetworkByName",
    "hash": "0x2D537BA194896636",
    "code": "-- TASK_MOVE_NETWORK_BY_NAME\nTaskMoveNetworkByName(\n\tped --[[ Ped ]], \n\ttask --[[ string ]], \n\tmultiplier --[[ number ]], \n\tp3 --[[ boolean ]], \n\tanimDict --[[ string ]], \n\tflags --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example:\nTASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), \"arm_wrestling_sweep_paired_a_rev3\", 0.0f, true, \"mini@arm_wrestling\", 0);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskMoveNetworkByNameWithInitParams",
    "hash": "0x3D45B0B355C5E0C9",
    "code": "-- _TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS\nlocal data --[[ Any ]] =\n\tTaskMoveNetworkByNameWithInitParams(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ string ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ boolean ]], \n\t\tanimDict --[[ string ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used only once in the scripts (am_mp_nightclub)\nUsed only once in the scripts (am_mp_nightclub)\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskOpenVehicleDoor",
    "hash": "0x965791A9A488A062",
    "code": "-- TASK_OPEN_VEHICLE_DOOR\nTaskOpenVehicleDoor(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\ttimeOut --[[ integer ]], \n\tseat --[[ integer ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to do the task",
      "vehicle: \n\nThe vehicle whose doors the ped shoud open",
      "timeOut: \n\nSets a timeout to the task; doesn't work for 0",
      "seat: \n\nThe seat index - the ped will attempt to open doors to get to the specified seat",
      "speed:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to do the task\n\nvehicle: \n\nThe vehicle whose doors the ped shoud open\n\ntimeOut: \n\nSets a timeout to the task; doesn't work for 0\n\nseat: \n\nThe seat index - the ped will attempt to open doors to get to the specified seat\n\nspeed:\n\nThe given ped will try to open the nearest door to 'seat'.\n\nExample: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskParachute",
    "hash": "0xD2F1C53C97EE81AB",
    "code": "-- TASK_PARACHUTE\nTaskParachute(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This function has a third parameter as well (bool).  \nSecond parameter is unused.  \nseconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed  \n\nNativeDB Added Parameter 3: BOOL p2"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskParachuteToTarget",
    "hash": "0xB33E291AFA6BD03A",
    "code": "-- TASK_PARACHUTE_TO_TARGET\nTaskParachuteToTarget(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPatrol",
    "hash": "0xBDA5DF49D080FE4E",
    "code": "-- TASK_PATROL\nTaskPatrol(\n\tped --[[ Ped ]], \n\tp1 --[[ string ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:\n\"miss_Tower_01\" (this went from 01 - 10)\n\"miss_Ass0\" (0, 4, 6, 3)\n\"MISS_PATROL_8\"\nI think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.\nAs far as I can see the patrol routes names such as \"miss_Ass0\" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.\nFrom the scripts\n    TASK::OPEN_PATROL_ROUTE(\"miss_Ass0\");\n    TASK::ADD_PATROL_ROUTE_NODE(0, \"WORLD_HUMAN_GUARD_STAND\", l_738[0/*3*/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));\n    TASK::ADD_PATROL_ROUTE_NODE(1, \"WORLD_HUMAN_GUARD_STAND\", l_738[1/*3*/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));\n    TASK::ADD_PATROL_ROUTE_NODE(2, \"WORLD_HUMAN_GUARD_STAND\", l_738[2/*3*/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));\n    TASK::ADD_PATROL_ROUTE_LINK(0, 1);\n    TASK::ADD_PATROL_ROUTE_LINK(1, 2);\n    TASK::ADD_PATROL_ROUTE_LINK(2, 0);\n    TASK::CLOSE_PATROL_ROUTE();\n    TASK::CREATE_PATROL_ROUTE();"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPause",
    "hash": "0xE73A266DB0CA9042",
    "code": "-- TASK_PAUSE\nTaskPause(\n\tped --[[ Ped ]], \n\tms --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to pause. Set to this 0 when using task sequences.",
      "ms: \n\nThe amount of miliseconds to wait."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to pause. Set to this 0 when using task sequences.\n\nms: \n\nThe amount of miliseconds to wait.\n\nThis tasks the ped to do nothing for the specified amount of miliseconds. This is useful if you want to add a delay between tasks when using a sequence task."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPedSlideToCoord",
    "hash": "0xD04FE6765D990A06",
    "code": "-- TASK_PED_SLIDE_TO_COORD\nTaskPedSlideToCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\tduration --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPedSlideToCoordHdgRate",
    "hash": "0x5A4A6A6D3DC64F52",
    "code": "-- TASK_PED_SLIDE_TO_COORD_HDG_RATE\nTaskPedSlideToCoordHdgRate(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPerformSequence",
    "hash": "0x5ABA3986D90D8A3B",
    "code": "-- TASK_PERFORM_SEQUENCE\nTaskPerformSequence(\n\tped --[[ Ped ]], \n\ttaskSequenceId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to perform the sequence on",
      "taskSequenceId: \n\nThe sequenceId to perform"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to perform the sequence on\n\ntaskSequenceId: \n\nThe sequenceId to perform\n\nFor an example on how to use this please refer to OPEN_SEQUENCE_TASK"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPerformSequenceFromProgress",
    "hash": "0x89221B16730234F0",
    "code": "-- TASK_PERFORM_SEQUENCE_FROM_PROGRESS\nTaskPerformSequenceFromProgress(\n\tped --[[ Ped ]], \n\ttaskIndex --[[ integer ]], \n\tprogress1 --[[ integer ]], \n\tprogress2 --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to perform the task on",
      "taskIndex:",
      "progress1: \n\nThe progress to start from",
      "progress2: \n\nUnknown what it does, it has to be set higher than 0 to not break the sequence"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to perform the task on\n\ntaskIndex:\nprogress1: \n\nThe progress to start from\n\nprogress2: \n\nUnknown what it does, it has to be set higher than 0 to not break the sequence"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPerformSequenceLocally",
    "hash": "0x8C33220C8D78CA0D",
    "code": "-- TASK_PERFORM_SEQUENCE_LOCALLY\nTaskPerformSequenceLocally(\n\tped --[[ Ped ]], \n\ttaskSequenceId --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to perform the sequence on",
      "taskSequenceId: \n\nThe sequence to perform"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to perform the sequence on\n\ntaskSequenceId: \n\nThe sequence to perform\n\nFor an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#_0xE8854A4326B9E12B"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlaneChase",
    "hash": "0x2D2386F273FF7A25",
    "code": "-- TASK_PLANE_CHASE\nTaskPlaneChase(\n\tpilot --[[ Ped ]], \n\tentityToFollow --[[ Entity ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlaneGotoPreciseVtol",
    "hash": "0xF7F9DCCA89E7505B",
    "code": "-- _TASK_PLANE_GOTO_PRECISE_VTOL\nTaskPlaneGotoPreciseVtol(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlaneLand",
    "hash": "0xBF19721FA34D32C0",
    "code": "-- TASK_PLANE_LAND\nTaskPlaneLand(\n\tpilot --[[ Ped ]], \n\tplane --[[ Vehicle ]], \n\trunwayStartX --[[ number ]], \n\trunwayStartY --[[ number ]], \n\trunwayStartZ --[[ number ]], \n\trunwayEndX --[[ number ]], \n\trunwayEndY --[[ number ]], \n\trunwayEndZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlaneMission",
    "hash": "0x23703CD154E83B88",
    "code": "-- TASK_PLANE_MISSION\nTaskPlaneMission(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\ttargetVehicle --[[ Vehicle ]], \n\ttargetPed --[[ Ped ]], \n\tfTargetCoordX --[[ number ]], \n\tfTargetCoordY --[[ number ]], \n\tfTargetCoordZ --[[ number ]], \n\tiMissionIndex --[[ integer ]], \n\tfCruiseSpeed --[[ number ]], \n\tfTargetReachedDist --[[ number ]], \n\tfOrientation --[[ number ]], \n\tiFlightHeight --[[ integer ]], \n\tiMinHeightAboveTerrain --[[ integer ]], \n\tbPrecise --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped handle.",
      "vehicle: \n\nThe Vehicle handle for the actual plane that will be flown.",
      "targetVehicle: \n\nThe target Vehicle handle (in case eVehicleMission requires one).",
      "targetPed: \n\nThe target Ped (in case eVehicleMission requires one).",
      "fTargetCoordX:",
      "fTargetCoordY:",
      "fTargetCoordZ:",
      "iMissionIndex: \n\nThe mission to be executed. See eVehicleMission.",
      "fCruiseSpeed: \n\nThe cruise speed (in m/s).",
      "fTargetReachedDist: \n\nDistance (in meters) (at which the plane thinks it has arrived), this is also used as the hover distance for MISSION_ATTACK and MISSION_CIRCLE.",
      "fOrientation: \n\nUsed to specify the desired orientation of the plane in degrees (0 to 360). Use -1 if no specific orientation is required.",
      "iFlightHeight: \n\nThe height above sea level the plane tries to maintain, i.e. 50 meters.",
      "iMinHeightAboveTerrain: \n\nThe minimum height above terrain, i.e. 30 meters.",
      "bPrecise: \n\nA boolean value, defaults to true."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped handle.\n\nvehicle: \n\nThe Vehicle handle for the actual plane that will be flown.\n\ntargetVehicle: \n\nThe target Vehicle handle (in case eVehicleMission requires one).\n\ntargetPed: \n\nThe target Ped (in case eVehicleMission requires one).\n\nfTargetCoordX:\nfTargetCoordY:\nfTargetCoordZ:\niMissionIndex: \n\nThe mission to be executed. See eVehicleMission.\n\nfCruiseSpeed: \n\nThe cruise speed (in m/s).\n\nfTargetReachedDist: \n\nDistance (in meters) (at which the plane thinks it has arrived), this is also used as the hover distance for MISSION_ATTACK and MISSION_CIRCLE.\n\nfOrientation: \n\nUsed to specify the desired orientation of the plane in degrees (0 to 360). Use -1 if no specific orientation is required.\n\niFlightHeight: \n\nThe height above sea level the plane tries to maintain, i.e. 50 meters.\n\niMinHeightAboveTerrain: \n\nThe minimum height above terrain, i.e. 30 meters.\n\nbPrecise: \n\nA boolean value, defaults to true.\n\nGives the plane a mission (purpose or objective), the mission is passed onto the iMissionIndex parameter.\n\nenum eVehicleMission {\n    MISSION_NONE = 0,\n    MISSION_CRUISE, // 1\n    MISSION_RAM, // 2\n    MISSION_BLOCK, // 3\n    MISSION_GOTO, // 4\n    MISSION_STOP, // 5\n    MISSION_ATTACK, // 6\n    MISSION_FOLLOW, // 7\n    MISSION_FLEE, // 8\n    MISSION_CIRCLE, // 9\n    MISSION_ESCORT_LEFT, // 10\n    MISSION_ESCORT_RIGHT, // 11\n    MISSION_ESCORT_REAR, // 12\n    MISSION_ESCORT_FRONT, // 13\n    MISSION_GOTO_RACING, // 14\n    MISSION_FOLLOW_RECORDING, // 15\n    MISSION_POLICE_BEHAVIOUR, // 16\n    MISSION_PARK_PERPENDICULAR, // 17\n    MISSION_PARK_PARALLEL, // 18\n    MISSION_LAND, // 19\n    MISSION_LAND_AND_WAIT, // 20\n    MISSION_CRASH, // 21\n    MISSION_PULL_OVER, // 22\n    MISSION_PROTECT // 23\n};"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlaneTaxi",
    "hash": "0x92C360B5F15D2302",
    "code": "-- TASK_PLANE_TAXI\nTaskPlaneTaxi(\n\tpilot --[[ Ped ]], \n\taircraft --[[ Vehicle ]], \n\txPos --[[ number ]], \n\tyPos --[[ number ]], \n\tzPos --[[ number ]], \n\tfCruiseSpeed --[[ number ]], \n\tfTargetReachedDist --[[ number ]]\n)",
    "parameters": [
      "pilot: \n\nThe ped driving the plane.",
      "aircraft: \n\nThe plane used.",
      "xPos: \n\nThe X coordinate.",
      "yPos: \n\nThe Y coordinate.",
      "zPos: \n\nThe Z coordinate.",
      "fCruiseSpeed: \n\nThe speed of the plane (in m/s).",
      "fTargetReachedDist: \n\nDistance (in meters) at which the plane thinks it has arrived to the given coordinates."
    ],
    "returns": [],
    "description": "Parameters:\n\npilot: \n\nThe ped driving the plane.\n\naircraft: \n\nThe plane used.\n\nxPos: \n\nThe X coordinate.\n\nyPos: \n\nThe Y coordinate.\n\nzPos: \n\nThe Z coordinate.\n\nfCruiseSpeed: \n\nThe speed of the plane (in m/s).\n\nfTargetReachedDist: \n\nDistance (in meters) at which the plane thinks it has arrived to the given coordinates.\n\nThe given ped will try to drive the plane to the given coordinates and will then drive around the given coords (the plane will form 8s on the ground)"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlantBomb",
    "hash": "0x965FEC691D55E9BF",
    "code": "-- TASK_PLANT_BOMB\nTaskPlantBomb(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlayAnim",
    "hash": "0xEA47FE3719165B94",
    "code": "-- TASK_PLAY_ANIM\nTaskPlayAnim(\n\tped --[[ Ped ]], \n\tanimDictionary --[[ string ]], \n\tanimationName --[[ string ]], \n\tblendInSpeed --[[ number ]], \n\tblendOutSpeed --[[ number ]], \n\tduration --[[ integer ]], \n\tflag --[[ integer ]], \n\tplaybackRate --[[ number ]], \n\tlockX --[[ boolean ]], \n\tlockY --[[ boolean ]], \n\tlockZ --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped you want to play the animation",
      "animDictionary: \n\nThe animation dictionary",
      "animationName: \n\nThe animation name",
      "blendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "blendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "duration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled",
      "flag: \n\nThe animation flags (see enum)",
      "playbackRate: \n\nThe playback rate (between 0.0 and 1.0)",
      "lockX:",
      "lockY:",
      "lockZ:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped you want to play the animation\n\nanimDictionary: \n\nThe animation dictionary\n\nanimationName: \n\nThe animation name\n\nblendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nblendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nduration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled\n\nflag: \n\nThe animation flags (see enum)\n\nplaybackRate: \n\nThe playback rate (between 0.0 and 1.0)\n\nlockX:\nlockY:\nlockZ:\n\nAnimations list\n\nenum eScriptedAnimFlags\n{\n    AF_LOOPING = 1,\n    AF_HOLD_LAST_FRAME = 2,\n    AF_REPOSITION_WHEN_FINISHED = 4,\n    AF_NOT_INTERRUPTABLE = 8,\n    AF_UPPERBODY = 16,\n    AF_SECONDARY = 32,\n    AF_REORIENT_WHEN_FINISHED = 64,\n    AF_ABORT_ON_PED_MOVEMENT = 128,\n    AF_ADDITIVE = 256,\n    AF_TURN_OFF_COLLISION = 512,\n    AF_OVERRIDE_PHYSICS = 1024,\n    AF_IGNORE_GRAVITY = 2048,\n    AF_EXTRACT_INITIAL_OFFSET = 4096,\n    AF_EXIT_AFTER_INTERRUPTED = 8192,\n    AF_TAG_SYNC_IN = 16384,\n    AF_TAG_SYNC_OUT = 32768,\n    AF_TAG_SYNC_CONTINUOUS = 65536,\n    AF_FORCE_START = 131072,\n    AF_USE_KINEMATIC_PHYSICS = 262144,\n    AF_USE_MOVER_EXTRACTION = 524288,\n    AF_HIDE_WEAPON = 1048576,\n    AF_ENDS_IN_DEAD_POSE = 2097152,\n    AF_ACTIVATE_RAGDOLL_ON_COLLISION = 4194304,\n    AF_DONT_EXIT_ON_DEATH = 8388608,\n    AF_ABORT_ON_WEAPON_DAMAGE = 16777216,\n    AF_DISABLE_FORCED_PHYSICS_UPDATE = 33554432,\n    AF_PROCESS_ATTACHMENTS_ON_START = 67108864,\n    AF_EXPAND_PED_CAPSULE_FROM_SKELETON = 134217728,\n    AF_USE_ALTERNATIVE_FP_ANIM = 268435456,\n    AF_BLENDOUT_WRT_LAST_FRAME = 536870912,\n    AF_USE_FULL_BLENDING = 1073741824\n}"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlayAnimAdvanced",
    "hash": "0x83CDB10EA29B370B",
    "code": "-- TASK_PLAY_ANIM_ADVANCED\nTaskPlayAnimAdvanced(\n\tped --[[ Ped ]], \n\tanimDictionary --[[ string ]], \n\tanimationName --[[ string ]], \n\tposX --[[ number ]], \n\tposY --[[ number ]], \n\tposZ --[[ number ]], \n\trotX --[[ number ]], \n\trotY --[[ number ]], \n\trotZ --[[ number ]], \n\tblendInSpeed --[[ number ]], \n\tblendOutSpeed --[[ number ]], \n\tduration --[[ integer ]], \n\tflag --[[ Any ]], \n\tanimTime --[[ number ]], \n\tp14 --[[ Any ]], \n\tp15 --[[ Any ]]\n)",
    "parameters": [
      "ped: \n\nThe ped you want to play the animation",
      "animDictionary: \n\nThe animation dictionary",
      "animationName: \n\nThe animation name",
      "posX: \n\nInitial X position of the task",
      "posY: \n\nInitial Y position of the task",
      "posZ: \n\nInitial Z position of the task",
      "rotX: \n\nInitial X rotation of the task",
      "rotY: \n\nInitial Y rotation of the task",
      "rotZ: \n\nInitial Z rotation of the task",
      "blendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "blendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant",
      "duration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled",
      "flag: \n\nSee TASK_PLAY_ANIM",
      "animTime: \n\nValue between 0.0 and 1.0, lets you start an animation from the given point",
      "p14:",
      "p15:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped you want to play the animation\n\nanimDictionary: \n\nThe animation dictionary\n\nanimationName: \n\nThe animation name\n\nposX: \n\nInitial X position of the task\n\nposY: \n\nInitial Y position of the task\n\nposZ: \n\nInitial Z position of the task\n\nrotX: \n\nInitial X rotation of the task\n\nrotY: \n\nInitial Y rotation of the task\n\nrotZ: \n\nInitial Z rotation of the task\n\nblendInSpeed: \n\nThe speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nblendOutSpeed: \n\nThe speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant\n\nduration: \n\nThe duration of the animation in milliseconds. -1 will play the animation until canceled\n\nflag: \n\nSee TASK_PLAY_ANIM\n\nanimTime: \n\nValue between 0.0 and 1.0, lets you start an animation from the given point\n\np14:\np15:\n\nSimilar in functionality to TASK_PLAY_ANIM, except the position and rotation parameters let you specify the initial position and rotation of the task. The ped is teleported to the position specified.\n\nAnimations list"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPlayPhoneGestureAnimation",
    "hash": "0x8FBB6758B3B3E9EC",
    "code": "-- TASK_PLAY_PHONE_GESTURE_ANIMATION\nTaskPlayPhoneGestureAnimation(\n\tped --[[ Ped ]], \n\tanimDict --[[ string ]], \n\tanimation --[[ string ]], \n\tboneMaskType --[[ string ]], \n\tp4 --[[ number ]], \n\tp5 --[[ number ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Example from the scripts:\nTASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);\n=========================================================\n^^ No offense, but Idk how that would really help anyone.\nAs for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.\nKnown boneMaskTypes'\n\"BONEMASK_HEADONLY\"\n\"BONEMASK_HEAD_NECK_AND_ARMS\"\n\"BONEMASK_HEAD_NECK_AND_L_ARM\"\n\"BONEMASK_HEAD_NECK_AND_R_ARM\"\np4 known args - 0.0f, 0.5f, 0.25f\np5 known args - 0.0f, 0.25f\np6 known args - 1 if a global if check is passed.\np7 known args - 1 if a global if check is passed.\nThe values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).\n========================================================="
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPutPedDirectlyIntoCover",
    "hash": "0x4172393E6BE1FECE",
    "code": "-- TASK_PUT_PED_DIRECTLY_INTO_COVER\nTaskPutPedDirectlyIntoCover(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\ttimeout --[[ Any ]], \n\tp5 --[[ boolean ]], \n\tp6 --[[ number ]], \n\tp7 --[[ boolean ]], \n\tp8 --[[ boolean ]], \n\tp9 --[[ Any ]], \n\tp10 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskPutPedDirectlyIntoMelee",
    "hash": "0x1C6CD14A876FFE39",
    "code": "-- TASK_PUT_PED_DIRECTLY_INTO_MELEE\nTaskPutPedDirectlyIntoMelee(\n\tped --[[ Ped ]], \n\tmeleeTarget --[[ Ped ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "from armenian3.c4\nTASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskRappelDownWall",
    "hash": "0xEAF66ACDDC794793",
    "code": "-- _TASK_RAPPEL_DOWN_WALL\nTaskRappelDownWall(\n\tped --[[ Ped ]], \n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tminZ --[[ number ]], \n\tropeId --[[ integer ]], \n\tclipset --[[ string ]], \n\tp10 --[[ Any ]]\n)",
    "parameters": [
      "ped: \n\nPed to perform the task",
      "x1: \n\nX coord to start the task",
      "y1: \n\nY coord to start the task",
      "z1: \n\nZ coord to start the task",
      "x2: \n\nSecond X coord, uses the same position as above in the scripts",
      "y2: \n\nSecond Y coord",
      "z2: \n\nSecond Z coord",
      "minZ: \n\nMinimum Z that the player can descend to",
      "ropeId: \n\nRope to attach this task to, must be created with ADD_ROPE",
      "clipset: \n\nClipset to use for the task",
      "p10: \n\nUsually 1 in the scripts"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed to perform the task\n\nx1: \n\nX coord to start the task\n\ny1: \n\nY coord to start the task\n\nz1: \n\nZ coord to start the task\n\nx2: \n\nSecond X coord, uses the same position as above in the scripts\n\ny2: \n\nSecond Y coord\n\nz2: \n\nSecond Z coord\n\nminZ: \n\nMinimum Z that the player can descend to\n\nropeId: \n\nRope to attach this task to, must be created with ADD_ROPE\n\nclipset: \n\nClipset to use for the task\n\np10: \n\nUsually 1 in the scripts\n\nAttaches a ped to a rope and allows player control to rappel down a wall. Disables all collisions while on the rope.\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskRappelFromHeli",
    "hash": "0x09693B0312F91649",
    "code": "-- TASK_RAPPEL_FROM_HELI\nTaskRappelFromHeli(\n\tped --[[ Ped ]], \n\tunused --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only appears twice in the scripts.\nTASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);\nTASK::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskReactAndFleePed",
    "hash": "0x72C896464915D1B1",
    "code": "-- TASK_REACT_AND_FLEE_PED\nTaskReactAndFleePed(\n\tped --[[ Ped ]], \n\tfleeTarget --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskReloadWeapon",
    "hash": "0x62D2916F56B9CD2D",
    "code": "-- TASK_RELOAD_WEAPON\nTaskReloadWeapon(\n\tped --[[ Ped ]], \n\tunused --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The 2nd param (unused) is not implemented.\n-----------------------------------------------------------------------\nThe only occurrence I found in a R* script (\"assassin_construction.ysc.c4\"):\n            if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {\n                TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);\n            }"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskScriptedAnimation",
    "hash": "0x126EF75F1E17ABE5",
    "code": "-- TASK_SCRIPTED_ANIMATION\nlocal p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]] =\n\tTaskScriptedAnimation(\n\t\tped --[[ Ped ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "From fm_mission_controller.c:  \nreserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);  \n\tvVar28 = {0.094f, 0.02f, -0.005f};  \n\tvVar29 = {-92.24f, 63.64f, 150.24f};  \n\tfunc_253(&uVar30, joaat(\"prop_ld_case_01\"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);  \n\tset_entity_lod_dist(net_to_ent(uVar30), 500);  \n\tattach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);  \n\tVar31.imm_4 = 1065353216;  \n\tVar31.imm_5 = 1065353216;  \n\tVar31.imm_9 = 1065353216;  \n\tVar31.imm_10 = 1065353216;  \n\tVar31.imm_14 = 1065353216;  \n\tVar31.imm_15 = 1065353216;  \n\tVar31.imm_17 = 1040187392;  \n\tVar31.imm_18 = 1040187392;  \n\tVar31.imm_19 = -1;  \n\tVar32.imm_4 = 1065353216;  \n\tVar32.imm_5 = 1065353216;  \n\tVar32.imm_9 = 1065353216;  \n\tVar32.imm_10 = 1065353216;  \n\tVar32.imm_14 = 1065353216;  \n\tVar32.imm_15 = 1065353216;  \n\tVar32.imm_17 = 1040187392;  \n\tVar32.imm_18 = 1040187392;  \n\tVar32.imm_19 = -1;  \n\tVar31 = 1;  \n\tVar31.imm_1 = \"weapons@misc@jerrycan@mp_male\";  \n\tVar31.imm_2 = \"idle\";  \n\tVar31.imm_20 = 1048633;  \n\tVar31.imm_4 = 0.5f;  \n\tVar31.imm_16 = get_hash_key(\"BONEMASK_ARMONLY_R\");  \n\ttask_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);  \n\tset_model_as_no_longer_needed(joaat(\"prop_ld_case_01\"));  \n\tremove_anim_dict(\"anim@heists@biolab@\");"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSeekCoverFromPed",
    "hash": "0x84D32B3BEC531324",
    "code": "-- TASK_SEEK_COVER_FROM_PED\nTaskSeekCoverFromPed(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]], \n\tduration --[[ integer ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSeekCoverFromPos",
    "hash": "0x75AC2B60386D89F2",
    "code": "-- TASK_SEEK_COVER_FROM_POS\nTaskSeekCoverFromPos(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tduration --[[ integer ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSeekCoverToCoords",
    "hash": "0x39246A6958EF072C",
    "code": "-- TASK_SEEK_COVER_TO_COORDS\nTaskSeekCoverToCoords(\n\tped --[[ Ped ]], \n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "from michael2:\nTASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);\nappears to be shorter variation\nfrom michael3:\nTASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSeekCoverToCoverPoint",
    "hash": "0xD43D95C7A869447F",
    "code": "-- TASK_SEEK_COVER_TO_COVER_POINT\nTaskSeekCoverToCoverPoint(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSetBlockingOfNonTemporaryEvents",
    "hash": "0x90D2156198831D69",
    "code": "-- TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS\nTaskSetBlockingOfNonTemporaryEvents(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "I cant believe I have to define this, this is one of the best natives.  \nIt makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.  \nSince it is a task, every time the native is called the ped will stop for a moment."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSetDecisionMaker",
    "hash": "0xEB8517DDA73720DA",
    "code": "-- TASK_SET_DECISION_MAKER\nTaskSetDecisionMaker(\n\tped --[[ Ped ]], \n\tp1 --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always GET_HASH_KEY(\"empty\") in scripts, for the rare times this is used"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSetSphereDefensiveArea",
    "hash": "0x933C06518B52A9A4",
    "code": "-- TASK_SET_SPHERE_DEFENSIVE_AREA\nTaskSetSphereDefensiveArea(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSharkCircleCoord",
    "hash": "0x60A19CF85FF4CEFA",
    "code": "-- TASK_SHARK_CIRCLE_COORD\nTaskSharkCircleCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tmoveBlendRatio --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe shark ped.",
      "x: \n\nX coordinate to circle around",
      "y: \n\nY coordinate to circle around",
      "z: \n\nZ coordinate to circle around",
      "moveBlendRatio: \n\nAnimation blend ratio from 0.0 to 1.0",
      "radius: \n\nRadius of the circular path in meters"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe shark ped.\n\nx: \n\nX coordinate to circle around\n\ny: \n\nY coordinate to circle around\n\nz: \n\nZ coordinate to circle around\n\nmoveBlendRatio: \n\nAnimation blend ratio from 0.0 to 1.0\n\nradius: \n\nRadius of the circular path in meters\n\nMakes a shark ped circle around specified coordinates.\n\nNativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskShockingEventReact",
    "hash": "0x452419CBD838065B",
    "code": "-- TASK_SHOCKING_EVENT_REACT\nTaskShockingEventReact(\n\tped --[[ Ped ]], \n\teventHandle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskShootAtCoord",
    "hash": "0x46A6CC01E0826106",
    "code": "-- TASK_SHOOT_AT_COORD\nTaskShootAtCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tduration --[[ integer ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Firing Pattern Hash Information: https://pastebin.com/Px036isB"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskShootAtEntity",
    "hash": "0x08DA95E8298AE772",
    "code": "-- TASK_SHOOT_AT_ENTITY\nTaskShootAtEntity(\n\tentity --[[ Entity ]], \n\ttarget --[[ Entity ]], \n\tduration --[[ integer ]], \n\tfiringPattern --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "//this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds\nEntity aimedentity;\nPlayer player = PLAYER::PLAYER_ID();\nPLAYER::_GET_AIMED_ENTITY(player, &aimedentity);\n//bg is an array of peds\nTASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY(\"FIRING_PATTERN_FULL_AUTO\"));\nin practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.\nFiring Pattern Hash Information: https://pastebin.com/Px036isB"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskShuffleToNextVehicleSeat",
    "hash": "0x7AA80209BDA643EB",
    "code": "-- TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT\nTaskShuffleToNextVehicleSeat(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the specified ped shuffle to the next vehicle seat.  \nThe ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.  \n\nNativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSkyDive",
    "hash": "0x601736CFE536B0A0",
    "code": "-- TASK_SKY_DIVE\nTaskSkyDive(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: BOOL p1"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSmartFleeCoord",
    "hash": "0x94587F17E9C365D5",
    "code": "-- TASK_SMART_FLEE_COORD\nTaskSmartFleeCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tdistance --[[ number ]], \n\ttime --[[ integer ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the specified ped flee the specified distance from the specified position."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSmartFleePed",
    "hash": "0x22B0D0E37CCB840D",
    "code": "-- TASK_SMART_FLEE_PED\nTaskSmartFleePed(\n\tped --[[ Ped ]], \n\tfleeTarget --[[ Ped ]], \n\tdistance --[[ number ]], \n\tfleeTime --[[ Any ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes a ped run away from another ped (fleeTarget).  \ndistance = ped will flee this distance.  \nfleeTime = ped will flee for this amount of time, set to \"-1\" to flee forever"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskStandGuard",
    "hash": "0xAE032F8BBA959E90",
    "code": "-- TASK_STAND_GUARD\nTaskStandGuard(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\tscenarioName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "scenarioName example: \"WORLD_HUMAN_GUARD_STAND\""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskStandStill",
    "hash": "0x919BE13EED931959",
    "code": "-- TASK_STAND_STILL\nTaskStandStill(\n\tped --[[ Ped ]], \n\ttime --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the specified ped stand still for (time) milliseconds."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskStartScenarioAtPosition",
    "hash": "0xFA4EFC79F69D4F07",
    "code": "-- TASK_START_SCENARIO_AT_POSITION\nTaskStartScenarioAtPosition(\n\tped --[[ Ped ]], \n\tscenarioName --[[ string ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\ttimeToLeave --[[ integer ]], \n\tplayIntro --[[ boolean ]], \n\twarp --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "scenarioName: \n\nThe name of the scenario to start.",
      "x: \n\nThe x coordinate to start at.",
      "y: \n\nThe y coordinate to start at.",
      "z: \n\nThe z coordinate to start at. Should be the ground position plus the ped's ground to root offset.",
      "heading: \n\nThe heading to start at.",
      "timeToLeave: \n\nSets the timeout on the scenario point to the specified time in milliseconds. If less than 0, sets the IdleForever flag.",
      "playIntro: \n\nIf the ped should play the scenarios enter animation. Sets the SkipEnterClip flag.",
      "warp: \n\nIf the ped should be warped to the position. Sets the Warp flag."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nscenarioName: \n\nThe name of the scenario to start.\n\nx: \n\nThe x coordinate to start at.\n\ny: \n\nThe y coordinate to start at.\n\nz: \n\nThe z coordinate to start at. Should be the ground position plus the ped's ground to root offset.\n\nheading: \n\nThe heading to start at.\n\ntimeToLeave: \n\nSets the timeout on the scenario point to the specified time in milliseconds. If less than 0, sets the IdleForever flag.\n\nplayIntro: \n\nIf the ped should play the scenarios enter animation. Sets the SkipEnterClip flag.\n\nwarp: \n\nIf the ped should be warped to the position. Sets the Warp flag.\n\nThe ped will move or warp to the position and heading given, then start the scenario passed. See TASK_START_SCENARIO_IN_PLACE for a list of scenarios."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskStartScenarioInPlace",
    "hash": "0x142A02425FF02BD9",
    "code": "-- TASK_START_SCENARIO_IN_PLACE\nTaskStartScenarioInPlace(\n\tped --[[ Ped ]], \n\tscenarioName --[[ string ]], \n\ttimeToLeave --[[ integer ]], \n\tplayIntroClip --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "scenarioName: \n\nThe name of the scenario to start.",
      "timeToLeave: \n\nSets the timeout on the scenario point to the specified time in milliseconds. If less than 0, sets the IdleForever flag.",
      "playIntroClip: \n\nIf the ped should play the scenarios enter animation. Sets the SkipEnterClip flag."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nscenarioName: \n\nThe name of the scenario to start.\n\ntimeToLeave: \n\nSets the timeout on the scenario point to the specified time in milliseconds. If less than 0, sets the IdleForever flag.\n\nplayIntroClip: \n\nIf the ped should play the scenarios enter animation. Sets the SkipEnterClip flag.\n\nPuts the ped into the given scenario immediately at their current location. List of scenario names or in update/update.rpf/common/data/ai/scenarios.meta."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskStayInCover",
    "hash": "0xE5DA8615A6180789",
    "code": "-- TASK_STAY_IN_COVER\nTaskStayInCover(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the ped run to take cover"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskStealthKill",
    "hash": "0xAA5DC05579D60BD9",
    "code": "-- TASK_STEALTH_KILL\nTaskStealthKill(\n\tkiller --[[ Ped ]], \n\ttarget --[[ Ped ]], \n\tactionType --[[ Hash ]], \n\tp3 --[[ number ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stealth kill action name hashes:  \nstealth kills can be found here: Grand Theft Auto V\\common.rpf\\data\\action\\stealth_kills.meta  \n...  \n{  \n    \"ACT_stealth_kill_a\",  \n    \"ACT_stealth_kill_weapon\",  \n    \"ACT_stealth_kill_b\",  \n    \"ACT_stealth_kill_c\",  \n    \"ACT_stealth_kill_d\",  \n    \"ACT_stealth_kill_a_gardener\"  \n}  \nOnly known script using this native: fbi4_prep2  \nEXAMPLE:  \nai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key(\"AR_stealth_kill_a\"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key(\"AR_stealth_kill_knife\"), 1f, 0);  \nAlso it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskStopPhoneGestureAnimation",
    "hash": "0x3FA00D4F4641BFAE",
    "code": "-- TASK_STOP_PHONE_GESTURE_ANIMATION\nTaskStopPhoneGestureAnimation(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSubmarineGotoAndStop",
    "hash": "0xC22B40579A498CA4",
    "code": "-- _TASK_SUBMARINE_GOTO_AND_STOP\nTaskSubmarineGotoAndStop(\n\tp0 --[[ Any ]], \n\tsubmarine --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc. p0 is always 0, p5 is always 1 p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native. Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSwapWeapon",
    "hash": "0xA21C51255B205245",
    "code": "-- TASK_SWAP_WEAPON\nTaskSwapWeapon(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSweepAimEntity",
    "hash": "0x2047C02158D6405A",
    "code": "-- TASK_SWEEP_AIM_ENTITY\nTaskSweepAimEntity(\n\tped --[[ Ped ]], \n\tanim --[[ string ]], \n\tp2 --[[ string ]], \n\tp3 --[[ string ]], \n\tp4 --[[ string ]], \n\tp5 --[[ integer ]], \n\tvehicle --[[ Vehicle ]], \n\tp7 --[[ number ]], \n\tp8 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This function is called on peds in vehicles.  \nanim: animation name  \np2, p3, p4: \"sweep_low\", \"sweep_med\" or \"sweep_high\"  \np5: no idea what it does but is usually -1"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSweepAimPosition",
    "hash": "0x7AFE8FDC10BC07D2",
    "code": "-- TASK_SWEEP_AIM_POSITION\nlocal p1 --[[ Any ]], p2 --[[ Any ]], p3 --[[ Any ]], p4 --[[ Any ]] =\n\tTaskSweepAimPosition(\n\t\tp0 --[[ Any ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ number ]], \n\t\tp7 --[[ number ]], \n\t\tp8 --[[ number ]], \n\t\tp9 --[[ number ]], \n\t\tp10 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskSynchronizedScene",
    "hash": "0xEEA929141F699854",
    "code": "-- TASK_SYNCHRONIZED_SCENE\nTaskSynchronizedScene(\n\tped --[[ Ped ]], \n\tscene --[[ integer ]], \n\tanimDictionary --[[ string ]], \n\tanimationName --[[ string ]], \n\tspeed --[[ number ]], \n\tspeedMultiplier --[[ number ]], \n\tduration --[[ integer ]], \n\tflag --[[ integer ]], \n\tplaybackRate --[[ number ]], \n\tp9 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, \"creatures@rottweiler@in_vehicle@std_car\", \"get_in\", 1000.0, -8.0, 4, 0, 0x447a0000, 0);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskThrowProjectile",
    "hash": "0x7285951DBF6B5A51",
    "code": "-- TASK_THROW_PROJECTILE\nTaskThrowProjectile(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.  \nThe last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.  \n---  \nIt seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).  \nIt is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.  \n----------------------------------------------------  \nThe first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.  \n\nNativeDB Added Parameter 5: Any p4\nNativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskToggleDuck",
    "hash": "0xAC96609B9995EDF8",
    "code": "-- TASK_TOGGLE_DUCK\nTaskToggleDuck(\n\tp0 --[[ boolean ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "used in sequence task  \nboth parameters seems to be always 0"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskTurnPedToFaceCoord",
    "hash": "0x1DDA930A0AC38571",
    "code": "-- TASK_TURN_PED_TO_FACE_COORD\nTaskTurnPedToFaceCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "duration in milliseconds"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskTurnPedToFaceEntity",
    "hash": "0x5AD23D40115353AC",
    "code": "-- TASK_TURN_PED_TO_FACE_ENTITY\nTaskTurnPedToFaceEntity(\n\tped --[[ Ped ]], \n\tentity --[[ Entity ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskUseMobilePhone",
    "hash": "0xBD2A8EC3AF4DE7DB",
    "code": "-- TASK_USE_MOBILE_PHONE\nTaskUseMobilePhone(\n\tped --[[ Ped ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Actually has 3 params, not 2.  \np0: Ped  \np1: int (or bool?)  \np2: int  \n\nNativeDB Added Parameter 3: Any p2"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskUseMobilePhoneTimed",
    "hash": "0x5EE02954A14C69DB",
    "code": "-- TASK_USE_MOBILE_PHONE_TIMED\nTaskUseMobilePhoneTimed(\n\tped --[[ Ped ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskUseNearestScenarioChainToCoord",
    "hash": "0x9FDA1B3D7E7028B3",
    "code": "-- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD\nTaskUseNearestScenarioChainToCoord(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskUseNearestScenarioChainToCoordWarp",
    "hash": "0x97A28E63F0BA5631",
    "code": "-- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP\nTaskUseNearestScenarioChainToCoordWarp(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskUseNearestScenarioToCoord",
    "hash": "0x277F471BA9DB000B",
    "code": "-- TASK_USE_NEAREST_SCENARIO_TO_COORD\nTaskUseNearestScenarioToCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tdistance --[[ number ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Updated variables\nAn alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskUseNearestScenarioToCoordWarp",
    "hash": "0x58E2E0F23F6B76C3",
    "code": "-- TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP\nTaskUseNearestScenarioToCoordWarp(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleAimAtCoord",
    "hash": "0x447C1E9EF844BC0F",
    "code": "-- TASK_VEHICLE_AIM_AT_COORD\nTaskVehicleAimAtCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleAimAtPed",
    "hash": "0xE41885592B08B097",
    "code": "-- TASK_VEHICLE_AIM_AT_PED\nTaskVehicleAimAtPed(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleChase",
    "hash": "0x3C08A8E30363B353",
    "code": "-- TASK_VEHICLE_CHASE\nTaskVehicleChase(\n\tdriver --[[ Ped ]], \n\ttargetEnt --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "chases targetEnt fast and aggressively  \n--  \nMakes ped (needs to be in vehicle) chase targetEnt."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleDriveToCoord",
    "hash": "0xE2A2AA2F659D77A7",
    "code": "-- TASK_VEHICLE_DRIVE_TO_COORD\nTaskVehicleDriveToCoord(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\tp6 --[[ Any ]], \n\tvehicleModel --[[ Hash ]], \n\tdrivingMode --[[ integer ]], \n\tstopRange --[[ number ]], \n\tp10 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/  \n---------------------------------------------------------------  \nPassing P6 value as floating value didn't throw any errors, though unsure what is it exactly, looks like radius or something.  \nP10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.  \nHere the e.g. code I used  \nFunction.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleDriveToCoordLongrange",
    "hash": "0x158BB33F920D360C",
    "code": "-- TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE\nTaskVehicleDriveToCoordLongrange(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]], \n\tstopRange --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nPed id for the task.",
      "vehicle: \n\nVehicle entity id for the task.",
      "x: \n\nDestination X coordinate.",
      "y: \n\nDestination Y coordinate.",
      "z: \n\nDestination Z coordinate.",
      "speed: \n\nSpeed of driving.",
      "drivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).",
      "stopRange: \n\nStops in the specific range near the destination. 20.0 works fine."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id for the task.\n\nvehicle: \n\nVehicle entity id for the task.\n\nx: \n\nDestination X coordinate.\n\ny: \n\nDestination Y coordinate.\n\nz: \n\nDestination Z coordinate.\n\nspeed: \n\nSpeed of driving.\n\ndrivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).\n\nstopRange: \n\nStops in the specific range near the destination. 20.0 works fine.\n\nYou can let your character drive to the destination at the speed and driving style you set. You can use map marks to set the destination.\n\nenum eDriveBehaviorFlags {\n  DF_StopForCars = 1,\n  DF_StopForPeds = 2,\n  DF_SwerveAroundAllCars = 4,\n  DF_SteerAroundStationaryCars = 8,\n  DF_SteerAroundPeds = 16,\n  DF_SteerAroundObjects = 32,\n  DF_DontSteerAroundPlayerPed = 64,\n  DF_StopAtLights = 128,\n  DF_GoOffRoadWhenAvoiding = 256,\n  DF_DriveIntoOncomingTraffic = 512,\n  DF_DriveInReverse = 1024,\n  DF_UseWanderFallbackInsteadOfStraightLine = 2048,\n  DF_AvoidRestrictedAreas = 4096,\n  DF_PreventBackgroundPathfinding = 8192, // **These only work on MISSION_CRUISE**\n  DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,\n  DF_UseShortCutLinks = 262144,\n  DF_ChangeLanesAroundObstructions = 524288,\n  DF_UseSwitchedOffNodes = 2097152,\t//cruise tasks ignore this anyway--only used for goto's\n  DF_PreferNavmeshRoute = 4194304,\t//if you're going to be primarily driving off road\n  DF_PlaneTaxiMode = 8388608, // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly\n  DF_ForceStraightLine = 16777216,\n  DF_UseStringPullingAtJunctions = 33554432,\n  DF_AvoidHighways = 536870912,\n  DF_ForceJoinInRoadDirection = 1073741824\n}"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleDriveWander",
    "hash": "0x480142959D337D00",
    "code": "-- TASK_VEHICLE_DRIVE_WANDER\nTaskVehicleDriveWander(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nPed id for the task.",
      "vehicle: \n\nVehicle entity id for the task.",
      "speed: \n\nSpeed of driving.",
      "drivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nPed id for the task.\n\nvehicle: \n\nVehicle entity id for the task.\n\nspeed: \n\nSpeed of driving.\n\ndrivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).\n\nDrive randomly with no destination set."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleEscort",
    "hash": "0x0FA6E4B75F302400",
    "code": "-- TASK_VEHICLE_ESCORT\nTaskVehicleEscort(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\ttargetVehicle --[[ Vehicle ]], \n\tmode --[[ integer ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]], \n\tminDistance --[[ number ]], \n\tp7 --[[ integer ]], \n\tnoRoadsDistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes a ped follow the targetVehicle with <minDistance> in between.  \nnote: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.  \nMode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.  \n-1 = behind  \n0 = ahead  \n1 = left  \n2 = right  \n3 = back left  \n4 = back right  \nif the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.  \nDriving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleFollow",
    "hash": "0xFC545A9F0626E3B6",
    "code": "-- TASK_VEHICLE_FOLLOW\nTaskVehicleFollow(\n\tdriver --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\ttargetEntity --[[ Entity ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]], \n\tminDistance --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)\ndrivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleFollowWaypointRecording",
    "hash": "0x3123FAA6DB1CF7ED",
    "code": "-- TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING\nTaskVehicleFollowWaypointRecording(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tWPRecording --[[ string ]], \n\tp3 --[[ integer ]], \n\tp4 --[[ integer ]], \n\tp5 --[[ integer ]], \n\tp6 --[[ integer ]], \n\tp7 --[[ number ]], \n\tp8 --[[ boolean ]], \n\tp9 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)\np2 = Waypoint recording string (found in update\\update.rpf\\x64\\levels\\gta5\\waypointrec.rpf\np3 = 786468\np4 = 0\np5 = 16\np6 = -1 (angle?)\np7/8/9 = usually v3.zero\np10 = bool (repeat?)\np11 = 1073741824\n-khorio"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleGotoNavmesh",
    "hash": "0x195AEEB13CEFE2EE",
    "code": "-- TASK_VEHICLE_GOTO_NAVMESH\nTaskVehicleGotoNavmesh(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tspeed --[[ number ]], \n\tbehaviorFlag --[[ integer ]], \n\tstoppingRange --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other \"road laws\" into consideration.  \nWARNING:  \nA behaviorFlag value of 0 will result in a clunky, stupid driver!  \nRecommended settings:  \nspeed = 30.0f,  \nbehaviorFlag = 156,   \nstoppingRange = 5.0f;  \nIf you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.   \nIf using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an \"anti-stuck\" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.  \nEDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleHeliProtect",
    "hash": "0x1E09C32048FEFD1C",
    "code": "-- TASK_VEHICLE_HELI_PROTECT\nTaskVehicleHeliProtect(\n\tpilot --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tentityToFollow --[[ Entity ]], \n\ttargetSpeed --[[ number ]], \n\tp4 --[[ integer ]], \n\tradius --[[ number ]], \n\taltitude --[[ integer ]], \n\tp7 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "pilot, vehicle and altitude are rather self-explanatory.  \np4: is unused variable in the function.  \nentityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.  \n'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.  \n'radius' isn't just \"stop within radius of X of target\" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.  \nNOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.  \nNOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleMission",
    "hash": "0x659427E0EF36BCDE",
    "code": "-- TASK_VEHICLE_MISSION\nTaskVehicleMission(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tvehicleTarget --[[ Vehicle ]], \n\tmissionType --[[ integer ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]], \n\tradius --[[ number ]], \n\tstraightLineDist --[[ number ]], \n\tDriveAgainstTraffic --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to be tasked.",
      "vehicle: \n\nThe vehicles' entity handle.",
      "vehicleTarget: \n\nThe target vehicle.",
      "missionType: \n\nThe mission type (default is 0) (see eVehicleMissionType).",
      "speed: \n\nThe speed in m/s.",
      "drivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).",
      "radius: \n\nThe radius of when the task will be completed (default is -1.0f).",
      "straightLineDist: \n\nThe distance before the vehicle will drive straight to the target (default is -1.0f).",
      "DriveAgainstTraffic: \n\nWhether the vehicle should drive against traffic (default is false)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to be tasked.\n\nvehicle: \n\nThe vehicles' entity handle.\n\nvehicleTarget: \n\nThe target vehicle.\n\nmissionType: \n\nThe mission type (default is 0) (see eVehicleMissionType).\n\nspeed: \n\nThe speed in m/s.\n\ndrivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).\n\nradius: \n\nThe radius of when the task will be completed (default is -1.0f).\n\nstraightLineDist: \n\nThe distance before the vehicle will drive straight to the target (default is -1.0f).\n\nDriveAgainstTraffic: \n\nWhether the vehicle should drive against traffic (default is false).\n\nAll parameters except ped, vehicle, vehicleTarget and speed are optional; with missionType being only those that require a target entity.\n\nIf you don't want to use a parameter; pass 0 for int parameters, and -1.0f for the remaining float parameters.\n\nenum eVehicleMissionType\n{\n  None = 0,\n  Cruise = 1,\n  Ram = 2,\n  Block = 3,\n  GoTo = 4,\n  Stop = 5,\n  Attack = 6,\n  Follow = 7,\n  Flee = 8,\n  Circle = 9,\n  Escort = 12,\n  GoToRacing = 14,\n  FollowRecording = 15,\n  PoliceBehaviour = 16,\n  Land = 19,\n  LandAndWait = 20,\n  Crash = 21,\n  PullOver = 22,\n  HeliProtect = 23\n}"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleMissionCoorsTarget",
    "hash": "0xF0AF20AA7731F8C3",
    "code": "-- TASK_VEHICLE_MISSION_COORS_TARGET\nTaskVehicleMissionCoorsTarget(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tmissionType --[[ integer ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]], \n\tradius --[[ number ]], \n\tstraightLineDist --[[ number ]], \n\tDriveAgainstTraffic --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to be tasked.",
      "vehicle: \n\nThe vehicles' entity handle.",
      "x: \n\nThe x coordinate.",
      "y: \n\nThe y coordinate.",
      "z: \n\nThe z coordinate.",
      "missionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).",
      "speed: \n\nThe speed in m/s.",
      "drivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).",
      "radius: \n\nThe radius of when the task will be completed (default is -1.0f).",
      "straightLineDist: \n\nThe distance before the vehicle will drive straight to the target (default is -1.0f).",
      "DriveAgainstTraffic: \n\nWhether the vehicle should drive against traffic (default is false)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to be tasked.\n\nvehicle: \n\nThe vehicles' entity handle.\n\nx: \n\nThe x coordinate.\n\ny: \n\nThe y coordinate.\n\nz: \n\nThe z coordinate.\n\nmissionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).\n\nspeed: \n\nThe speed in m/s.\n\ndrivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).\n\nradius: \n\nThe radius of when the task will be completed (default is -1.0f).\n\nstraightLineDist: \n\nThe distance before the vehicle will drive straight to the target (default is -1.0f).\n\nDriveAgainstTraffic: \n\nWhether the vehicle should drive against traffic (default is false).\n\nAll parameters except ped, vehicle, x, y, z and speed are optional; with missionType being only those that don't require a target entity.\n\nIf you don't want to use a parameter; pass 0 for int parameters, and -1.0f for the remaining float parameters."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleMissionPedTarget",
    "hash": "0x9454528DF15D657A",
    "code": "-- TASK_VEHICLE_MISSION_PED_TARGET\nTaskVehicleMissionPedTarget(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tpedTarget --[[ Ped ]], \n\tmissionType --[[ integer ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]], \n\tradius --[[ number ]], \n\tstraightLineDist --[[ number ]], \n\tDriveAgainstTraffic --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to be tasked.",
      "vehicle: \n\nThe vehicles' entity handle.",
      "pedTarget: \n\nThe target ped.",
      "missionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).",
      "speed: \n\nThe speed in m/s.",
      "drivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).",
      "radius: \n\nThe radius of when the task will be completed (default is -1.0f).",
      "straightLineDist: \n\nThe distance before the vehicle will drive straight to the target (default is -1.0f).",
      "DriveAgainstTraffic: \n\nWhether the vehicle should drive against traffic (default is false)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to be tasked.\n\nvehicle: \n\nThe vehicles' entity handle.\n\npedTarget: \n\nThe target ped.\n\nmissionType: \n\nThe mission type (default is 0) (see TaskVehicleMission).\n\nspeed: \n\nThe speed in m/s.\n\ndrivingStyle: \n\nThe driving style (default is 0) (see SetDriveTaskDrivingStyle).\n\nradius: \n\nThe radius of when the task will be completed (default is -1.0f).\n\nstraightLineDist: \n\nThe distance before the vehicle will drive straight to the target (default is -1.0f).\n\nDriveAgainstTraffic: \n\nWhether the vehicle should drive against traffic (default is false).\n\nAll parameters except ped, vehicle, pedTarget and speed are optional; with missionType being only those that require a target entity.\n\nIf you don't want to use a parameter; pass 0 for int parameters, and -1.0f for the remaining float parameters."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehiclePark",
    "hash": "0x0F3E34E968EA374E",
    "code": "-- TASK_VEHICLE_PARK\nTaskVehiclePark(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\theading --[[ number ]], \n\tmode --[[ integer ]], \n\tradius --[[ number ]], \n\tkeepEngineOn --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Modes:  \n0 - ignore heading  \n1 - park forward  \n2 - park backwards  \nDepending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.  \nRadius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehiclePlayAnim",
    "hash": "0x69F5C3BD0F3EBD89",
    "code": "-- TASK_VEHICLE_PLAY_ANIM\nTaskVehiclePlayAnim(\n\tvehicle --[[ Vehicle ]], \n\tanimationSet --[[ string ]], \n\tanimationName --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Most probably plays a specific animation on vehicle. For example getting chop out of van etc...\nHere's how its used -\nTASK::TASK_VEHICLE_PLAY_ANIM(l_325, \"rcmnigel1b\", \"idle_speedo\");\nTASK::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], \"missfra0_chop_drhome\", \"InCar_GetOutofBack_Speedo\");\nFYI : Speedo is the name of van in which chop was put in the mission."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleShootAtCoord",
    "hash": "0x5190796ED39C9B6D",
    "code": "-- TASK_VEHICLE_SHOOT_AT_COORD\nTaskVehicleShootAtCoord(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleShootAtPed",
    "hash": "0x10AB107B887214D8",
    "code": "-- TASK_VEHICLE_SHOOT_AT_PED\nTaskVehicleShootAtPed(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskVehicleTempAction",
    "hash": "0xC429DCEEB339E129",
    "code": "-- TASK_VEHICLE_TEMP_ACTION\nTaskVehicleTempAction(\n\tdriver --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\taction --[[ integer ]], \n\ttime --[[ integer ]]\n)",
    "parameters": [
      "driver: \n\nThe vehicle driver (Ped).",
      "vehicle: \n\nThe vehicle handle.",
      "action: \n\nThe temporary action, see eTempAction.",
      "time: \n\nThe time to run this temp action for, use -1 for infinite. Time is in milliseconds."
    ],
    "returns": [],
    "description": "Parameters:\n\ndriver: \n\nThe vehicle driver (Ped).\n\nvehicle: \n\nThe vehicle handle.\n\naction: \n\nThe temporary action, see eTempAction.\n\ntime: \n\nThe time to run this temp action for, use -1 for infinite. Time is in milliseconds.\n\nGives the vehicle a temporary action.\n\nNote: For migrating objects, a CScriptEntityStateChangeEvent will be sent over the network to let other clients know that this object is being given a temporary action. At the same time, temporary actions cannot be applied to clones/remote objects.\n\nenum eTempAction {\n    TA_NONE = 0,\n    TA_WAIT = 1,\n    TA_UNUSED = 2,\n    TA_BRAKE_REVERSE = 3,\n    TA_HANDBRAKE_TURN_LEFT = 4,\n    TA_HANDBRAKE_TURN_RIGHT = 5,\n    TA_HANDBRAKE_UNTIL_TIME_ENDS = 6,\n    TA_TURN_LEFT = 7,\n    TA_TURN_RIGHT = 8,\n    TA_ACCELERATE = 9,\n    TA_TURN_LEFT = 10,\n    TA_TURN_RIGHT = 11,\n    TA_UNUSED_12 = 12,\n    TA_TURN_LEFT_GO_REVERSE = 13,\n    TA_TURN_RIGHT_GO_REVERSE = 14,\n    TA_PLANE_FLY_UP = 15, // (crashes game if not in plane)\n    TA_PLANE_FLY_STRAIGHT = 16, // (crashes game if not in plane)\n    TA_PLANE_SHARP_LEFT = 17, // (crashes game if not in plane)\n    TA_PLANE_SHARP_RIGHT = 18, // (crashes game if not in plane)\n    TA_STRONG_BRAKE = 19,\n    TA_TURN_LEFT_AND_STOP = 20,\n    TA_TURN_RIGHT_AND_STOP = 21,\n    TA_GO_IN_REVERSE = 22,\n    TA_ACCELERATE_FAST = 23,\n    TA_BRAKE_ACTION = 24,\n    TA_HANDBRAKE_TURN_LEFT_MORE = 25,\n    TA_HANDBRAKE_TURN_RIGHT_MORE = 26,\n    TA_HANDBRAKE_BRAKE_STRAIGHT = 27,\n    TA_BRAKE_STRONG_REVERSE_ACCELERATION = 28,\n    TA_UNUSED_29 = 29,\n    TA_PERFORMS_BURNOUT = 30,\n    TA_REV_ENGINE = 31,\n    TA_ACCELERATE_VERY_STRONG = 32,\n    TA_SURFACE_IN_SUBMARINE = 33\n};"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskWanderInArea",
    "hash": "0xE054346CA3A0F315",
    "code": "-- TASK_WANDER_IN_AREA\nTaskWanderInArea(\n\tped --[[ Ped ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]], \n\tminimalLength --[[ integer ]], \n\ttimeBetweenWalks --[[ number ]]\n)",
    "parameters": [
      "ped: \n\nThe ped which will wander the area.",
      "x: \n\nThe X coordinate.",
      "y: \n\nThe Y coordinate",
      "z: \n\nThe Z coordinate",
      "radius: \n\nThe radius of the area to wander around in",
      "minimalLength: \n\nThe minimal length it will wander before waiting timeBetweenWalks seconds before continuing",
      "timeBetweenWalks: \n\nThe length of time the ped will stand still/rest between walks"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped which will wander the area.\n\nx: \n\nThe X coordinate.\n\ny: \n\nThe Y coordinate\n\nz: \n\nThe Z coordinate\n\nradius: \n\nThe radius of the area to wander around in\n\nminimalLength: \n\nThe minimal length it will wander before waiting timeBetweenWalks seconds before continuing\n\ntimeBetweenWalks: \n\nThe length of time the ped will stand still/rest between walks\n\nMakes a ped wander/patrol around the specified area.\n\nThe ped will continue to wander after getting distracted, but only if this additional task is temporary, ie. killing a target, after killing the target it will continue to wander around.\n\nUse GetIsTaskActive(ped, 222) to check if the ped is still wandering the area."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskWanderSpecific",
    "hash": "0x6919A2F136426098",
    "code": "-- _TASK_WANDER_SPECIFIC\nTaskWanderSpecific(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskWanderStandard",
    "hash": "0xBB9CE077274F6A1B",
    "code": "-- TASK_WANDER_STANDARD\nTaskWanderStandard(\n\tped --[[ Ped ]], \n\tp1 --[[ number ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes ped walk around the area.  \nset p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskWarpPedDirectlyIntoCover",
    "hash": "0x6E01E9E8D89F8276",
    "code": "-- TASK_WARP_PED_DIRECTLY_INTO_COVER\nTaskWarpPedDirectlyIntoCover(\n\tped --[[ Ped ]], \n\ttime --[[ integer ]], \n\tcanPeekAndAim --[[ boolean ]], \n\tforceInitialFacingDirection --[[ boolean ]], \n\tforceFaceLeft --[[ boolean ]], \n\tcoverIndex --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe ped to warp into cover.",
      "time: \n\nDuration in milliseconds the ped should take to enter the cover.",
      "canPeekAndAim: \n\nIf true, allows the ped to peek and aim while in cover.",
      "forceInitialFacingDirection: \n\nIf true, forces the ped to face the initial direction when entering cover.",
      "forceFaceLeft: \n\nIf true, forces the ped to face left relative to the cover position.",
      "coverIndex: \n\nThe index of the cover point to warp the ped to. If null, the game will choose the nearest cover point."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped to warp into cover.\n\ntime: \n\nDuration in milliseconds the ped should take to enter the cover.\n\ncanPeekAndAim: \n\nIf true, allows the ped to peek and aim while in cover.\n\nforceInitialFacingDirection: \n\nIf true, forces the ped to face the initial direction when entering cover.\n\nforceFaceLeft: \n\nIf true, forces the ped to face left relative to the cover position.\n\ncoverIndex: \n\nThe index of the cover point to warp the ped to. If null, the game will choose the nearest cover point.\n\nThis task warps a ped directly into a cover position closest to the specified point. This can be used to quickly place peds in strategic positions during gameplay.\n\nNativeDB Introduced: 2545"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskWarpPedIntoVehicle",
    "hash": "0x9A7D091411C5F684",
    "code": "-- TASK_WARP_PED_INTO_VEHICLE\nTaskWarpPedIntoVehicle(\n\tped --[[ Ped ]], \n\tvehicle --[[ Vehicle ]], \n\tseatIndex --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe Ped to be warped into the vehicle.",
      "vehicle: \n\nThe target vehicle into which the ped will be warped.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe Ped to be warped into the vehicle.\n\nvehicle: \n\nThe target vehicle into which the ped will be warped.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE.\n\nNativeDB Introduced: v323\n\nWarp a ped into a vehicle.\n\nNote: It's better to use TASK_ENTER_VEHICLE with the flag \"warp\" flag instead of this native."
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "TaskWrithe",
    "hash": "0xCDDC2B77CE54AC6E",
    "code": "-- TASK_WRITHE\nTaskWrithe(\n\tped --[[ Ped ]], \n\ttarget --[[ Ped ]], \n\ttime --[[ integer ]], \n\tp3 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 5: Any p4\nNativeDB Added Parameter 6: Any p5"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "UncuffPed",
    "hash": "0x67406F2C8F87FC4F",
    "code": "-- UNCUFF_PED\nUncuffPed(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "UpdateTaskAimGunScriptedTarget",
    "hash": "0x9724FB59A3E72AD0",
    "code": "-- UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET\nUpdateTaskAimGunScriptedTarget(\n\tp0 --[[ Ped ]], \n\tp1 --[[ Ped ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ number ]], \n\tp5 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "UpdateTaskHandsUpDuration",
    "hash": "0xA98FCAFD7893C834",
    "code": "-- UPDATE_TASK_HANDS_UP_DURATION\nUpdateTaskHandsUpDuration(\n\tped --[[ Ped ]], \n\tduration --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "UpdateTaskSweepAimEntity",
    "hash": "0xE4973DBDBE6E44B3",
    "code": "-- UPDATE_TASK_SWEEP_AIM_ENTITY\nUpdateTaskSweepAimEntity(\n\tped --[[ Ped ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "UpdateTaskSweepAimPosition",
    "hash": "0xBB106883F5201FC4",
    "code": "-- UPDATE_TASK_SWEEP_AIM_POSITION\nUpdateTaskSweepAimPosition(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "UseWaypointRecordingAsAssistedMovementRoute",
    "hash": "0x5A353B8E6B1095B5",
    "code": "-- USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE\nUseWaypointRecordingAsAssistedMovementRoute(\n\tname --[[ string ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [
      "name: \n\nWaypoint recording name.",
      "p1:",
      "p2:",
      "p3:"
    ],
    "returns": [],
    "description": "Parameters:\n\nname: \n\nWaypoint recording name.\n\np1:\np2:\np3:"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "VehicleWaypointPlaybackOverrideSpeed",
    "hash": "0x121F0593E0A431D7",
    "code": "-- VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED\nVehicleWaypointPlaybackOverrideSpeed(\n\tvehicle --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "VehicleWaypointPlaybackPause",
    "hash": "0x8A4E6AC373666BC5",
    "code": "-- VEHICLE_WAYPOINT_PLAYBACK_PAUSE\nVehicleWaypointPlaybackPause(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "VehicleWaypointPlaybackResume",
    "hash": "0xDC04FCAA7839D492",
    "code": "-- VEHICLE_WAYPOINT_PLAYBACK_RESUME\nVehicleWaypointPlaybackResume(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "VehicleWaypointPlaybackUseDefaultSpeed",
    "hash": "0x5CEB25A7D2848963",
    "code": "-- VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED\nVehicleWaypointPlaybackUseDefaultSpeed(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackGetIsPaused",
    "hash": "0x701375A7D43F01CB",
    "code": "-- WAYPOINT_PLAYBACK_GET_IS_PAUSED\nlocal retval --[[ boolean ]] =\n\tWaypointPlaybackGetIsPaused(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackOverrideSpeed",
    "hash": "0x7D7D2B47FA788E85",
    "code": "-- WAYPOINT_PLAYBACK_OVERRIDE_SPEED\nWaypointPlaybackOverrideSpeed(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackPause",
    "hash": "0x0F342546AA06FED5",
    "code": "-- WAYPOINT_PLAYBACK_PAUSE\nWaypointPlaybackPause(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackResume",
    "hash": "0x244F70C84C547D2D",
    "code": "-- WAYPOINT_PLAYBACK_RESUME\nWaypointPlaybackResume(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackStartAimingAtCoord",
    "hash": "0x8968400D900ED8B3",
    "code": "-- WAYPOINT_PLAYBACK_START_AIMING_AT_COORD\nWaypointPlaybackStartAimingAtCoord(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackStartAimingAtPed",
    "hash": "0x20E330937C399D29",
    "code": "-- WAYPOINT_PLAYBACK_START_AIMING_AT_PED\nWaypointPlaybackStartAimingAtPed(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackStartShootingAtCoord",
    "hash": "0x057A25CFCC9DB671",
    "code": "-- WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD\nWaypointPlaybackStartShootingAtCoord(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackStartShootingAtPed",
    "hash": "0xE70BA7B90F8390DC",
    "code": "-- WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED\nWaypointPlaybackStartShootingAtPed(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ boolean ]], \n\tp3 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackStopAimingOrShooting",
    "hash": "0x47EFA040EBB8E2EA",
    "code": "-- WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING\nWaypointPlaybackStopAimingOrShooting(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointPlaybackUseDefaultSpeed",
    "hash": "0x6599D834B12D0800",
    "code": "-- WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED\nWaypointPlaybackUseDefaultSpeed(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointRecordingGetClosestWaypoint",
    "hash": "0xB629A298081F876F",
    "code": "-- WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT\nlocal retval --[[ boolean ]], point --[[ integer ]] =\n\tWaypointRecordingGetClosestWaypoint(\n\t\tname --[[ string ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "For a full list of the points, see here: goo.gl/wIH0vn"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointRecordingGetCoord",
    "hash": "0x2FB897405C90B361",
    "code": "-- WAYPOINT_RECORDING_GET_COORD\nlocal retval --[[ boolean ]], coord --[[ vector3 ]] =\n\tWaypointRecordingGetCoord(\n\t\tname --[[ string ]], \n\t\tpoint --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "For a full list of the points, see here: goo.gl/wIH0vn"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointRecordingGetNumPoints",
    "hash": "0x5343532C01A07234",
    "code": "-- WAYPOINT_RECORDING_GET_NUM_POINTS\nlocal retval --[[ boolean ]], points --[[ integer ]] =\n\tWaypointRecordingGetNumPoints(\n\t\tname --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "For a full list of the points, see here: goo.gl/wIH0vn"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "WaypointRecordingGetSpeedAtPoint",
    "hash": "0x005622AEBC33ACA9",
    "code": "-- WAYPOINT_RECORDING_GET_SPEED_AT_POINT\nlocal retval --[[ number ]] =\n\tWaypointRecordingGetSpeedAtPoint(\n\t\tname --[[ string ]], \n\t\tpoint --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x0ffb3c758e8c07b9",
    "hash": "0x0FFB3C758E8C07B9",
    "code": "-- 0x0FFB3C758E8C07B9\nlocal retval --[[ Any ]] =\n\tN_0x0ffb3c758e8c07b9(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Doesn't actually return anything.\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x1f351cf1c6475734",
    "hash": "0x1F351CF1C6475734",
    "code": "-- 0x1F351CF1C6475734\nN_0x1f351cf1c6475734(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x29682e2ccf21e9b5",
    "hash": "0x29682E2CCF21E9B5",
    "code": "-- 0x29682E2CCF21E9B5\nN_0x29682e2ccf21e9b5(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]], \n\tp6 --[[ Any ]], \n\tp7 --[[ Any ]], \n\tp8 --[[ Any ]], \n\tp9 --[[ Any ]], \n\tp10 --[[ Any ]], \n\tp11 --[[ Any ]], \n\tp12 --[[ Any ]], \n\tp13 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x3e38e28a1d80ddf6",
    "hash": "0x3E38E28A1D80DDF6",
    "code": "-- 0x3E38E28A1D80DDF6\nlocal retval --[[ boolean ]] =\n\tN_0x3e38e28a1d80ddf6(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "IS_*"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x53ddc75bc3ac0a90",
    "hash": "0x53DDC75BC3AC0A90",
    "code": "-- 0x53DDC75BC3AC0A90\nN_0x53ddc75bc3ac0a90(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to have tasks cleared"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to have tasks cleared\n\nRelated to _CLEAR_VEHICLE_TASKS and requires more research (e.g., _CLEAR_VEHICLE_SECONDARY_TASKS).\n\nCLEAR_*\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x6100b3cefd43452e",
    "hash": "0x6100B3CEFD43452E",
    "code": "-- 0x6100B3CEFD43452E\nN_0x6100b3cefd43452e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x8423541e8b3a1589",
    "hash": "0x8423541E8B3A1589",
    "code": "-- 0x8423541E8B3A1589\nN_0x8423541e8b3a1589(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x8634cef2522d987b",
    "hash": "0x8634CEF2522D987B",
    "code": "-- 0x8634CEF2522D987B\nN_0x8634cef2522d987b(\n\tped --[[ Ped ]], \n\tp1 --[[ string ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0x9d252648778160df",
    "hash": "0x9D252648778160DF",
    "code": "-- 0x9D252648778160DF\nlocal retval --[[ Any ]] =\n\tN_0x9d252648778160df(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0xab13a5565480b6d9",
    "hash": "0xAB13A5565480B6D9",
    "code": "-- 0xAB13A5565480B6D9\nlocal retval --[[ Any ]] =\n\tN_0xab13a5565480b6d9(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Used only once in the scripts (fm_mission_controller) like so:\n\nTASK::_0xAB13A5565480B6D9(iLocal_3160, \"Cutting\");\n\nSET_*"
  },
  {
    "namespace": "Namespace: TASK",
    "apiset": "API set: client",
    "name": "N_0xfa83ca6776038f64",
    "hash": "0xFA83CA6776038F64",
    "code": "-- 0xFA83CA6776038F64\nN_0xfa83ca6776038f64(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REMOVE_*\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AddRoadNodeSpeedZone",
    "hash": "0x2CE544C68FB812A0",
    "code": "-- ADD_ROAD_NODE_SPEED_ZONE\nlocal retval --[[ integer ]] =\n\tAddRoadNodeSpeedZone(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tspeed --[[ number ]], \n\t\tp5 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AddVehicleCombatAngledAvoidanceArea",
    "hash": "0x54B0F614960F4A5F",
    "code": "-- ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA\nlocal retval --[[ Any ]] =\n\tAddVehicleCombatAngledAvoidanceArea(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tp6 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AddVehiclePhoneExplosiveDevice",
    "hash": "0x99AD4CCCB128CBC9",
    "code": "-- ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE\nAddVehiclePhoneExplosiveDevice(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AddVehicleStuckCheckWithWarp",
    "hash": "0x2FA9923062DD396C",
    "code": "-- ADD_VEHICLE_STUCK_CHECK_WITH_WARP\nAddVehicleStuckCheckWithWarp(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]], \n\tp5 --[[ boolean ]], \n\tp6 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AddVehicleUpsidedownCheck",
    "hash": "0xB72E26D81006005B",
    "code": "-- ADD_VEHICLE_UPSIDEDOWN_CHECK\nAddVehicleUpsidedownCheck(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AllowAmbientVehiclesToAvoidAdverseConditions",
    "hash": "0xB264C4D2F2B0A78B",
    "code": "-- ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS\nAllowAmbientVehiclesToAvoidAdverseConditions(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native it's a debug native. Won't do anything."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AreAllVehicleWindowsIntact",
    "hash": "0x11D862A3E977A9EF",
    "code": "-- ARE_ALL_VEHICLE_WINDOWS_INTACT\nlocal retval --[[ boolean ]] =\n\tAreAllVehicleWindowsIntact(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Appears to return false if any window is broken."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AreAnyVehicleSeatsFree",
    "hash": "0x2D34FC3BC4ADB780",
    "code": "-- ARE_ANY_VEHICLE_SEATS_FREE\nlocal retval --[[ boolean ]] =\n\tAreAnyVehicleSeatsFree(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns false if every seat is occupied."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AreBombBayDoorsOpen",
    "hash": "0xD0917A423314BBA8",
    "code": "-- _ARE_BOMB_BAY_DOORS_OPEN\nlocal retval --[[ boolean ]] =\n\tAreBombBayDoorsOpen(\n\t\taircraft --[[ Vehicle ]]\n\t)",
    "parameters": [
      "aircraft: \n\nThe vehicle to check the bomb bay doors on."
    ],
    "returns": [
      "A bool indicating the state of the doors (true = open, false = closed)."
    ],
    "description": "Parameters:\n\naircraft: \n\nThe vehicle to check the bomb bay doors on.\n\nReturns:\n\nA bool indicating the state of the doors (true = open, false = closed).\n\nReturns true when the bomb bay doors of this plane are open. False if they're closed."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AreHeliStubWingsDeployed",
    "hash": "0xAEF12960FA943792",
    "code": "-- _ARE_HELI_STUB_WINGS_DEPLOYED\nlocal retval --[[ boolean ]] =\n\tAreHeliStubWingsDeployed(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only used with the \"akula\" in the decompiled native scripts.\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AreOutriggerLegsDeployed",
    "hash": "0x3A9128352EAC9E85",
    "code": "-- _ARE_OUTRIGGER_LEGS_DEPLOYED\nlocal retval --[[ boolean ]] =\n\tAreOutriggerLegsDeployed(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "The deployment state of the vehicle's outrigger legs"
    ],
    "description": "Returns:\n\nThe deployment state of the vehicle's outrigger legs\n\nReturns whether the outrigger legs are deployed for the vehicle. The Chernobog is one of the few vehicles with outrigger legs.\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ArePlaneControlPanelsIntact",
    "hash": "0xF78F94D60248C737",
    "code": "-- ARE_PLANE_CONTROL_PANELS_INTACT\nlocal retval --[[ boolean ]] =\n\tArePlaneControlPanelsIntact(\n\t\tvehicle --[[ Vehicle ]], \n\t\tcheckForZeroHealth --[[ boolean ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check. This should be a plane.",
      "checkForZeroHealth: \n\nIf set to true, the native also checks if the plane's health is zero, indicating it is completely destroyed. If false, only the state of the control panels is considered."
    ],
    "returns": [
      "Returns true if the plane's control panels are intact, and, depending on the checkForZeroHealth parameter, the plane is not completely destroyed. Returns false if the control panels are damaged or the plane is destroyed (when checkForZeroHealth is true)."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check. This should be a plane.\n\ncheckForZeroHealth: \n\nIf set to true, the native also checks if the plane's health is zero, indicating it is completely destroyed. If false, only the state of the control panels is considered.\n\nReturns:\n\nReturns true if the plane's control panels are intact, and, depending on the checkForZeroHealth parameter, the plane is not completely destroyed. Returns false if the control panels are damaged or the plane is destroyed (when checkForZeroHealth is true).\n\nQueries whether the control panels of a plane are intact. This native is used to determine the operational status of a plane's cockpit controls, which can affect the plane's flyability."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ArePlanePropellersIntact",
    "hash": "0x755D6D5267CBBD7E",
    "code": "-- ARE_PLANE_PROPELLERS_INTACT\nlocal retval --[[ boolean ]] =\n\tArePlanePropellersIntact(\n\t\tplane --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ArePlaneWingsIntact",
    "hash": "0x5991A01434CE9677",
    "code": "-- _ARE_PLANE_WINGS_INTACT\nlocal retval --[[ boolean ]] =\n\tArePlaneWingsIntact(\n\t\tplane --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AttachContainerToHandlerFrame",
    "hash": "0x6A98C2ECF57FA5D4",
    "code": "-- _ATTACH_CONTAINER_TO_HANDLER_FRAME\nAttachContainerToHandlerFrame(\n\thandler --[[ Vehicle ]], \n\tcontainer --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AttachEntityToCargobob",
    "hash": "0xA1DD82F3CCF9A01E",
    "code": "-- ATTACH_ENTITY_TO_CARGOBOB\nAttachEntityToCargobob(\n\tvehicle --[[ Vehicle ]], \n\tentity --[[ Entity ]], \n\tp2 --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AttachVehicleOnToTrailer",
    "hash": "0x16B5E274BDE402F8",
    "code": "-- ATTACH_VEHICLE_ON_TO_TRAILER\nAttachVehicleOnToTrailer(\n\tvehicle --[[ Vehicle ]], \n\ttrailer --[[ Vehicle ]], \n\toffsetX --[[ number ]], \n\toffsetY --[[ number ]], \n\toffsetZ --[[ number ]], \n\tcoordsX --[[ number ]], \n\tcoordsY --[[ number ]], \n\tcoordsZ --[[ number ]], \n\trotationX --[[ number ]], \n\trotationY --[[ number ]], \n\trotationZ --[[ number ]], \n\tdisableColls --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to attach to the trailer",
      "trailer: \n\nThe trailer to attach the vehicle to",
      "offsetX: \n\nThe x offset of the vehicle",
      "offsetY: \n\nThe y offset of the vehicle",
      "offsetZ: \n\nThe z offset of the vehicle",
      "coordsX: \n\nThe x coords of where you want the vehicle placed (must be an offset from the trailer itself)",
      "coordsY: \n\nThe y coords of where you want the vehicle placed (must be an offset from the trailer itself)",
      "coordsZ: \n\nThe z coords of where you want the vehicle placed (must be an offset from the trailer itself)",
      "rotationX: \n\nThe x rotation of where you want the vehicle placed",
      "rotationY: \n\nThe y rotation of where you want the vehicle placed",
      "rotationZ: \n\nThe z rotation of where you want the vehicle placed",
      "disableColls: \n\nShould actually be a boolean, this will disable the collision between the vehicle you're attaching and the trailer"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to attach to the trailer\n\ntrailer: \n\nThe trailer to attach the vehicle to\n\noffsetX: \n\nThe x offset of the vehicle\n\noffsetY: \n\nThe y offset of the vehicle\n\noffsetZ: \n\nThe z offset of the vehicle\n\ncoordsX: \n\nThe x coords of where you want the vehicle placed (must be an offset from the trailer itself)\n\ncoordsY: \n\nThe y coords of where you want the vehicle placed (must be an offset from the trailer itself)\n\ncoordsZ: \n\nThe z coords of where you want the vehicle placed (must be an offset from the trailer itself)\n\nrotationX: \n\nThe x rotation of where you want the vehicle placed\n\nrotationY: \n\nThe y rotation of where you want the vehicle placed\n\nrotationZ: \n\nThe z rotation of where you want the vehicle placed\n\ndisableColls: \n\nShould actually be a boolean, this will disable the collision between the vehicle you're attaching and the trailer"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AttachVehicleToCargobob",
    "hash": "0x4127F1D84E347769",
    "code": "-- ATTACH_VEHICLE_TO_CARGOBOB\nAttachVehicleToCargobob(\n\tcargobob --[[ Vehicle ]], \n\tvehicle --[[ Vehicle ]], \n\tvehicleBoneIndex --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [
      "cargobob: \n\nThe cargobob",
      "vehicle: \n\nThe vehicle that will be attached",
      "vehicleBoneIndex: \n\nA Vehicle bone the hook/magnet should attach to or -1 for none/default GET_ENTITY_BONE_INDEX_BY_NAME",
      "x: \n\nx hook/magnet Offset",
      "y: \n\ny hook/magnet Offset",
      "z: \n\nz hook/magnet Offset"
    ],
    "returns": [],
    "description": "Parameters:\n\ncargobob: \n\nThe cargobob\n\nvehicle: \n\nThe vehicle that will be attached\n\nvehicleBoneIndex: \n\nA Vehicle bone the hook/magnet should attach to or -1 for none/default GET_ENTITY_BONE_INDEX_BY_NAME\n\nx: \n\nx hook/magnet Offset\n\ny: \n\ny hook/magnet Offset\n\nz: \n\nz hook/magnet Offset"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AttachVehicleToTowTruck",
    "hash": "0x29A16F8D621C4508",
    "code": "-- ATTACH_VEHICLE_TO_TOW_TRUCK\nAttachVehicleToTowTruck(\n\ttowTruck --[[ Vehicle ]], \n\tvehicle --[[ Vehicle ]], \n\trear --[[ boolean ]], \n\thookOffsetX --[[ number ]], \n\thookOffsetY --[[ number ]], \n\thookOffsetZ --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "HookOffset defines where the hook is attached. leave at 0 for default attachment."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "AttachVehicleToTrailer",
    "hash": "0x3C7D42D58F770B54",
    "code": "-- ATTACH_VEHICLE_TO_TRAILER\nAttachVehicleToTrailer(\n\tvehicle --[[ Vehicle ]], \n\ttrailer --[[ Vehicle ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "BringVehicleToHalt",
    "hash": "0x260BE8F09E326A20",
    "code": "-- BRING_VEHICLE_TO_HALT\nBringVehicleToHalt(\n\tvehicle --[[ Vehicle ]], \n\tdistance --[[ number ]], \n\tduration --[[ integer ]], \n\tbControlVerticalVelocity --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to stop.",
      "distance: \n\nThe distance from the initial coords at which the vehicle should come to rest.",
      "duration: \n\nThe length of time in seconds to hold the car at rest after stopping.",
      "bControlVerticalVelocity: \n\nfalse by default which allows gravity to act normally in the z direction. Enable this option to halt the vehicle's vertical velocity as well."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to stop.\n\ndistance: \n\nThe distance from the initial coords at which the vehicle should come to rest.\n\nduration: \n\nThe length of time in seconds to hold the car at rest after stopping.\n\nbControlVerticalVelocity: \n\nfalse by default which allows gravity to act normally in the z direction. Enable this option to halt the vehicle's vertical velocity as well.\n\nThis native makes the vehicle stop immediately, as it happens when we enter a multiplayer garage."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CanAnchorBoatHere",
    "hash": "0x26C10ECBDA5D043B",
    "code": "-- CAN_ANCHOR_BOAT_HERE\nlocal retval --[[ boolean ]] =\n\tCanAnchorBoatHere(\n\t\tboat --[[ Vehicle ]]\n\t)",
    "parameters": [
      "boat: \n\nThe boat to check."
    ],
    "returns": [
      "Returns true if the boat can be safely anchored at its current position, false otherwise."
    ],
    "description": "Parameters:\n\nboat: \n\nThe boat to check.\n\nReturns:\n\nReturns true if the boat can be safely anchored at its current position, false otherwise.\n\nChecks if a boat can be anchored at its present position without possibly intersecting collision later.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CanAnchorBoatHereIgnorePlayers",
    "hash": "0x24F4121D07579880",
    "code": "-- CAN_ANCHOR_BOAT_HERE_IGNORE_PLAYERS\nlocal retval --[[ boolean ]] =\n\tCanAnchorBoatHereIgnorePlayers(\n\t\tboat --[[ Vehicle ]]\n\t)",
    "parameters": [
      "boat: \n\nThe boat to check."
    ],
    "returns": [
      "Returns true if the boat can be safely anchored at its current position (ignoring players on the boat), false otherwise."
    ],
    "description": "Parameters:\n\nboat: \n\nThe boat to check.\n\nReturns:\n\nReturns true if the boat can be safely anchored at its current position (ignoring players on the boat), false otherwise.\n\nChecks if a boat can be anchored at its present position, ignoring any players standing on the boat.\n\nNativeDB Introduced: v678"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CanCargobobPickUpEntity",
    "hash": "0x2C1D8B3B19E517CC",
    "code": "-- CAN_CARGOBOB_PICK_UP_ENTITY\nlocal retval --[[ boolean ]] =\n\tCanCargobobPickUpEntity(\n\t\tcargobob --[[ Vehicle ]], \n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "cargobob: \n\nThe Cargobob helicopter to be checked.",
      "entity: \n\nThe entity to be checked for pick-up."
    ],
    "returns": [
      "Returns true if the Cargobob can pick up the specified entity, false otherwise."
    ],
    "description": "Parameters:\n\ncargobob: \n\nThe Cargobob helicopter to be checked.\n\nentity: \n\nThe entity to be checked for pick-up.\n\nReturns:\n\nReturns true if the Cargobob can pick up the specified entity, false otherwise.\n\nDetermines whether the specified Cargobob can pick up a given entity."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CanShuffleSeat",
    "hash": "0x30785D90C956BF35",
    "code": "-- CAN_SHUFFLE_SEAT\nlocal retval --[[ boolean ]] =\n\tCanShuffleSeat(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ClearLastDrivenVehicle",
    "hash": "0xE01903C47C7AC89E",
    "code": "-- CLEAR_LAST_DRIVEN_VEHICLE\nClearLastDrivenVehicle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ClearNitrous",
    "hash": "0xC889AE921400E1ED",
    "code": "-- CLEAR_NITROUS\nClearNitrous(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle whose nitrous system needs to be cleared."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle whose nitrous system needs to be cleared.\n\nNativeDB Introduced: 3095\n\nResets or clears the nitrous system for a specified vehicle. You can check if a vehicle has nitrous with IS_NITROUS_ACTIVE"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ClearVehicleCustomPrimaryColour",
    "hash": "0x55E1D2758F34E437",
    "code": "-- CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR\nClearVehicleCustomPrimaryColour(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ClearVehicleCustomSecondaryColour",
    "hash": "0x5FFBDEEC3E8E2009",
    "code": "-- CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR\nClearVehicleCustomSecondaryColour(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ClearVehicleGeneratorAreaOfInterest",
    "hash": "0x0A436B8643716D14",
    "code": "-- CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST\nClearVehicleGeneratorAreaOfInterest()",
    "parameters": [],
    "returns": [],
    "description": "Removes the cargen area of interest and resumes normal cargen spawning.\n\nYou can set the area of interest with SET_VEHICLE_GENERATOR_AREA_OF_INTEREST"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ClearVehiclePhoneExplosiveDevice",
    "hash": "0xAA3F739ABDDCF21F",
    "code": "-- _CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE\nClearVehiclePhoneExplosiveDevice()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ClearVehicleRouteHistory",
    "hash": "0x6D6AF961B72728AE",
    "code": "-- CLEAR_VEHICLE_ROUTE_HISTORY\nClearVehicleRouteHistory(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CloseBombBayDoors",
    "hash": "0x3556041742A0DC74",
    "code": "-- CLOSE_BOMB_BAY_DOORS\nCloseBombBayDoors(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ControlLandingGear",
    "hash": "0xCFC8BE9A5E1FE575",
    "code": "-- CONTROL_LANDING_GEAR\nControlLandingGear(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Works for vehicles with a retractable landing gear  \nlanding gear states:  \n0: Deployed  \n1: Closing  \n2: Opening  \n3: Retracted"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CopyVehicleDamages",
    "hash": "0xE44A982368A4AF23",
    "code": "-- COPY_VEHICLE_DAMAGES\nCopyVehicleDamages(\n\tsourceVehicle --[[ Vehicle ]], \n\ttargetVehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "sourceVehicle: \n\nThe source to copy the vehicle damage.",
      "targetVehicle: \n\nThe target to paste the vehicle damage."
    ],
    "returns": [],
    "description": "Parameters:\n\nsourceVehicle: \n\nThe source to copy the vehicle damage.\n\ntargetVehicle: \n\nThe target to paste the vehicle damage.\n\nCopies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CreateMissionTrain",
    "hash": "0x63C6CCA8E68AE8C8",
    "code": "-- CREATE_MISSION_TRAIN\nlocal retval --[[ Vehicle ]] =\n\tCreateMissionTrain(\n\t\tvariation --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tdirection --[[ boolean ]]\n\t)",
    "parameters": [
      "variation: \n\nThe variation id, these can range from 0 to 26 as of build 2802 (previously 0-25 in build 2372 and 0-24 before that).",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "direction: \n\nThe direction in which the train will go (true or false)"
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the train, or 0 if the train failed to be created."
    ],
    "description": "Parameters:\n\nvariation: \n\nThe variation id, these can range from 0 to 26 as of build 2802 (previously 0-25 in build 2372 and 0-24 before that).\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\ndirection: \n\nThe direction in which the train will go (true or false)\n\nReturns:\n\nA script handle (fwScriptGuid index) for the train, or 0 if the train failed to be created.\n\nTrain models must be requested before use. See trains.xml (located in Grand Theft Auto V\\update\\update.rpf\\common\\data\\levels\\gta5\\trains.xml) for freight and metro variations.\n\nModel names to request can be found by searching model_name in the file.\n\nThe Lua usage example provided down below has been provided in such way so users can test each and every train variation.\n\nNewly added parameters (seen in 2372 build)\nNativeDB Added Parameter 6: BOOL isNetwork\nNativeDB Added Parameter 7: BOOL netMissionEntity\n\nisNetwork: Whether to create a network object for the train. If false, the train exists only locally.\nnetMissionEntity: Whether to register the train as pinned to the script host in the R* network model.\nTrain Models:\nfreight\nCarriage Models:\nfreightcar\nfreightcar2 (Added v2372)\nfreightcont1\nfreightcont2\nfreightgrain\nmetrotrain\ntankercar\nSome train variations (default from trains.xml as of build 2372)\nVery long train and freight variation.\nFreight train only.\nDouble metro train (with both models flipped opposite to each other). This used to be 25 before the 2802 build, it also used to be 24 before the 2372 build."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CreatePickUpRopeForCargobob",
    "hash": "0x7BEB0C7A235F6F3B",
    "code": "-- CREATE_PICK_UP_ROPE_FOR_CARGOBOB\nCreatePickUpRopeForCargobob(\n\tcargobob --[[ Vehicle ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Drops the Hook/Magnet on a cargobob\n\nenum eCargobobHook  \n{  \n\tCARGOBOB_HOOK = 0,  \n\tCARGOBOB_MAGNET = 1,  \n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CreateScriptVehicleGenerator",
    "hash": "0x9DEF883114668116",
    "code": "-- CREATE_SCRIPT_VEHICLE_GENERATOR\nlocal retval --[[ integer ]] =\n\tCreateScriptVehicleGenerator(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\theading --[[ number ]], \n\t\tp4 --[[ number ]], \n\t\tp5 --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tp7 --[[ integer ]], \n\t\tp8 --[[ integer ]], \n\t\tp9 --[[ integer ]], \n\t\tp10 --[[ integer ]], \n\t\tp11 --[[ boolean ]], \n\t\tp12 --[[ boolean ]], \n\t\tp13 --[[ boolean ]], \n\t\tp14 --[[ boolean ]], \n\t\tp15 --[[ boolean ]], \n\t\tp16 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.  \nParameters:  \na/w/s - Generator position  \nheading - Generator heading  \np4 - Unknown (always 5.0)  \np5 - Unknown (always 3.0)  \nmodelHash - Vehicle model hash  \np7/8/9/10 - Unknown (always -1)  \np11 - Unknown (usually TRUE, only one instance of FALSE)  \np12/13 - Unknown (always FALSE)  \np14 - Unknown (usally FALSE, only two instances of TRUE)  \np15 - Unknown (always TRUE)  \np16 - Unknown (always -1)  \nVector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);\tCREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY(\"adder\"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "CreateVehicle",
    "hash": "0xAF35D0D2583051B0",
    "code": "-- CREATE_VEHICLE\nlocal retval --[[ Vehicle ]] =\n\tCreateVehicle(\n\t\tmodelHash --[[ Hash ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\theading --[[ number ]], \n\t\tisNetwork --[[ boolean ]], \n\t\tnetMissionEntity --[[ boolean ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model of vehicle to spawn.",
      "x: \n\nSpawn coordinate X component.",
      "y: \n\nSpawn coordinate Y component.",
      "z: \n\nSpawn coordinate Z component.",
      "heading: \n\nHeading to face towards, in degrees.",
      "isNetwork: \n\nWhether to create a network object for the vehicle. If false, the vehicle exists only locally.",
      "netMissionEntity: \n\nWhether to register the vehicle as pinned to the script host in the R* network model."
    ],
    "returns": [
      "A script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model of vehicle to spawn.\n\nx: \n\nSpawn coordinate X component.\n\ny: \n\nSpawn coordinate Y component.\n\nz: \n\nSpawn coordinate Z component.\n\nheading: \n\nHeading to face towards, in degrees.\n\nisNetwork: \n\nWhether to create a network object for the vehicle. If false, the vehicle exists only locally.\n\nnetMissionEntity: \n\nWhether to register the vehicle as pinned to the script host in the R* network model.\n\nReturns:\n\nA script handle (fwScriptGuid index) for the vehicle, or 0 if the vehicle failed to be created.\n\nCreates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).\n\nNativeDB Added Parameter 8: BOOL p7"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DeleteAllTrains",
    "hash": "0x736A718577F39C7D",
    "code": "-- DELETE_ALL_TRAINS\nDeleteAllTrains()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DeleteMissionTrain",
    "hash": "0x5B76B14AE875C795",
    "code": "-- DELETE_MISSION_TRAIN\nlocal train --[[ Vehicle ]] =\n\tDeleteMissionTrain()",
    "parameters": [],
    "returns": [],
    "description": "Used to delete mission trains created with CREATE_MISSION_TRAIN."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DeleteScriptVehicleGenerator",
    "hash": "0x22102C9ABFCF125D",
    "code": "-- DELETE_SCRIPT_VEHICLE_GENERATOR\nDeleteScriptVehicleGenerator(\n\tvehicleGenerator --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Removes a scripted vehicle generator."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DeleteVehicle",
    "hash": "0xEA386986E786A54F",
    "code": "-- DELETE_VEHICLE\nlocal vehicle --[[ Vehicle ]] =\n\tDeleteVehicle()",
    "parameters": [],
    "returns": [],
    "description": "Deletes a vehicle.  \nThe vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);  \neg how to use:  \nSET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);  \nDELETE_VEHICLE(&vehicle);  \nDeletes the specified vehicle, then sets the handle pointed to by the pointer to NULL."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetachContainerFromHandlerFrame",
    "hash": "0x7C0043FDFF6436BC",
    "code": "-- DETACH_CONTAINER_FROM_HANDLER_FRAME\nDetachContainerFromHandlerFrame(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetachEntityFromCargobob",
    "hash": "0xAF03011701811146",
    "code": "-- DETACH_ENTITY_FROM_CARGOBOB\nlocal retval --[[ Any ]] =\n\tDetachEntityFromCargobob(\n\t\tvehicle --[[ Vehicle ]], \n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe Cargobob helicopter.",
      "entity: \n\nThe entity to be detached."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe Cargobob helicopter.\n\nentity: \n\nThe entity to be detached.\n\nDetaches the specified entity currently being carried by a Cargobob."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetachVehicleFromAnyCargobob",
    "hash": "0xADF7BE450512C12F",
    "code": "-- DETACH_VEHICLE_FROM_ANY_CARGOBOB\nlocal retval --[[ boolean ]] =\n\tDetachVehicleFromAnyCargobob(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetachVehicleFromAnyTowTruck",
    "hash": "0xD0E9CE05A1E68CD8",
    "code": "-- DETACH_VEHICLE_FROM_ANY_TOW_TRUCK\nlocal retval --[[ boolean ]] =\n\tDetachVehicleFromAnyTowTruck(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetachVehicleFromCargobob",
    "hash": "0x0E21D3DF1051399D",
    "code": "-- DETACH_VEHICLE_FROM_CARGOBOB\nDetachVehicleFromCargobob(\n\tcargobob --[[ Vehicle ]], \n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetachVehicleFromTowTruck",
    "hash": "0xC2DB6B6708350ED8",
    "code": "-- DETACH_VEHICLE_FROM_TOW_TRUCK\nDetachVehicleFromTowTruck(\n\ttowTruck --[[ Vehicle ]], \n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetachVehicleFromTrailer",
    "hash": "0x90532EDF0D2BDD86",
    "code": "-- DETACH_VEHICLE_FROM_TRAILER\nDetachVehicleFromTrailer(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DetonateVehiclePhoneExplosiveDevice",
    "hash": "0xEF49CF0270307CBE",
    "code": "-- DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE\nDetonateVehiclePhoneExplosiveDevice()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DisableIndividualPlanePropeller",
    "hash": "0x500873A45724C863",
    "code": "-- DISABLE_INDIVIDUAL_PLANE_PROPELLER\nDisableIndividualPlanePropeller(\n\tvehicle --[[ Vehicle ]], \n\tpropeller --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe propeller plane",
      "propeller: \n\nThe propeller index to disable (starts at 0)."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe propeller plane\n\npropeller: \n\nThe propeller index to disable (starts at 0).\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DisablePlaneAileron",
    "hash": "0x23428FC53C60919C",
    "code": "-- DISABLE_PLANE_AILERON\nDisablePlaneAileron(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DisableVehicleNeonLights",
    "hash": "0x83F813570FF519DE",
    "code": "-- _DISABLE_VEHICLE_NEON_LIGHTS\nDisableVehicleNeonLights(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DisableVehicleTurretMovementThisFrame",
    "hash": "0x32CAEDF24A583345",
    "code": "-- _DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME\nDisableVehicleTurretMovementThisFrame(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DisableVehicleWeapon",
    "hash": "0xF4FC6A6F67D8D856",
    "code": "-- DISABLE_VEHICLE_WEAPON\nDisableVehicleWeapon(\n\tdisabled --[[ boolean ]], \n\tweaponHash --[[ Hash ]], \n\tvehicle --[[ Vehicle ]], \n\towner --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "how does this work?"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DisableVehicleWorldCollision",
    "hash": "0x75627043C6AA90AD",
    "code": "-- _DISABLE_VEHICLE_WORLD_COLLISION\nDisableVehicleWorldCollision(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nthe vehicle to disable world collisions for"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nthe vehicle to disable world collisions for\n\nDisables collision for this vehicle (maybe it also supports other entities, not sure). Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.\n\nExample video\n\nNot sure if there is a native (and if so, which one) that resets the collisions."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesCargobobHavePickUpRope",
    "hash": "0x1821D91AD4B56108",
    "code": "-- DOES_CARGOBOB_HAVE_PICK_UP_ROPE\nlocal retval --[[ boolean ]] =\n\tDoesCargobobHavePickUpRope(\n\t\tcargobob --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true only when the hook is active, will return false if the magnet is active"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesCargobobHavePickupMagnet",
    "hash": "0x6E08BF5B3722BAC9",
    "code": "-- DOES_CARGOBOB_HAVE_PICKUP_MAGNET\nlocal retval --[[ boolean ]] =\n\tDoesCargobobHavePickupMagnet(\n\t\tcargobob --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true only when the magnet is active, will return false if the hook is active"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesExtraExist",
    "hash": "0x1262D55792428154",
    "code": "-- DOES_EXTRA_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesExtraExist(\n\t\tvehicle --[[ Vehicle ]], \n\t\textraId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks via CVehicleModelInfo"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesScriptVehicleGeneratorExist",
    "hash": "0xF6086BC836400876",
    "code": "-- DOES_SCRIPT_VEHICLE_GENERATOR_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesScriptVehicleGeneratorExist(\n\t\tvehicleGenerator --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleAllowRappel",
    "hash": "0x4E417C547182C84D",
    "code": "-- _DOES_VEHICLE_ALLOW_RAPPEL\nlocal retval --[[ boolean ]] =\n\tDoesVehicleAllowRappel(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleExistWithDecorator",
    "hash": "0x956B409B984D9BF7",
    "code": "-- DOES_VEHICLE_EXIST_WITH_DECORATOR\nlocal retval --[[ boolean ]] =\n\tDoesVehicleExistWithDecorator(\n\t\tdecorator --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleHaveLandingGear",
    "hash": "0xE43701C36CAFF1A4",
    "code": "-- _DOES_VEHICLE_HAVE_LANDING_GEAR\nlocal retval --[[ boolean ]] =\n\tDoesVehicleHaveLandingGear(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleHaveRoof",
    "hash": "0x8AC862B0B32C5B80",
    "code": "-- DOES_VEHICLE_HAVE_ROOF\nlocal retval --[[ boolean ]] =\n\tDoesVehicleHaveRoof(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check for a roof presence."
    ],
    "returns": [
      "Returns true if the vehicle has a roof, false otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check for a roof presence.\n\nReturns:\n\nReturns true if the vehicle has a roof, false otherwise.\n\nDetermines whether a specific vehicle is equipped with a roof.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleHaveSearchlight",
    "hash": "0x99015ED7DBEA5113",
    "code": "-- DOES_VEHICLE_HAVE_SEARCHLIGHT\nlocal retval --[[ boolean ]] =\n\tDoesVehicleHaveSearchlight(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check for the presence of a searchlight."
    ],
    "returns": [
      "Returns true if the vehicle has a searchlight, false otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check for the presence of a searchlight.\n\nReturns:\n\nReturns true if the vehicle has a searchlight, false otherwise.\n\nDetermines whether the specified vehicle is equipped with a searchlight.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleHaveStuckVehicleCheck",
    "hash": "0x57E4C39DE5EE8470",
    "code": "-- DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK\nlocal retval --[[ boolean ]] =\n\tDoesVehicleHaveStuckVehicleCheck(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Maximum amount of vehicles with vehicle stuck check appears to be 16."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleHaveWeapons",
    "hash": "0x25ECB9F8017D98E0",
    "code": "-- DOES_VEHICLE_HAVE_WEAPONS\nlocal retval --[[ boolean ]] =\n\tDoesVehicleHaveWeapons(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "DoesVehicleTyreExist",
    "hash": "0x534E36D4DB9ECC5D",
    "code": "-- _DOES_VEHICLE_TYRE_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesVehicleTyreExist(\n\t\tvehicle --[[ Vehicle ]], \n\t\ttyreIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if vehicle tyre at index exists. Also returns false if tyre was removed.\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "EjectJb700Roof",
    "hash": "0xE38CB9D7D39FDBCC",
    "code": "-- _EJECT_JB700_ROOF\nEjectJb700Roof(\n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "EnableAircraftObstacleAvoidance",
    "hash": "0x8AA9180DE2FEDD45",
    "code": "-- _ENABLE_AIRCRAFT_OBSTACLE_AVOIDANCE\nEnableAircraftObstacleAvoidance(\n\tvehicle --[[ Vehicle ]], \n\tavoidObstacles --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle to toggle obstacle avoidance for.",
      "avoidObstacles: \n\ntrue / false to enable/disable heightmap obstacle avoidance respectively!"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle to toggle obstacle avoidance for.\n\navoidObstacles: \n\ntrue / false to enable/disable heightmap obstacle avoidance respectively!\n\nWill disable a plane or a helicopter's need to swerve around object in its heightmap when using TASK_PLANE_MISSION or other AI / Pilot behavior. Will ensure plane flys directly to it's destination or die trying! This native does NOT need to be called every frame, but instead, just called once on the vehicle (NOT THE PED) you're trying to disable avoidance for!"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "EnableIndividualPlanePropeller",
    "hash": "0xDC05D2777F855F44",
    "code": "-- _ENABLE_INDIVIDUAL_PLANE_PROPELLER\nEnableIndividualPlanePropeller(\n\tplane --[[ Vehicle ]], \n\tpropeller --[[ integer ]]\n)",
    "parameters": [
      "plane: \n\nThe propeller plane.",
      "propeller: \n\nThe propeller index to enable (starts at 0)."
    ],
    "returns": [],
    "description": "Parameters:\n\nplane: \n\nThe propeller plane.\n\npropeller: \n\nThe propeller index to enable (starts at 0).\n\nEnables individual propeller on a propeller plane. This native is the inverse of DISABLE_INDIVIDUAL_PLANE_PROPELLER.\n\nNativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ExplodeVehicle",
    "hash": "0xBA71116ADF5B514C",
    "code": "-- EXPLODE_VEHICLE\nExplodeVehicle(\n\tvehicle --[[ Vehicle ]], \n\tisAudible --[[ boolean ]], \n\tisInvisible --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Explodes a selected vehicle.  \nVehicle vehicle = Vehicle you want to explode.  \nBOOL isAudible = If explosion makes a sound.  \nBOOL isInvisible = If the explosion is invisible or not.  \nFirst BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ExplodeVehicleInCutscene",
    "hash": "0x786A4EB67B01BF0B",
    "code": "-- EXPLODE_VEHICLE_IN_CUTSCENE\nExplodeVehicleInCutscene(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "FindRandomPointInSpace",
    "hash": "0x8DC9675797123522",
    "code": "-- _FIND_RANDOM_POINT_IN_SPACE\nlocal retval --[[ vector3 ]] =\n\tFindRandomPointInSpace(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Native is significantly more complicated than simply generating a random vector & length.\n\nThe 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport___IsSphereVisible.\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "FindVehicleCarryingThisEntity",
    "hash": "0x375E7FC44F21C8AB",
    "code": "-- _FIND_VEHICLE_CARRYING_THIS_ENTITY\nlocal retval --[[ Vehicle ]] =\n\tFindVehicleCarryingThisEntity(\n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Finds the vehicle that is carrying this entity with a handler frame.\nThe model of the entity must be prop_contr_03b_ld or the function will return 0."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "FixVehicleWindow",
    "hash": "0x772282EBEB95E682",
    "code": "-- FIX_VEHICLE_WINDOW\nFixVehicleWindow(\n\tvehicle --[[ Vehicle ]], \n\twindowIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eWindowId declared in IS_VEHICLE_WINDOW_INTACT.\n\nThis function is coded to not work on vehicles of type: CBike, Bmx, CBoat, CTrain, and CSubmarine."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ForcePlaybackRecordedVehicleUpdate",
    "hash": "0x1F2E4E06DEA8992B",
    "code": "-- FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE\nForcePlaybackRecordedVehicleUpdate(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ForceSubmarineNeurtalBuoyancy",
    "hash": "0xC67DB108A9ADE3BE",
    "code": "-- FORCE_SUBMARINE_NEURTAL_BUOYANCY\nForceSubmarineNeurtalBuoyancy(\n\tsubmarine --[[ Vehicle ]], \n\ttime --[[ integer ]]\n)",
    "parameters": [
      "submarine: \n\nThe submarine vehicle to apply neutral buoyancy to.",
      "time: \n\nThe duration in milliseconds for which to maintain neutral buoyancy."
    ],
    "returns": [],
    "description": "Parameters:\n\nsubmarine: \n\nThe submarine vehicle to apply neutral buoyancy to.\n\ntime: \n\nThe duration in milliseconds for which to maintain neutral buoyancy.\n\nForces a submarine to maintain neutral buoyancy for a specified duration, preventing it from rising when unoccupied or without a driver.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ForceSubmarineSurfaceMode",
    "hash": "0x33506883545AC0DF",
    "code": "-- FORCE_SUBMARINE_SURFACE_MODE\nForceSubmarineSurfaceMode(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "FullyChargeNitrous",
    "hash": "0x1A2BCC8C636F9226",
    "code": "-- FULLY_CHARGE_NITROUS\nFullyChargeNitrous(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle whose nitrous system is to be fully recharged."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle whose nitrous system is to be fully recharged.\n\nNativeDB Introduced: v3095\n\nRecharges the nitrous system of the specified vehicle to its maximum capacity. This action sets the nitrous charge duration to the maximum limit defined by previous settings applied through SET_OVERRIDE_NITROUS_LEVEL."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetAllVehicles",
    "hash": "0x9B8E1BF04B51F2E8",
    "code": "-- GET_ALL_VEHICLES\nlocal retval --[[ integer ]], vehArray --[[ integer ]] =\n\tGetAllVehicles()",
    "parameters": [],
    "returns": [
      "Returns all vehicles in the vehicle game pool."
    ],
    "description": "Returns:\n\nReturns all vehicles in the vehicle game pool.\n\nFor FiveM, use GET_GAME_POOL."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetBoatBoomPositionRatio",
    "hash": "0x6636C535F6CC2725",
    "code": "-- GET_BOAT_BOOM_POSITION_RATIO\nlocal retval --[[ number ]] =\n\tGetBoatBoomPositionRatio(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetBoatBoomPositionRatio_2",
    "hash": "0xC1F981A6F74F0C23",
    "code": "-- _GET_BOAT_BOOM_POSITION_RATIO_2\nGetBoatBoomPositionRatio_2(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Same call as VEHICLE::_0x0F3B4D4E43177236"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetBoatBoomPositionRatio_3",
    "hash": "0x0F3B4D4E43177236",
    "code": "-- _GET_BOAT_BOOM_POSITION_RATIO_3\nGetBoatBoomPositionRatio_3(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetBoatVehicleModelAgility",
    "hash": "0x5AA3F878A178C4FC",
    "code": "-- GET_BOAT_VEHICLE_MODEL_AGILITY\nlocal retval --[[ number ]] =\n\tGetBoatVehicleModelAgility(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model hash of the boat."
    ],
    "returns": [
      "Returns the agility value of the specified boat as a float number."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model hash of the boat.\n\nReturns:\n\nReturns the agility value of the specified boat as a float number.\n\nRetrieves the agility for a specific boat model, including any vehicle mods. Unlike other vehicles where Rockstar Games typically assess performance based on traction, boats use agility as a measure. This static value is distinct from the traction metrics used for other vehicle types.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetCanVehicleJump",
    "hash": "0x9078C0C5EF8C19E9",
    "code": "-- _GET_CAN_VEHICLE_JUMP\nlocal retval --[[ boolean ]] =\n\tGetCanVehicleJump(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if the vehicle has the FLAG_JUMPING_CAR flag set."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetCargobobHookPosition",
    "hash": "0xCBDB9B923CACC92D",
    "code": "-- _GET_CARGOBOB_HOOK_POSITION\nlocal retval --[[ vector3 ]] =\n\tGetCargobobHookPosition(\n\t\tcargobob --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the position of the cargobob hook, in world coords."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetClosestVehicle",
    "hash": "0xF73EB622C4F1689B",
    "code": "-- GET_CLOSEST_VEHICLE\nlocal retval --[[ Vehicle ]] =\n\tGetClosestVehicle(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Example usage  \nVEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)   \nx, y, z: Position to get closest vehicle to.  \nradius: Max radius to get a vehicle.  \nmodelHash: Limit to vehicles with this model. 0 for any.  \nflags: The bitwise flags altering the function's behaviour.  \nDoes not return police cars or helicopters.  \nIt seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason  \nOnly returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.   \nThese flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.  \nConverted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles  \nConversion of found flags to binary: pastebin.com/kghNFkRi  \nAt exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.   \nIt's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT  \n-------------------------------------------------------------------------  \nConclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h\nUse flag 127 to return police cars"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetConvertibleRoofState",
    "hash": "0xF8C397922FC03F41",
    "code": "-- GET_CONVERTIBLE_ROOF_STATE\nlocal retval --[[ integer ]] =\n\tGetConvertibleRoofState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nVehicle to get the state of"
    ],
    "returns": [
      "Returns the current roof state, refer to eRoofState"
    ],
    "description": "Parameters:\n\nvehicle: \n\nVehicle to get the state of\n\nReturns:\n\nReturns the current roof state, refer to eRoofState\n\nReturns the convertible state of the specified vehicle.\n\nenum eRoofState {\n    RAISED = 0,\n    LOWERING = 1,\n    LOWERED = 2,\n    RAISING = 3,\n    CLOSING_BOOT = 4,\n    ROOF_STUCK_RAISED = 5,\n    ROOF_STUCK_LOWERED = 6\n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetCurrentPlaybackForVehicle",
    "hash": "0x42BC05C27A946054",
    "code": "-- GET_CURRENT_PLAYBACK_FOR_VEHICLE\nlocal retval --[[ integer ]] =\n\tGetCurrentPlaybackForVehicle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetDisplayNameFromVehicleModel",
    "hash": "0xB215AAC32D25D019",
    "code": "-- GET_DISPLAY_NAME_FROM_VEHICLE_MODEL\nlocal retval --[[ string ]] =\n\tGetDisplayNameFromVehicleModel(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "modelHash: \n\nA vehicle model to check."
    ],
    "returns": [
      "The display name for the vehicle, or 'CARNOTFOUND' if invalid."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nA vehicle model to check.\n\nReturns:\n\nThe display name for the vehicle, or 'CARNOTFOUND' if invalid.\n\nReturns the display name/text label (gameName in vehicles.meta) for the specified vehicle model."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetDoesVehicleHaveTombstone",
    "hash": "0x71AFB258CCED3A27",
    "code": "-- _GET_DOES_VEHICLE_HAVE_TOMBSTONE\nlocal retval --[[ boolean ]] =\n\tGetDoesVehicleHaveTombstone(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetDriftTyresEnabled",
    "hash": "0x2F5A72430E78C8D3",
    "code": "-- _GET_DRIFT_TYRES_ENABLED\nlocal retval --[[ boolean ]] =\n\tGetDriftTyresEnabled(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetEntityAttachedToCargobob",
    "hash": "0x99093F60746708CA",
    "code": "-- _GET_ENTITY_ATTACHED_TO_CARGOBOB\nlocal retval --[[ Entity ]] =\n\tGetEntityAttachedToCargobob(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetEntityAttachedToTowTruck",
    "hash": "0xEFEA18DCF10F8F75",
    "code": "-- GET_ENTITY_ATTACHED_TO_TOW_TRUCK\nlocal retval --[[ Entity ]] =\n\tGetEntityAttachedToTowTruck(\n\t\ttowTruck --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetEntryPositionOfDoor",
    "hash": "0xC0572928C0ABFDA3",
    "code": "-- _GET_ENTRY_POSITION_OF_DOOR\nlocal retval --[[ vector3 ]] =\n\tGetEntryPositionOfDoor(\n\t\tvehicle --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetHasRetractableWheels",
    "hash": "0xDCA174A42133F08C",
    "code": "-- _GET_HAS_RETRACTABLE_WHEELS\nlocal retval --[[ boolean ]] =\n\tGetHasRetractableWheels(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetHasRocketBoost",
    "hash": "0x36D782F68B309BDA",
    "code": "-- _GET_HAS_ROCKET_BOOST\nlocal retval --[[ boolean ]] =\n\tGetHasRocketBoost(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetHeliMainRotorHealth",
    "hash": "0xE4CB7541F413D2C5",
    "code": "-- GET_HELI_MAIN_ROTOR_HEALTH\nlocal retval --[[ number ]] =\n\tGetHeliMainRotorHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Max 1000.  \nAt 0 the main rotor will stall."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetHeliTailBoomHealth",
    "hash": "0xAC51915D27E4A5F7",
    "code": "-- GET_HELI_TAIL_BOOM_HEALTH\nlocal retval --[[ number ]] =\n\tGetHeliTailBoomHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Max 1000.\nAt -100 both helicopter rotors will stall."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetHeliTailRotorHealth",
    "hash": "0xAE8CE82A4219AC8C",
    "code": "-- GET_HELI_TAIL_ROTOR_HEALTH\nlocal retval --[[ number ]] =\n\tGetHeliTailRotorHealth(\n\t\theli --[[ Vehicle ]]\n\t)",
    "parameters": [
      "heli: \n\nHelicopter for which you want to get the rotor health."
    ],
    "returns": [
      "Returns the health of the rear rotor of the helicopter, not the tail rotor as the name suggests. The maximum value is 1000. At 0, the tail rotor will stall."
    ],
    "description": "Parameters:\n\nheli: \n\nHelicopter for which you want to get the rotor health.\n\nReturns:\n\nReturns the health of the rear rotor of the helicopter, not the tail rotor as the name suggests. The maximum value is 1000. At 0, the tail rotor will stall.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetHydraulicWheelValue",
    "hash": "0x0BB5CBDDD0F25AE3",
    "code": "-- _GET_HYDRAULIC_WHEEL_VALUE\nlocal retval --[[ number ]] =\n\tGetHydraulicWheelValue(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsBoatCapsized",
    "hash": "0xBA91D045575699AD",
    "code": "-- GET_IS_BOAT_CAPSIZED\nlocal retval --[[ boolean ]] =\n\tGetIsBoatCapsized(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check. This should be a boat-type vehicle."
    ],
    "returns": [
      "Returns true if the specified boat is capsized, false otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check. This should be a boat-type vehicle.\n\nReturns:\n\nReturns true if the specified boat is capsized, false otherwise.\n\nChecks whether the specified boat vehicle is capsized, meaning it has overturned or is upside down in the water."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsDoorValid",
    "hash": "0x645F4B6E8499F632",
    "code": "-- _GET_IS_DOOR_VALID\nlocal retval --[[ boolean ]] =\n\tGetIsDoorValid(\n\t\tvehicle --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsLeftVehicleHeadlightDamaged",
    "hash": "0x5EF77C9ADD3B11A3",
    "code": "-- GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED\nlocal retval --[[ boolean ]] =\n\tGetIsLeftVehicleHeadlightDamaged(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "From the driver's perspective, is the left headlight broken."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsRightVehicleHeadlightDamaged",
    "hash": "0xA7ECB73355EB2F20",
    "code": "-- GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED\nlocal retval --[[ boolean ]] =\n\tGetIsRightVehicleHeadlightDamaged(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "From the driver's perspective, is the right headlight broken."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsVehicleElectric",
    "hash": "0x1FCB07FE230B6639",
    "code": "-- _GET_IS_VEHICLE_ELECTRIC\nlocal retval --[[ boolean ]] =\n\tGetIsVehicleElectric(\n\t\tvehicleModel --[[ Hash ]]\n\t)",
    "parameters": [
      "vehicleModel: \n\nThe hash of the vehicle model to check."
    ],
    "returns": [
      "Returns true if the vehicle is electric or false otherwise."
    ],
    "description": "Parameters:\n\nvehicleModel: \n\nThe hash of the vehicle model to check.\n\nReturns:\n\nReturns true if the vehicle is electric or false otherwise.\n\nChecks if the vehicle is electric.\n\nNativeDB Introduced: v3258"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsVehicleEmpDisabled",
    "hash": "0x0506ED94363AD905",
    "code": "-- _GET_IS_VEHICLE_EMP_DISABLED\nlocal retval --[[ boolean ]] =\n\tGetIsVehicleEmpDisabled(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether this vehicle is currently disabled by an EMP mine.\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsVehicleEngineRunning",
    "hash": "0xAE31E7DF9B5B132E",
    "code": "-- GET_IS_VEHICLE_ENGINE_RUNNING\nlocal retval --[[ boolean ]] =\n\tGetIsVehicleEngineRunning(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true when in a vehicle, false whilst entering/exiting."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsVehiclePrimaryColourCustom",
    "hash": "0xF095C0405307B21B",
    "code": "-- GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM\nlocal retval --[[ boolean ]] =\n\tGetIsVehiclePrimaryColourCustom(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsVehicleSecondaryColourCustom",
    "hash": "0x910A32E7AAD2656C",
    "code": "-- GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM\nlocal retval --[[ boolean ]] =\n\tGetIsVehicleSecondaryColourCustom(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Check if Vehicle Secondary is avaliable for customize"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsVehicleShuntBoostActive",
    "hash": "0xA2459F72C14E2E8D",
    "code": "-- _GET_IS_VEHICLE_SHUNT_BOOST_ACTIVE\nlocal retval --[[ boolean ]] =\n\tGetIsVehicleShuntBoostActive(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetIsWheelsLoweredStateActive",
    "hash": "0x1DA0DA9CB3F0C8BF",
    "code": "-- _GET_IS_WHEELS_LOWERED_STATE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tGetIsWheelsLoweredStateActive(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetLandingGearState",
    "hash": "0x9B0F3DCA3DB0F4CD",
    "code": "-- GET_LANDING_GEAR_STATE\nlocal retval --[[ integer ]] =\n\tGetLandingGearState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "The current state of the vehicles landing gear."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nThe current state of the vehicles landing gear.\n\nLanding gear states:  \n0: Deployed  \n1: Closing (Retracting)\n3: Opening (Deploying)\n4: Retracted  \n5: Broken\n\n\nLanding gear state 2 is never used."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetLastDrivenVehicle",
    "hash": "0xB2D06FAEDE65B577",
    "code": "-- GET_LAST_DRIVEN_VEHICLE\nlocal retval --[[ Vehicle ]] =\n\tGetLastDrivenVehicle()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetLastPedInVehicleSeat",
    "hash": "0x83F969AA1EE2A664",
    "code": "-- GET_LAST_PED_IN_VEHICLE_SEAT\nlocal retval --[[ Ped ]] =\n\tGetLastPedInVehicleSeat(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to get the ped for.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to get the ped for.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetLastRammedVehicle",
    "hash": "0x04F2FA6E234162F7",
    "code": "-- _GET_LAST_RAMMED_VEHICLE\nlocal retval --[[ Vehicle ]] =\n\tGetLastRammedVehicle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns last vehicle that was rammed by the given vehicle using the shunt boost.\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetLiveryName",
    "hash": "0xB4C7A93837C91A1F",
    "code": "-- GET_LIVERY_NAME\nlocal retval --[[ string ]] =\n\tGetLiveryName(\n\t\tvehicle --[[ Vehicle ]], \n\t\tliveryIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Second Param = LiveryIndex  \nexample   \nint count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);  \nfor (int i = 0; i < count; i++)    \n\t{  \nchar* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);  \n\t}  \nthis example will work fine to fetch all names   \nfor example for Sanchez we get   \nSANC_LV1  \nSANC_LV2  \nSANC_LV3  \nSANC_LV4  \nSANC_LV5  \nUse _GET_LABEL_TEXT, to get the localized livery name.  \n\n\nNOTE: You may need to set the vehicle's modKit to 0 by using this function SET_VEHICLE_MOD_KIT before getting the name, otherwise this native may return NULL."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetMakeNameFromVehicleModel",
    "hash": "0xF7AF4F159FF99F97",
    "code": "-- GET_MAKE_NAME_FROM_VEHICLE_MODEL\nlocal retval --[[ string ]] =\n\tGetMakeNameFromVehicleModel(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [
      "modelHash: \n\nThe model hash of the vehicle."
    ],
    "returns": [
      "Returns the display label of the manufacturer if the vehicle model is recognized, or \"CARNOTFOUND\" if the hash does not correspond to any known vehicle model."
    ],
    "description": "Parameters:\n\nmodelHash: \n\nThe model hash of the vehicle.\n\nReturns:\n\nReturns the display label of the manufacturer if the vehicle model is recognized, or \"CARNOTFOUND\" if the hash does not correspond to any known vehicle model.\n\nRetrieves the manufacturer's name for a specified vehicle.\n\nNativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetModSlotName",
    "hash": "0x51F0FEB9F6AE98C0",
    "code": "-- GET_MOD_SLOT_NAME\nlocal retval --[[ string ]] =\n\tGetModSlotName(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetModTextLabel",
    "hash": "0x8935624F8C5592CC",
    "code": "-- GET_MOD_TEXT_LABEL\nlocal retval --[[ string ]] =\n\tGetModTextLabel(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]], \n\t\tmodValue --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the text label of a mod type for a given vehicle  \nUse _GET_LABEL_TEXT to get the part name in the game's language"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetNumModColors",
    "hash": "0xA551BE18C11A476D",
    "code": "-- GET_NUM_MOD_COLORS\nlocal retval --[[ integer ]] =\n\tGetNumModColors(\n\t\tpaintType --[[ integer ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "paintType:\n0: Normal\n1: Metallic\n2: Pearl\n3: Matte\n4: Metal\n5: Chrome"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetNumModKits",
    "hash": "0x33F2E3FE70EAAE1D",
    "code": "-- GET_NUM_MOD_KITS\nlocal retval --[[ integer ]] =\n\tGetNumModKits(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetNumVehicleMods",
    "hash": "0xE38E9162A2500646",
    "code": "-- GET_NUM_VEHICLE_MODS\nlocal retval --[[ integer ]] =\n\tGetNumVehicleMods(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns how many possible mods a vehicle has for a given mod type"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetNumVehicleWindowTints",
    "hash": "0x9D1224004B3A6707",
    "code": "-- GET_NUM_VEHICLE_WINDOW_TINTS\nlocal retval --[[ integer ]] =\n\tGetNumVehicleWindowTints()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetNumberOfVehicleColours",
    "hash": "0x3B963160CD65D41E",
    "code": "-- GET_NUMBER_OF_VEHICLE_COLOURS\nlocal retval --[[ integer ]] =\n\tGetNumberOfVehicleColours(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Actually number of color combinations"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetNumberOfVehicleDoors",
    "hash": "0x92922A607497B14D",
    "code": "-- _GET_NUMBER_OF_VEHICLE_DOORS\nlocal retval --[[ integer ]] =\n\tGetNumberOfVehicleDoors(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetNumberOfVehicleNumberPlates",
    "hash": "0x4C4D6B2644F458CB",
    "code": "-- GET_NUMBER_OF_VEHICLE_NUMBER_PLATES\nlocal retval --[[ integer ]] =\n\tGetNumberOfVehicleNumberPlates()",
    "parameters": [],
    "returns": [],
    "description": "Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetPedInVehicleSeat",
    "hash": "0xBB40DD2270B65366",
    "code": "-- GET_PED_IN_VEHICLE_SEAT\nlocal retval --[[ Ped ]] =\n\tGetPedInVehicleSeat(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to get the ped for.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [
      "A handle to a ped in the specified vehicle seat, or 0 if no such ped existed."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to get the ped for.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE.\n\nReturns:\n\nA handle to a ped in the specified vehicle seat, or 0 if no such ped existed.\n\nGets the ped in the specified seat of the passed vehicle.\n\nIf there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.\n\nNativeDB Added Parameter 3: BOOL p2 (uses a different GetOccupant function)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetPedUsingVehicleDoor",
    "hash": "0x218297BF0CFD853B",
    "code": "-- GET_PED_USING_VEHICLE_DOOR\nlocal retval --[[ Ped ]] =\n\tGetPedUsingVehicleDoor(\n\t\tvehicle --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetPositionInRecording",
    "hash": "0x2DACD605FC681475",
    "code": "-- GET_POSITION_IN_RECORDING\nlocal retval --[[ number ]] =\n\tGetPositionInRecording(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Distance traveled in the vehicles current recording."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetPositionOfVehicleRecordingAtTime",
    "hash": "0xD242728AA6F0FBA2",
    "code": "-- GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME\nlocal retval --[[ vector3 ]] =\n\tGetPositionOfVehicleRecordingAtTime(\n\t\trecording --[[ integer ]], \n\t\ttime --[[ number ]], \n\t\tscript --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.\n\nSee REQUEST_VEHICLE_RECORDING."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetPositionOfVehicleRecordingIdAtTime",
    "hash": "0x92523B76657A517D",
    "code": "-- GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME\nlocal retval --[[ vector3 ]] =\n\tGetPositionOfVehicleRecordingIdAtTime(\n\t\tid --[[ integer ]], \n\t\ttime --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetRandomVehicleBackBumperInSphere",
    "hash": "0xB50807EABE20A8DC",
    "code": "-- GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE\nlocal retval --[[ Vehicle ]] =\n\tGetRandomVehicleBackBumperInSphere(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ integer ]], \n\t\tp5 --[[ integer ]], \n\t\tp6 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetRandomVehicleFrontBumperInSphere",
    "hash": "0xC5574E0AEB86BA68",
    "code": "-- GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE\nlocal retval --[[ Vehicle ]] =\n\tGetRandomVehicleFrontBumperInSphere(\n\t\tp0 --[[ number ]], \n\t\tp1 --[[ number ]], \n\t\tp2 --[[ number ]], \n\t\tp3 --[[ number ]], \n\t\tp4 --[[ integer ]], \n\t\tp5 --[[ integer ]], \n\t\tp6 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetRandomVehicleInSphere",
    "hash": "0x386F6CE5BAF6091C",
    "code": "-- GET_RANDOM_VEHICLE_IN_SPHERE\nlocal retval --[[ Vehicle ]] =\n\tGetRandomVehicleInSphere(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tmodelHash --[[ Hash ]], \n\t\tflags --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets a random vehicle in a sphere at the specified position, of the specified radius.  \nx: The X-component of the position of the sphere.  \ny: The Y-component of the position of the sphere.  \nz: The Z-component of the position of the sphere.  \nradius: The radius of the sphere. Max is 9999.9004.  \nmodelHash: The vehicle model to limit the selection to. Pass 0 for any model.  \nflags: The bitwise flags that modifies the behaviour of this function."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetRandomVehicleModelInMemory",
    "hash": "0x055BF0AC0C34F4FD",
    "code": "-- GET_RANDOM_VEHICLE_MODEL_IN_MEMORY\nlocal modelHash --[[ Hash ]], successIndicator --[[ integer ]] =\n\tGetRandomVehicleModelInMemory(\n\t\tp0 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Not present in the retail version! It's just a nullsub.  \np0 always true (except in one case)  \np1 a random vehicle hash loaded in memory  \nsuccessIndicator: 0 if success, -1 if failed"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetRemainingNitrousDuration",
    "hash": "0xBEC4B8653462450E",
    "code": "-- _GET_REMAINING_NITROUS_DURATION\nlocal retval --[[ number ]] =\n\tGetRemainingNitrousDuration(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle for which to retrieve the remaining nitrous duration."
    ],
    "returns": [
      "The amount of time that the nitrous boost can still be active for the given vehicle. If there is no nitrous system active or available, this may return 0.`lua CreateThread(function() local playerPed, vehicle while true do -- Retrieve the player ped. playerPed = PlayerPedId()",
      "end)"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle for which to retrieve the remaining nitrous duration.\n\nReturns:\n\nThe amount of time that the nitrous boost can still be active for the given vehicle. If there is no nitrous system active or available, this may return 0.`lua CreateThread(function() local playerPed, vehicle while true do -- Retrieve the player ped. playerPed = PlayerPedId()\n\n    -- Retrieve the vehicle the player is currently in.\n    vehicle = GetVehiclePedIsIn(playerPed, false)\n\n    -- Retrieve if the nitrous of the vehicle is active.\n    if IsNitrousActive(vehicle) then\n        print(GetRemainingNitrousDuration(vehicle))\n    end\n\n    Wait(0)\nend\n\n\nend)\n\nsetTick(async () => {\n    // Retrieve the player ped.\n    let playerPed = PlayerPedId();\n    \n    // Retrieve the vehicle the player is currently in.\n    let vehicle = GetVehiclePedIsIn(playerPed, false);\n\n    // Retrieve if the nitrous of the vehicle is active.\n    if (IsNitrousActive(vehicle)) {\n        console.log(GetRemainingNitrousDuration(vehicle));\n    }\n});\n```\nNativeDB Introduced: 3095\n\nRetrieves the remaining duration of nitrous boost available for the specified vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetRotationOfVehicleRecordingAtTime",
    "hash": "0x2058206FBE79A8AD",
    "code": "-- GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME\nlocal retval --[[ vector3 ]] =\n\tGetRotationOfVehicleRecordingAtTime(\n\t\trecording --[[ integer ]], \n\t\ttime --[[ number ]], \n\t\tscript --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetRotationOfVehicleRecordingIdAtTime",
    "hash": "0xF0F2103EFAF8CBA7",
    "code": "-- GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME\nlocal retval --[[ vector3 ]] =\n\tGetRotationOfVehicleRecordingIdAtTime(\n\t\tid --[[ integer ]], \n\t\ttime --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetSubmarineIsUnderDesignDepth",
    "hash": "0x3E71D0B300B7AA79",
    "code": "-- GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH\nlocal retval --[[ boolean ]] =\n\tGetSubmarineIsUnderDesignDepth(\n\t\tsubmarine --[[ Vehicle ]]\n\t)",
    "parameters": [
      "submarine: \n\nThe submarine vehicle to be evaluated for being under its crush depth threshold."
    ],
    "returns": [
      "Returns true if the submarine is below its designated crush depth, false otherwise."
    ],
    "description": "Parameters:\n\nsubmarine: \n\nThe submarine vehicle to be evaluated for being under its crush depth threshold.\n\nReturns:\n\nReturns true if the submarine is below its designated crush depth, false otherwise.\n\nDetermines if the submarine is operating below its designated crush depth.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetSubmarineNumberOfAirLeaks",
    "hash": "0x093D6DDCA5B8FBAE",
    "code": "-- GET_SUBMARINE_NUMBER_OF_AIR_LEAKS\nlocal retval --[[ integer ]] =\n\tGetSubmarineNumberOfAirLeaks(\n\t\tsubmarine --[[ Vehicle ]]\n\t)",
    "parameters": [
      "submarine: \n\nThe submarine vehicle to check for air leaks."
    ],
    "returns": [
      "Returns the number of air leaks on the submarine."
    ],
    "description": "Parameters:\n\nsubmarine: \n\nThe submarine vehicle to check for air leaks.\n\nReturns:\n\nReturns the number of air leaks on the submarine.\n\nChecks if a Submarine has any air leaks, when there is more than 4 the player will drown.\n\nNativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetTimePositionInRecording",
    "hash": "0x5746F3A7AB7FE544",
    "code": "-- GET_TIME_POSITION_IN_RECORDING\nlocal retval --[[ number ]] =\n\tGetTimePositionInRecording(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetTotalDurationOfVehicleRecording",
    "hash": "0x0E48D1C262390950",
    "code": "-- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING\nlocal retval --[[ number ]] =\n\tGetTotalDurationOfVehicleRecording(\n\t\trecording --[[ integer ]], \n\t\tscript --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetTotalDurationOfVehicleRecordingId",
    "hash": "0x102D125411A7B6E6",
    "code": "-- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID\nlocal retval --[[ number ]] =\n\tGetTotalDurationOfVehicleRecordingId(\n\t\tid --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetTrainCarriage",
    "hash": "0x08AAFD0814722BC3",
    "code": "-- GET_TRAIN_CARRIAGE\nlocal retval --[[ Entity ]] =\n\tGetTrainCarriage(\n\t\ttrain --[[ Vehicle ]], \n\t\ttrailerNumber --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetTyreHealth",
    "hash": "0x55EAB010FAEE9380",
    "code": "-- _GET_TYRE_HEALTH\nlocal retval --[[ number ]] =\n\tGetTyreHealth(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetTyreWearMultiplier",
    "hash": "0x6E387895952F4F71",
    "code": "-- _GET_TYRE_WEAR_MULTIPLIER\nlocal retval --[[ number ]] =\n\tGetTyreWearMultiplier(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleAcceleration",
    "hash": "0x5DD35C8D074E57AE",
    "code": "-- GET_VEHICLE_ACCELERATION\nlocal retval --[[ number ]] =\n\tGetVehicleAcceleration(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle for which to obtain the acceleration."
    ],
    "returns": [
      "Returns the acceleration value of the specified vehicle as a float number."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle for which to obtain the acceleration.\n\nReturns:\n\nReturns the acceleration value of the specified vehicle as a float number.\n\nRetrieves a static value representing the maximum drive force of specific a vehicle, including any vehicle mods. This value does not change dynamically during gameplay. This value provides an approximation and should be considered alongside other performance metrics like top speed for a more comprehensive understanding of the vehicle's capabilities.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleAttachedToCargobob",
    "hash": "0x873B82D42AC2B9E5",
    "code": "-- GET_VEHICLE_ATTACHED_TO_CARGOBOB\nlocal retval --[[ Vehicle ]] =\n\tGetVehicleAttachedToCargobob(\n\t\tcargobob --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns attached vehicle (Vehicle in parameter must be cargobob)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleBodyHealth",
    "hash": "0xF271147EB7B40F12",
    "code": "-- GET_VEHICLE_BODY_HEALTH\nlocal retval --[[ number ]] =\n\tGetVehicleBodyHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Seems related to vehicle health, like the one in IV.  \nMax 1000, min 0.  \nVehicle does not necessarily explode or become undrivable at 0."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleBombCount",
    "hash": "0xEA12BD130D7569A1",
    "code": "-- _GET_VEHICLE_BOMB_COUNT\nlocal retval --[[ integer ]] =\n\tGetVehicleBombCount(\n\t\taircraft --[[ Vehicle ]]\n\t)",
    "parameters": [
      "aircraft: \n\nThe vehicle to get the amount of bombs from."
    ],
    "returns": [
      "An int indicating the amount of bombs remaining on that plane."
    ],
    "description": "Parameters:\n\naircraft: \n\nThe vehicle to get the amount of bombs from.\n\nReturns:\n\nAn int indicating the amount of bombs remaining on that plane.\n\nGets the amount of bombs that this vehicle has. As far as I know, this does not impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.\n\nIn decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using _SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS).\n\nUse _SET_AIRCRAFT_BOMB_COUNT to set the amount of bombs on that vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleCanActivateParachute",
    "hash": "0xA916396DF4154EE3",
    "code": "-- _GET_VEHICLE_CAN_ACTIVATE_PARACHUTE\nlocal retval --[[ boolean ]] =\n\tGetVehicleCanActivateParachute(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleCauseOfDestruction",
    "hash": "0xE495D1EF4C91FD20",
    "code": "-- GET_VEHICLE_CAUSE_OF_DESTRUCTION\nlocal retval --[[ Hash ]] =\n\tGetVehicleCauseOfDestruction(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to get the cause of destruction of."
    ],
    "returns": [
      "A hash representing the destruction cause. These can be weapon hashes."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to get the cause of destruction of.\n\nReturns:\n\nA hash representing the destruction cause. These can be weapon hashes."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleClass",
    "hash": "0x29439776AAA00A62",
    "code": "-- GET_VEHICLE_CLASS\nlocal retval --[[ integer ]] =\n\tGetVehicleClass(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns an int  \nVehicle Classes:  \n0: Compacts  \n1: Sedans  \n2: SUVs  \n3: Coupes  \n4: Muscle  \n5: Sports Classics  \n6: Sports  \n7: Super  \n8: Motorcycles  \n9: Off-road  \n10: Industrial  \n11: Utility  \n12: Vans  \n13: Cycles  \n14: Boats  \n15: Helicopters  \n16: Planes  \n17: Service  \n18: Emergency  \n19: Military  \n20: Commercial  \n21: Trains  \n22: Open Wheel\nchar buffer[128];  \nstd::sprintf(buffer, \"VEH_CLASS_%i\", VEHICLE::GET_VEHICLE_CLASS(vehicle));  \nchar* className = UI::_GET_LABEL_TEXT(buffer);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleClassEstimatedMaxSpeed",
    "hash": "0x00C09F246ABEDD82",
    "code": "-- GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED\nlocal retval --[[ number ]] =\n\tGetVehicleClassEstimatedMaxSpeed(\n\t\tvehicleClass --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleClassFromName",
    "hash": "0xDEDF1C8BD47C2200",
    "code": "-- GET_VEHICLE_CLASS_FROM_NAME\nlocal retval --[[ integer ]] =\n\tGetVehicleClassFromName(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "For a full enum, see here : pastebin.com/i2GGAjY0\nchar buffer[128];\nstd::sprintf(buffer, \"VEH_CLASS_%i\", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));\nconst char* className = HUD::_GET_LABEL_TEXT(buffer);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleClassMaxAcceleration",
    "hash": "0x2F83E7E45D9EA7AE",
    "code": "-- GET_VEHICLE_CLASS_MAX_ACCELERATION\nlocal retval --[[ number ]] =\n\tGetVehicleClassMaxAcceleration(\n\t\tvehicleClass --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleClassMaxAgility",
    "hash": "0x4F930AD022D6DE3B",
    "code": "-- GET_VEHICLE_CLASS_MAX_AGILITY\nlocal retval --[[ number ]] =\n\tGetVehicleClassMaxAgility(\n\t\tvehicleClass --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleClassMaxBraking",
    "hash": "0x4BF54C16EC8FEC03",
    "code": "-- GET_VEHICLE_CLASS_MAX_BRAKING\nlocal retval --[[ number ]] =\n\tGetVehicleClassMaxBraking(\n\t\tvehicleClass --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleClassMaxTraction",
    "hash": "0xDBC86D85C5059461",
    "code": "-- GET_VEHICLE_CLASS_MAX_TRACTION\nlocal retval --[[ number ]] =\n\tGetVehicleClassMaxTraction(\n\t\tvehicleClass --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleColor",
    "hash": "0xF3CC740D36221548",
    "code": "-- GET_VEHICLE_COLOR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleColor(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe target vehicle",
      "r:",
      "g:",
      "b:"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle\n\nr:\ng:\nb:\n\nSee SET_VEHICLE_CUSTOM_PRIMARY_COLOUR and SET_VEHICLE_CUSTOM_SECONDARY_COLOUR."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleColourCombination",
    "hash": "0x6A842D197F845D56",
    "code": "-- GET_VEHICLE_COLOUR_COMBINATION\nlocal retval --[[ integer ]] =\n\tGetVehicleColourCombination(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleColours",
    "hash": "0xA19435F193E081AC",
    "code": "-- GET_VEHICLE_COLOURS\nlocal colorPrimary --[[ integer ]], colorSecondary --[[ integer ]] =\n\tGetVehicleColours(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleColoursWhichCanBeSet",
    "hash": "0xEEBFC7A7EFDC35B4",
    "code": "-- GET_VEHICLE_COLOURS_WHICH_CAN_BE_SET\nlocal retval --[[ integer ]] =\n\tGetVehicleColoursWhichCanBeSet(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle"
    ],
    "returns": [
      "Returns a bitfield of the colours supported by the vehicle's shader."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle\n\nReturns:\n\nReturns a bitfield of the colours supported by the vehicle's shader.\n\nenum eColourBitField {\n    HAS_BODY_COLOUR1 = 1,\n    HAS_BODY_COLOUR2 = 2,\n    HAS_BODY_COLOUR3 = 4,\n    HAS_BODY_COLOUR4 = 8,\n    HAS_BODY_COLOUR5 = 16\n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleCountermeasureCount",
    "hash": "0xF846AA63DF56B804",
    "code": "-- _GET_VEHICLE_COUNTERMEASURE_COUNT\nlocal retval --[[ integer ]] =\n\tGetVehicleCountermeasureCount(\n\t\taircraft --[[ Vehicle ]]\n\t)",
    "parameters": [
      "aircraft: \n\nThe vehicle to get the amount of countermeasures from."
    ],
    "returns": [
      "An int indicating the amount of countermeasures remaining on that plane."
    ],
    "description": "Parameters:\n\naircraft: \n\nThe vehicle to get the amount of countermeasures from.\n\nReturns:\n\nAn int indicating the amount of countermeasures remaining on that plane.\n\nSimilar to _GET_AIRCRAFT_BOMB_COUNT, this gets the amount of countermeasures that are present on this vehicle.\n\nUse _SET_AIRCRAFT_COUNTERMEASURE_COUNT to set the current amount."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleCurrentSlipstreamDraft",
    "hash": "0x36492C2F0D134C56",
    "code": "-- _GET_VEHICLE_CURRENT_SLIPSTREAM_DRAFT\nlocal retval --[[ number ]] =\n\tGetVehicleCurrentSlipstreamDraft(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).\nGET_VEHICLE_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleCustomPrimaryColour",
    "hash": "0xB64CF2CCA9D95F52",
    "code": "-- GET_VEHICLE_CUSTOM_PRIMARY_COLOUR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleCustomPrimaryColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleCustomSecondaryColour",
    "hash": "0x8389CD56CA8072DC",
    "code": "-- GET_VEHICLE_CUSTOM_SECONDARY_COLOUR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleCustomSecondaryColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleDashboardColor",
    "hash": "0xB7635E80A5C31BFF",
    "code": "-- _GET_VEHICLE_DASHBOARD_COLOR\nlocal color --[[ integer ]] =\n\tGetVehicleDashboardColor(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleDeformationAtPos",
    "hash": "0x4EC6CFBC7B2E9536",
    "code": "-- GET_VEHICLE_DEFORMATION_AT_POS\nlocal retval --[[ vector3 ]] =\n\tGetVehicleDeformationAtPos(\n\t\tvehicle --[[ Vehicle ]], \n\t\toffsetX --[[ number ]], \n\t\toffsetY --[[ number ]], \n\t\toffsetZ --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "The only example I can find of this function in the scripts, is this:  \nstruct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);  \n-----------------------------------------------------------------------------------------------------------------------------------------  \nPC scripts:  \nv_5/*{3}*/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleDirtLevel",
    "hash": "0x8F17BC8BA08DA62B",
    "code": "-- GET_VEHICLE_DIRT_LEVEL\nlocal retval --[[ number ]] =\n\tGetVehicleDirtLevel(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "A number between 0.0 and 15.0 representing the vehicles dirt level."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nA number between 0.0 and 15.0 representing the vehicles dirt level.\n\nA getter for SET_VEHICLE_DIRT_LEVEL."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleDoorAngleRatio",
    "hash": "0xFE3F9C29F7B32BD5",
    "code": "-- GET_VEHICLE_DOOR_ANGLE_RATIO\nlocal retval --[[ number ]] =\n\tGetVehicleDoorAngleRatio(\n\t\tvehicle --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nVehicle",
      "doorIndex: \n\nIndex of door to check"
    ],
    "returns": [
      "A float representing angle of door mapped from 0.0 to 1.0"
    ],
    "description": "Parameters:\n\nvehicle: \n\nVehicle\n\ndoorIndex: \n\nIndex of door to check\n\nReturns:\n\nA float representing angle of door mapped from 0.0 to 1.0\n\nChecks the angle of the door mapped from 0.0 - 1.0 where 0.0 is fully closed and 1.0 is fully open.\n\nSee eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleDoorLockStatus",
    "hash": "0x25BC98A59C2EA962",
    "code": "-- GET_VEHICLE_DOOR_LOCK_STATUS\nlocal retval --[[ integer ]] =\n\tGetVehicleDoorLockStatus(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the current lock status, refer to SET_VEHICLE_DOORS_LOCKED"
    ],
    "description": "Returns:\n\nReturns the current lock status, refer to SET_VEHICLE_DOORS_LOCKED"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleDoorsLockedForPlayer",
    "hash": "0xF6AF6CB341349015",
    "code": "-- GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER\nlocal retval --[[ boolean ]] =\n\tGetVehicleDoorsLockedForPlayer(\n\t\tvehicle --[[ Vehicle ]], \n\t\tplayer --[[ Player ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleDrivetrainType",
    "hash": "0x1423725069EE1D14",
    "code": "-- _GET_VEHICLE_DRIVETRAIN_TYPE\nlocal retval --[[ integer ]] =\n\tGetVehicleDrivetrainType(\n\t\tvehicleModel --[[ Hash ]]\n\t)",
    "parameters": [
      "vehicleModel: \n\nThe hash of the vehicle model to check."
    ],
    "returns": [
      "Returns the vehicle's drivetrain type."
    ],
    "description": "Parameters:\n\nvehicleModel: \n\nThe hash of the vehicle model to check.\n\nReturns:\n\nReturns the vehicle's drivetrain type.\n\nNativeDB Introduced: v3258\n\nNote: When using this native, the hash of the vehicle needs to be loaded into the client's memory. This can be done by requesting the model with REQUEST_MODEL or by simply having the vehicle spawned.\n\nenum eVehicleDrivetrainType\n{\n    INVALID = 0,\n    FWD = 1,\n    RWD = 2,\n    AWD = 3\n};\n\nNativeDB Introduced: v3258"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleEngineHealth",
    "hash": "0xC45D23BAF168AAB8",
    "code": "-- GET_VEHICLE_ENGINE_HEALTH\nlocal retval --[[ number ]] =\n\tGetVehicleEngineHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.  \nMinimum: -4000  \nMaximum: 1000  \n-4000: Engine is destroyed  \n0 and below: Engine catches fire and health rapidly declines  \n300: Engine is smoking and losing functionality  \n1000: Engine is perfect"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleEnveffScale",
    "hash": "0xA82819CAC9C4C403",
    "code": "-- GET_VEHICLE_ENVEFF_SCALE\nlocal retval --[[ number ]] =\n\tGetVehicleEnveffScale(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "formerly known as _GET_VEHICLE_PAINT_FADE\nThe result is a value from 0-1, where 0 is fresh paint."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleEstimatedMaxSpeed",
    "hash": "0x53AF99BAA671CA47",
    "code": "-- GET_VEHICLE_ESTIMATED_MAX_SPEED\nlocal retval --[[ number ]] =\n\tGetVehicleEstimatedMaxSpeed(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle for which to obtain the estimated max speed."
    ],
    "returns": [
      "Returns the estimated maximum speed of the specified vehicle as a float number."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle for which to obtain the estimated max speed.\n\nReturns:\n\nReturns the estimated maximum speed of the specified vehicle as a float number.\n\nRetrieves a static value representing the estimated max speed of a specific vehicle, including any vehicle mods. This value does not change dynamically during gameplay.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleExtraColours",
    "hash": "0x3BC4245933A166F7",
    "code": "-- GET_VEHICLE_EXTRA_COLOURS\nlocal pearlescentColor --[[ integer ]], wheelColor --[[ integer ]] =\n\tGetVehicleExtraColours(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleFlightNozzlePosition",
    "hash": "0xDA62027C8BDB326E",
    "code": "-- GET_VEHICLE_FLIGHT_NOZZLE_POSITION\nlocal retval --[[ number ]] =\n\tGetVehicleFlightNozzlePosition(\n\t\taircraft --[[ Vehicle ]]\n\t)",
    "parameters": [
      "aircraft: \n\nThe vehicle to check the hover mode on."
    ],
    "returns": [
      "A float indicating the percentage of the hover mode. 1.0 = in VTOL mode, 0.0 = in normal flying mode."
    ],
    "description": "Parameters:\n\naircraft: \n\nThe vehicle to check the hover mode on.\n\nReturns:\n\nA float indicating the percentage of the hover mode. 1.0 = in VTOL mode, 0.0 = in normal flying mode."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleHasKers",
    "hash": "0x50634E348C8D44EF",
    "code": "-- GET_VEHICLE_HAS_KERS\nlocal retval --[[ boolean ]] =\n\tGetVehicleHasKers(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle."
    ],
    "returns": [
      "Returns true if the vehicle has a kers boost (for instance the lectro or the vindicator)"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nReturns:\n\nReturns true if the vehicle has a kers boost (for instance the lectro or the vindicator)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleHasParachute",
    "hash": "0xBC9CFF381338CB4F",
    "code": "-- _GET_VEHICLE_HAS_PARACHUTE\nlocal retval --[[ boolean ]] =\n\tGetVehicleHasParachute(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleHealthPercentage",
    "hash": "0xB8EF61207C2393A9",
    "code": "-- GET_VEHICLE_HEALTH_PERCENTAGE\nlocal retval --[[ number ]] =\n\tGetVehicleHealthPercentage(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: float maxEngineHealth\nNativeDB Added Parameter 3: float maxPetrolTankHealth\nNativeDB Added Parameter 4: float maxBodyHealth\nNativeDB Added Parameter 5: float maxMainRotorHealth\nNativeDB Added Parameter 6: float maxTailRotorHealth\nNativeDB Added Parameter 7: float maxUnkHealth"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleHomingLockonState",
    "hash": "0xE6B0E8CFC3633BF0",
    "code": "-- GET_VEHICLE_HOMING_LOCKON_STATE\nlocal retval --[[ integer ]] =\n\tGetVehicleHomingLockonState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a value depending on the lock-on state of vehicle weapons.\n0: not locked on\n1: locking on\n2: locked on"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleIndividualDoorLockStatus",
    "hash": "0xCA4AC3EAAE46EC7B",
    "code": "-- GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS\nlocal retval --[[ integer ]] =\n\tGetVehicleIndividualDoorLockStatus(\n\t\tvehicle --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns vehicle door lock state previously set with SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED"
    ],
    "description": "Returns:\n\nReturns vehicle door lock state previously set with SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED\n\nSee eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleInteriorColor",
    "hash": "0x7D1464D472D32136",
    "code": "-- _GET_VEHICLE_INTERIOR_COLOR\nlocal color --[[ integer ]] =\n\tGetVehicleInteriorColor(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleIsMercenary",
    "hash": "0xD4C4642CB7F50B5D",
    "code": "-- GET_VEHICLE_IS_MERCENARY\nlocal retval --[[ boolean ]] =\n\tGetVehicleIsMercenary(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check for mercenary status."
    ],
    "returns": [
      "Returns true if the vehicle is a mercenary vehicle, false otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check for mercenary status.\n\nReturns:\n\nReturns true if the vehicle is a mercenary vehicle, false otherwise.\n\nReturns whether the specified vehicle is designated as a mercenary vehicle"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleLayoutHash",
    "hash": "0x28D37D4F71AC5C58",
    "code": "-- GET_VEHICLE_LAYOUT_HASH\nlocal retval --[[ Hash ]] =\n\tGetVehicleLayoutHash(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleLightsState",
    "hash": "0xB91B4C20085BD12F",
    "code": "-- GET_VEHICLE_LIGHTS_STATE\nlocal retval --[[ boolean ]], lightsOn --[[ boolean ]], highbeamsOn --[[ boolean ]] =\n\tGetVehicleLightsState(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleLivery",
    "hash": "0x2BB9230590DA5E8A",
    "code": "-- GET_VEHICLE_LIVERY\nlocal retval --[[ integer ]] =\n\tGetVehicleLivery(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "-1 = no livery"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleLiveryCount",
    "hash": "0x87B63E25A529D526",
    "code": "-- GET_VEHICLE_LIVERY_COUNT\nlocal retval --[[ integer ]] =\n\tGetVehicleLiveryCount(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns -1 if the vehicle has no livery"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleLockOnTarget",
    "hash": "0x8F5EBAB1F260CFCE",
    "code": "-- GET_VEHICLE_LOCK_ON_TARGET\nlocal retval --[[ boolean ]], entity --[[ Entity ]] =\n\tGetVehicleLockOnTarget(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleMaxBraking",
    "hash": "0xAD7E85FC227197C4",
    "code": "-- GET_VEHICLE_MAX_BRAKING\nlocal retval --[[ number ]] =\n\tGetVehicleMaxBraking(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleMaxNumberOfPassengers",
    "hash": "0xA7C4F2C6E744A550",
    "code": "-- GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS\nlocal retval --[[ integer ]] =\n\tGetVehicleMaxNumberOfPassengers(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleMaxTraction",
    "hash": "0xA132FB5370554DB0",
    "code": "-- GET_VEHICLE_MAX_TRACTION\nlocal retval --[[ number ]] =\n\tGetVehicleMaxTraction(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleMod",
    "hash": "0x772960298DA26FDB",
    "code": "-- GET_VEHICLE_MOD\nlocal retval --[[ integer ]] =\n\tGetVehicleMod(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to get the mod of.",
      "modType: \n\nRefer to eVehicleModType in SET_VEHICLE_MOD."
    ],
    "returns": [
      "Returns the current modIndex, or -1 if the mod is stock."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to get the mod of.\n\nmodType: \n\nRefer to eVehicleModType in SET_VEHICLE_MOD.\n\nReturns:\n\nReturns the current modIndex, or -1 if the mod is stock."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModColor_1",
    "hash": "0xE8D65CA700C9A693",
    "code": "-- GET_VEHICLE_MOD_COLOR_1\nlocal paintType --[[ integer ]], color --[[ integer ]], pearlescentColor --[[ integer ]] =\n\tGetVehicleModColor_1(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModColor_1Name",
    "hash": "0xB45085B721EFD38C",
    "code": "-- GET_VEHICLE_MOD_COLOR_1_NAME\nlocal retval --[[ string ]] =\n\tGetVehicleModColor_1Name(\n\t\tvehicle --[[ Vehicle ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returns a string which is the codename of the vehicle's currently selected primary color  \np1 is always 0"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModColor_2",
    "hash": "0x81592BE4E3878728",
    "code": "-- GET_VEHICLE_MOD_COLOR_2\nlocal paintType --[[ integer ]], color --[[ integer ]] =\n\tGetVehicleModColor_2(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModColor_2Name",
    "hash": "0x4967A516ED23A5A1",
    "code": "-- GET_VEHICLE_MOD_COLOR_2_NAME\nlocal retval --[[ string ]] =\n\tGetVehicleModColor_2Name(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "returns a string which is the codename of the vehicle's currently selected secondary color"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModIdentifierHash",
    "hash": "0x4593CF82AA179706",
    "code": "-- GET_VEHICLE_MOD_IDENTIFIER_HASH\nlocal retval --[[ Hash ]] =\n\tGetVehicleModIdentifierHash(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]], \n\t\tmodIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModKit",
    "hash": "0x6325D1A044AE510D",
    "code": "-- GET_VEHICLE_MOD_KIT\nlocal retval --[[ integer ]] =\n\tGetVehicleModKit(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModKitType",
    "hash": "0xFC058F5121E54C32",
    "code": "-- GET_VEHICLE_MOD_KIT_TYPE\nlocal retval --[[ integer ]] =\n\tGetVehicleModKitType(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModModifierValue",
    "hash": "0x90A38E9838E0A8C1",
    "code": "-- GET_VEHICLE_MOD_MODIFIER_VALUE\nlocal retval --[[ integer ]] =\n\tGetVehicleModModifierValue(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]], \n\t\tmodIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModVariation",
    "hash": "0xB3924ECD70E095DC",
    "code": "-- GET_VEHICLE_MOD_VARIATION\nlocal retval --[[ boolean ]] =\n\tGetVehicleModVariation(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelAcceleration",
    "hash": "0x8C044C5C84505B6A",
    "code": "-- GET_VEHICLE_MODEL_ACCELERATION\nlocal retval --[[ number ]] =\n\tGetVehicleModelAcceleration(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the acceleration of the specified model."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelEstimatedAgility",
    "hash": "0x53409B5163D5B846",
    "code": "-- _GET_VEHICLE_MODEL_ESTIMATED_AGILITY\nlocal retval --[[ number ]] =\n\tGetVehicleModelEstimatedAgility(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_VEHICLE_MODEL_*\n9.8 * thrust if air vehicle, else 0.38 + drive force?"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelEstimatedMaxSpeed",
    "hash": "0xF417C2502FFFED43",
    "code": "-- GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED\nlocal retval --[[ number ]] =\n\tGetVehicleModelEstimatedMaxSpeed(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns max speed (without mods) of the specified vehicle model in m/s."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelMaxBraking",
    "hash": "0xDC53FD41B4ED944C",
    "code": "-- GET_VEHICLE_MODEL_MAX_BRAKING\nlocal retval --[[ number ]] =\n\tGetVehicleModelMaxBraking(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns max braking of the specified vehicle model."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelMaxBrakingMaxMods",
    "hash": "0xBFBA3BA79CFF7EBF",
    "code": "-- GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS\nlocal retval --[[ number ]] =\n\tGetVehicleModelMaxBrakingMaxMods(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelMaxKnots",
    "hash": "0xC6AD107DDC9054CC",
    "code": "-- _GET_VEHICLE_MODEL_MAX_KNOTS\nlocal retval --[[ number ]] =\n\tGetVehicleModelMaxKnots(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_VEHICLE_MODEL_*\nFunction pertains only to aviation vehicles."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelMaxTraction",
    "hash": "0x539DE94D44FDFD0D",
    "code": "-- GET_VEHICLE_MODEL_MAX_TRACTION\nlocal retval --[[ number ]] =\n\tGetVehicleModelMaxTraction(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns max traction of the specified vehicle model."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelNumberOfSeats",
    "hash": "0x2AD93716F184EDA4",
    "code": "-- GET_VEHICLE_MODEL_NUMBER_OF_SEATS\nlocal retval --[[ integer ]] =\n\tGetVehicleModelNumberOfSeats(\n\t\tmodelHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns max number of passengers (including the driver) for the specified vehicle model."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleModelValue",
    "hash": "0x5873C14A52D74236",
    "code": "-- GET_VEHICLE_MODEL_VALUE\nlocal retval --[[ integer ]] =\n\tGetVehicleModelValue(\n\t\tvehicleModel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns `nMonetaryValue` from handling.meta for specific model, which is the vehicle's monetary value."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleNeonLightsColour",
    "hash": "0x7619EEE8C886757F",
    "code": "-- _GET_VEHICLE_NEON_LIGHTS_COLOUR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleNeonLightsColour(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the color of the neon lights of the specified vehicle.\n\nSee _SET_VEHICLE_NEON_LIGHTS_COLOUR for more information"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleNumberOfBrokenBones",
    "hash": "0x2C8CBFE1EA5FC631",
    "code": "-- _GET_VEHICLE_NUMBER_OF_BROKEN_BONES\nlocal retval --[[ integer ]] =\n\tGetVehicleNumberOfBrokenBones(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleNumberOfBrokenOffBones",
    "hash": "0x42A4BEB35D372407",
    "code": "-- _GET_VEHICLE_NUMBER_OF_BROKEN_OFF_BONES\nlocal retval --[[ integer ]] =\n\tGetVehicleNumberOfBrokenOffBones(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Also includes some \"turnOffBones\" when vehicle mods are installed."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleNumberOfPassengers",
    "hash": "0x24CB2137731FFE89",
    "code": "-- GET_VEHICLE_NUMBER_OF_PASSENGERS\nlocal retval --[[ integer ]] =\n\tGetVehicleNumberOfPassengers(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleNumberPlateText",
    "hash": "0x7CE1CCB9B293020E",
    "code": "-- GET_VEHICLE_NUMBER_PLATE_TEXT\nlocal retval --[[ string ]] =\n\tGetVehicleNumberPlateText(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the license plate text from a vehicle.  8 chars maximum."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleNumberPlateTextIndex",
    "hash": "0xF11BC2DD9A3E7195",
    "code": "-- GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX\nlocal retval --[[ integer ]] =\n\tGetVehicleNumberPlateTextIndex(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to get the plate index of"
    ],
    "returns": [
      "Returns the plate index, reference eVehiclePlateIndicies"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to get the plate index of\n\nReturns:\n\nReturns the plate index, reference eVehiclePlateIndicies\n\nenum eVehiclePlateIndicies {\n\tSanAndreasCursive = 0,\n\tSanAndreasBlack = 1,\n\tSanAndreasBlue = 2,\n\tSanAndreasPlain = 3,\n\tSRExcept = 4,\n\tNorthYankton = 5,\n\t// All indicies below this require b3095\n\tECola = 6,\n\tLasVenturas = 7,\n\tLiberyCity = 8,\n\tLSCarMeet = 9,\n\tLSPanic = 10,\n\tLSPounders = 11,\n\tSprunk = 12,\n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehiclePetrolTankHealth",
    "hash": "0x7D5DABE888D2D074",
    "code": "-- GET_VEHICLE_PETROL_TANK_HEALTH\nlocal retval --[[ number ]] =\n\tGetVehiclePetrolTankHealth(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "1000 is max health  \nBegins leaking gas at around 650 health"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehiclePlateType",
    "hash": "0x9CCC9525BF2408E0",
    "code": "-- GET_VEHICLE_PLATE_TYPE\nlocal retval --[[ integer ]] =\n\tGetVehiclePlateType(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns the vehicle plate type, refer to eVehiclePlateType"
    ],
    "description": "Returns:\n\nReturns the vehicle plate type, refer to eVehiclePlateType\n\nReturns the plates a vehicle has.\n\nenum eVehiclePlateType\n{\n\tVPT_FRONT_AND_BACK_PLATES = 0,\n\tVPT_FRONT_PLATES = 1,\n\tVPT_BACK_PLATES = 2,\n\tVPT_NONE = 3,\n};\n\n\nMotorcycles with no visible plates will sometimes return a 2 for unknown reasons."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleRecordingId",
    "hash": "0x21543C612379DB3C",
    "code": "-- GET_VEHICLE_RECORDING_ID\nlocal retval --[[ integer ]] =\n\tGetVehicleRecordingId(\n\t\trecording --[[ integer ]], \n\t\tscript --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See REQUEST_VEHICLE_RECORDING."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleRoofLivery",
    "hash": "0x60190048C0764A26",
    "code": "-- _GET_VEHICLE_ROOF_LIVERY\nlocal retval --[[ integer ]] =\n\tGetVehicleRoofLivery(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle."
    ],
    "returns": [
      "An index of the current vehicle's rooftop livery."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nReturns:\n\nAn index of the current vehicle's rooftop livery.\n\nReturns index of the current vehicle's rooftop livery. A getter for _SET_VEHICLE_ROOF_LIVERY."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleRoofLiveryCount",
    "hash": "0x5ECB40269053C0D4",
    "code": "-- _GET_VEHICLE_ROOF_LIVERY_COUNT\nlocal retval --[[ integer ]] =\n\tGetVehicleRoofLiveryCount(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle."
    ],
    "returns": [
      "A number of available rooftop liveries for vehicle."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nReturns:\n\nA number of available rooftop liveries for vehicle.\n\nReturns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleSuspensionBounds",
    "hash": "0xDF7E3EEB29642C38",
    "code": "-- _GET_VEHICLE_SUSPENSION_BOUNDS\nlocal out1 --[[ vector3 ]], out2 --[[ vector3 ]] =\n\tGetVehicleSuspensionBounds(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Outputs 2 Vector3's.\nScripts check if out2.x - out1.x > something.x\nCould be suspension related, as in max suspension height and min suspension height, considering the natives location."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleSuspensionHeight",
    "hash": "0x53952FD2BAA19F17",
    "code": "-- _GET_VEHICLE_SUSPENSION_HEIGHT\nlocal retval --[[ number ]] =\n\tGetVehicleSuspensionHeight(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the height of the vehicle's suspension.  \nThe higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.  \n0.000 is the stock suspension.  \n0.008 is Ultra Suspension."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleTrailerVehicle",
    "hash": "0x1CDD6BADC297830D",
    "code": "-- GET_VEHICLE_TRAILER_VEHICLE\nlocal retval --[[ boolean ]], trailer --[[ Vehicle ]] =\n\tGetVehicleTrailerVehicle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets the trailer of a vehicle and puts it into the trailer parameter."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleTyreSmokeColor",
    "hash": "0xB635392A4938B3C3",
    "code": "-- GET_VEHICLE_TYRE_SMOKE_COLOR\nlocal r --[[ integer ]], g --[[ integer ]], b --[[ integer ]] =\n\tGetVehicleTyreSmokeColor(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleTyresCanBurst",
    "hash": "0x678B9BB8C3F58FEB",
    "code": "-- GET_VEHICLE_TYRES_CAN_BURST\nlocal retval --[[ boolean ]] =\n\tGetVehicleTyresCanBurst(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleWeaponRestrictedAmmo",
    "hash": "0x8181CE2F25CB9BB7",
    "code": "-- GET_VEHICLE_WEAPON_RESTRICTED_AMMO\nlocal retval --[[ integer ]] =\n\tGetVehicleWeaponRestrictedAmmo(\n\t\tvehicle --[[ Vehicle ]], \n\t\tweaponIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle",
      "weaponIndex: \n\nThe weapon index we're getting ammo for (see SET_VEHICLE_WEAPON_RESTRICTED_AMMO for information on how to access these slots)."
    ],
    "returns": [
      "Gets the current restricted ammo count for a particular vehicle weapon index on a vehicle."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle\n\nweaponIndex: \n\nThe weapon index we're getting ammo for (see SET_VEHICLE_WEAPON_RESTRICTED_AMMO for information on how to access these slots).\n\nReturns:\n\nGets the current restricted ammo count for a particular vehicle weapon index on a vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleWheelType",
    "hash": "0xB3ED1BFB4BE636DC",
    "code": "-- GET_VEHICLE_WHEEL_TYPE\nlocal retval --[[ integer ]] =\n\tGetVehicleWheelType(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns an eVehicleWheelType integer value."
    ],
    "description": "Returns:\n\nReturns an eVehicleWheelType integer value.\n\nenum eVehicleWheelType\n{\n    VWT_SPORT = 0,\n    VWT_MUSCLE = 1,\n    VWT_LOWRIDER = 2,\n    VWT_SUV = 3,\n    VWT_OFFROAD = 4,\n    VWT_TUNER = 5,\n    VWT_BIKE = 6,\n    VWT_HIEND = 7,\n    // Benny's Original\n    VWT_SUPERMOD1 = 8,\n    // Benny's Bespoke\n    VWT_SUPERMOD2 = 9,\n    // Open Wheel\n    VWT_SUPERMOD3 = 10,\n    // Street\n    VWT_SUPERMOD4 = 11,\n    // Track\n    VWT_SUPERMOD5 = 12,\n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleWindowTint",
    "hash": "0x0EE21293DAD47C95",
    "code": "-- GET_VEHICLE_WINDOW_TINT\nlocal retval --[[ integer ]] =\n\tGetVehicleWindowTint(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "GetVehicleXenonLightsColor",
    "hash": "0x3DFF319A831E0CDB",
    "code": "-- _GET_VEHICLE_XENON_LIGHTS_COLOR\nlocal retval --[[ integer ]] =\n\tGetVehicleXenonLightsColor(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to get the headlight color from."
    ],
    "returns": [
      "Returns the xenons light color, refer to eHeadlightColors"
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to get the headlight color from.\n\nReturns:\n\nReturns the xenons light color, refer to eHeadlightColors\n\nUse _SET_VEHICLE_HEADLIGHTS_COLOUR to set the headlights color for the vehicle.\n\nYou must enable xenon headlights for this native to work properly.\n\nenum eHeadlightColors {\n    Default = 255,\n    White = 0,\n    Blue = 1,\n    ElectricBlue = 2,\n    MintGreen = 3,\n    LimeGreen = 4,\n    Yellow = 5,\n    GoldenShower = 6,\n    Orange = 7,\n    Red = 8,\n    PonyPink = 9,\n    HotPink = 10,\n    Purple = 11,\n    Blacklight = 12\n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "HasFilledVehiclePopulation",
    "hash": "0x91D6DD290888CBAB",
    "code": "-- _HAS_FILLED_VEHICLE_POPULATION\nlocal retval --[[ boolean ]] =\n\tHasFilledVehiclePopulation()",
    "parameters": [],
    "returns": [],
    "description": "HAS_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "HasPreloadModsFinished",
    "hash": "0x06F43E5175EB6D96",
    "code": "-- HAS_PRELOAD_MODS_FINISHED\nlocal retval --[[ boolean ]] =\n\tHasPreloadModsFinished(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "HasVehicleAssetLoaded",
    "hash": "0x1BBE0523B8DB9A21",
    "code": "-- HAS_VEHICLE_ASSET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasVehicleAssetLoaded(\n\t\tvehicleAsset --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "HasVehiclePhoneExplosiveDevice",
    "hash": "0x6ADAABD3068C5235",
    "code": "-- HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE\nlocal retval --[[ boolean ]] =\n\tHasVehiclePhoneExplosiveDevice()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "HasVehicleRecordingBeenLoaded",
    "hash": "0x300D614A4C785FC4",
    "code": "-- HAS_VEHICLE_RECORDING_BEEN_LOADED\nlocal retval --[[ boolean ]] =\n\tHasVehicleRecordingBeenLoaded(\n\t\trecording --[[ integer ]], \n\t\tscript --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "HaveVehicleModsStreamedIn",
    "hash": "0x9A83F5F9963775EF",
    "code": "-- HAVE_VEHICLE_MODS_STREAMED_IN\nlocal retval --[[ boolean ]] =\n\tHaveVehicleModsStreamedIn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "HideVehicleTombstone",
    "hash": "0xAE71FB656C600587",
    "code": "-- _HIDE_VEHICLE_TOMBSTONE\nHideVehicleTombstone(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "InstantlyFillVehiclePopulation",
    "hash": "0x48ADC8A773564670",
    "code": "-- INSTANTLY_FILL_VEHICLE_POPULATION\nInstantlyFillVehiclePopulation()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsAnyEntityAttachedToHandlerFrame",
    "hash": "0x62CA17B74C435651",
    "code": "-- IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME\nlocal retval --[[ boolean ]] =\n\tIsAnyEntityAttachedToHandlerFrame(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsAnyPedRappellingFromHeli",
    "hash": "0x291E373D483E7EE7",
    "code": "-- IS_ANY_PED_RAPPELLING_FROM_HELI\nlocal retval --[[ boolean ]] =\n\tIsAnyPedRappellingFromHeli(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsAnyVehicleNearPoint",
    "hash": "0x61E1DD6125A3EEE6",
    "code": "-- IS_ANY_VEHICLE_NEAR_POINT\nlocal retval --[[ boolean ]] =\n\tIsAnyVehicleNearPoint(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsBigVehicle",
    "hash": "0x9F243D3919F442FE",
    "code": "-- IS_BIG_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsBigVehicle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsBoatAnchored",
    "hash": "0xB0AD1238A709B1A2",
    "code": "-- IS_BOAT_ANCHORED\nlocal retval --[[ boolean ]] =\n\tIsBoatAnchored(\n\t\tboat --[[ Vehicle ]]\n\t)",
    "parameters": [
      "boat: \n\nThe boat to check."
    ],
    "returns": [
      "Returns true if the boat is currently anchored, false otherwise."
    ],
    "description": "Parameters:\n\nboat: \n\nThe boat to check.\n\nReturns:\n\nReturns true if the boat is currently anchored, false otherwise.\n\nChecks if a boat is currently anchored.\n\nThis native is a getter for SET_BOAT_ANCHOR.\n\nNativeDB Introduced: v573"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsCopVehicleInArea_3d",
    "hash": "0x7EEF65D5F153E26A",
    "code": "-- IS_COP_VEHICLE_IN_AREA_3D\nlocal retval --[[ boolean ]] =\n\tIsCopVehicleInArea_3d(\n\t\tx1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Usage:  \npublic bool isCopInRange(Vector3 Location, float Range)  \n        {  \n            return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);  \n        }"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsEntityAttachedToHandlerFrame",
    "hash": "0x57715966069157AD",
    "code": "-- IS_ENTITY_ATTACHED_TO_HANDLER_FRAME\nlocal retval --[[ boolean ]] =\n\tIsEntityAttachedToHandlerFrame(\n\t\tvehicle --[[ Vehicle ]], \n\t\tentity --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsEntryPointForSeatClear",
    "hash": "0x639431E895B9AA57",
    "code": "-- IS_ENTRY_POINT_FOR_SEAT_CLEAR\nlocal retval --[[ boolean ]] =\n\tIsEntryPointForSeatClear(\n\t\tped --[[ Ped ]], \n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]], \n\t\tcheckSide --[[ boolean ]], \n\t\tleftSide --[[ boolean ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to check.",
      "vehicle: \n\nThe vehicle to check.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE.",
      "checkSide: \n\nTrue to check the side of the entry point relative to the vehicle",
      "leftSide: \n\nWhen checkSide is true together with this it only checks if entrypoints on the left side of the vehicle are clear, and for the right side when given false"
    ],
    "returns": [
      "True if the entry point is accesible and the area is clear for the given ped."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped to check.\n\nvehicle: \n\nThe vehicle to check.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE.\n\ncheckSide: \n\nTrue to check the side of the entry point relative to the vehicle\n\nleftSide: \n\nWhen checkSide is true together with this it only checks if entrypoints on the left side of the vehicle are clear, and for the right side when given false\n\nReturns:\n\nTrue if the entry point is accesible and the area is clear for the given ped.\n\nCheck if a entry point for a certain seat is clear, useful for checking if a vehicle seat is accesible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).\n\nKeep in mind, with checkSide set to true, that only certain vehicles have entry points on both sides for the same seat, like motorcycles, most normal vehicles don't have this and if the native doesn't find a entry point with the given parameters it will always return false. So for most normal usecases leaving checkSide set to false would result in the expected behavior."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsHandlerFrameAboveContainer",
    "hash": "0x89D630CF5EA96D23",
    "code": "-- _IS_HANDLER_FRAME_ABOVE_CONTAINER\nlocal retval --[[ boolean ]] =\n\tIsHandlerFrameAboveContainer(\n\t\thandler --[[ Vehicle ]], \n\t\tcontainer --[[ Entity ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsHeliLandingAreaBlocked",
    "hash": "0x634148744F385576",
    "code": "-- IS_HELI_LANDING_AREA_BLOCKED\nlocal retval --[[ boolean ]] =\n\tIsHeliLandingAreaBlocked(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsHeliPartBroken",
    "hash": "0xBC74B4BE25EB6C8A",
    "code": "-- IS_HELI_PART_BROKEN\nlocal retval --[[ boolean ]] =\n\tIsHeliPartBroken(\n\t\tvehicle --[[ Vehicle ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsMissionTrain",
    "hash": "0xAD464F2E18836BFC",
    "code": "-- _IS_MISSION_TRAIN\nlocal retval --[[ boolean ]] =\n\tIsMissionTrain(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsNitrousActive",
    "hash": "0x491E822B2C464FE4",
    "code": "-- IS_NITROUS_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsNitrousActive(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "Returns true if nitrous is active, otherwise false."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nReturns true if nitrous is active, otherwise false.\n\nNativeDB Introduced: 3095\n\nDetermines if the nitrous is currently activated in the specified vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsPedExclusiveDriverOfVehicle",
    "hash": "0xB09D25E77C33EB3F",
    "code": "-- _IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE\nlocal retval --[[ boolean ]], outIndex --[[ integer ]] =\n\tIsPedExclusiveDriverOfVehicle(\n\t\tped --[[ Ped ]], \n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsPlaneLandingGearIntact",
    "hash": "0x4198AB0022B15F87",
    "code": "-- IS_PLANE_LANDING_GEAR_INTACT\nlocal retval --[[ boolean ]] =\n\tIsPlaneLandingGearIntact(\n\t\tplane --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsPlaybackGoingOnForVehicle",
    "hash": "0x1C8A4C2C19E68EEC",
    "code": "-- IS_PLAYBACK_GOING_ON_FOR_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPlaybackGoingOnForVehicle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsPlaybackUsingAiGoingOnForVehicle",
    "hash": "0xAEA8FD591FAD4106",
    "code": "-- IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE\nlocal retval --[[ boolean ]] =\n\tIsPlaybackUsingAiGoingOnForVehicle(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsSeatWarpOnly",
    "hash": "0xF7F203E31F96F6A1",
    "code": "-- IS_SEAT_WARP_ONLY\nlocal retval --[[ boolean ]] =\n\tIsSeatWarpOnly(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsTaxiLightOn",
    "hash": "0x7504C0F113AB50FC",
    "code": "-- IS_TAXI_LIGHT_ON\nlocal retval --[[ boolean ]] =\n\tIsTaxiLightOn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelABicycle",
    "hash": "0xBF94DD42F63BDED2",
    "code": "-- IS_THIS_MODEL_A_BICYCLE\nlocal retval --[[ boolean ]] =\n\tIsThisModelABicycle(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelABike",
    "hash": "0xB50C0B0CEDC6CE84",
    "code": "-- IS_THIS_MODEL_A_BIKE\nlocal retval --[[ boolean ]] =\n\tIsThisModelABike(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelABoat",
    "hash": "0x45A9187928F4B9E3",
    "code": "-- IS_THIS_MODEL_A_BOAT\nlocal retval --[[ boolean ]] =\n\tIsThisModelABoat(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelACar",
    "hash": "0x7F6DB52EEFC96DF8",
    "code": "-- IS_THIS_MODEL_A_CAR\nlocal retval --[[ boolean ]] =\n\tIsThisModelACar(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelAHeli",
    "hash": "0xDCE4334788AF94EA",
    "code": "-- IS_THIS_MODEL_A_HELI\nlocal retval --[[ boolean ]] =\n\tIsThisModelAHeli(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelAJetski",
    "hash": "0x9537097412CF75FE",
    "code": "-- _IS_THIS_MODEL_A_JETSKI\nlocal retval --[[ boolean ]] =\n\tIsThisModelAJetski(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Checks if model is a boat, then checks for FLAG_IS_JETSKI."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelAPlane",
    "hash": "0xA0948AB42D7BA0DE",
    "code": "-- IS_THIS_MODEL_A_PLANE\nlocal retval --[[ boolean ]] =\n\tIsThisModelAPlane(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelAQuadbike",
    "hash": "0x39DAC362EE65FA28",
    "code": "-- IS_THIS_MODEL_A_QUADBIKE\nlocal retval --[[ boolean ]] =\n\tIsThisModelAQuadbike(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelATrain",
    "hash": "0xAB935175B22E822B",
    "code": "-- IS_THIS_MODEL_A_TRAIN\nlocal retval --[[ boolean ]] =\n\tIsThisModelATrain(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelAnAmphibiousCar",
    "hash": "0x633F6F44A537EBB6",
    "code": "-- _IS_THIS_MODEL_AN_AMPHIBIOUS_CAR\nlocal retval --[[ boolean ]] =\n\tIsThisModelAnAmphibiousCar(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsThisModelAnAmphibiousQuadbike",
    "hash": "0xA1A9FC1C76A6730D",
    "code": "-- _IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE\nlocal retval --[[ boolean ]] =\n\tIsThisModelAnAmphibiousQuadbike(\n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsToggleModOn",
    "hash": "0x84B233A8C8FC8AE7",
    "code": "-- IS_TOGGLE_MOD_ON\nlocal retval --[[ boolean ]] =\n\tIsToggleModOn(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsTurretSeat",
    "hash": "0xE33FFA906CE74880",
    "code": "-- IS_TURRET_SEAT\nlocal retval --[[ boolean ]] =\n\tIsTurretSeat(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "seatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nseatIndex: \n\nSee eSeatPosition declared in IS_VEHICLE_SEAT_FREE."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleAConvertible",
    "hash": "0x52F357A30698BCCE",
    "code": "-- IS_VEHICLE_A_CONVERTIBLE\nlocal retval --[[ boolean ]] =\n\tIsVehicleAConvertible(\n\t\tvehicle --[[ Vehicle ]], \n\t\tcheckRoofExtras --[[ boolean ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "checkRoofExtras: \n\nWhen set to false, the native checks only for vehicles with an animatable convertible roof. Set to true to include additional checks for vehicles that might have a non-animatable roof (i.e., using vehicle extras)"
    ],
    "returns": [
      "Returns true if the vehicle is a convertible with an animatable roof or if checkRoofExtras is true and the vehicle has a roof (animatable or not). Returns false if the vehicle does not meet the criteria."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\ncheckRoofExtras: \n\nWhen set to false, the native checks only for vehicles with an animatable convertible roof. Set to true to include additional checks for vehicles that might have a non-animatable roof (i.e., using vehicle extras)\n\nReturns:\n\nReturns true if the vehicle is a convertible with an animatable roof or if checkRoofExtras is true and the vehicle has a roof (animatable or not). Returns false if the vehicle does not meet the criteria.\n\nDetermines if a vehicle is a convertible with an animatable roof. This native checks if the specified vehicle model features a convertible roof that can be lowered or raised through an animation.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleAlarmActivated",
    "hash": "0x4319E335B71FFF34",
    "code": "-- IS_VEHICLE_ALARM_ACTIVATED\nlocal retval --[[ boolean ]] =\n\tIsVehicleAlarmActivated(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleAttachedToCargobob",
    "hash": "0xD40148F22E81A1D9",
    "code": "-- IS_VEHICLE_ATTACHED_TO_CARGOBOB\nlocal retval --[[ boolean ]] =\n\tIsVehicleAttachedToCargobob(\n\t\tcargobob --[[ Vehicle ]], \n\t\tvehicleAttached --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleAttachedToTowTruck",
    "hash": "0x146DF9EC4C4B9FD4",
    "code": "-- IS_VEHICLE_ATTACHED_TO_TOW_TRUCK\nlocal retval --[[ boolean ]] =\n\tIsVehicleAttachedToTowTruck(\n\t\ttowTruck --[[ Vehicle ]], \n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Scripts verify that towTruck is the first parameter, not the second."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleAttachedToTrailer",
    "hash": "0xE7CF3C4F9F489F0C",
    "code": "-- IS_VEHICLE_ATTACHED_TO_TRAILER\nlocal retval --[[ boolean ]] =\n\tIsVehicleAttachedToTrailer(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleBeingHalted",
    "hash": "0xC69BB1D832A710EF",
    "code": "-- _IS_VEHICLE_BEING_HALTED\nlocal retval --[[ boolean ]] =\n\tIsVehicleBeingHalted(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT\n_IS_VEHICLE_*\n\nNativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleBumperBouncing",
    "hash": "0x27B926779DEB502D",
    "code": "-- IS_VEHICLE_BUMPER_BOUNCING\nlocal retval --[[ boolean ]] =\n\tIsVehicleBumperBouncing(\n\t\tvehicle --[[ Vehicle ]], \n\t\tfrontBumper --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleBumperBrokenOff",
    "hash": "0x468056A6BB6F3846",
    "code": "-- IS_VEHICLE_BUMPER_BROKEN_OFF\nlocal retval --[[ boolean ]] =\n\tIsVehicleBumperBrokenOff(\n\t\tvehicle --[[ Vehicle ]], \n\t\tfront --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleDamaged",
    "hash": "0xBCDC5017D3CE1E9E",
    "code": "-- _IS_VEHICLE_DAMAGED\nlocal retval --[[ boolean ]] =\n\tIsVehicleDamaged(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Appears to return true if the vehicle has any damage, including cosmetically.\nGET_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleDoorDamaged",
    "hash": "0xB8E181E559464527",
    "code": "-- IS_VEHICLE_DOOR_DAMAGED\nlocal retval --[[ boolean ]] =\n\tIsVehicleDoorDamaged(\n\t\tveh --[[ Vehicle ]], \n\t\tdoorID --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleDoorFullyOpen",
    "hash": "0x3E933CFF7B111C22",
    "code": "-- IS_VEHICLE_DOOR_FULLY_OPEN\nlocal retval --[[ boolean ]] =\n\tIsVehicleDoorFullyOpen(\n\t\tvehicle --[[ Vehicle ]], \n\t\tdoorIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "doorIndex: \n\nThe index of the door to check."
    ],
    "returns": [
      "A bool indiciating if the specified door is fully open on the specified vehicle."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\ndoorIndex: \n\nThe index of the door to check.\n\nReturns:\n\nA bool indiciating if the specified door is fully open on the specified vehicle.\n\nSee eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleDriveable",
    "hash": "0x4C241E39B23DF959",
    "code": "-- IS_VEHICLE_DRIVEABLE\nlocal retval --[[ boolean ]] =\n\tIsVehicleDriveable(\n\t\tvehicle --[[ Vehicle ]], \n\t\tisOnFireCheck --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always 0 in the scripts.  \np1 = check if vehicle is on fire"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleEngineOnFire",
    "hash": "0xEC69ADF931AAE0C3",
    "code": "-- _IS_VEHICLE_ENGINE_ON_FIRE\nlocal retval --[[ boolean ]] =\n\tIsVehicleEngineOnFire(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check."
    ],
    "returns": [
      "Returns true when the engine of your vehicle is on fire. Returns false if it's not on fire."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nReturns:\n\nReturns true when the engine of your vehicle is on fire. Returns false if it's not on fire.\n\nOnly ever used once in decompiled scripts: am_pi_menu: Returns true if the engine is on fire, or if the vehicle engine health is < 0 and it has been on fire.\n\nIt sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.\n\nThis usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleExtraTurnedOn",
    "hash": "0xD2E6822DBFD6C8BD",
    "code": "-- IS_VEHICLE_EXTRA_TURNED_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleExtraTurnedOn(\n\t\tvehicle --[[ Vehicle ]], \n\t\textraId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleHighDetail",
    "hash": "0x1F25887F3C104278",
    "code": "-- IS_VEHICLE_HIGH_DETAIL\nlocal retval --[[ boolean ]] =\n\tIsVehicleHighDetail(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleInBurnout",
    "hash": "0x1297A88E081430EB",
    "code": "-- IS_VEHICLE_IN_BURNOUT\nlocal retval --[[ boolean ]] =\n\tIsVehicleInBurnout(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns whether the specified vehicle is currently in a burnout.  \nvb.net  \nPublic Function isVehicleInBurnout(vh As Vehicle) As Boolean  \n        Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)  \n    End Function"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleInGarageArea",
    "hash": "0xCEE4490CD57BB3C2",
    "code": "-- IS_VEHICLE_IN_GARAGE_AREA\nlocal retval --[[ boolean ]] =\n\tIsVehicleInGarageArea(\n\t\tgarageName --[[ string ]], \n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "garageName example \"Michael - Beverly Hills\""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleInSubmarineMode",
    "hash": "0xA77DC70BD689A1E5",
    "code": "-- IS_VEHICLE_IN_SUBMARINE_MODE\nlocal retval --[[ boolean ]] =\n\tIsVehicleInSubmarineMode(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleModGen9Exclusive",
    "hash": "0x00834EAC4A96E010",
    "code": "-- IS_VEHICLE_MOD_GEN9_EXCLUSIVE\nlocal retval --[[ boolean ]] =\n\tIsVehicleModGen9Exclusive(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodType --[[ integer ]], \n\t\tmodIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle",
      "modType: \n\nThe mod type (see SET_VEHICLE_MOD)",
      "modIndex: \n\nThe mod index"
    ],
    "returns": [
      "Returns whether the specified mod is exclusive to gen9 or not."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle\n\nmodType: \n\nThe mod type (see SET_VEHICLE_MOD)\n\nmodIndex: \n\nThe mod index\n\nReturns:\n\nReturns whether the specified mod is exclusive to gen9 or not."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleModel",
    "hash": "0x423E8DE37D934D89",
    "code": "-- IS_VEHICLE_MODEL\nlocal retval --[[ boolean ]] =\n\tIsVehicleModel(\n\t\tvehicle --[[ Vehicle ]], \n\t\tmodel --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleNeonLightEnabled",
    "hash": "0x8C4B92553E4766A5",
    "code": "-- _IS_VEHICLE_NEON_LIGHT_ENABLED\nlocal retval --[[ boolean ]] =\n\tIsVehicleNeonLightEnabled(\n\t\tvehicle --[[ Vehicle ]], \n\t\tindex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "indices:  \n0 = Left  \n1 = Right  \n2 = Front  \n3 = Back"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleOnAllWheels",
    "hash": "0xB104CD1BABF302E2",
    "code": "-- IS_VEHICLE_ON_ALL_WHEELS\nlocal retval --[[ boolean ]] =\n\tIsVehicleOnAllWheels(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean  \nReturn Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)  \n\t\t    End Function"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleParachuteActive",
    "hash": "0x3DE51E9C80B116CF",
    "code": "-- _IS_VEHICLE_PARACHUTE_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsVehicleParachuteActive(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleRocketBoostActive",
    "hash": "0x3D34E80EED4AE3BE",
    "code": "-- _IS_VEHICLE_ROCKET_BOOST_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsVehicleRocketBoostActive(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleSearchlightOn",
    "hash": "0xC0F97FCE55094987",
    "code": "-- IS_VEHICLE_SEARCHLIGHT_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleSearchlightOn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Possibly: Returns whether the searchlight (found on police vehicles) is toggled on."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleSeatFree",
    "hash": "0x22AC59A870E6A669",
    "code": "-- IS_VEHICLE_SEAT_FREE\nlocal retval --[[ boolean ]] =\n\tIsVehicleSeatFree(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check.",
      "seatIndex: \n\nThe eSeatPosition or -2 for any vehicle seat."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check.\n\nseatIndex: \n\nThe eSeatPosition or -2 for any vehicle seat.\n\nSeat indices range from -1 to GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS minus one.\n\n// CTaskExitVehicleSeat::eSeatPosition - 1\nenum eSeatPosition\n{\n    SF_FrontDriverSide = -1,\n    SF_FrontPassengerSide = 0,\n    SF_BackDriverSide = 1,\n    SF_BackPassengerSide = 2,\n    SF_AltFrontDriverSide = 3,\n    SF_AltFrontPassengerSide = 4,\n    SF_AltBackDriverSide = 5,\n    SF_AltBackPassengerSide = 6,\n};\n\nNativeDB Added Parameter 3: BOOL isTaskRunning\n\nisTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleSirenAudioOn",
    "hash": "0xB5CC40FBCB586380",
    "code": "-- IS_VEHICLE_SIREN_AUDIO_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleSirenAudioOn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleSirenOn",
    "hash": "0x4C9BF537BE2634B2",
    "code": "-- IS_VEHICLE_SIREN_ON\nlocal retval --[[ boolean ]] =\n\tIsVehicleSirenOn(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "Returns false if siren and lights are disabled or true if they are enabled."
    ],
    "description": "Returns:\n\nReturns false if siren and lights are disabled or true if they are enabled.\n\nReturns whether the vehicle's lights and sirens are on."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleSlipstreamLeader",
    "hash": "0x48C633E94A8142A7",
    "code": "-- _IS_VEHICLE_SLIPSTREAM_LEADER\nlocal retval --[[ boolean ]] =\n\tIsVehicleSlipstreamLeader(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "True if the vehicle is being slipstreamed by another vehicle"
    ],
    "description": "Returns:\n\nTrue if the vehicle is being slipstreamed by another vehicle"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleSprayable",
    "hash": "0x8D474C8FAEFF6CDE",
    "code": "-- IS_VEHICLE_SPRAYABLE\nlocal retval --[[ boolean ]] =\n\tIsVehicleSprayable(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns false if the vehicle has the FLAG_NO_RESPRAY flag set."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleStolen",
    "hash": "0x4AF9BD80EEBEB453",
    "code": "-- IS_VEHICLE_STOLEN\nlocal retval --[[ boolean ]] =\n\tIsVehicleStolen(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleStopped",
    "hash": "0x5721B434AD84D57A",
    "code": "-- IS_VEHICLE_STOPPED\nlocal retval --[[ boolean ]] =\n\tIsVehicleStopped(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [
      "True if the vehicle's speed is equal to, or less than 0.02 meters per second, or 0.05 meters per second, if the vehicle's handbrake is engaged."
    ],
    "description": "Returns:\n\nTrue if the vehicle's speed is equal to, or less than 0.02 meters per second, or 0.05 meters per second, if the vehicle's handbrake is engaged.\n\nReturns true if the vehicle's current speed is less than, or equal to 0.0025f.\nFor some vehicles it returns true if the current speed is <= 0.00039999999."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleStoppedAtTrafficLights",
    "hash": "0x2959F696AE390A99",
    "code": "-- IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS\nlocal retval --[[ boolean ]] =\n\tIsVehicleStoppedAtTrafficLights(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle."
    ],
    "returns": [
      "Will return true if the vehicle is at an amber light junction and the vehicle driver's personality is set to not run amber lights, or if the vehicle is at a red light, regardless of the driver's personality. Will return false if the vehicle is stopped behind another vehicle waiting at a traffic light."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nReturns:\n\nWill return true if the vehicle is at an amber light junction and the vehicle driver's personality is set to not run amber lights, or if the vehicle is at a red light, regardless of the driver's personality. Will return false if the vehicle is stopped behind another vehicle waiting at a traffic light.\n\nThis native checks if the given vehicle is stopped at a red or amber traffic light junction, provided the driver's personality is set to not run amber lights."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleStuckOnRoof",
    "hash": "0xB497F06B288DCFDF",
    "code": "-- IS_VEHICLE_STUCK_ON_ROOF\nlocal retval --[[ boolean ]] =\n\tIsVehicleStuckOnRoof(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleStuckTimerUp",
    "hash": "0x679BE1DAF71DA874",
    "code": "-- IS_VEHICLE_STUCK_TIMER_UP\nlocal retval --[[ boolean ]] =\n\tIsVehicleStuckTimerUp(\n\t\tvehicle --[[ Vehicle ]], \n\t\tp1 --[[ integer ]], \n\t\tp2 --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleTyreBurst",
    "hash": "0xBA291848A0815CA9",
    "code": "-- IS_VEHICLE_TYRE_BURST\nlocal retval --[[ boolean ]] =\n\tIsVehicleTyreBurst(\n\t\tvehicle --[[ Vehicle ]], \n\t\twheelID --[[ integer ]], \n\t\tisBurstToRim --[[ boolean ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle to check the tire status of",
      "wheelID: \n\nThe wheel id to check, see eVehicleWheels",
      "isBurstToRim: \n\nWhether it should only return true if the tire is bursted to its rims"
    ],
    "returns": [
      "Returns true if the vehicle tire is poped, false otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to check the tire status of\n\nwheelID: \n\nThe wheel id to check, see eVehicleWheels\n\nisBurstToRim: \n\nWhether it should only return true if the tire is bursted to its rims\n\nReturns:\n\nReturns true if the vehicle tire is poped, false otherwise.\n\nenum eVehicleWheels\n{\n\tWHEEL_LF = 0, // Vehicle Left front\n\tWHEEL_RF = 1, // Vehicle Right front\n\tWHEEL_LM = 2, // Vehicle Left middle\n\tWHEEL_RM = 3, // Vehicle Right middle\n\tWHEEL_LR = 4, // Vehicle Left rear\n\tWHEEL_RR = 5, // Vehicle Right rear\n\tWHEEL_BF = 6, // Bike front\n\tWHEEL_BR = 7, // Bike rear\n\tMAX_WHEELS = 8\n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleVisible",
    "hash": "0xAA0A52D24FB98293",
    "code": "-- IS_VEHICLE_VISIBLE\nlocal retval --[[ boolean ]] =\n\tIsVehicleVisible(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleWeaponDisabled",
    "hash": "0x563B65A643ED072E",
    "code": "-- _IS_VEHICLE_WEAPON_DISABLED\nlocal retval --[[ boolean ]] =\n\tIsVehicleWeaponDisabled(\n\t\tweaponHash --[[ Hash ]], \n\t\tvehicle --[[ Vehicle ]], \n\t\towner --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "IsVehicleWindowIntact",
    "hash": "0x46E571A0E20D01F1",
    "code": "-- IS_VEHICLE_WINDOW_INTACT\nlocal retval --[[ boolean ]] =\n\tIsVehicleWindowIntact(\n\t\tvehicle --[[ Vehicle ]], \n\t\twindowIndex --[[ integer ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle",
      "windowIndex: \n\nThe index of the window"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle\n\nwindowIndex: \n\nThe index of the window\n\nenum eWindowId {\n\tVEH_EXT_WINDOW_LF = 0,\n\tVEH_EXT_WINDOW_RF = 1,\n\tVEH_EXT_WINDOW_LR = 2,\n\tVEH_EXT_WINDOW_RR = 3,\n\tVEH_EXT_WINDOW_LM = 4,\n\tVEH_EXT_WINDOW_RM = 5,\n\tVEH_EXT_WINDSCREEN = 6,\n\tVEH_EXT_WINDSCREEN_R = 7,\n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "LowerConvertibleRoof",
    "hash": "0xDED51F703D0FA83D",
    "code": "-- LOWER_CONVERTIBLE_ROOF\nLowerConvertibleRoof(\n\tvehicle --[[ Vehicle ]], \n\tinstantlyLower --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe convertible vehicle whose roof you want to lower.",
      "instantlyLower: \n\nA boolean value indicating whether the roof should be lowered instantly without transitioning through the animation. Set to false to lower the roof with the animation or true to lower it instantly."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe convertible vehicle whose roof you want to lower.\n\ninstantlyLower: \n\nA boolean value indicating whether the roof should be lowered instantly without transitioning through the animation. Set to false to lower the roof with the animation or true to lower it instantly.\n\nLowers the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of lowering the roof.\n\nYou can check if the vehicle has an convertible roof using IS_VEHICLE_A_CONVERTIBLE.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "LowerRetractableWheels",
    "hash": "0x5335BE58C083E74E",
    "code": "-- _LOWER_RETRACTABLE_WHEELS\nLowerRetractableWheels(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ModifyVehicleTopSpeed",
    "hash": "0x93A3996368C94158",
    "code": "-- MODIFY_VEHICLE_TOP_SPEED\nModifyVehicleTopSpeed(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "NetworkUseHighPrecisionVehicleBlending",
    "hash": "0xEC0C1D4922AF9754",
    "code": "-- _NETWORK_USE_HIGH_PRECISION_VEHICLE_BLENDING\nNetworkUseHighPrecisionVehicleBlending(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Implemented only for Trains.\nNativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "OpenBombBayDoors",
    "hash": "0x87E7F24270732CB1",
    "code": "-- OPEN_BOMB_BAY_DOORS\nOpenBombBayDoors(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "PausePlaybackRecordedVehicle",
    "hash": "0x632A689BF42301B1",
    "code": "-- PAUSE_PLAYBACK_RECORDED_VEHICLE\nPausePlaybackRecordedVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "PopOutVehicleWindscreen",
    "hash": "0x6D645D59FB5F5AD3",
    "code": "-- POP_OUT_VEHICLE_WINDSCREEN\nPopOutVehicleWindscreen(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Detaches the vehicle's windscreen."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "PreloadVehicleMod",
    "hash": "0x758F49C24925568A",
    "code": "-- PRELOAD_VEHICLE_MOD\nPreloadVehicleMod(\n\tp0 --[[ Any ]], \n\tmodType --[[ integer ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RaiseConvertibleRoof",
    "hash": "0x8F5FB35D7E88FC70",
    "code": "-- RAISE_CONVERTIBLE_ROOF\nRaiseConvertibleRoof(\n\tvehicle --[[ Vehicle ]], \n\tinstantlyRaise --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe convertible vehicle whose roof you wish to raise.",
      "instantlyRaise: \n\nA boolean indicating whether the roof should be raised instantly without the animation transition. Set false to raise the roof with the animation, or true to raise it immediately."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe convertible vehicle whose roof you wish to raise.\n\ninstantlyRaise: \n\nA boolean indicating whether the roof should be raised instantly without the animation transition. Set false to raise the roof with the animation, or true to raise it immediately.\n\nRaises the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of raising the roof.\n\nYou can check if the vehicle has an convertible roof using IS_VEHICLE_A_CONVERTIBLE.\n\nTo lower the convertible roof, you can use LOWER_CONVERTIBLE_ROOF.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RaiseRetractableWheels",
    "hash": "0xF660602546D27BA8",
    "code": "-- _RAISE_RETRACTABLE_WHEELS\nRaiseRetractableWheels(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ReleasePreloadMods",
    "hash": "0x445D79F995508307",
    "code": "-- RELEASE_PRELOAD_MODS\nReleasePreloadMods(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemovePickUpRopeForCargobob",
    "hash": "0x9768CF648F54C804",
    "code": "-- REMOVE_PICK_UP_ROPE_FOR_CARGOBOB\nRemovePickUpRopeForCargobob(\n\tcargobob --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Retracts the hook on the cargobob.  \nNote: after you retract it the natives for dropping the hook no longer work"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveRoadNodeSpeedZone",
    "hash": "0x1033371FC8E842A7",
    "code": "-- REMOVE_ROAD_NODE_SPEED_ZONE\nlocal retval --[[ boolean ]] =\n\tRemoveRoadNodeSpeedZone(\n\t\tspeedzone --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleAsset",
    "hash": "0xACE699C71AB9DEB5",
    "code": "-- REMOVE_VEHICLE_ASSET\nRemoveVehicleAsset(\n\tvehicleAsset --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleCombatAvoidanceArea",
    "hash": "0xE30524E1871F481D",
    "code": "-- REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA\nRemoveVehicleCombatAvoidanceArea(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleHighDetailModel",
    "hash": "0x00689CDE5F7C6787",
    "code": "-- REMOVE_VEHICLE_HIGH_DETAIL_MODEL\nRemoveVehicleHighDetailModel(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleMod",
    "hash": "0x92D619E420858204",
    "code": "-- REMOVE_VEHICLE_MOD\nRemoveVehicleMod(\n\tvehicle --[[ Vehicle ]], \n\tmodType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleRecording",
    "hash": "0xF1160ACCF98A3FC8",
    "code": "-- REMOVE_VEHICLE_RECORDING\nRemoveVehicleRecording(\n\trecording --[[ integer ]], \n\tscript --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See REQUEST_VEHICLE_RECORDING"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleShadowEffect",
    "hash": "0xF87D9F2301F7D206",
    "code": "-- _REMOVE_VEHICLE_SHADOW_EFFECT\nRemoveVehicleShadowEffect(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Remove the weird shadow applied by _SET_VEHICLE_SHADOW_EFFECT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleStuckCheck",
    "hash": "0x8386BFB614D06749",
    "code": "-- REMOVE_VEHICLE_STUCK_CHECK\nRemoveVehicleStuckCheck(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleUpsidedownCheck",
    "hash": "0xC53EB42A499A7E90",
    "code": "-- REMOVE_VEHICLE_UPSIDEDOWN_CHECK\nRemoveVehicleUpsidedownCheck(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehicleWindow",
    "hash": "0xA711568EEDB43069",
    "code": "-- REMOVE_VEHICLE_WINDOW\nRemoveVehicleWindow(\n\tvehicle --[[ Vehicle ]], \n\twindowIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eWindowId declared in IS_VEHICLE_WINDOW_INTACT."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RemoveVehiclesFromGeneratorsInArea",
    "hash": "0x46A1E1A299EC4BBA",
    "code": "-- REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA\nRemoveVehiclesFromGeneratorsInArea(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tunk --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RequestVehicleAsset",
    "hash": "0x81A15811460FAB3A",
    "code": "-- REQUEST_VEHICLE_ASSET\nRequestVehicleAsset(\n\tvehicleHash --[[ Hash ]], \n\tvehicleAsset --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);  \nvehicle found that have asset's:  \ncargobob3  \nsubmersible  \nblazer"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RequestVehicleDashboardScaleformMovie",
    "hash": "0xDBA3C090E3D74690",
    "code": "-- _REQUEST_VEHICLE_DASHBOARD_SCALEFORM_MOVIE\nRequestVehicleDashboardScaleformMovie(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "REQUEST_VEHICLE_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RequestVehicleHighDetailModel",
    "hash": "0xA6E9FDCB2C76785E",
    "code": "-- REQUEST_VEHICLE_HIGH_DETAIL_MODEL\nRequestVehicleHighDetailModel(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RequestVehicleRecording",
    "hash": "0xAF514CABE74CBF15",
    "code": "-- REQUEST_VEHICLE_RECORDING\nRequestVehicleRecording(\n\trecording --[[ integer ]], \n\tscript --[[ string ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Request the vehicle recording defined by the lowercase format string \"%s%03d.yvr\". For example, REQUEST_VEHICLE_RECORDING(1, \"FBIs1UBER\") corresponds to fbis1uber001.yvr.\nFor all vehicle recording/playback natives, \"script\" is a common prefix that usually corresponds to the script/mission the recording is used in, \"recording\" is its int suffix, and \"id\" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.\nNote that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ResetVehicleStuckTimer",
    "hash": "0xD7591B0065AFAA7A",
    "code": "-- RESET_VEHICLE_STUCK_TIMER\nResetVehicleStuckTimer(\n\tvehicle --[[ Vehicle ]], \n\tnullAttributes --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The inner function has a switch on the second parameter. It's the stuck timer index.  \nHere's some pseudo code I wrote for the inner function:  \nvoid __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)  \n{  \n\tswitch (timerIndex)  \n\t{  \n\tcase 0:  \nunknownClassInVehicle->FirstStuckTimer = (WORD)0u;  \n\tcase 1:  \nunknownClassInVehicle->SecondStuckTimer = (WORD)0u;  \n\tcase 2:  \nunknownClassInVehicle->ThirdStuckTimer = (WORD)0u;  \n\tcase 3:  \nunknownClassInVehicle->FourthStuckTimer = (WORD)0u;  \n\tcase 4:  \nunknownClassInVehicle->FirstStuckTimer = (WORD)0u;  \nunknownClassInVehicle->SecondStuckTimer = (WORD)0u;  \nunknownClassInVehicle->ThirdStuckTimer = (WORD)0u;  \nunknownClassInVehicle->FourthStuckTimer = (WORD)0u;  \nbreak;  \n\t};  \n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ResetVehicleWheels",
    "hash": "0x21D2E5662C1F6FED",
    "code": "-- RESET_VEHICLE_WHEELS\nResetVehicleWheels(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RollDownWindow",
    "hash": "0x7AD9E6CE657D69E3",
    "code": "-- ROLL_DOWN_WINDOW\nRollDownWindow(\n\tvehicle --[[ Vehicle ]], \n\twindowIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eWindowId declared in IS_VEHICLE_WINDOW_INTACT."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RollDownWindows",
    "hash": "0x85796B0549DDE156",
    "code": "-- ROLL_DOWN_WINDOWS\nRollDownWindows(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Roll down all the windows of the vehicle passed through the first parameter."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "RollUpWindow",
    "hash": "0x602E548F46E24D59",
    "code": "-- ROLL_UP_WINDOW\nRollUpWindow(\n\tvehicle --[[ Vehicle ]], \n\twindowIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eWindowId declared in IS_VEHICLE_WINDOW_INTACT."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetAllLowPriorityVehicleGeneratorsActive",
    "hash": "0x608207E7A8FB787C",
    "code": "-- SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE\nSetAllLowPriorityVehicleGeneratorsActive(\n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetAllVehicleGeneratorsActive",
    "hash": "0x34AD89078831A4BC",
    "code": "-- SET_ALL_VEHICLE_GENERATORS_ACTIVE\nSetAllVehicleGeneratorsActive()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetAllVehicleGeneratorsActiveInArea",
    "hash": "0xC12321827687FE4D",
    "code": "-- SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA\nSetAllVehicleGeneratorsActiveInArea(\n\tx1 --[[ number ]], \n\ty1 --[[ number ]], \n\tz1 --[[ number ]], \n\tx2 --[[ number ]], \n\ty2 --[[ number ]], \n\tz2 --[[ number ]], \n\tp6 --[[ boolean ]], \n\tp7 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetAmbientVehicleRangeMultiplierThisFrame",
    "hash": "0x90B6DA738A9A25DA",
    "code": "-- SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME\nSetAmbientVehicleRangeMultiplierThisFrame(\n\trange --[[ number ]]\n)",
    "parameters": [
      "range: \n\nMost likely a value between 0.0 and 1.0."
    ],
    "returns": [],
    "description": "Parameters:\n\nrange: \n\nMost likely a value between 0.0 and 1.0."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBikeOnStand",
    "hash": "0x9CFA4896C3A53CBB",
    "code": "-- SET_BIKE_ON_STAND\nSetBikeOnStand(\n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only works on bikes, both X and Y work in the -1 - 1 range.\nX forces the bike to turn left or right (-1, 1)\nY forces the bike to lean to the left or to the right (-1, 1)\nExample with X -1/Y 1\nhttp://i.imgur.com/TgIuAPJ.jpg"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBoatAnchor",
    "hash": "0x75DBEC174AEEAD10",
    "code": "-- SET_BOAT_ANCHOR\nSetBoatAnchor(\n\tboat --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "boat: \n\nThe target boat.",
      "toggle: \n\nSet the anchor state true deploys the anchor, false raises it."
    ],
    "returns": [],
    "description": "Parameters:\n\nboat: \n\nThe target boat.\n\ntoggle: \n\nSet the anchor state true deploys the anchor, false raises it.\n\nSets the anchor state for a boat.\n\nNativeDB Introduced: v323\n\nNote: You might want to check if you can use your anchor before with CAN_ANCHOR_BOAT_HERE."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBoatBoomPositionRatio",
    "hash": "0xF488C566413B4232",
    "code": "-- _SET_BOAT_BOOM_POSITION_RATIO\nSetBoatBoomPositionRatio(\n\tvehicle --[[ Vehicle ]], \n\tratio --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe TR3 vehicle.",
      "ratio: \n\nA value between 0.0 (left) and 1.0 (back)"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe TR3 vehicle.\n\nratio: \n\nA value between 0.0 (left) and 1.0 (back)\n\nSets the boat boom position for the TR3 trailer.\n\nRatio value is between 0.0 and 1.0, where 0.0 is 90 degrees to the left of the boat, and 1.0 is just slightly to the right/back of the boat.\n\nTo get the current boom position ratio, use GET_BOAT_BOOM_POSITION_RATIO."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBoatDisableAvoidance",
    "hash": "0x0A6A279F3AA4FD70",
    "code": "-- SET_BOAT_DISABLE_AVOIDANCE\nSetBoatDisableAvoidance(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBoatIsSinking",
    "hash": "0xBD32E46AA95C1DD2",
    "code": "-- _SET_BOAT_IS_SINKING\nSetBoatIsSinking(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBoatLowLodAnchorDistance",
    "hash": "0xE842A9398079BD82",
    "code": "-- SET_BOAT_LOW_LOD_ANCHOR_DISTANCE\nSetBoatLowLodAnchorDistance(\n\tboat --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [
      "boat: \n\nThe target boat.",
      "value: \n\nThe distance at which the LOD switch occurs. Set to -1.0 to reset the LOD distance to the default value."
    ],
    "returns": [],
    "description": "Parameters:\n\nboat: \n\nThe target boat.\n\nvalue: \n\nThe distance at which the LOD switch occurs. Set to -1.0 to reset the LOD distance to the default value.\n\nSets the distance from the player at which anchored boats switch between high and low LOD (Level of Detail) buoyancy mode.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBoatRemainsAnchoredWhilePlayerIsDriver",
    "hash": "0xE3EBAAE484798530",
    "code": "-- SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER\nSetBoatRemainsAnchoredWhilePlayerIsDriver(\n\tboat --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "boat: \n\nThe target boat.",
      "toggle: \n\nSet the anchoring behavior. If true, the boat will remain anchored even when a player is driving. If false, normal anchoring behavior applies (anchor is raised when a player drives)."
    ],
    "returns": [],
    "description": "Parameters:\n\nboat: \n\nThe target boat.\n\ntoggle: \n\nSet the anchoring behavior. If true, the boat will remain anchored even when a player is driving. If false, normal anchoring behavior applies (anchor is raised when a player drives).\n\nSets whether a boat should remain anchored even when a player is driving it.\n\nNote: This native is always used with SET_BOAT_ANCHOR.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetBoatSinksWhenWrecked",
    "hash": "0x8F719973E1445BA2",
    "code": "-- SET_BOAT_SINKS_WHEN_WRECKED\nSetBoatSinksWhenWrecked(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCamberedWheelsDisabled",
    "hash": "0x1201E8A3290A3B98",
    "code": "-- _SET_CAMBERED_WHEELS_DISABLED\nSetCamberedWheelsDisabled(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCanResprayVehicle",
    "hash": "0x52BBA29D5EC69356",
    "code": "-- SET_CAN_RESPRAY_VEHICLE\nSetCanResprayVehicle(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hardcoded to not work in multiplayer."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCarBootOpen",
    "hash": "0xFC40CBF7B90CA77C",
    "code": "-- SET_CAR_BOOT_OPEN\nSetCarBootOpen(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCarHighSpeedBumpSeverityMultiplier",
    "hash": "0x84FD40F56075E816",
    "code": "-- _SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER\nSetCarHighSpeedBumpSeverityMultiplier(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Something to do with \"high speed bump severity\"?  \nif (!sub_87a46(\"SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER\")) {  \n    VEHICLE::_84FD40F56075E816(0.0);  \n    sub_8795b(\"SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER\", 1);  \n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobExcludeFromPickupEntity",
    "hash": "0x1F34B0626C594380",
    "code": "-- SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY\nSetCargobobExcludeFromPickupEntity(\n\tcargobob --[[ Vehicle ]], \n\tentity --[[ Entity ]]\n)",
    "parameters": [
      "cargobob: \n\nThe Cargobob helicopter from which the entity is not to be detached",
      "entity: \n\nThe entity to remain attached to the Cargobob."
    ],
    "returns": [],
    "description": "Parameters:\n\ncargobob: \n\nThe Cargobob helicopter from which the entity is not to be detached\n\nentity: \n\nThe entity to remain attached to the Cargobob.\n\nPrevents a specified entity from being detached from a Cargobob, even in the event of collisions."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobForceDontDetachVehicle",
    "hash": "0x571FEB383F629926",
    "code": "-- SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE\nSetCargobobForceDontDetachVehicle(\n\tcargobob --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops cargobob from being able to detach the attached vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobHookCanAttach",
    "hash": "0x94A68DA412C4007D",
    "code": "-- _SET_CARGOBOB_HOOK_CAN_ATTACH\nSetCargobobHookCanAttach(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops the cargobob from being able to attach any vehicle\nNativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetActive",
    "hash": "0x9A665550F8DA349B",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_ACTIVE\nSetCargobobPickupMagnetActive(\n\tcargobob --[[ Vehicle ]], \n\tisActive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Won't attract or magnetize to any helicopters or planes of course, but that's common sense."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetEffectRadius",
    "hash": "0xA17BAD153B51547E",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_EFFECT_RADIUS\nSetCargobobPickupMagnetEffectRadius(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetFalloff",
    "hash": "0x685D5561680D088B",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_FALLOFF\nSetCargobobPickupMagnetFalloff(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetPullRopeLength",
    "hash": "0x6D8EAC07506291FB",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH\nSetCargobobPickupMagnetPullRopeLength(\n\tcargobob --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetPullStrength",
    "hash": "0xED8286F71A819BAA",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH\nSetCargobobPickupMagnetPullStrength(\n\tcargobob --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetReducedFalloff",
    "hash": "0x66979ACF5102FD2F",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF\nSetCargobobPickupMagnetReducedFalloff(\n\tcargobob --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetReducedStrength",
    "hash": "0xE301BD63E9E13CF0",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH\nSetCargobobPickupMagnetReducedStrength(\n\tcargobob --[[ Vehicle ]], \n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupMagnetStrength",
    "hash": "0xBCBFCD9D1DAC19E2",
    "code": "-- SET_CARGOBOB_PICKUP_MAGNET_STRENGTH\nSetCargobobPickupMagnetStrength(\n\tcargobob --[[ Vehicle ]], \n\tstrength --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupRopeDampingMultiplier",
    "hash": "0xCF1182F682F65307",
    "code": "-- SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER\nSetCargobobPickupRopeDampingMultiplier(\n\tcargobob --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetCargobobPickupRopeType",
    "hash": "0x0D5F65A8F4EBDAB5",
    "code": "-- SET_CARGOBOB_PICKUP_ROPE_TYPE\nSetCargobobPickupRopeType(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetConvertibleRoof",
    "hash": "0xF39C4F538B5124C2",
    "code": "-- SET_CONVERTIBLE_ROOF\nSetConvertibleRoof(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to which the roof state will be applied.",
      "toggle: \n\nBoolean value where true adds the roof and false removes it, applicable only if the vehicle has a version with and without a roof."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to which the roof state will be applied.\n\ntoggle: \n\nBoolean value where true adds the roof and false removes it, applicable only if the vehicle has a version with and without a roof.\n\nEnables or disables the convertible roof on vehicles that support old-style GTA IV roofs, which are not animated. Setting toggle to true will apply the roof to the vehicle, and setting it to false will remove the roof, assuming the vehicle has versions with and without a roof.\n\nIf you want to lock or unlock the roof mechanism, use SET_CONVERTIBLE_ROOF_LATCH_STATE.\n\nYou can check if the vehicle has a roof with DOES_VEHICLE_HAVE_ROOF.\n\nNativeDB Introduced: v323\nVehicles with both roofed and roofless versions (others may exist; this list is compiled from decompiled scripts).\nchino\nvoltic\nbuccaneer\nbuccaneer2\nchino2\nfaction\nfaction2\nmamba"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetConvertibleRoofLatchState",
    "hash": "0x1A78AD3D8240536F",
    "code": "-- SET_CONVERTIBLE_ROOF_LATCH_STATE\nSetConvertibleRoofLatchState(\n\tvehicle --[[ Vehicle ]], \n\tbLatched --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle whose convertible roof latch state is to be set.",
      "bLatched: \n\nA boolean value indicating the desired latch state of the roof. Set to true to latch (lock) the roof, preventing it from being opened. Set to false to unlatch (unlock) the roof, allowing it to be opened or closed."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle whose convertible roof latch state is to be set.\n\nbLatched: \n\nA boolean value indicating the desired latch state of the roof. Set to true to latch (lock) the roof, preventing it from being opened. Set to false to unlatch (unlock) the roof, allowing it to be opened or closed.\n\nThis native is used to latch or unlatch the convertible roof of a vehicle. It allows for direct control over the roof's mechanism without actually opening or closing the roof. This can be useful for scenarios where you need to prepare a vehicle's roof to be opened or closed by another action or to ensure it remains fixed in its current state regardless of other interactions.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDeployHeliStubWings",
    "hash": "0xB251E0B33E58B424",
    "code": "-- _SET_DEPLOY_HELI_STUB_WINGS\nSetDeployHeliStubWings(\n\tvehicle --[[ Vehicle ]], \n\tdeploy --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only used with the \"akula\" and \"annihilator2\" in the decompiled native scripts.\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableBmxExtraTrickForces",
    "hash": "0x26D99D5A82FD18E8",
    "code": "-- SET_DISABLE_BMX_EXTRA_TRICK_FORCES\nSetDisableBmxExtraTrickForces(\n\tdisableExtraTrickForces --[[ boolean ]]\n)",
    "parameters": [
      "disableExtraTrickForces: \n\nSet to true to disable the extra forces applied for tricks on BMX bicycles, making the bike behave more like a regular bicycle without trick capabilities. Set to false to allow BMX bikes to perform tricks normally."
    ],
    "returns": [],
    "description": "Parameters:\n\ndisableExtraTrickForces: \n\nSet to true to disable the extra forces applied for tricks on BMX bicycles, making the bike behave more like a regular bicycle without trick capabilities. Set to false to allow BMX bikes to perform tricks normally.\n\nDisables the additional physics forces applied to BMX bikes that enable them to perform tricks.\n\nNativeDB Introduced: v463"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableExplodeFromBodyDamageOnCollision",
    "hash": "0x26E13D440E7F6064",
    "code": "-- SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION\nSetDisableExplodeFromBodyDamageOnCollision(\n\tvehicle --[[ Vehicle ]], \n\tdisableExplode --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to apply this setting to.",
      "disableExplode: \n\ntrue to disable explosion from body damage on collision; false to allow explosions as normal."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to apply this setting to.\n\ndisableExplode: \n\ntrue to disable explosion from body damage on collision; false to allow explosions as normal.\n\nThis only works for planes.\n\nPrevents a vehicle from exploding upon sustaining body damage from physical collisions.\n\nFor helicopters, you might want to check SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE instead.\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableExplodeFromBodyDamageReceivedByAiVehicle",
    "hash": "0xB0B7DF5CB876FF5E",
    "code": "-- _SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_RECEIVED_BY_AI_VEHICLE\nSetDisableExplodeFromBodyDamageReceivedByAiVehicle(\n\tplane --[[ Vehicle ]], \n\tdisable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407\n\nPrevents the plane from exploding when taking body damage if the inflictor is an AI-controlled vehicle. Only works for planes."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableHeliExplodeFromBodyDamage",
    "hash": "0xEDBC8405B3895CC9",
    "code": "-- SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE\nSetDisableHeliExplodeFromBodyDamage(\n\thelicopter --[[ Vehicle ]], \n\tdisableExplode --[[ boolean ]]\n)",
    "parameters": [
      "helicopter: \n\nThe helicopter to apply this setting to.",
      "disableExplode: \n\ntrue to disable explosion from body damage on collision; false to allow explosions as normal."
    ],
    "returns": [],
    "description": "Parameters:\n\nhelicopter: \n\nThe helicopter to apply this setting to.\n\ndisableExplode: \n\ntrue to disable explosion from body damage on collision; false to allow explosions as normal.\n\nThis works on helicopters and planes.\n\nPrevents a helicopter from exploding due to relatively minor body damage.\n\nNativeDB Introduced: v1103"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableHoverModeFlight",
    "hash": "0x2D55FE374D5FDB91",
    "code": "-- SET_DISABLE_HOVER_MODE_FLIGHT\nSetDisableHoverModeFlight(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to which the toggle will be applied.",
      "toggle: \n\nBoolean parameter where setting true disables the vehicle's wings, preventing flight. Setting it to false allows the vehicle to fly as usual."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to which the toggle will be applied.\n\ntoggle: \n\nBoolean parameter where setting true disables the vehicle's wings, preventing flight. Setting it to false allows the vehicle to fly as usual.\n\nDisables wings for Deluxo and Oppressor MK II. For the Deluxo, it retracts the wings immediately, preventing flight. For the Oppressor Mk II, the wings retract after landing and take-off is not possible, though it can still glide if launched into the air."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisablePretendOccupants",
    "hash": "0x25367DE49D64CF16",
    "code": "-- SET_DISABLE_PRETEND_OCCUPANTS\nSetDisablePretendOccupants(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableRandomTrainsThisFrame",
    "hash": "0xD4B8E3D1917BC86B",
    "code": "-- SET_DISABLE_RANDOM_TRAINS_THIS_FRAME\nSetDisableRandomTrainsThisFrame(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableSuperdummyMode",
    "hash": "0xB088E9A47AE6EDD5",
    "code": "-- _SET_DISABLE_SUPERDUMMY_MODE\nSetDisableSuperdummyMode(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableTurretMovementThisFrame",
    "hash": "0xE615BB7A7752C76A",
    "code": "-- _SET_DISABLE_TURRET_MOVEMENT_THIS_FRAME\nSetDisableTurretMovementThisFrame(\n\tvehicle --[[ Vehicle ]], \n\tturretIdx --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.\n\nNativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableVehicleEngineFires",
    "hash": "0x91A0BD635321F145",
    "code": "-- SET_DISABLE_VEHICLE_ENGINE_FIRES\nSetDisableVehicleEngineFires(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableVehicleFlightNozzlePosition",
    "hash": "0xCE2B43770B655F8F",
    "code": "-- _SET_DISABLE_VEHICLE_FLIGHT_NOZZLE_POSITION\nSetDisableVehicleFlightNozzlePosition(\n\tvehicle --[[ Vehicle ]], \n\tdirection --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "True stops vtols from switching modes. Doesn't stop the sound though.\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableVehiclePetrolTankDamage",
    "hash": "0x37C8252A7C92D017",
    "code": "-- SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE\nSetDisableVehiclePetrolTankDamage(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableVehiclePetrolTankFires",
    "hash": "0x465BF26AB9684352",
    "code": "-- SET_DISABLE_VEHICLE_PETROL_TANK_FIRES\nSetDisableVehiclePetrolTankFires(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableVehicleUnk",
    "hash": "0x143921E45EC44D62",
    "code": "-- _SET_DISABLE_VEHICLE_UNK\nSetDisableVehicleUnk(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableVehicleUnk_2",
    "hash": "0x211E95CE9903940C",
    "code": "-- _SET_DISABLE_VEHICLE_UNK_2\nSetDisableVehicleUnk_2(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDisableVehicleWindowCollisions",
    "hash": "0x1087BC8EC540DAEB",
    "code": "-- _SET_DISABLE_VEHICLE_WINDOW_COLLISIONS\nSetDisableVehicleWindowCollisions(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to toggle this for.",
      "toggle: \n\nTrue disables the collision, false enables the collision"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to toggle this for.\n\ntoggle: \n\nTrue disables the collision, false enables the collision\n\nR* used it to \"remove\" vehicle windows when \"nightshark\" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDistantCarsEnabled",
    "hash": "0xF796359A959DF65D",
    "code": "-- SET_DISTANT_CARS_ENABLED\nSetDistantCarsEnabled(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetDriftTyresEnabled",
    "hash": "0x5AC79C98C5C17F05",
    "code": "-- _SET_DRIFT_TYRES_ENABLED\nSetDriftTyresEnabled(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetEnableVehicleSlipstreaming",
    "hash": "0xE6C0C80B8C867537",
    "code": "-- SET_ENABLE_VEHICLE_SLIPSTREAMING\nSetEnableVehicleSlipstreaming(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enable/Disables global slipstream physics"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetFarDrawVehicles",
    "hash": "0x26324F33423F3CC3",
    "code": "-- SET_FAR_DRAW_VEHICLES\nSetFarDrawVehicles(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetForceHdVehicle",
    "hash": "0x97CE68CB032583F0",
    "code": "-- SET_FORCE_HD_VEHICLE\nSetForceHdVehicle(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetForceLowLodAnchorMode",
    "hash": "0xB28B1FE5BFADD7F5",
    "code": "-- SET_FORCE_LOW_LOD_ANCHOR_MODE\nSetForceLowLodAnchorMode(\n\tboat --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "boat: \n\nThe target boat.",
      "toggle: \n\nSet the forced low LOD anchor mode. If true, the boat will remain in low LOD anchor mode even when a player is driving."
    ],
    "returns": [],
    "description": "Parameters:\n\nboat: \n\nThe target boat.\n\ntoggle: \n\nSet the forced low LOD anchor mode. If true, the boat will remain in low LOD anchor mode even when a player is driving.\n\nSets whether a boat should remain in the non-physical, low LOD anchor mode even when a player is driving it.\n\nNote: This native requires SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER to be set to true to work properly.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetForkliftForkHeight",
    "hash": "0x37EBBF3117BD6A25",
    "code": "-- SET_FORKLIFT_FORK_HEIGHT\nSetForkliftForkHeight(\n\tvehicle --[[ Vehicle ]], \n\theight --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetGarbageTrucks",
    "hash": "0x2AFD795EEAC8D30D",
    "code": "-- SET_GARBAGE_TRUCKS\nSetGarbageTrucks(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliBladesFullSpeed",
    "hash": "0xA178472EBB8AE60D",
    "code": "-- SET_HELI_BLADES_FULL_SPEED\nSetHeliBladesFullSpeed(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe helicopter or the plane"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe helicopter or the plane\n\nDespite its name, this works on Helicopters and Planes.\n\nSets the speed of the helicopter blades to full speed.\n\nThis is equivalent to calling SetHeliBladesSpeed(vehicleHandle, 1.0);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliBladesSpeed",
    "hash": "0xFD280B4D7F3ABC4D",
    "code": "-- SET_HELI_BLADES_SPEED\nSetHeliBladesSpeed(\n\tvehicle --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe helicopter or the plane",
      "speed: \n\nDesired blade rotation speed from 0.0 to 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe helicopter or the plane\n\nspeed: \n\nDesired blade rotation speed from 0.0 to 1.0\n\nDespite its name, this works on Helicopters and Planes.\n\nSets the speed of the helicopter blades in percentage of the full speed."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliCombatOffset",
    "hash": "0x0A3F820A9A9A9AC5",
    "code": "-- SET_HELI_COMBAT_OFFSET\nSetHeliCombatOffset(\n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nHelicopter for which the combat offset is being set.",
      "x: \n\nOffset along the X-axis (left/right) relative to the helicopter's current position and orientation",
      "y: \n\nOffset along the Y-axis (forward/backward) relative to the helicopter's current position and orientation",
      "z: \n\nOffset along the Z-axis (up/down) relative to the helicopter's current position and orientation."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nHelicopter for which the combat offset is being set.\n\nx: \n\nOffset along the X-axis (left/right) relative to the helicopter's current position and orientation\n\ny: \n\nOffset along the Y-axis (forward/backward) relative to the helicopter's current position and orientation\n\nz: \n\nOffset along the Z-axis (up/down) relative to the helicopter's current position and orientation.\n\nSet a specific offset for helis chasing target in combat\n\nNativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliMainRotorHealth",
    "hash": "0x4056EA1105F5ABD7",
    "code": "-- _SET_HELI_MAIN_ROTOR_HEALTH\nSetHeliMainRotorHealth(\n\tvehicle --[[ Vehicle ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliResistToExplosion",
    "hash": "0x8074CC1886802912",
    "code": "-- SET_HELI_RESIST_TO_EXPLOSION\nSetHeliResistToExplosion(\n\thelicopter --[[ Vehicle ]], \n\tbResistToExplosion --[[ boolean ]]\n)",
    "parameters": [
      "helicopter: \n\nThe helicopter to apply resistance to.",
      "bResistToExplosion: \n\nSet to true to make the helicopter resistant to explosions, or false to disable this resistance."
    ],
    "returns": [],
    "description": "Parameters:\n\nhelicopter: \n\nThe helicopter to apply resistance to.\n\nbResistToExplosion: \n\nSet to true to make the helicopter resistant to explosions, or false to disable this resistance.\n\nMakes a helicopter resistant to multiple explosions. When enabled, helicopters can survive two or more explosions.\n\nNativeDB Introduced: 2545"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliTailBoomCanBreakOff",
    "hash": "0x3EC8BF18AA453FE9",
    "code": "-- SET_HELI_TAIL_BOOM_CAN_BREAK_OFF\nSetHeliTailBoomCanBreakOff(\n\theli --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "heli: \n\nThe helicopter for which the tail boom can break off.",
      "toggle: \n\nDetermines whether the helicopter's tail boom can break off."
    ],
    "returns": [],
    "description": "Parameters:\n\nheli: \n\nThe helicopter for which the tail boom can break off.\n\ntoggle: \n\nDetermines whether the helicopter's tail boom can break off.\n\nEnables or disables the ability for a helicopter's tail boom to break off.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliTailRotorHealth",
    "hash": "0xFE205F38AAA58E5B",
    "code": "-- _SET_HELI_TAIL_ROTOR_HEALTH\nSetHeliTailRotorHealth(\n\tvehicle --[[ Vehicle ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHeliTurbulenceScalar",
    "hash": "0xE6F13851780394DA",
    "code": "-- SET_HELI_TURBULENCE_SCALAR\nSetHeliTurbulenceScalar(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHelicopterRollPitchYawMult",
    "hash": "0x6E0859B530A365CC",
    "code": "-- _SET_HELICOPTER_ROLL_PITCH_YAW_MULT\nSetHelicopterRollPitchYawMult(\n\thelicopter --[[ Vehicle ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "value between 0.0 and 1.0"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHoverModeWingRatio",
    "hash": "0x70A252F60A3E036B",
    "code": "-- SET_HOVER_MODE_WING_RATIO\nSetHoverModeWingRatio(\n\tvehicle --[[ Vehicle ]], \n\tratio --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to which the ratio will be applied.",
      "ratio: \n\nBetween 0.0 and 1.0. 0.0 is wings closed, 1.0 is wings open."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to which the ratio will be applied.\n\nratio: \n\nBetween 0.0 and 1.0. 0.0 is wings closed, 1.0 is wings open.\n\nThis native allows opening or closing the wings of the Deluxo/Oppressor. For the Deluxo, wing deployment depends on sufficient altitude."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHydraulicRaised",
    "hash": "0x28B18377EB6E25F6",
    "code": "-- _SET_HYDRAULIC_RAISED\nSetHydraulicRaised(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHydraulicWheelState",
    "hash": "0x8EA86DF356801C7D",
    "code": "-- _SET_HYDRAULIC_WHEEL_STATE\nSetHydraulicWheelState(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHydraulicWheelStateTransition",
    "hash": "0xC24075310A8B9CD1",
    "code": "-- _SET_HYDRAULIC_WHEEL_STATE_TRANSITION\nSetHydraulicWheelStateTransition(\n\tvehicle --[[ Vehicle ]], \n\twheelId --[[ integer ]], \n\tstate --[[ integer ]], \n\tvalue --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets vehicle wheel hydraulic states transition. Known states:\n0 - reset\n1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)\n2 - jump using wheel"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetHydraulicWheelValue",
    "hash": "0x84EA99C62CB3EF0C",
    "code": "-- _SET_HYDRAULIC_WHEEL_VALUE\nSetHydraulicWheelValue(\n\tvehicle --[[ Vehicle ]], \n\twheelId --[[ integer ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Works only on vehicles that support hydraulic."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetLastDrivenVehicle",
    "hash": "0xACFB2463CC22BED2",
    "code": "-- SET_LAST_DRIVEN_VEHICLE\nSetLastDrivenVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetLightsCutoffDistanceTweak",
    "hash": "0xBC3CCA5844452B06",
    "code": "-- SET_LIGHTS_CUTOFF_DISTANCE_TWEAK\nSetLightsCutoffDistanceTweak(\n\tdistance --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetMissionTrainAsNoLongerNeeded",
    "hash": "0xBBE7648349B49BE8",
    "code": "-- SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED\nlocal train --[[ Vehicle ]] =\n\tSetMissionTrainAsNoLongerNeeded(\n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p1 is always 0"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetMissionTrainCoords",
    "hash": "0x591CA673AA6AB736",
    "code": "-- SET_MISSION_TRAIN_COORDS\nSetMissionTrainCoords(\n\ttrain --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetNitrousIsActive",
    "hash": "0x465EEA70AF251045",
    "code": "-- SET_NITROUS_IS_ACTIVE\nSetNitrousIsActive(\n\tvehicle --[[ Vehicle ]], \n\tisActive --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle whose nitrous system is to be controlled.",
      "isActive: \n\nA boolean value where true activates the nitrous system and false deactivates it."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle whose nitrous system is to be controlled.\n\nisActive: \n\nA boolean value where true activates the nitrous system and false deactivates it.\n\nNativeDB Introduced: 3095\n\nActivates or deactivates the nitrous system in the specified vehicle, based on the boolean value provided. You can clear the nitrous with CLEAR_NITROUS, if you want to have more control on the nitrous and those settings, use SET_OVERRIDE_NITROUS_LEVEL"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetNumberOfParkedVehicles",
    "hash": "0xCAA15F13EBD417FF",
    "code": "-- SET_NUMBER_OF_PARKED_VEHICLES\nSetNumberOfParkedVehicles(\n\tvalue --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetOpenRearDoorsOnExplosion",
    "hash": "0x1B212B26DD3C04DF",
    "code": "-- SET_OPEN_REAR_DOORS_ON_EXPLOSION\nSetOpenRearDoorsOnExplosion(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to apply this setting to.",
      "toggle: \n\nA boolean value where true allows the rear doors to open upon explosion, and false prevents them from opening."
    ],
    "returns": [
      "This native does not return any value."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to apply this setting to.\n\ntoggle: \n\nA boolean value where true allows the rear doors to open upon explosion, and false prevents them from opening.\n\nReturns:\n\nThis native does not return any value.\n\nEnables or disables the opening of a vehicle's rear doors in the event of a sticky bomb explosion. This native is effective for armored vehicles, such as the Stockade (Brinks vehicle), allowing the rear doors to be opened through controlled explosions, which might otherwise remain locked due to the vehicle nature."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetOppressorTransformState",
    "hash": "0x544996C0081ABDEB",
    "code": "-- _SET_OPPRESSOR_TRANSFORM_STATE\nSetOppressorTransformState(\n\tvehicle --[[ Vehicle ]], \n\textend --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle (tested with oppressor only)",
      "extend: \n\nSet to true to extend the wings, false to retract them."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle (tested with oppressor only)\n\nextend: \n\nSet to true to extend the wings, false to retract them.\n\nSet state to true to extend the wings, false to retract them."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetOverrideNitrousLevel",
    "hash": "0xC8E9B6B71B8E660D",
    "code": "-- SET_OVERRIDE_NITROUS_LEVEL\nSetOverrideNitrousLevel(\n\tvehicle --[[ Vehicle ]], \n\toverride --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle whose nitrous system is to be overridden.",
      "override: \n\nA boolean toggle to enable or disable the override settings."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle whose nitrous system is to be overridden.\n\noverride: \n\nA boolean toggle to enable or disable the override settings.\n\nNativeDB Introduced: v1604\nNativeDB Added Parameter 2 (2060): float durationMod : A multiplier applied to the default nitrous duration (default is 3 seconds). \nNativeDB Added Parameter 3 (2060): float power : A multiplier applied to the default nitrous power multiplier (default is 3).\nNativeDB Added Parameter 4 (2060): float rechargeTime : A multiplier applied to the default nitrous recharge rate.\nNativeDB Added Parameter 5 (2060): BOOL disableSound : A boolean to disable the default nitrous sound when the nitrous is active.\n\n\nOverrides the default settings of a vehicle's nitrous system, allowing custom control over its performance characteristics."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetParkedVehicleDensityMultiplierThisFrame",
    "hash": "0xEAE6DCC7EEE3DB1D",
    "code": "-- SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME\nSetParkedVehicleDensityMultiplierThisFrame(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPickupRopeLengthForCargobob",
    "hash": "0x877C1EAEAC531023",
    "code": "-- SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB\nSetPickupRopeLengthForCargobob(\n\tcargobob --[[ Vehicle ]], \n\tlength1 --[[ number ]], \n\tlength2 --[[ number ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "min: 1.9f, max: 100.0f"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaneAvoidsOthers",
    "hash": "0xBAFB99B304BC52A7",
    "code": "-- _SET_PLANE_AVOIDS_OTHERS\nSetPlaneAvoidsOthers(\n\tplane --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaneControlSectionsShouldBreakOffFromExplosions",
    "hash": "0xDD8A2D3337F04196",
    "code": "-- SET_PLANE_CONTROL_SECTIONS_SHOULD_BREAK_OFF_FROM_EXPLOSIONS\nSetPlaneControlSectionsShouldBreakOffFromExplosions(\n\tplane --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaneEngineHealth",
    "hash": "0x2A86A0475B6A1434",
    "code": "-- _SET_PLANE_ENGINE_HEALTH\nSetPlaneEngineHealth(\n\tvehicle --[[ Vehicle ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlanePropellersHealth",
    "hash": "0x4C815EB175086F84",
    "code": "-- _SET_PLANE_PROPELLERS_HEALTH\nSetPlanePropellersHealth(\n\tplane --[[ Vehicle ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaneResistToExplosion",
    "hash": "0xE16142B94664DEFD",
    "code": "-- SET_PLANE_RESIST_TO_EXPLOSION\nSetPlaneResistToExplosion(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaneSectionDamageScale",
    "hash": "0x0BBB9A7A8FFE931B",
    "code": "-- SET_PLANE_SECTION_DAMAGE_SCALE\nSetPlaneSectionDamageScale(\n\tvehicle --[[ Vehicle ]], \n\tdamageSection --[[ integer ]], \n\tdamageScale --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nPlane to which the damage scale adjustment will be applied.",
      "damageSection: \n\nSpecific section of the plane, as defined in the ePlaneDamageSection enum, where the damage scale will be adjusted.",
      "damageScale: \n\nA float value representing the scale of damage to be applied to the specified section."
    ],
    "returns": [
      "This native does not return any value."
    ],
    "description": "Parameters:\n\nvehicle: \n\nPlane to which the damage scale adjustment will be applied.\n\ndamageSection: \n\nSpecific section of the plane, as defined in the ePlaneDamageSection enum, where the damage scale will be adjusted.\n\ndamageScale: \n\nA float value representing the scale of damage to be applied to the specified section.\n\nReturns:\n\nThis native does not return any value.\n\nAdjusts the scale of damage applied to a specified section of a plane. In the decompiled scripts the damageScale is always set to 0f (maybe to disable damages on the specified section)\n\nenum ePlaneDamageSection {\n    WING_L = 0,\n    WING_R = 1,\n    TAIL = 2,\n    ENGINE_L = 3,\n    ENGINE_R = 4,\n    ELEVATOR_L = 5,\n    ELEVATOR_R = 6,\n    AILERON_L = 7,\n    AILERON_R = 8,\n    RUDDER = 9,\n    RUDDER_2 = 10,\n    AIRBRAKE_L = 11,\n    AIRBRAKE_R = 12\n}\n\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaneTurbulenceMultiplier",
    "hash": "0xAD2D28A1AFDFF131",
    "code": "-- SET_PLANE_TURBULENCE_MULTIPLIER\nSetPlaneTurbulenceMultiplier(\n\tvehicle --[[ Vehicle ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe plane to set the multiplier for",
      "multiplier: \n\nThe turbulence multiplier. Value between 0.0 and 1.0"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe plane to set the multiplier for\n\nmultiplier: \n\nThe turbulence multiplier. Value between 0.0 and 1.0\n\nThis native sets the turbulence multiplier. It only works for planes. 0.0 = no turbulence at all. 1.0 = heavy turbulence.\n\nWorks by just calling it once, does not need to be called every tick."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaybackSpeed",
    "hash": "0x6683AB880E427778",
    "code": "-- SET_PLAYBACK_SPEED\nSetPlaybackSpeed(\n\tvehicle --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaybackToUseAi",
    "hash": "0xA549C3B37EA28131",
    "code": "-- SET_PLAYBACK_TO_USE_AI\nSetPlaybackToUseAi(\n\tvehicle --[[ Vehicle ]], \n\tdrivingStyle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlaybackToUseAiTryToRevertBackLater",
    "hash": "0x6E63860BBB190730",
    "code": "-- SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER\nSetPlaybackToUseAiTryToRevertBackLater(\n\tvehicle --[[ Vehicle ]], \n\ttime --[[ integer ]], \n\tdrivingStyle --[[ integer ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Time is number of milliseconds before reverting, zero for indefinitely."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPlayersLastVehicle",
    "hash": "0xBCDF8BAF56C87B6A",
    "code": "-- SET_PLAYERS_LAST_VEHICLE\nSetPlayersLastVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetPoliceFocusWillTrackVehicle",
    "hash": "0x4E74E62E0A97E901",
    "code": "-- SET_POLICE_FOCUS_WILL_TRACK_VEHICLE\nSetPoliceFocusWillTrackVehicle(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets flag on vehicle that changes behaviour in relation to when player gets wanted level"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetRandomBoats",
    "hash": "0x84436EC293B1415F",
    "code": "-- SET_RANDOM_BOATS\nSetRandomBoats(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetRandomBoatsInMp",
    "hash": "0xDA5E12F728DB30CA",
    "code": "-- _SET_RANDOM_BOATS_IN_MP\nSetRandomBoatsInMp(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetRandomTrains",
    "hash": "0x80D9F74197EA47D9",
    "code": "-- SET_RANDOM_TRAINS\nSetRandomTrains(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "toggle: \n\nWhether to enable random trains."
    ],
    "returns": [],
    "description": "Parameters:\n\ntoggle: \n\nWhether to enable random trains.\n\nEnables spawning random trains on the preset tracks.\n\nRequires SWITCH_TRAIN_TRACK and SET_TRAIN_TRACK_SPAWN_FREQUENCY to be set."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetRandomVehicleDensityMultiplierThisFrame",
    "hash": "0xB3B3359379FE77D3",
    "code": "-- SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME\nSetRandomVehicleDensityMultiplierThisFrame(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetReduceDriftVehicleSuspension",
    "hash": "0x3A375167F5782A65",
    "code": "-- _SET_REDUCE_DRIFT_VEHICLE_SUSPENSION\nSetReduceDriftVehicleSuspension(\n\tvehicle --[[ Vehicle ]], \n\tenable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Lowers the vehicle's stance. Only works for vehicles that support this feature.\n\nNativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetRenderTrainAsDerailed",
    "hash": "0x317B11A312DF5534",
    "code": "-- SET_RENDER_TRAIN_AS_DERAILED\nSetRenderTrainAsDerailed(\n\ttrain --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetScriptVehicleGenerator",
    "hash": "0xD9D620E0AC6DC4B0",
    "code": "-- SET_SCRIPT_VEHICLE_GENERATOR\nSetScriptVehicleGenerator(\n\tvehicleGenerator --[[ integer ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only called once in the decompiled scripts. Presumably activates the specified generator."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetSpecialFlightModeAllowed",
    "hash": "0xF1211889DF15A763",
    "code": "-- SET_SPECIAL_FLIGHT_MODE_ALLOWED\nSetSpecialFlightModeAllowed(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to which the locking state will be applied.",
      "toggle: \n\nBoolean parameter where setting false locks the current state of the vehicle, preventing transitions such as the Deluxo or Oppressor switching between their flying and driving modes. Setting it to true allows changing the vehicle state as usual."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to which the locking state will be applied.\n\ntoggle: \n\nBoolean parameter where setting false locks the current state of the vehicle, preventing transitions such as the Deluxo or Oppressor switching between their flying and driving modes. Setting it to true allows changing the vehicle state as usual.\n\nAllows locking the hover/non-hover mode of a vehicle, such as the flying mode of the Deluxo. In the decompiled scripts, this native is used on oppressor2 but couldn't get it to work on it."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetSpecialFlightModeRatio",
    "hash": "0xD138FA15C9776837",
    "code": "-- SET_SPECIAL_FLIGHT_MODE_RATIO\nSetSpecialFlightModeRatio(\n\tvehicle --[[ Vehicle ]], \n\tratio --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to which the ratio will be applied.",
      "ratio: \n\nA value between 0.0 and 1.0 indicating the target state for the vehicle's hover mode transition. In decompiled scripts, a common usage is 0.75 - GetFrameTime(). Exceeding the maximum can cause the Deluxo's wheels to glitch, delaying their return to the initial position."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to which the ratio will be applied.\n\nratio: \n\nA value between 0.0 and 1.0 indicating the target state for the vehicle's hover mode transition. In decompiled scripts, a common usage is 0.75 - GetFrameTime(). Exceeding the maximum can cause the Deluxo's wheels to glitch, delaying their return to the initial position.\n\nUsed alongside SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO, this function initiates hover transformation for vehicles with a hover mode, like the Deluxo, based on a specified ratio (0.0 to 1.0). Incorrect values can glitch the vehicle. Without pairing, vehicles revert to car mode. Ineffective on the oppressor2"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetSpecialFlightModeTargetRatio",
    "hash": "0x438B3D7CA026FE91",
    "code": "-- SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO\nSetSpecialFlightModeTargetRatio(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle (a deluxo or oppressor2).",
      "state: \n\nThe transform state (value between 0.0 and 1.0)."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle (a deluxo or oppressor2).\n\nstate: \n\nThe transform state (value between 0.0 and 1.0).\n\nAccording to decompiled scripts this should work with the deluxo and oppressor2 vehicles. Does nothing when used on oppressor2.\n\nFor the deluxo:\n\nSet state to 0.0: Fully transform to a 'road' vehicle (non-hover mode).\nSet state to 1.0: Fully transform to a 'flying' vehicle (hover mode).\n\nIf you set it to something like 0.5, then something weird happens, you end up in some 50% hover mode, 50% not hover mode.\n\nThis doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.\n\nOnce this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetSubmarineCrushDepths",
    "hash": "0xC59872A5134879C7",
    "code": "-- SET_SUBMARINE_CRUSH_DEPTHS\nSetSubmarineCrushDepths(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]], \n\tdepth1 --[[ number ]], \n\tdepth2 --[[ number ]], \n\tdepth3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTaskVehicleGotoPlaneMinHeightAboveTerrain",
    "hash": "0xB893215D8D4C015B",
    "code": "-- SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN\nSetTaskVehicleGotoPlaneMinHeightAboveTerrain(\n\tplane --[[ Vehicle ]], \n\theight --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTaxiLights",
    "hash": "0x598803E85E8448D9",
    "code": "-- SET_TAXI_LIGHTS\nSetTaxiLights(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This is not tested - it's just an assumption.  \nDoesn't seem to work.  I'll try with an int instead. --JT  \nRead the scripts, im dumpass.   \nDoesn't work at all, wether with an bool neither an int  \n                            if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {  \n                                VEHICLE::SET_TAXI_LIGHTS(l_115, 1);  \n                            }"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTrailerAttachmentEnabled",
    "hash": "0x2FA2494B47FDD009",
    "code": "-- SET_TRAILER_ATTACHMENT_ENABLED\nSetTrailerAttachmentEnabled(\n\tvehicle --[[ Vehicle ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe trailer to set attachment state for",
      "enabled: \n\nEnable or disable attachment"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe trailer to set attachment state for\n\nenabled: \n\nEnable or disable attachment\n\nSets whether the trailer can attach to vehicles"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTrailerInverseMassScale",
    "hash": "0x2A8F319B392E7B3F",
    "code": "-- SET_TRAILER_INVERSE_MASS_SCALE\nSetTrailerInverseMassScale(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTrailerLegsLowered",
    "hash": "0x878C75C09FBDB942",
    "code": "-- _SET_TRAILER_LEGS_LOWERED\nSetTrailerLegsLowered()",
    "parameters": [],
    "returns": [],
    "description": "Inverse of 0x95CF53B3D687F9FA\nNativeDB Added Parameter 1: Vehicle vehicle"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTrailerLegsRaised",
    "hash": "0x95CF53B3D687F9FA",
    "code": "-- SET_TRAILER_LEGS_RAISED\nSetTrailerLegsRaised(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTrainCruiseSpeed",
    "hash": "0x16469284DB8C62B5",
    "code": "-- SET_TRAIN_CRUISE_SPEED\nSetTrainCruiseSpeed(\n\ttrain --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Used to control train speed, can be used to start and stop its movement as well."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTrainSpeed",
    "hash": "0xAA0BC91BE0B796E3",
    "code": "-- SET_TRAIN_SPEED\nSetTrainSpeed(\n\ttrain --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTrainTrackSpawnFrequency",
    "hash": "0x21973BBF8D17EDFA",
    "code": "-- SET_TRAIN_TRACK_SPAWN_FREQUENCY\nSetTrainTrackSpawnFrequency(\n\ttrackIndex --[[ integer ]], \n\tfrequency --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only called once inside main_persitant with the parameters, 0"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTransformRateForAnimation",
    "hash": "0x498218259FB7C72D",
    "code": "-- SET_TRANSFORM_RATE_FOR_ANIMATION\nSetTransformRateForAnimation(\n\tvehicle --[[ Vehicle ]], \n\ttransformRate --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle for which the submarine car conversion animation speed should be adjusted.",
      "transformRate: \n\nThe rate at which the submarine car conversion animations will be played."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle for which the submarine car conversion animation speed should be adjusted.\n\ntransformRate: \n\nThe rate at which the submarine car conversion animations will be played.\n\nAffects the playback speed of the submarine car conversion animations. Does not affect hardcoded animations such as the wheels being retracted. In decompiled scripts the only value used for transformRate is 2.5."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTransformToSubmarineUsesAlternateInput",
    "hash": "0x41B9FB92EDED32A6",
    "code": "-- SET_TRANSFORM_TO_SUBMARINE_USES_ALTERNATE_INPUT\nSetTransformToSubmarineUsesAlternateInput(\n\tvehicle --[[ Vehicle ]], \n\tuseAlternateInput --[[ bool ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle for which the submarine mode should be configured.",
      "useAlternateInput: \n\nA boolean switch to enable/disable the use of alternate input."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle for which the submarine mode should be configured.\n\nuseAlternateInput: \n\nA boolean switch to enable/disable the use of alternate input.\n\nChanges the key used to transform a vehicle into submarine mode. When set to true, the transformation key switches from the default raise/lower convertible roof key (usually 'H') to the special vehicle transformation key (usually 'X').\n\nNativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTyreHealth",
    "hash": "0x74C68EF97645E79D",
    "code": "-- _SET_TYRE_HEALTH\nSetTyreHealth(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTyreSoftnessMultiplier",
    "hash": "0x392183BB9EA57697",
    "code": "-- _SET_TYRE_SOFTNESS_MULTIPLIER\nSetTyreSoftnessMultiplier(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Controls how fast the tires wear out.\nDefault values from Rockstar's Open Wheel Race JSON's:\n\"owrtss\" (Soft): 2.2\n\"owrtsm\" (Medium): 1.7\n\"owrtsh\" (Hard): 1.2\nUsable wheels:\n0: wheel_lf\n1: wheel_rf\n2: wheel_lm1\n3: wheel_rm1\n4: wheel_lr\n5: wheel_rr\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTyreTractionLossMultiplier",
    "hash": "0xC970D0E0FC31D768",
    "code": "-- _SET_TYRE_TRACTION_LOSS_MULTIPLIER\nSetTyreTractionLossMultiplier(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Controls how much traction the wheel loses.\nDefault values from Rockstar's Open Wheel Race JSON's:\n\"owrtds\" (Soft): 0.05\n\"owrtdm\" (Medium): 0.45\n\"owrtdh\" (Hard): 0.8\nUsable wheels:\n0: wheel_lf\n1: wheel_rf\n2: wheel_lm1\n3: wheel_rm1\n4: wheel_lr\n5: wheel_rr\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetTyreWearMultiplier",
    "hash": "0x01894E2EDE923CA2",
    "code": "-- _SET_TYRE_WEAR_MULTIPLIER\nSetTyreWearMultiplier(\n\tvehicle --[[ Vehicle ]], \n\twheelIndex --[[ integer ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetUseHigherVehicleJumpForce",
    "hash": "0xF06A16CA55D138D8",
    "code": "-- _SET_USE_HIGHER_VEHICLE_JUMP_FORCE\nSetUseHigherVehicleJumpForce(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000)."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleActAsIfHighSpeedForFragSmashing",
    "hash": "0x1F9FB66F3A3842D2",
    "code": "-- SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING\nSetVehicleActAsIfHighSpeedForFragSmashing(\n\tvehicle --[[ Vehicle ]], \n\tactHighSpeed --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to be affected by this setting.",
      "actHighSpeed: \n\nA boolean flag. Set to true to make the vehicle act as if it's at high speed for the current frame"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to be affected by this setting.\n\nactHighSpeed: \n\nA boolean flag. Set to true to make the vehicle act as if it's at high speed for the current frame\n\nThis native is used to simulate a high-speed impact for a vehicle when it collides with a breakable object (frag). It's particularly useful in scripted sequences where a vehicle is required to break through a barrier but might not actually be moving at a sufficient speed to do so realistically. Note that this setting is temporary and will reset after one frame, so it needs to be called every frame for a lasting effect."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleActiveDuringPlayback",
    "hash": "0xDFFCEF48E511DB48",
    "code": "-- SET_VEHICLE_ACTIVE_DURING_PLAYBACK\nSetVehicleActiveDuringPlayback(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleActiveForPedNavigation",
    "hash": "0x21115BCD6E44656A",
    "code": "-- SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION\nSetVehicleActiveForPedNavigation(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleAlarm",
    "hash": "0xCDE5E70C1DDB954C",
    "code": "-- SET_VEHICLE_ALARM\nSetVehicleAlarm(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleAllowNoPassengersLockon",
    "hash": "0x5D14D4154BFE7B2C",
    "code": "-- SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON\nSetVehicleAllowNoPassengersLockon(\n\tveh --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Makes the vehicle accept no passengers."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleAutomaticallyAttaches",
    "hash": "0x8BA6F76BC53A1493",
    "code": "-- SET_VEHICLE_AUTOMATICALLY_ATTACHES\nlocal retval --[[ Any ]] =\n\tSetVehicleAutomaticallyAttaches(\n\t\tvehicle --[[ Vehicle ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleBodyHealth",
    "hash": "0xB77D05AC8C78AADB",
    "code": "-- SET_VEHICLE_BODY_HEALTH\nSetVehicleBodyHealth(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p2 often set to 1000.0 in the decompiled scripts."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleBombCount",
    "hash": "0xF4B2ED59DEB5D774",
    "code": "-- _SET_VEHICLE_BOMB_COUNT\nSetVehicleBombCount(\n\taircraft --[[ Vehicle ]], \n\tbombCount --[[ integer ]]\n)",
    "parameters": [
      "aircraft: \n\nThe vehicle to set the bombCount on.",
      "bombCount: \n\nThe amount of bombs to set for this vehicle."
    ],
    "returns": [],
    "description": "Parameters:\n\naircraft: \n\nThe vehicle to set the bombCount on.\n\nbombCount: \n\nThe amount of bombs to set for this vehicle.\n\nSets the amount of bombs that this vehicle has. As far as I know, this does not impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.\n\nIn decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.\n\nUse _GET_AIRCRAFT_BOMB_COUNT to get the amount of bombs on that vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleBrake",
    "hash": "0xE4E2FD323574965C",
    "code": "-- SET_VEHICLE_BRAKE\nSetVehicleBrake(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleBrakeLights",
    "hash": "0x92B35082E0B42F66",
    "code": "-- SET_VEHICLE_BRAKE_LIGHTS\nSetVehicleBrakeLights(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleBulldozerArmPosition",
    "hash": "0xF8EBCCC96ADB9FB7",
    "code": "-- SET_VEHICLE_BULLDOZER_ARM_POSITION\nSetVehicleBulldozerArmPosition(\n\tvehicle --[[ Vehicle ]], \n\tposition --[[ number ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when p2 is set to false, instead incrementing arm position by 0.1 (or 10%)."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleBurnout",
    "hash": "0xFB8794444A7D60FB",
    "code": "-- SET_VEHICLE_BURNOUT\nSetVehicleBurnout(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "On accelerating, spins the driven wheels with the others braked, so you don't go anywhere."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanBeLockedOn",
    "hash": "0x1DDA078D12879EEE",
    "code": "-- _SET_VEHICLE_CAN_BE_LOCKED_ON\nSetVehicleCanBeLockedOn(\n\tvehicle --[[ Vehicle ]], \n\tcanBeLockedOn --[[ boolean ]], \n\tunk --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_AL*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanBeTargetted",
    "hash": "0x3750146A28097A82",
    "code": "-- SET_VEHICLE_CAN_BE_TARGETTED\nSetVehicleCanBeTargetted(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This has not yet been tested - it's just an assumption of what the types could be."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanBeUsedByFleeingPeds",
    "hash": "0x300504B23BD3B711",
    "code": "-- SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS\nSetVehicleCanBeUsedByFleeingPeds(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanBeVisiblyDamaged",
    "hash": "0x4C7028F78FFD3681",
    "code": "-- SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED\nSetVehicleCanBeVisiblyDamaged(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanBreak",
    "hash": "0x59BF8C3D52C92F66",
    "code": "-- SET_VEHICLE_CAN_BREAK\nSetVehicleCanBreak(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanDeformWheels",
    "hash": "0x0CDDA42F9E360CA6",
    "code": "-- SET_VEHICLE_CAN_DEFORM_WHEELS\nSetVehicleCanDeformWheels(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanEngineOperateOnFire",
    "hash": "0x206BC5DC9D1AC70A",
    "code": "-- _SET_VEHICLE_CAN_ENGINE_OPERATE_ON_FIRE\nSetVehicleCanEngineOperateOnFire(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanLeakOil",
    "hash": "0x51BB2D88D31A914B",
    "code": "-- SET_VEHICLE_CAN_LEAK_OIL\nSetVehicleCanLeakOil(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanLeakPetrol",
    "hash": "0x192547247864DFDD",
    "code": "-- SET_VEHICLE_CAN_LEAK_PETROL\nSetVehicleCanLeakPetrol(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCanSaveInGarage",
    "hash": "0x428BACCDF5E26EAD",
    "code": "-- SET_VEHICLE_CAN_SAVE_IN_GARAGE\nSetVehicleCanSaveInGarage(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCeilingHeight",
    "hash": "0xA46413066687A328",
    "code": "-- SET_VEHICLE_CEILING_HEIGHT\nSetVehicleCeilingHeight(\n\tvehicle --[[ Vehicle ]], \n\theight --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)\nfrom Decrypted Scripts I found\nVEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2/*2*/], 420.0);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCheatPowerIncrease",
    "hash": "0xB59E4BD37AE292DB",
    "code": "-- SET_VEHICLE_CHEAT_POWER_INCREASE\nSetVehicleCheatPowerIncrease(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "<1.0 - Decreased torque\n=1.0 - Default torque\n>1.0 - Increased torque\nNegative values will cause the vehicle to go backwards instead of forwards while accelerating.\nvalue - is between 0.2 and 1.8 in the decompiled scripts.\nThis needs to be called every frame to take effect."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleColourCombination",
    "hash": "0x33E8CD3322E2FE31",
    "code": "-- SET_VEHICLE_COLOUR_COMBINATION\nSetVehicleColourCombination(\n\tvehicle --[[ Vehicle ]], \n\tcolorCombination --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to modify.",
      "colorCombination: \n\nOne of the default color values of the vehicle."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to modify.\n\ncolorCombination: \n\nOne of the default color values of the vehicle.\n\nSets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).\n\nRange of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleColours",
    "hash": "0x4F1D4BE3A7F24601",
    "code": "-- SET_VEHICLE_COLOURS\nSetVehicleColours(\n\tvehicle --[[ Vehicle ]], \n\tcolorPrimary --[[ integer ]], \n\tcolorSecondary --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "colorPrimary & colorSecondary are the paint indexes for the vehicle.\n\nFor a list of valid paint indexes, view: pastebin.com/pwHci0xK"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleControlsInverted",
    "hash": "0x5B91B229243351A8",
    "code": "-- _SET_VEHICLE_CONTROLS_INVERTED\nSetVehicleControlsInverted(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)\nDoesn't work for planes/helis."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCountermeasureCount",
    "hash": "0x9BDA23BF666F0855",
    "code": "-- _SET_VEHICLE_COUNTERMEASURE_COUNT\nSetVehicleCountermeasureCount(\n\taircraft --[[ Vehicle ]], \n\tcount --[[ integer ]]\n)",
    "parameters": [
      "aircraft: \n\nThe vehicle to set the amount of countermeasures on.",
      "count: \n\nThe amount of countermeasures to set on this vehicle."
    ],
    "returns": [],
    "description": "Parameters:\n\naircraft: \n\nThe vehicle to set the amount of countermeasures on.\n\ncount: \n\nThe amount of countermeasures to set on this vehicle.\n\nSimilar to _SET_AIRCRAFT_BOMB_COUNT, this sets the amount of countermeasures that are present on this vehicle.\n\nUse _GET_AIRCRAFT_COUNTERMEASURE_COUNT to get the current amount."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCustomPrimaryColour",
    "hash": "0x7141766F91D15BEA",
    "code": "-- SET_VEHICLE_CUSTOM_PRIMARY_COLOUR\nSetVehicleCustomPrimaryColour(\n\tvehicle --[[ Vehicle ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleCustomSecondaryColour",
    "hash": "0x36CED73BFED89754",
    "code": "-- SET_VEHICLE_CUSTOM_SECONDARY_COLOUR\nSetVehicleCustomSecondaryColour(\n\tvehicle --[[ Vehicle ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDamage",
    "hash": "0xA1DD317EA8FD4F29",
    "code": "-- SET_VEHICLE_DAMAGE\nSetVehicleDamage(\n\tvehicle --[[ Vehicle ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tdamage --[[ number ]], \n\tradius --[[ number ]], \n\tfocusOnModel --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Apply damage to vehicle at a location. Location is relative to vehicle model (not world). Radius of effect damage applied in a sphere at impact location When focusOnModel set to true, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDamageModifier",
    "hash": "0x4E20D2A627011E8E",
    "code": "-- _SET_VEHICLE_DAMAGE_MODIFIER\nlocal retval --[[ Any ]] =\n\tSetVehicleDamageModifier(\n\t\tvehicle --[[ Vehicle ]], \n\t\tp1 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_D*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDashboardColor",
    "hash": "0x6089CDF6A57F326C",
    "code": "-- _SET_VEHICLE_DASHBOARD_COLOR\nSetVehicleDashboardColor(\n\tvehicle --[[ Vehicle ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDeformationFixed",
    "hash": "0x953DA1E1B12C0491",
    "code": "-- SET_VEHICLE_DEFORMATION_FIXED\nSetVehicleDeformationFixed(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This fixes the deformation of a vehicle but the vehicle health doesn't improve"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDensityMultiplierThisFrame",
    "hash": "0x245A6883D966D537",
    "code": "-- SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME\nSetVehicleDensityMultiplierThisFrame(\n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Usage:\n\nUse this native inside a looped function.\nValues:\n0.0 = no vehicles on streets\n1.0 = normal vehicles on streets\n\n1.0 Seems to be the maximum."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDirtLevel",
    "hash": "0x79D3B596FE44EE8B",
    "code": "-- SET_VEHICLE_DIRT_LEVEL\nSetVehicleDirtLevel(\n\tvehicle --[[ Vehicle ]], \n\tdirtLevel --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set.",
      "dirtLevel: \n\nA number between 0.0 and 15.0 representing the vehicles dirt level."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set.\n\ndirtLevel: \n\nA number between 0.0 and 15.0 representing the vehicles dirt level.\n\nSets the dirt level of the passed vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDisableTowing",
    "hash": "0x2B6747FAA9DB9D6B",
    "code": "-- SET_VEHICLE_DISABLE_TOWING\nSetVehicleDisableTowing(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorBroken",
    "hash": "0xD4D4F6A4AB575A33",
    "code": "-- SET_VEHICLE_DOOR_BROKEN\nSetVehicleDoorBroken(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tdeleteDoor --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorCanBreak",
    "hash": "0x2FA133A4A9D37ED8",
    "code": "-- _SET_VEHICLE_DOOR_CAN_BREAK\nSetVehicleDoorCanBreak(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tisBreakable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorControl",
    "hash": "0xF2BFA0430F0A0FCB",
    "code": "-- SET_VEHICLE_DOOR_CONTROL\nSetVehicleDoorControl(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tspeed --[[ integer ]], \n\tangle --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorLatched",
    "hash": "0xA5A9653A8D2CAF48",
    "code": "-- SET_VEHICLE_DOOR_LATCHED\nSetVehicleDoorLatched(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tforceClose --[[ boolean ]], \n\tlock --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "See eDoorId declared in SET_VEHICLE_DOOR_SHUT"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorOpen",
    "hash": "0x7C65DAC73C35C862",
    "code": "-- SET_VEHICLE_DOOR_OPEN\nSetVehicleDoorOpen(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tloose --[[ boolean ]], \n\topenInstantly --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nVehicle.",
      "doorIndex: \n\nIndex of the door you want to open (0-7)",
      "loose: \n\nWhether the door is \"loose\" (if true the doors have no \"spring\" and can be closed easily.)",
      "openInstantly: \n\nWhether the doors open instantly (if true this native seems to ignore loose)"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nVehicle.\n\ndoorIndex: \n\nIndex of the door you want to open (0-7)\n\nloose: \n\nWhether the door is \"loose\" (if true the doors have no \"spring\" and can be closed easily.)\n\nopenInstantly: \n\nWhether the doors open instantly (if true this native seems to ignore loose)\n\nSets the specified door index open on the passed vehicle. See IS_VEHICLE_DOOR_FULLY_OPEN."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorShut",
    "hash": "0x93D9BD300D7789E5",
    "code": "-- SET_VEHICLE_DOOR_SHUT\nSetVehicleDoorShut(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tcloseInstantly --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nVehicle.",
      "doorIndex: \n\nIndex of the door you want to close.",
      "closeInstantly: \n\nWhether the doors close instantly."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nVehicle.\n\ndoorIndex: \n\nIndex of the door you want to close.\n\ncloseInstantly: \n\nWhether the doors close instantly.\n\nSets the specified door index shut on the passed vehicle.\n\nenum eDoorId\n{\n\tVEH_EXT_DOOR_DSIDE_F = 0,\n\tVEH_EXT_DOOR_DSIDE_R = 1,\n\tVEH_EXT_DOOR_PSIDE_F = 2,\n\tVEH_EXT_DOOR_PSIDE_R = 3,\n\tVEH_EXT_BONNET = 4,\n\tVEH_EXT_BOOT = 5,\n\t// 0x872E72B8 = 0xFFFFFFFF,\n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorsLocked",
    "hash": "0xB664292EAECF7FA6",
    "code": "-- SET_VEHICLE_DOORS_LOCKED\nSetVehicleDoorsLocked(\n\tvehicle --[[ Vehicle ]], \n\tdoorLockStatus --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle whose doors are to be locked.",
      "doorLockStatus: \n\nThe lock state to apply to the vehicle's doors, see eVehicleLockState."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle whose doors are to be locked.\n\ndoorLockStatus: \n\nThe lock state to apply to the vehicle's doors, see eVehicleLockState.\n\nLocks the doors of a specified vehicle to a defined lock state, affecting how players and NPCs can interact with the vehicle.\n\nNativeDB Introduced: v323\nenum eVehicleLockState {\n    // No specific lock state, vehicle behaves according to the game's default settings.\n    VEHICLELOCK_NONE = 0,\n    // Vehicle is fully unlocked, allowing free entry by players and NPCs.\n    VEHICLELOCK_UNLOCKED = 1,\n    // Vehicle is locked, preventing entry by players and NPCs.\n    VEHICLELOCK_LOCKED = 2,\n    // Vehicle locks out only players, allowing NPCs to enter.\n    VEHICLELOCK_LOCKOUT_PLAYER_ONLY = 3,\n    // Vehicle is locked once a player enters, preventing others from entering.\n    VEHICLELOCK_LOCKED_PLAYER_INSIDE = 4,\n    // Vehicle starts in a locked state, but may be unlocked through game events.\n    VEHICLELOCK_LOCKED_INITIALLY = 5,\n    // Forces the vehicle's doors to shut and lock.\n    VEHICLELOCK_FORCE_SHUT_DOORS = 6,\n    // Vehicle is locked but can still be damaged.\n    VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7,\n    // Vehicle is locked, but its trunk/boot remains unlocked.\n    VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED = 8,\n    // Vehicle is locked and does not allow passengers, except for the driver.\n    VEHICLELOCK_LOCKED_NO_PASSENGERS = 9,\n    // Vehicle is completely locked, preventing entry entirely, even if previously inside.\n    VEHICLELOCK_CANNOT_ENTER = 10 \n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorsLockedForAllPlayers",
    "hash": "0xA2F80B8D040727CC",
    "code": "-- SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS\nSetVehicleDoorsLockedForAllPlayers(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorsLockedForNonScriptPlayers",
    "hash": "0x9737A37136F07E75",
    "code": "-- SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS\nSetVehicleDoorsLockedForNonScriptPlayers(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorsLockedForPlayer",
    "hash": "0x517AAF684BB50CD1",
    "code": "-- SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER\nSetVehicleDoorsLockedForPlayer(\n\tvehicle --[[ Vehicle ]], \n\tplayer --[[ Player ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorsLockedForTeam",
    "hash": "0xB81F6D4A8F5EEBA8",
    "code": "-- SET_VEHICLE_DOORS_LOCKED_FOR_TEAM\nSetVehicleDoorsLockedForTeam(\n\tvehicle --[[ Vehicle ]], \n\tteam --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorsLockedForUnk",
    "hash": "0x203B527D1B77904C",
    "code": "-- _SET_VEHICLE_DOORS_LOCKED_FOR_UNK\nSetVehicleDoorsLockedForUnk(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDoorsShut",
    "hash": "0x781B3D62BB013EF5",
    "code": "-- SET_VEHICLE_DOORS_SHUT\nSetVehicleDoorsShut(\n\tvehicle --[[ Vehicle ]], \n\tcloseInstantly --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Closes all doors of a vehicle:"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleDropsMoneyWhenBlownUp",
    "hash": "0x068F64F2470F9656",
    "code": "-- SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP\nSetVehicleDropsMoneyWhenBlownUp(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.\nyoutu.be/3arlUxzHl5Y\ni.imgur.com/WrNpYFs.jpg"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleEngineCanDegrade",
    "hash": "0x983765856F2564F9",
    "code": "-- SET_VEHICLE_ENGINE_CAN_DEGRADE\nSetVehicleEngineCanDegrade(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleEngineHealth",
    "hash": "0x45F6D8EEF34ABEF1",
    "code": "-- SET_VEHICLE_ENGINE_HEALTH\nSetVehicleEngineHealth(\n\tvehicle --[[ Vehicle ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "1000 is max health\nBegins leaking gas at around 650 health\n-999.90002441406 appears to be minimum health, although nothing special occurs <- false statement\n-------------------------\nMinimum: -4000\nMaximum: 1000\n-4000: Engine is destroyed\n0 and below: Engine catches fire and health rapidly declines\n300: Engine is smoking and losing functionality\n1000: Engine is perfect"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleEngineOn",
    "hash": "0x2497C4717C8B881E",
    "code": "-- SET_VEHICLE_ENGINE_ON\nSetVehicleEngineOn(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ boolean ]], \n\tinstantly --[[ boolean ]], \n\tdisableAutoStart --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to start or stop the engine on.",
      "value: \n\ntrue to turn the vehicle on; false to turn it off.",
      "instantly: \n\nif true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.",
      "disableAutoStart: \n\nIf true, the system will prevent the engine from starting when the player got into it."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to start or stop the engine on.\n\nvalue: \n\ntrue to turn the vehicle on; false to turn it off.\n\ninstantly: \n\nif true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.\n\ndisableAutoStart: \n\nIf true, the system will prevent the engine from starting when the player got into it.\n\nStarts or stops the engine on the specified vehicle. From what I've tested when I do this to a helicopter the propellers turn off after the engine has started."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleEnveffScale",
    "hash": "0x3AFDC536C3D01674",
    "code": "-- SET_VEHICLE_ENVEFF_SCALE\nSetVehicleEnveffScale(\n\tvehicle --[[ Vehicle ]], \n\tfade --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nTarget vehicle",
      "fade: \n\nThe paint fade effect strength"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nTarget vehicle\n\nfade: \n\nThe paint fade effect strength\n\nExamples with a besra:\n\nfade value 0.0\nfade value 0.5\nfade value 1.0\n\nThe parameter fade is a value from 0-1, where 0 is fresh paint."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleExclusiveDriver",
    "hash": "0x41062318F23ED854",
    "code": "-- SET_VEHICLE_EXCLUSIVE_DRIVER\nSetVehicleExclusiveDriver(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER; likely SET_VEHICLE_ALLOW_*.\n\nToggles a flag related to SET_VEHICLE_EXCLUSIVE_DRIVER, however, doesn't enable that feature (or trigger script events related to it).\n\nSee _SET_VEHICLE_EXCLUSIVE_DRIVER_2.\n\nNativeDB Removed Parameter 2: int index"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleExclusiveDriver_2",
    "hash": "0xB5C51B5502E85E83",
    "code": "-- _SET_VEHICLE_EXCLUSIVE_DRIVER_2\nSetVehicleExclusiveDriver_2(\n\tvehicle --[[ Vehicle ]], \n\tped --[[ Ped ]], \n\tindex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "The actual SET_VEHICLE_EXCLUSIVE_DRIVER native."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleExplodesOnHighExplosionDamage",
    "hash": "0x71B0892EC081D60A",
    "code": "-- SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE\nSetVehicleExplodesOnHighExplosionDamage(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleExplosiveDamageScale",
    "hash": "0x84D7FFD223CAAFFD",
    "code": "-- _SET_VEHICLE_EXPLOSIVE_DAMAGE_SCALE\nlocal retval --[[ Any ]] =\n\tSetVehicleExplosiveDamageScale(\n\t\tvehicle --[[ Vehicle ]], \n\t\tscale --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [
      "Does not actually return anything."
    ],
    "description": "Returns:\n\nDoes not actually return anything.\n\nNativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleExtendedRemovalRange",
    "hash": "0x79DF7E806202CE01",
    "code": "-- SET_VEHICLE_EXTENDED_REMOVAL_RANGE\nSetVehicleExtendedRemovalRange(\n\tvehicle --[[ Vehicle ]], \n\trange --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Max value is 32767"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleExtra",
    "hash": "0x7EE3A3C5E4A40CC9",
    "code": "-- SET_VEHICLE_EXTRA\nSetVehicleExtra(\n\tvehicle --[[ Vehicle ]], \n\textraId --[[ integer ]], \n\tdisable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Note: only some vehicle have extras  \nextra ids are from 1 - 9 depending on the vehicle  \n-------------------------------------------------  \n^ not sure if outdated or simply wrong. Max extra ID for b944 is 14  \n-------------------------------------------------  \np2 is not a on/off toggle. mostly 0 means on and 1 means off.  \nnot sure if it really should be a BOOL.  \n-------------------------------------------------  \nConfirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleExtraColours",
    "hash": "0x2036F561ADD12E33",
    "code": "-- SET_VEHICLE_EXTRA_COLOURS\nSetVehicleExtraColours(\n\tvehicle --[[ Vehicle ]], \n\tpearlescentColor --[[ integer ]], \n\twheelColor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "They use the same color indexs as SET_VEHICLE_COLOURS."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleFixed",
    "hash": "0x115722B1B9C14C1C",
    "code": "-- SET_VEHICLE_FIXED\nSetVehicleFixed(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle that will be fixed"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle that will be fixed\n\nFix a given vehicle. If the vehicle's engine's broken then you cannot fix it with this native."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleFlightNozzlePosition",
    "hash": "0x30D779DE7C4F6DD3",
    "code": "-- SET_VEHICLE_FLIGHT_NOZZLE_POSITION\nSetVehicleFlightNozzlePosition(\n\tvehicle --[[ Vehicle ]], \n\tangleRatio --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleFlightNozzlePositionImmediate",
    "hash": "0x9AA47FFF660CB932",
    "code": "-- SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE\nSetVehicleFlightNozzlePositionImmediate(\n\tvehicle --[[ Vehicle ]], \n\tangle --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleForceAfterburner",
    "hash": "0xB055A34527CB8FD7",
    "code": "-- SET_VEHICLE_FORCE_AFTERBURNER\nSetVehicleForceAfterburner(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleForwardSpeed",
    "hash": "0xAB54A438726D25D5",
    "code": "-- SET_VEHICLE_FORWARD_SPEED\nSetVehicleForwardSpeed(\n\tvehicle --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.  \nSpeed is in meters per second  \nYou can convert meters/s to mph here:  \nhttp://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleFrictionOverride",
    "hash": "0x1837AF7C627009BA",
    "code": "-- SET_VEHICLE_FRICTION_OVERRIDE\nSetVehicleFrictionOverride(\n\tvehicle --[[ Vehicle ]], \n\tfriction --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Seems to be related to the metal parts, not tyres (like i was expecting lol)  \nMust be called every tick."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleFullbeam",
    "hash": "0x8B7FD87F0DDB421E",
    "code": "-- SET_VEHICLE_FULLBEAM\nSetVehicleFullbeam(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "It switch to highbeam when p1 is set to true."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleGeneratesEngineShockingEvents",
    "hash": "0x279D50DE5652D935",
    "code": "-- SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS\nSetVehicleGeneratesEngineShockingEvents(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleGeneratorAreaOfInterest",
    "hash": "0x9A75585FB2E54FAD",
    "code": "-- SET_VEHICLE_GENERATOR_AREA_OF_INTEREST\nSetVehicleGeneratorAreaOfInterest(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [
      "x: \n\nThe X coordinate of the central point of the area of interest.",
      "y: \n\nThe Y coordinate of the central point of the area of interest.",
      "z: \n\nThe Z coordinate of the central point of the area of interest.",
      "radius: \n\nThe radius around the central point, defining the size of the area of interest"
    ],
    "returns": [],
    "description": "Parameters:\n\nx: \n\nThe X coordinate of the central point of the area of interest.\n\ny: \n\nThe Y coordinate of the central point of the area of interest.\n\nz: \n\nThe Z coordinate of the central point of the area of interest.\n\nradius: \n\nThe radius around the central point, defining the size of the area of interest\n\nSpecifies an area of interest where cargens will focus on spawning vehicles\n\nYou can clear the area of interest with CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleGravity",
    "hash": "0x89F149B6131E57DA",
    "code": "-- SET_VEHICLE_GRAVITY\nSetVehicleGravity(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHandbrake",
    "hash": "0x684785568EF26A22",
    "code": "-- SET_VEHICLE_HANDBRAKE\nSetVehicleHandbrake(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHandlingHashForAi",
    "hash": "0x10655FAB9915623D",
    "code": "-- _SET_VEHICLE_HANDLING_HASH_FOR_AI\nSetVehicleHandlingHashForAi(\n\tvehicle --[[ Vehicle ]], \n\thash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHasBeenDrivenFlag",
    "hash": "0x02398B627547189C",
    "code": "-- SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG\nSetVehicleHasBeenDrivenFlag(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHasBeenOwnedByPlayer",
    "hash": "0x2B5F9D2AF1F1722D",
    "code": "-- SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER\nSetVehicleHasBeenOwnedByPlayer(\n\tvehicle --[[ Vehicle ]], \n\towned --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHasMutedSirens",
    "hash": "0xD8050E0EB60CF274",
    "code": "-- SET_VEHICLE_HAS_MUTED_SIRENS\nSetVehicleHasMutedSirens(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHasStrongAxles",
    "hash": "0x92F0CF722BC4202F",
    "code": "-- SET_VEHICLE_HAS_STRONG_AXLES\nSetVehicleHasStrongAxles(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "if true, axles won't bend."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHasUnbreakableLights",
    "hash": "0x1AA8A837D2169D94",
    "code": "-- SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS\nSetVehicleHasUnbreakableLights(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe target vehicle.",
      "toggle: \n\nSet the lights' breakability true makes lights unbreakable, false allows them to break."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\ntoggle: \n\nSet the lights' breakability true makes lights unbreakable, false allows them to break.\n\nSets whether the vehicle's lights can be broken.\n\nNativeDB Introduced: v323"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleHeadlightShadows",
    "hash": "0x1FD09E7390A74D54",
    "code": "-- SET_VEHICLE_HEADLIGHT_SHADOWS\nSetVehicleHeadlightShadows(\n\tvehicle --[[ Vehicle ]], \n\tflag --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe target vehicle.",
      "flag: \n\nA value from eVehicleHeadlightShadowFlags representing the desired headlight shadow flag."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nflag: \n\nA value from eVehicleHeadlightShadowFlags representing the desired headlight shadow flag.\n\nSets the vehicle headlight shadow flags.\n\nNativeDB Introduced: v323\nenum eVehicleHeadlightShadowFlags {\n    // Default (Lights can be toggled between off, normal and high beams)\n    NO_HEADLIGHT_SHADOWS = 0,\n    // Lights Disabled (Lights are fully disabled, cannot be toggled)\n    HEADLIGHTS_CAST_DYNAMIC_SHADOWS = 1,\n    // Always On (Lights can be toggled between normal and high beams)\n    HEADLIGHTS_CAST_STATIC_SHADOWS = 2,\n    HEADLIGHTS_CAST_FULL_SHADOWS = 3 \n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleInactiveDuringPlayback",
    "hash": "0x06582AFF74894C75",
    "code": "-- SET_VEHICLE_INACTIVE_DURING_PLAYBACK\nSetVehicleInactiveDuringPlayback(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleIndicatorLights",
    "hash": "0xB5D45264751B7DF0",
    "code": "-- SET_VEHICLE_INDICATOR_LIGHTS\nSetVehicleIndicatorLights(\n\tvehicle --[[ Vehicle ]], \n\tturnSignal --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the turn signal enabled for a vehicle.  \nSet turnSignal to 1 for left light, 0 for right light."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleIndividualDoorsLocked",
    "hash": "0xBE70724027F85BCD",
    "code": "-- SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED\nSetVehicleIndividualDoorsLocked(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\tdoorLockStatus --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleInfluencesWantedLevel",
    "hash": "0x0AD9E8F87FF7C16F",
    "code": "-- SET_VEHICLE_INFLUENCES_WANTED_LEVEL\nSetVehicleInfluencesWantedLevel(\n\tvehicle --[[ Vehicle ]], \n\tinfluenceWantedLevel --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe specific vehicle to be set for influencing the wanted level.",
      "influenceWantedLevel: \n\nA boolean value. Set to true to make the vehicle influence the wanted level; false to prevent it from doing so."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe specific vehicle to be set for influencing the wanted level.\n\ninfluenceWantedLevel: \n\nA boolean value. Set to true to make the vehicle influence the wanted level; false to prevent it from doing so.\n\nThis native sets whether a specific vehicle influences the player's wanted level when it is involved in an incident that typically triggers a wanted response, such as being marked as a \"victim\" vehicle.\n\nThis is particularly useful when utilizing the wanted system from GTA, and you want to prevent a vehicle from affecting the wanted level when it is stolen. In the decompiled scripts this native is only used to disable the influence of the vehicle on the wanted level."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleInteriorColor",
    "hash": "0xF40DD601A65F7F19",
    "code": "-- _SET_VEHICLE_INTERIOR_COLOR\nSetVehicleInteriorColor(\n\tvehicle --[[ Vehicle ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleInteriorlight",
    "hash": "0xBC2042F090AF6AD3",
    "code": "-- SET_VEHICLE_INTERIORLIGHT\nSetVehicleInteriorlight(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleIsConsideredByPlayer",
    "hash": "0x31B927BBC44156CD",
    "code": "-- SET_VEHICLE_IS_CONSIDERED_BY_PLAYER\nSetVehicleIsConsideredByPlayer(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleIsRacing",
    "hash": "0x07116E24E9D1929D",
    "code": "-- SET_VEHICLE_IS_RACING\nSetVehicleIsRacing(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1 (toggle) was always 1 (true) except in one case in the b678 scripts."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleIsStolen",
    "hash": "0x67B2C79AA7FF5738",
    "code": "-- SET_VEHICLE_IS_STOLEN\nSetVehicleIsStolen(\n\tvehicle --[[ Vehicle ]], \n\tisStolen --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleIsWanted",
    "hash": "0xF7EC25A3EBEEC726",
    "code": "-- SET_VEHICLE_IS_WANTED\nSetVehicleIsWanted(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the wanted state of this vehicle."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleKeepEngineOnWhenAbandoned",
    "hash": "0xB8FBC8B1330CA9B4",
    "code": "-- SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED\nSetVehicleKeepEngineOnWhenAbandoned(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "toggle: \n\ntrue to keep the engine on, otherwise false."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\ntoggle: \n\ntrue to keep the engine on, otherwise false.\n\nCalling this native will keep a vehicle's engine running after exiting."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleKersAllowed",
    "hash": "0x99C82F8A139F3E4E",
    "code": "-- SET_VEHICLE_KERS_ALLOWED\nSetVehicleKersAllowed(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleLightMultiplier",
    "hash": "0xB385454F8791F57C",
    "code": "-- SET_VEHICLE_LIGHT_MULTIPLIER\nSetVehicleLightMultiplier(\n\tvehicle --[[ Vehicle ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "multiplier: \n\nThe multiplier applied to the vehicle's headlights."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nmultiplier: \n\nThe multiplier applied to the vehicle's headlights.\n\nThis multiplier has no limit, by default the game has this set to 1.0."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleLights",
    "hash": "0x34E710FF01247C5A",
    "code": "-- SET_VEHICLE_LIGHTS\nSetVehicleLights(\n\tvehicle --[[ Vehicle ]], \n\tstate --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe target vehicle.",
      "state: \n\nA value from eVehicleLightSetting representing the desired light setting."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe target vehicle.\n\nstate: \n\nA value from eVehicleLightSetting representing the desired light setting.\n\nSets the vehicle lights state. Allowing for different lighting modes.\n\nNativeDB Introduced: v323\nenum eVehicleLightSetting {\n    // Normal light behavior. Lights cycle through off, then low beams, then high beams.\n    // Note: It's affected by day or night; high beams don't exist in daytime.\n    NO_VEHICLE_LIGHT_OVERRIDE = 0,\n    // Vehicle doesn't have lights, always off.\n    FORCE_VEHICLE_LIGHTS_OFF  = 1, \n    // Vehicle has always-on lights.\n    // During day: Cycles between low beams and high beams. \n    // At night: Cycles between low beams, low beams, and high beams.\n    FORCE_VEHICLE_LIGHTS_ON   = 2,\n    // Sets vehicle lights on. Behaves like normal lights (same as 0).\n    SET_VEHICLE_LIGHTS_ON     = 3,\n    // Sets vehicle lights off. Behaves like normal lights (same as 0).\n    SET_VEHICLE_LIGHTS_OFF    = 4 \n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleLivery",
    "hash": "0x60BF608F1B8CD1B6",
    "code": "-- SET_VEHICLE_LIVERY\nSetVehicleLivery(\n\tvehicle --[[ Vehicle ]], \n\tlivery --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleLodMultiplier",
    "hash": "0x93AE6A61BE015BF1",
    "code": "-- SET_VEHICLE_LOD_MULTIPLIER\nSetVehicleLodMultiplier(\n\tvehicle --[[ Vehicle ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleMaxSpeed",
    "hash": "0xBAA045B4E42F3C06",
    "code": "-- _SET_VEHICLE_MAX_SPEED\nSetVehicleMaxSpeed(\n\tvehicle --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "speed: \n\nThe speed limit in meters per second."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nspeed: \n\nThe speed limit in meters per second.\n\nTo reset the max speed, set the speed value to 0.0 or lower."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleMod",
    "hash": "0x6AF0636DDEDCB6DD",
    "code": "-- SET_VEHICLE_MOD\nSetVehicleMod(\n\tvehicle --[[ Vehicle ]], \n\tmodType --[[ integer ]], \n\tmodIndex --[[ integer ]], \n\tcustomTires --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "// eVehicleModType values modified to conform to script native reorganization (see 0x140D25327 in 1604).\nenum eVehicleModType\n{\n\tVMT_SPOILER = 0,\n\tVMT_BUMPER_F = 1,\n\tVMT_BUMPER_R = 2,\n\tVMT_SKIRT = 3,\n\tVMT_EXHAUST = 4,\n\tVMT_CHASSIS = 5,\n\tVMT_GRILL = 6,\n\tVMT_BONNET = 7,\n\tVMT_WING_L = 8,\n\tVMT_WING_R = 9,\n\tVMT_ROOF = 10,\n\tVMT_ENGINE = 11,\n\tVMT_BRAKES = 12,\n\tVMT_GEARBOX = 13,\n\tVMT_HORN = 14,\n\tVMT_SUSPENSION = 15,\n\tVMT_ARMOUR = 16,\n\tVMT_NITROUS = 17,\n\tVMT_TURBO = 18,\n\tVMT_SUBWOOFER = 19,\n\tVMT_TYRE_SMOKE = 20,\n\tVMT_HYDRAULICS = 21,\n\tVMT_XENON_LIGHTS = 22,\n\tVMT_WHEELS = 23,\n\tVMT_WHEELS_REAR_OR_HYDRAULICS = 24,\n\tVMT_PLTHOLDER = 25,\n\tVMT_PLTVANITY = 26,\n\tVMT_INTERIOR1 = 27,\n\tVMT_INTERIOR2 = 28,\n\tVMT_INTERIOR3 = 29,\n\tVMT_INTERIOR4 = 30,\n\tVMT_INTERIOR5 = 31,\n\tVMT_SEATS = 32,\n\tVMT_STEERING = 33,\n\tVMT_KNOB = 34,\n\tVMT_PLAQUE = 35,\n\tVMT_ICE = 36,\n\tVMT_TRUNK = 37,\n\tVMT_HYDRO = 38,\n\tVMT_ENGINEBAY1 = 39,\n\tVMT_ENGINEBAY2 = 40,\n\tVMT_ENGINEBAY3 = 41,\n\tVMT_CHASSIS2 = 42,\n\tVMT_CHASSIS3 = 43,\n\tVMT_CHASSIS4 = 44,\n\tVMT_CHASSIS5 = 45,\n\tVMT_DOOR_L = 46,\n\tVMT_DOOR_R = 47,\n\tVMT_LIVERY_MOD = 48,\n\tVMT_LIGHTBAR = 49,\n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleModColor_1",
    "hash": "0x43FEB945EE7F85B8",
    "code": "-- SET_VEHICLE_MOD_COLOR_1\nSetVehicleModColor_1(\n\tvehicle --[[ Vehicle ]], \n\tpaintType --[[ integer ]], \n\tcolor --[[ integer ]], \n\tpearlescentColor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "paintType:  \n0: Normal  \n1: Metallic  \n2: Pearl  \n3: Matte  \n4: Metal  \n5: Chrome  \ncolor: number of the color.  \np3 seems to always be 0."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleModColor_2",
    "hash": "0x816562BADFDEC83E",
    "code": "-- SET_VEHICLE_MOD_COLOR_2\nSetVehicleModColor_2(\n\tvehicle --[[ Vehicle ]], \n\tpaintType --[[ integer ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Changes the secondary paint type and color  \npaintType:  \n0: Normal  \n1: Metallic  \n2: Pearl  \n3: Matte  \n4: Metal  \n5: Chrome  \ncolor: number of the color"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleModKit",
    "hash": "0x1F2AA07F00B3217A",
    "code": "-- SET_VEHICLE_MOD_KIT\nSetVehicleModKit(\n\tvehicle --[[ Vehicle ]], \n\tmodKit --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleModelIsSuppressed",
    "hash": "0x0FC2D89AC25A5814",
    "code": "-- SET_VEHICLE_MODEL_IS_SUPPRESSED\nSetVehicleModelIsSuppressed(\n\tmodel --[[ Hash ]], \n\tsuppressed --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:  \nVEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY(\"taco\"), true);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleNameDebug",
    "hash": "0xBFDF984E2C22B94F",
    "code": "-- SET_VEHICLE_NAME_DEBUG\nSetVehicleNameDebug(\n\tvehicle --[[ Vehicle ]], \n\tname --[[ string ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle id.",
      "name: \n\nDebug name."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle id.\n\nname: \n\nDebug name.\n\nThis method is utilized solely for debugging purposes and is functional only in debug builds of the game. Please note that its functionality may not be available in the retail version."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleNeedsToBeHotwired",
    "hash": "0xFBA550EA44404EE6",
    "code": "-- SET_VEHICLE_NEEDS_TO_BE_HOTWIRED\nSetVehicleNeedsToBeHotwired(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleNeonLightEnabled",
    "hash": "0x2AA720E4287BF269",
    "code": "-- _SET_VEHICLE_NEON_LIGHT_ENABLED\nSetVehicleNeonLightEnabled(\n\tvehicle --[[ Vehicle ]], \n\tindex --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the neon lights of the specified vehicle on/off.  \nIndices:  \n0 = Left  \n1 = Right  \n2 = Front  \n3 = Back"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleNeonLightsColor_2",
    "hash": "0xB93B2867F7B479D1",
    "code": "-- _SET_VEHICLE_NEON_LIGHTS_COLOR_2\nSetVehicleNeonLightsColor_2(\n\tvehicle --[[ Vehicle ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleNeonLightsColour",
    "hash": "0x8E0A582209A62695",
    "code": "-- _SET_VEHICLE_NEON_LIGHTS_COLOUR\nSetVehicleNeonLightsColour(\n\tvehicle --[[ Vehicle ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the color of the neon lights on the specified vehicle.\n\nRGB values and colour names taken from the decompiled scripts:\n\nColour\tR\tG\tB\nWhite\t222\t222\t255\nBlue\t2\t21\t255\nElectric Blue\t3\t83\t255\nMint Green\t0\t255\t140\nLime Green\t94\t255\t1\nYellow\t255\t255\t0\nGolden Shower\t255\t150\t0\nOrange\t255\t62\t0\nRed\t255\t1\t1\nPony Pink\t255\t50\t100\nHot Pink\t255\t5\t190\nPurple\t35\t1\t255\nBlacklight\t15\t3\t255"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleNumberPlateText",
    "hash": "0x95A88F0B409CDA47",
    "code": "-- SET_VEHICLE_NUMBER_PLATE_TEXT\nSetVehicleNumberPlateText(\n\tvehicle --[[ Vehicle ]], \n\tplateText --[[ string ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle to set the plate for",
      "plateText: \n\nThe text to set the plate to, 8 chars maximum"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle to set the plate for\n\nplateText: \n\nThe text to set the plate to, 8 chars maximum"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleNumberPlateTextIndex",
    "hash": "0x9088EB5A43FFB0A1",
    "code": "-- SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX\nSetVehicleNumberPlateTextIndex(\n\tvehicle --[[ Vehicle ]], \n\tplateIndex --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "plateIndex: \n\nThe style to use for the plate, see plate styles."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nplateIndex: \n\nThe style to use for the plate, see plate styles.\n\nPlease refer to GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX for plate indicies."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleOnGroundProperly",
    "hash": "0x49733E92263139D1",
    "code": "-- SET_VEHICLE_ON_GROUND_PROPERLY\nlocal retval --[[ boolean ]] =\n\tSetVehicleOnGroundProperly(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.  \nNativeDB Added Parameter 2: float p1"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleOutOfControl",
    "hash": "0xF19D095E42D430CC",
    "code": "-- SET_VEHICLE_OUT_OF_CONTROL\nSetVehicleOutOfControl(\n\tvehicle --[[ Vehicle ]], \n\tkillDriver --[[ boolean ]], \n\texplodeOnImpact --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleParachuteActive",
    "hash": "0x0BFFB028B3DD0A97",
    "code": "-- _SET_VEHICLE_PARACHUTE_ACTIVE\nSetVehicleParachuteActive(\n\tvehicle --[[ Vehicle ]], \n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleParachuteModel",
    "hash": "0x4D610C6B56031351",
    "code": "-- _SET_VEHICLE_PARACHUTE_MODEL\nSetVehicleParachuteModel(\n\tvehicle --[[ Vehicle ]], \n\tmodelHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "parachuteModel = 230075693"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleParachuteTextureVariation",
    "hash": "0xA74AD2439468C883",
    "code": "-- _SET_VEHICLE_PARACHUTE_TEXTURE_VARIATION\nSetVehicleParachuteTextureVariation(\n\tvehicle --[[ Vehicle ]], \n\ttextureVariation --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "colorIndex = 0 - 7"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehiclePetrolTankHealth",
    "hash": "0x70DB57649FA8D0D8",
    "code": "-- SET_VEHICLE_PETROL_TANK_HEALTH\nSetVehiclePetrolTankHealth(\n\tvehicle --[[ Vehicle ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "1000 is max health  \nBegins leaking gas at around 650 health"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleProvidesCover",
    "hash": "0x5AFEEDD9BB2899D7",
    "code": "-- SET_VEHICLE_PROVIDES_COVER\nSetVehicleProvidesCover(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRampLaunchModifier",
    "hash": "0xEFC13B1CE30D755D",
    "code": "-- _SET_VEHICLE_RAMP_LAUNCH_MODIFIER\nSetVehicleRampLaunchModifier(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRampSidewaysLaunchMotion",
    "hash": "0x1BBAC99C0BC53656",
    "code": "-- _SET_VEHICLE_RAMP_SIDEWAYS_LAUNCH_MOTION\nSetVehicleRampSidewaysLaunchMotion(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRampUpwardsLaunchMotion",
    "hash": "0x756AE6E962168A04",
    "code": "-- _SET_VEHICLE_RAMP_UPWARDS_LAUNCH_MOTION\nSetVehicleRampUpwardsLaunchMotion(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleReceivesRampDamage",
    "hash": "0x28D034A93FE31BF5",
    "code": "-- _SET_VEHICLE_RECEIVES_RAMP_DAMAGE\nSetVehicleReceivesRampDamage(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleReduceGrip",
    "hash": "0x222FF6A823D122E2",
    "code": "-- SET_VEHICLE_REDUCE_GRIP\nSetVehicleReduceGrip(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Reduces grip significantly so it's hard to go anywhere."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleReduceTraction",
    "hash": "0x6DEE944E1EE90CFB",
    "code": "-- _SET_VEHICLE_REDUCE_TRACTION\nSetVehicleReduceTraction(\n\tvehicle --[[ Vehicle ]], \n\tval --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Often used in conjunction with: SET_VEHICLE_REDUCE_GRIP.\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRocketBoostActive",
    "hash": "0x81E1552E35DC3839",
    "code": "-- _SET_VEHICLE_ROCKET_BOOST_ACTIVE\nSetVehicleRocketBoostActive(\n\tvehicle --[[ Vehicle ]], \n\tactive --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRocketBoostPercentage",
    "hash": "0xFEB2DDED3509562E",
    "code": "-- _SET_VEHICLE_ROCKET_BOOST_PERCENTAGE\nSetVehicleRocketBoostPercentage(\n\tvehicle --[[ Vehicle ]], \n\tpercentage --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRocketBoostRefillTime",
    "hash": "0xE00F2AB100B76E89",
    "code": "-- _SET_VEHICLE_ROCKET_BOOST_REFILL_TIME\nSetVehicleRocketBoostRefillTime(\n\tvehicle --[[ Vehicle ]], \n\ttime --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRoofLivery",
    "hash": "0xA6D3A8750DC73270",
    "code": "-- _SET_VEHICLE_ROOF_LIVERY\nSetVehicleRoofLivery(\n\tvehicle --[[ Vehicle ]], \n\tlivery --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "livery: \n\nLivery index."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\nlivery: \n\nLivery index.\n\nUsed to set the tornado custom (convertible) rooftop livery.\n\nLivery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.\n\nMight work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleRudderBroken",
    "hash": "0x09606148B6C71DEF",
    "code": "-- SET_VEHICLE_RUDDER_BROKEN\nSetVehicleRudderBroken(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleSearchlight",
    "hash": "0x14E85C5EE7A4D542",
    "code": "-- SET_VEHICLE_SEARCHLIGHT\nSetVehicleSearchlight(\n\theli --[[ Vehicle ]], \n\ttoggle --[[ boolean ]], \n\tcanBeUsedByAI --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only works during nighttime."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleShadowEffect",
    "hash": "0xF0E4BA16D1DB546C",
    "code": "-- _SET_VEHICLE_SHADOW_EFFECT\nSetVehicleShadowEffect(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Adds some kind of shadow to the vehicle.\n-1 disables the effect.\nDISABLE_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleShootAtTarget",
    "hash": "0x74CD9A9327A282EA",
    "code": "-- SET_VEHICLE_SHOOT_AT_TARGET\nSetVehicleShootAtTarget(\n\tdriver --[[ Ped ]], \n\tentity --[[ Entity ]], \n\txTarget --[[ number ]], \n\tyTarget --[[ number ]], \n\tzTarget --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:  \nWEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY(\"VEHICLE_WEAPON_PLANE_ROCKET\"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleSilent",
    "hash": "0x9D44FCCE98450843",
    "code": "-- _SET_VEHICLE_SILENT\nSetVehicleSilent(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleSiren",
    "hash": "0xF4924635A19EB37D",
    "code": "-- SET_VEHICLE_SIREN\nSetVehicleSiren(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Activate siren on vehicle (Only works if the vehicle has a siren)."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleSt",
    "hash": "0x1CF38D529D7441D9",
    "code": "-- _SET_VEHICLE_ST\nSetVehicleSt(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.  \n============================================  \nMay be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.  \nBtw, func_1333 ends up calling this func which uses this native,  \nvoid func_1338(int iParam0)//Position   \n{  \n\tENTITY::FREEZE_ENTITY_POSITION(iParam0, true);  \n\tENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);  \n\tENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);  \n\tVEHICLE::_0xDF594D8D(iParam0, true);  \n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleSteerBias",
    "hash": "0x42A8EC77D5150CBE",
    "code": "-- SET_VEHICLE_STEER_BIAS\nSetVehicleSteerBias(\n\tvehicle --[[ Vehicle ]], \n\tvalue --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Locks the vehicle's steering to the desired angle, explained below.  \nRequires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.  \nSteer bias:  \n-1.0 = full right  \n0.0 = centered steering  \n1.0 = full left"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleSteeringBiasScalar",
    "hash": "0x9007A2F21DC108D4",
    "code": "-- SET_VEHICLE_STEERING_BIAS_SCALAR\nSetVehicleSteeringBiasScalar(\n\tvehicle --[[ Vehicle ]], \n\tscalar --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleStrong",
    "hash": "0x3E8C8727991A8A0B",
    "code": "-- SET_VEHICLE_STRONG\nSetVehicleStrong(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTankTurretPosition",
    "hash": "0x56B94C6D7127DFBA",
    "code": "-- SET_VEHICLE_TANK_TURRET_POSITION\nSetVehicleTankTurretPosition(\n\tvehicle --[[ Vehicle ]], \n\tposition --[[ number ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTimedExplosion",
    "hash": "0x2E0A74E1002380B1",
    "code": "-- SET_VEHICLE_TIMED_EXPLOSION\nSetVehicleTimedExplosion(\n\tvehicle --[[ Vehicle ]], \n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTowTruckArmPosition",
    "hash": "0xFE54B92A344583CA",
    "code": "-- SET_VEHICLE_TOW_TRUCK_ARM_POSITION\nSetVehicleTowTruckArmPosition(\n\tvehicle --[[ Vehicle ]], \n\tposition --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTurretSpeedThisFrame",
    "hash": "0x1093408B4B9D1146",
    "code": "-- SET_VEHICLE_TURRET_SPEED_THIS_FRAME\nSetVehicleTurretSpeedThisFrame(\n\tvehicle --[[ Vehicle ]], \n\tspeed --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTurretUnk",
    "hash": "0xC60060EB0D8AC7B1",
    "code": "-- _SET_VEHICLE_TURRET_UNK\nSetVehicleTurretUnk(\n\tvehicle --[[ Vehicle ]], \n\tindex --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Toggles specific flag on turret\nNativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTyreBurst",
    "hash": "0xEC6A202EE4960385",
    "code": "-- SET_VEHICLE_TYRE_BURST\nSetVehicleTyreBurst(\n\tvehicle --[[ Vehicle ]], \n\tindex --[[ integer ]], \n\tonRim --[[ boolean ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "\"To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)  \nto burst all tyres type it 8 times where p1 = 0 to 7.  \np3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.  \n'0 = wheel_lf / bike, plane or jet front  \n'1 = wheel_rf  \n'2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  \n'3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  \n'4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  \n'5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  \n'45 = 6 wheels trailer mid wheel left  \n'47 = 6 wheels trailer mid wheel right"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTyreFixed",
    "hash": "0x6E13FC662B882D1D",
    "code": "-- SET_VEHICLE_TYRE_FIXED\nSetVehicleTyreFixed(\n\tvehicle --[[ Vehicle ]], \n\ttyreIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "tyreIndex = 0 to 4 on normal vehicles  \n'0 = wheel_lf / bike, plane or jet front  \n'1 = wheel_rf  \n'2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  \n'3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  \n'4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  \n'5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  \n'45 = 6 wheels trailer mid wheel left  \n'47 = 6 wheels trailer mid wheel right"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTyreSmokeColor",
    "hash": "0xB5BA80F839791C0F",
    "code": "-- SET_VEHICLE_TYRE_SMOKE_COLOR\nSetVehicleTyreSmokeColor(\n\tvehicle --[[ Vehicle ]], \n\tr --[[ integer ]], \n\tg --[[ integer ]], \n\tb --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the tire smoke's color of this vehicle.  \nvehicle: The vehicle that is the target of this method.  \nr: The red level in the RGB color code.  \ng: The green level in the RGB color code.  \nb: The blue level in the RGB color code.  \nNote:  \nsetting r,g,b to 0 will give the car independance day tyre smoke"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleTyresCanBurst",
    "hash": "0xEB9DC3C7D8596C46",
    "code": "-- SET_VEHICLE_TYRES_CAN_BURST\nSetVehicleTyresCanBurst(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Allows you to toggle bulletproof tires."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleUndriveable",
    "hash": "0x8ABA6AF54B942B95",
    "code": "-- SET_VEHICLE_UNDRIVEABLE\nSetVehicleUndriveable(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleUnkDamageMultiplier",
    "hash": "0x45A561A9421AB6AD",
    "code": "-- _SET_VEHICLE_UNK_DAMAGE_MULTIPLIER\nSetVehicleUnkDamageMultiplier(\n\tvehicle --[[ Vehicle ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleUseAlternateHandling",
    "hash": "0x1D97D1E3A70A649F",
    "code": "-- SET_VEHICLE_USE_ALTERNATE_HANDLING\nSetVehicleUseAlternateHandling(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleUseCutsceneWheelCompression",
    "hash": "0xE023E8AC4EF7C117",
    "code": "-- SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION\nlocal retval --[[ Any ]] =\n\tSetVehicleUseCutsceneWheelCompression(\n\t\tp0 --[[ Vehicle ]], \n\t\tp1 --[[ boolean ]], \n\t\tp2 --[[ boolean ]], \n\t\tp3 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleUseHornButtonForNitrous",
    "hash": "0x1980F68872CC2C3D",
    "code": "-- _SET_VEHICLE_USE_HORN_BUTTON_FOR_NITROUS\nSetVehicleUseHornButtonForNitrous(\n\tvehicle --[[ Vehicle ]], \n\tbToggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle where this setting will be applied.",
      "bToggle: \n\nIf set to true, the horn button will activate the nitrous system; if false, it will not."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle where this setting will be applied.\n\nbToggle: \n\nIf set to true, the horn button will activate the nitrous system; if false, it will not.\n\nNativeDB Introduced: v3095\n\nEnables or disables the use of the vehicle's horn button for activating the nitrous system."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleUsePlayerLightSettings",
    "hash": "0xC45C27EF50F36ADC",
    "code": "-- SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS\nSetVehicleUsePlayerLightSettings(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleUsesLargeRearRamp",
    "hash": "0xCAC66558B944DA67",
    "code": "-- SET_VEHICLE_USES_LARGE_REAR_RAMP\nSetVehicleUsesLargeRearRamp(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "vehicle must be a plane"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleWeaponRestrictedAmmo",
    "hash": "0x44CD1F493DB2A0A6",
    "code": "-- SET_VEHICLE_WEAPON_RESTRICTED_AMMO\nSetVehicleWeaponRestrictedAmmo(\n\tvehicle --[[ Vehicle ]], \n\tweaponIndex --[[ integer ]], \n\tammoCount --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle",
      "weaponIndex: \n\nThe weapon index we're setting ammo for (between 0 and 3), see description for more.",
      "ammoCount: \n\nWhen set positive, will count down with every fire and prevent firing at 0. Set -1 to disable restricted ammo."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle\n\nweaponIndex: \n\nThe weapon index we're setting ammo for (between 0 and 3), see description for more.\n\nammoCount: \n\nWhen set positive, will count down with every fire and prevent firing at 0. Set -1 to disable restricted ammo.\n\nSets a limited number of ammo for a particular vehicle weapon index on a vehicle.\n\nInformation about weapon indexes can be found in handling.meta.\n\nIn the example given below, uWeaponHash defines weapon hashes for the vehicle. Each <Item> corresponds to an index starting from 0.\n\n<uWeaponHash>\n    <Item>VEHICLE_WEAPON_PLAYER_BUZZARD</Item>  <!-- Index: 0 -->\n    <Item>VEHICLE_WEAPON_SPACE_ROCKET</Item>    <!-- Index: 1 -->\n    <Item>VEHICLE_WEAPON_SEARCHLIGHT</Item>     <!-- Index: 2 -->\n</uWeaponHash>"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleWeaponsDisabled",
    "hash": "0x86B4B6212CB8B627",
    "code": "-- _SET_VEHICLE_WEAPONS_DISABLED\nSetVehicleWeaponsDisabled(\n\tvehicle --[[ Vehicle ]], \n\tweaponSlot --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleWheelType",
    "hash": "0x487EB21CC7295BA1",
    "code": "-- SET_VEHICLE_WHEEL_TYPE\nSetVehicleWheelType(\n\tvehicle --[[ Vehicle ]], \n\twheelType --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Refer to GET_VEHICLE_WHEEL_TYPE for wheel types."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleWheelsCanBreak",
    "hash": "0x29B18B4FD460CA8F",
    "code": "-- SET_VEHICLE_WHEELS_CAN_BREAK\nSetVehicleWheelsCanBreak(\n\tvehicle --[[ Vehicle ]], \n\tenabled --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleWheelsCanBreakOffWhenBlowUp",
    "hash": "0xA37B9A517B133349",
    "code": "-- SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP\nSetVehicleWheelsCanBreakOffWhenBlowUp(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleWheelsDealDamage",
    "hash": "0x2970EAA18FD5E42F",
    "code": "-- _SET_VEHICLE_WHEELS_DEAL_DAMAGE\nSetVehicleWheelsDealDamage(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Related to monster trucks in native scripts.\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleWindowTint",
    "hash": "0x57C51E6BAD752696",
    "code": "-- SET_VEHICLE_WINDOW_TINT\nSetVehicleWindowTint(\n\tvehicle --[[ Vehicle ]], \n\ttint --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "enum WindowTints  \n{  \n\tWINDOWTINT_NONE = 0,\n\tWINDOWTINT_PURE_BLACK = 1,\n\tWINDOWTINT_DARKSMOKE = 2,\n\tWINDOWTINT_LIGHTSMOKE = 3,\n\tWINDOWTINT_STOCK = 4,\n\tWINDOWTINT_LIMO = 5,\n\tWINDOWTINT_GREEN = 6\n};"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SetVehicleXenonLightsColor",
    "hash": "0xE41033B25D003A07",
    "code": "-- _SET_VEHICLE_XENON_LIGHTS_COLOR\nSetVehicleXenonLightsColor(\n\tvehicle --[[ Vehicle ]], \n\tcolor --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle.",
      "color: \n\nThe paint index."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle.\n\ncolor: \n\nThe paint index.\n\nPaint index goes from 0 to 12.\n\nYou can find the list of colors and ids here: _GET_VEHICLE_HEADLIGHTS_COLOUR"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SkipTimeInPlaybackRecordedVehicle",
    "hash": "0x9438F7AD68771A20",
    "code": "-- SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE\nSkipTimeInPlaybackRecordedVehicle(\n\tvehicle --[[ Vehicle ]], \n\ttime --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SkipToEndAndStopPlaybackRecordedVehicle",
    "hash": "0xAB8E2EDA0C0A5883",
    "code": "-- SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE\nSkipToEndAndStopPlaybackRecordedVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SmashVehicleWindow",
    "hash": "0x9E5B5E4D2CCD2259",
    "code": "-- SMASH_VEHICLE_WINDOW\nSmashVehicleWindow(\n\tvehicle --[[ Vehicle ]], \n\twindowIndex --[[ integer ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle id.",
      "windowIndex: \n\nWindows to smash index."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle id.\n\nwindowIndex: \n\nWindows to smash index.\n\nSmashes a vehicles window. See eWindowId declared in IS_VEHICLE_WINDOW_INTACT."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StabiliseEntityAttachedToHeli",
    "hash": "0x374706271354CB18",
    "code": "-- STABILISE_ENTITY_ATTACHED_TO_HELI\nStabiliseEntityAttachedToHeli(\n\tvehicle --[[ Vehicle ]], \n\tentity --[[ Entity ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StartPlaybackRecordedVehicle",
    "hash": "0x3F878F92B3A7A071",
    "code": "-- START_PLAYBACK_RECORDED_VEHICLE\nStartPlaybackRecordedVehicle(\n\tvehicle --[[ Vehicle ]], \n\trecording --[[ integer ]], \n\tscript --[[ string ]], \n\tp3 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).\n\nSee REQUEST_VEHICLE_RECORDING."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StartPlaybackRecordedVehicleUsingAi",
    "hash": "0x29DE5FA52D00428C",
    "code": "-- START_PLAYBACK_RECORDED_VEHICLE_USING_AI\nStartPlaybackRecordedVehicleUsingAi(\n\tvehicle --[[ Vehicle ]], \n\trecording --[[ integer ]], \n\tscript --[[ string ]], \n\tspeed --[[ number ]], \n\tdrivingStyle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.\n\n0x1F2E4E06DEA8992B is a related native that deals with the AI physics for such recordings."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StartPlaybackRecordedVehicleWithFlags",
    "hash": "0x7D80FD645D4DA346",
    "code": "-- START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS\nStartPlaybackRecordedVehicleWithFlags(\n\tvehicle --[[ Vehicle ]], \n\trecording --[[ integer ]], \n\tscript --[[ string ]], \n\tflags --[[ integer ]], \n\ttime --[[ integer ]], \n\tdrivingStyle --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.\ntime, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StartVehicleAlarm",
    "hash": "0xB8FF7AB45305C345",
    "code": "-- START_VEHICLE_ALARM\nStartVehicleAlarm(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StartVehicleHorn",
    "hash": "0x9C8C6504B5B63D2C",
    "code": "-- START_VEHICLE_HORN\nStartVehicleHorn(\n\tvehicle --[[ Vehicle ]], \n\tduration --[[ integer ]], \n\tmode --[[ Hash ]], \n\tforever --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nVehicle id",
      "duration: \n\nThe duration to sound the horn, in milliseconds.",
      "mode: \n\nThe hash of \"NORMAL\" or \"HELDDOWN\". Can be 0.",
      "forever:"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nVehicle id\n\nduration: \n\nThe duration to sound the horn, in milliseconds.\n\nmode: \n\nThe hash of \"NORMAL\" or \"HELDDOWN\". Can be 0.\n\nforever:\n\nSounds the horn for the specified vehicle. Note that if a player is in the vehicle, it will only sound briefly."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StopAllGarageActivity",
    "hash": "0x0F87E938BDF29D66",
    "code": "-- STOP_ALL_GARAGE_ACTIVITY\nStopAllGarageActivity()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StopBringVehicleToHalt",
    "hash": "0x7C06330BFDDA182E",
    "code": "-- _STOP_BRING_VEHICLE_TO_HALT\nStopBringVehicleToHalt(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Stops CTaskBringVehicleToHalt"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "StopPlaybackRecordedVehicle",
    "hash": "0x54833611C17ABDEA",
    "code": "-- STOP_PLAYBACK_RECORDED_VEHICLE\nStopPlaybackRecordedVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "SwitchTrainTrack",
    "hash": "0xFD813BB7DB977F20",
    "code": "-- SWITCH_TRAIN_TRACK\nSwitchTrainTrack(\n\ttrackId --[[ integer ]], \n\tstate --[[ boolean ]]\n)",
    "parameters": [
      "trackId: \n\nThe internal id of the train track to switch",
      "state: \n\nWhether ambient trains can spawn or not"
    ],
    "returns": [
      "None. The original return type is void, but ABI compatibility makes this impossible."
    ],
    "description": "Parameters:\n\ntrackId: \n\nThe internal id of the train track to switch\n\nstate: \n\nWhether ambient trains can spawn or not\n\nReturns:\n\nNone. The original return type is void, but ABI compatibility makes this impossible.\n\nToggles whether ambient trains can spawn on the specified track or not.\n\ntrackId\tFile\tDescription\n0\ttrains1.dat\tMain track around SA\n1\ttrains2.dat\tDavis Quartz Quarry branch\n2\ttrains3.dat\tSecond track alongside live track along Roy Lewenstein Blv.\n3\ttrains4.dat\tMetro track circuit\n4\ttrains5.dat\tBranch in Mirror Park Railyard\n5\ttrains6.dat\tBranch in Mirror Park Railyard\n6\ttrains7.dat\tLS branch to Mirror Park Railyard\n7\ttrains8.dat\tOverground part of metro track along Forum Dr.\n8\ttrains9.dat\tBranch to Mirror Park Railyard\n9\ttrains10.dat\tYankton train\n10\ttrains11.dat\tPart of metro track near mission row\n11\ttrains12.dat\tYankton prologue mission train\n\nTracks IDs 0 and 3 are the main tracks you find trains on during normal gameplay, all the others are used during missions and are not complete tracks."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "ToggleVehicleMod",
    "hash": "0x2A1F4F37F95BAD08",
    "code": "-- TOGGLE_VEHICLE_MOD\nToggleVehicleMod(\n\tvehicle --[[ Vehicle ]], \n\tmodType --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nThe vehicle handle",
      "modType: \n\nRefer to eVehicleModType in SET_VEHICLE_MOD.",
      "toggle: \n\nA bool indicating whether the mod should be enabled/disabled (true/false)"
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle handle\n\nmodType: \n\nRefer to eVehicleModType in SET_VEHICLE_MOD.\n\ntoggle: \n\nA bool indicating whether the mod should be enabled/disabled (true/false)\n\nEnables or disables a vehicle mod by index (modType) for a given vehicle.\n\neVehicleModType enum, used for modType index can be found under SET_VEHICLE_MOD."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "TrackVehicleVisibility",
    "hash": "0x64473AEFDCF47DCA",
    "code": "-- TRACK_VEHICLE_VISIBILITY\nTrackVehicleVisibility(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "in script hook .net   \nVehicle v = ...;  \nFunction.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "TransformToCar",
    "hash": "0x2A69FFD1B42BFF9E",
    "code": "-- TRANSFORM_TO_CAR\nTransformToCar(\n\tvehicle --[[ Vehicle ]], \n\tinstantly --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nA vehicle handle.",
      "instantly: \n\nIf true, the vehicle will be instantly transformed, when false the transform animation plays normally."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nA vehicle handle.\n\ninstantly: \n\nIf true, the vehicle will be instantly transformed, when false the transform animation plays normally.\n\nTransforms the stormberg to its \"road vehicle\" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "TransformToSubmarine",
    "hash": "0xBE4C854FFDB6EEBE",
    "code": "-- TRANSFORM_TO_SUBMARINE\nTransformToSubmarine(\n\tvehicle --[[ Vehicle ]], \n\tinstantly --[[ boolean ]]\n)",
    "parameters": [
      "vehicle: \n\nA vehicle handle.",
      "instantly: \n\nIf true, the vehicle will be instantly transformed, when false the transform animation plays normally."
    ],
    "returns": [],
    "description": "Parameters:\n\nvehicle: \n\nA vehicle handle.\n\ninstantly: \n\nIf true, the vehicle will be instantly transformed, when false the transform animation plays normally.\n\nTransforms the stormberg to its \"water vehicle\" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "UnpausePlaybackRecordedVehicle",
    "hash": "0x8879EE09268305D5",
    "code": "-- UNPAUSE_PLAYBACK_RECORDED_VEHICLE\nUnpausePlaybackRecordedVehicle(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x0205f5365292d2eb",
    "hash": "0x0205F5365292D2EB",
    "code": "-- 0x0205F5365292D2EB\nN_0x0205f5365292d2eb(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x0419b167ee128f33",
    "hash": "0x0419B167EE128F33",
    "code": "-- 0x0419B167EE128F33\nlocal retval --[[ Any ]] =\n\tN_0x0419b167ee128f33(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x0581730ab9380412",
    "hash": "0x0581730AB9380412",
    "code": "-- 0x0581730AB9380412\nN_0x0581730ab9380412(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]], \n\tp5 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x063ae2b2cc273588",
    "hash": "0x063AE2B2CC273588",
    "code": "-- 0x063AE2B2CC273588\nN_0x063ae2b2cc273588(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "A vehicle recording playback flag only used in jewelry_heist"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x065d03a9d6b2c6b5",
    "hash": "0x065D03A9D6B2C6B5",
    "code": "-- 0x065D03A9D6B2C6B5\nN_0x065d03a9d6b2c6b5(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x107a473d7a6647a9",
    "hash": "0x107A473D7A6647A9",
    "code": "-- 0x107A473D7A6647A9\nN_0x107a473d7a6647a9(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x1312ddd8385aee4e",
    "hash": "0x1312DDD8385AEE4E",
    "code": "-- 0x1312DDD8385AEE4E\nN_0x1312ddd8385aee4e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x182f266c2d9e2beb",
    "hash": "0x182F266C2D9E2BEB",
    "code": "-- 0x182F266C2D9E2BEB\nN_0x182f266c2d9e2beb(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x2310a8f9421ebf43",
    "hash": "0x2310A8F9421EBF43",
    "code": "-- 0x2310A8F9421EBF43\nN_0x2310a8f9421ebf43(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x2311dd7159f00582",
    "hash": "0x2311DD7159F00582",
    "code": "-- 0x2311DD7159F00582\nN_0x2311dd7159f00582(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x2c4a1590abf43e8b",
    "hash": "0x2C4A1590ABF43E8B",
    "code": "-- 0x2C4A1590ABF43E8B\nN_0x2c4a1590abf43e8b(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_W* (next character is either H or I)"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x3441cad2f2231923",
    "hash": "0x3441CAD2F2231923",
    "code": "-- 0x3441CAD2F2231923\nN_0x3441cad2f2231923(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x35bb21de06784373",
    "hash": "0x35BB21DE06784373",
    "code": "-- 0x35BB21DE06784373\nN_0x35bb21de06784373(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x35e0654f4bad7971",
    "hash": "0x35E0654F4BAD7971",
    "code": "-- 0x35E0654F4BAD7971\nN_0x35e0654f4bad7971(\n\tp0 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x36de109527a2c0c4",
    "hash": "0x36DE109527A2C0C4",
    "code": "-- 0x36DE109527A2C0C4\nN_0x36de109527a2c0c4(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing. It's a nullsub.\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x3b458ddb57038f08",
    "hash": "0x3B458DDB57038F08",
    "code": "-- 0x3B458DDB57038F08\nN_0x3b458ddb57038f08(\n\tvehicle --[[ Vehicle ]], \n\tdoorIndex --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Usually used alongside other vehicle door natives."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x407dc5e97db1a4d3",
    "hash": "0x407DC5E97DB1A4D3",
    "code": "-- 0x407DC5E97DB1A4D3\nN_0x407dc5e97db1a4d3(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x41290b40fa63e6da",
    "hash": "0x41290B40FA63E6DA",
    "code": "-- 0x41290B40FA63E6DA\nN_0x41290b40fa63e6da(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x428ad3e26c8d9eb0",
    "hash": "0x428AD3E26C8D9EB0",
    "code": "-- 0x428AD3E26C8D9EB0\nN_0x428ad3e26c8d9eb0(\n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp4 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x430a7631a84c9be7",
    "hash": "0x430A7631A84C9BE7",
    "code": "-- 0x430A7631A84C9BE7\nN_0x430a7631a84c9be7(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x4419966c9936071a",
    "hash": "0x4419966C9936071A",
    "code": "-- 0x4419966C9936071A\nN_0x4419966c9936071a(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "CLEAR_VEHICLE_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x4ad280eb48b2d8e6",
    "hash": "0x4AD280EB48B2D8E6",
    "code": "-- 0x4AD280EB48B2D8E6\nN_0x4ad280eb48b2d8e6(\n\tvehicle --[[ Vehicle ]], \n\ttogle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x4d9d109f63fee1d4",
    "hash": "0x4D9D109F63FEE1D4",
    "code": "-- 0x4D9D109F63FEE1D4\nN_0x4d9d109f63fee1d4(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x51db102f4a3ba5e0",
    "hash": "0x51DB102F4A3BA5E0",
    "code": "-- 0x51DB102F4A3BA5E0\nN_0x51db102f4a3ba5e0(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x51f30db60626a20e",
    "hash": "0x51F30DB60626A20E",
    "code": "-- 0x51F30DB60626A20E\nlocal retval --[[ boolean ]] =\n\tN_0x51f30db60626a20e(\n\t\tvehicle --[[ Vehicle ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\trotX --[[ number ]], \n\t\trotY --[[ number ]], \n\t\trotZ --[[ number ]], \n\t\tp7 --[[ integer ]], \n\t\tp8 --[[ Any ]]\n\t)",
    "parameters": [
      "vehicle: \n\nthe target vehicle",
      "x: \n\nvehicle location",
      "y: \n\nvehicle location",
      "z: \n\nvehicle location",
      "rotX: \n\nsome kind of vehicle rotation value",
      "rotY: \n\nsome kind of vehicle rotation value",
      "rotZ: \n\nsome kind of vehicle rotation value",
      "p7: \n\nusually 2",
      "p8: \n\nusually 1"
    ],
    "returns": [
      "A BOOL value, purpose unknown."
    ],
    "description": "Parameters:\n\nvehicle: \n\nthe target vehicle\n\nx: \n\nvehicle location\n\ny: \n\nvehicle location\n\nz: \n\nvehicle location\n\nrotX: \n\nsome kind of vehicle rotation value\n\nrotY: \n\nsome kind of vehicle rotation value\n\nrotZ: \n\nsome kind of vehicle rotation value\n\np7: \n\nusually 2\n\np8: \n\nusually 1\n\nReturns:\n\nA BOOL value, purpose unknown.\n\nUsex in decompiled scripts in combination with _GET_VEHICLE_SUSPENSION_BOUNDS.\n\nNativeDB Introduced: v1180\n\n// Example from fm_bj_race_controller.c\nif (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1) && !func_282(uParam0->f_6))\n{\n    VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(*uParam0, &vVar15, &uVar16);\n    VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(uParam0->f_26, &vVar17, &uVar18);\n    fVar19 = SYSTEM::VDIST2(0f, 0f, vVar15.z, 0f, 0f, vVar17.z);\n    uParam0->f_12.f_3.f_2 = (uParam0->f_12.f_3.f_2 + fVar19);\n    if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1))\n    {\n        uParam0->f_12.f_3 = { uParam0->f_6 };\n        uParam0->f_12 = { uParam0->f_9 };\n    }\n}"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x56eb5e94318d3fb6",
    "hash": "0x56EB5E94318D3FB6",
    "code": "-- 0x56EB5E94318D3FB6\nN_0x56eb5e94318d3fb6(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x5845066d8a1ea7f7",
    "hash": "0x5845066D8A1EA7F7",
    "code": "-- 0x5845066D8A1EA7F7\nN_0x5845066d8a1ea7f7(\n\tvehicle --[[ Vehicle ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x59c3757b3b7408e8",
    "hash": "0x59C3757B3B7408E8",
    "code": "-- 0x59C3757B3B7408E8\nN_0x59c3757b3b7408e8(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1493"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x5ba68a0840d546ac",
    "hash": "0x5BA68A0840D546AC",
    "code": "-- 0x5BA68A0840D546AC\nlocal retval --[[ Any ]] =\n\tN_0x5ba68a0840d546ac(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x5bbcf35bf6e456f7",
    "hash": "0x5BBCF35BF6E456F7",
    "code": "-- 0x5BBCF35BF6E456F7\nN_0x5bbcf35bf6e456f7(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x5e569ec46ec21cae",
    "hash": "0x5E569EC46EC21CAE",
    "code": "-- 0x5E569EC46EC21CAE\nN_0x5e569ec46ec21cae(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x5ee5632f47ae9695",
    "hash": "0x5EE5632F47AE9695",
    "code": "-- 0x5EE5632F47AE9695\nN_0x5ee5632f47ae9695(\n\tvehicle --[[ Vehicle ]], \n\thealth --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets some health value. Looks like it's used for helis."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x6501129c9e0ffa05",
    "hash": "0x6501129C9E0FFA05",
    "code": "-- 0x6501129C9E0FFA05\nN_0x6501129c9e0ffa05(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x65b080555ea48149",
    "hash": "0x65B080555EA48149",
    "code": "-- 0x65B080555EA48149\nN_0x65b080555ea48149(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x66e3aaface2d1eb8",
    "hash": "0x66E3AAFACE2D1EB8",
    "code": "-- 0x66E3AAFACE2D1EB8\nN_0x66e3aaface2d1eb8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x6a973569ba094650",
    "hash": "0x6A973569BA094650",
    "code": "-- 0x6A973569BA094650\nN_0x6a973569ba094650(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x6eaaefc76acc311f",
    "hash": "0x6EAAEFC76ACC311F",
    "code": "-- 0x6EAAEFC76ACC311F\nlocal retval --[[ Any ]] =\n\tN_0x6eaaefc76acc311f(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x6ebfb22d646ffc18",
    "hash": "0x6EBFB22D646FFC18",
    "code": "-- 0x6EBFB22D646FFC18\nN_0x6ebfb22d646ffc18(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x725012a415dba050",
    "hash": "0x725012A415DBA050",
    "code": "-- 0x725012A415DBA050\nlocal retval --[[ Any ]], p1 --[[ Any ]] =\n\tN_0x725012a415dba050(\n\t\tp0 --[[ Any ]], \n\t\tp2 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Last named native above this one is TRACK_VEHICLE_VISIBILITY and first named native below is UNCUFF_PED. Unknown what it does, couldn't find good examples in the decompiled scripts."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x72beccf4b829522e",
    "hash": "0x72BECCF4B829522E",
    "code": "-- 0x72BECCF4B829522E\nN_0x72beccf4b829522e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x73561d4425a021a2",
    "hash": "0x73561D4425A021A2",
    "code": "-- 0x73561D4425A021A2\nN_0x73561d4425a021a2(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x737e398138550fff",
    "hash": "0x737E398138550FFF",
    "code": "-- 0x737E398138550FFF\nN_0x737e398138550fff(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x76d26a22750e849e",
    "hash": "0x76D26A22750E849E",
    "code": "-- 0x76D26A22750E849E\nN_0x76d26a22750e849e(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x78ceee41f49f421f",
    "hash": "0x78CEEE41F49F421F",
    "code": "-- 0x78CEEE41F49F421F\nN_0x78ceee41f49f421f(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x796a877e459b99ea",
    "hash": "0x796A877E459B99EA",
    "code": "-- 0x796A877E459B99EA\nN_0x796a877e459b99ea(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x7bbe7ff626a591fe",
    "hash": "0x7BBE7FF626A591FE",
    "code": "-- 0x7BBE7FF626A591FE\nN_0x7bbe7ff626a591fe(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x7d6f9a3ef26136a0",
    "hash": "0x7D6F9A3EF26136A0",
    "code": "-- 0x7D6F9A3EF26136A0\nN_0x7d6f9a3ef26136a0(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_AL*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x80e3357fdef45c21",
    "hash": "0x80E3357FDEF45C21",
    "code": "-- 0x80E3357FDEF45C21\nN_0x80e3357fdef45c21(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x8235f1bead557629",
    "hash": "0x8235F1BEAD557629",
    "code": "-- 0x8235F1BEAD557629\nN_0x8235f1bead557629(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x82e0ac411e41a5b4",
    "hash": "0x82E0AC411E41A5B4",
    "code": "-- 0x82E0AC411E41A5B4\nN_0x82e0ac411e41a5b4(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing. It's a nullsub.\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x8533cafde1f0f336",
    "hash": "0x8533CAFDE1F0F336",
    "code": "-- 0x8533CAFDE1F0F336\nlocal retval --[[ Any ]] =\n\tN_0x8533cafde1f0f336(\n\t\tp0 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x8664170ef165c4a6",
    "hash": "0x8664170EF165C4A6",
    "code": "-- 0x8664170EF165C4A6\nN_0x8664170ef165c4a6(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2189"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x870b8b7a766615c8",
    "hash": "0x870B8B7A766615C8",
    "code": "-- 0x870B8B7A766615C8\nN_0x870b8b7a766615c8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x8821196d91fa2de5",
    "hash": "0x8821196D91FA2DE5",
    "code": "-- 0x8821196D91FA2DE5\nN_0x8821196d91fa2de5(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x887fa38787de8c72",
    "hash": "0x887FA38787DE8C72",
    "code": "-- 0x887FA38787DE8C72\nN_0x887fa38787de8c72(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1365"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x88bc673ca9e0ae99",
    "hash": "0x88BC673CA9E0AE99",
    "code": "-- 0x88BC673CA9E0AE99\nN_0x88bc673ca9e0ae99(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x8f0d5ba1c2cc91d7",
    "hash": "0x8F0D5BA1C2CC91D7",
    "code": "-- 0x8F0D5BA1C2CC91D7\nN_0x8f0d5ba1c2cc91d7(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x9640e30a7f395e4b",
    "hash": "0x9640E30A7F395E4B",
    "code": "-- 0x9640E30A7F395E4B\nN_0x9640e30a7f395e4b(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]], \n\tp3 --[[ Any ]], \n\tp4 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x97841634ef7df1d6",
    "hash": "0x97841634EF7DF1D6",
    "code": "-- 0x97841634EF7DF1D6\nN_0x97841634ef7df1d6(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1180"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x9849de24fcf23ccc",
    "hash": "0x9849DE24FCF23CCC",
    "code": "-- 0x9849DE24FCF23CCC\nN_0x9849de24fcf23ccc(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x99a05839c46ce316",
    "hash": "0x99A05839C46CE316",
    "code": "-- 0x99A05839C46CE316\nN_0x99a05839c46ce316(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does nothing. It's a nullsub.\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x99cad8e7afdb60fa",
    "hash": "0x99CAD8E7AFDB60FA",
    "code": "-- 0x99CAD8E7AFDB60FA\nN_0x99cad8e7afdb60fa(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x9bddc73cc6a115d4",
    "hash": "0x9BDDC73CC6A115D4",
    "code": "-- 0x9BDDC73CC6A115D4\nN_0x9bddc73cc6a115d4(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x9becd4b9fef3f8a6",
    "hash": "0x9BECD4B9FEF3F8A6",
    "code": "-- 0x9BECD4B9FEF3F8A6\nN_0x9becd4b9fef3f8a6(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x9d30687c57baa0bb",
    "hash": "0x9D30687C57BAA0BB",
    "code": "-- 0x9D30687C57BAA0BB\nN_0x9d30687c57baa0bb(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0x9f3f689b814f2599",
    "hash": "0x9F3F689B814F2599",
    "code": "-- 0x9F3F689B814F2599\nN_0x9f3f689b814f2599(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xa01bc64dd4bfbbac",
    "hash": "0xA01BC64DD4BFBBAC",
    "code": "-- 0xA01BC64DD4BFBBAC\nlocal retval --[[ Hash ]] =\n\tN_0xa01bc64dd4bfbbac(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseatIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Gets hash related to task happening with seat index Native name: GET_I*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xa247f9ef01d8082e",
    "hash": "0xA247F9EF01D8082E",
    "code": "-- 0xA247F9EF01D8082E\nN_0xa247f9ef01d8082e(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xa4822f1cf23f4810",
    "hash": "0xA4822F1CF23F4810",
    "code": "-- 0xA4822F1CF23F4810\nlocal retval --[[ boolean ]], outVec --[[ vector3 ]], p1 --[[ vector3 ]], outVec1 --[[ vector3 ]] =\n\tN_0xa4822f1cf23f4810(\n\t\tp3 --[[ Any ]], \n\t\tp4 --[[ Any ]], \n\t\tp5 --[[ Any ]], \n\t\tp6 --[[ Any ]], \n\t\tp7 --[[ Any ]], \n\t\tp8 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xa4a9a4c40e615885",
    "hash": "0xA4A9A4C40E615885",
    "code": "-- 0xA4A9A4C40E615885\nN_0xa4a9a4c40e615885(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xa7dcdf4ded40a8f4",
    "hash": "0xA7DCDF4DED40A8F4",
    "code": "-- 0xA7DCDF4DED40A8F4\nN_0xa7dcdf4ded40a8f4(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xaa653ae61924b0a0",
    "hash": "0xAA653AE61924B0A0",
    "code": "-- 0xAA653AE61924B0A0\nN_0xaa653ae61924b0a0(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xab04325045427aae",
    "hash": "0xAB04325045427AAE",
    "code": "-- 0xAB04325045427AAE\nN_0xab04325045427aae(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xab31ef4de6800ce9",
    "hash": "0xAB31EF4DE6800CE9",
    "code": "-- 0xAB31EF4DE6800CE9\nN_0xab31ef4de6800ce9(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xae3fee8709b39dcb",
    "hash": "0xAE3FEE8709B39DCB",
    "code": "-- 0xAE3FEE8709B39DCB\nlocal retval --[[ boolean ]] =\n\tN_0xae3fee8709b39dcb(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xaf60e6a2936f982a",
    "hash": "0xAF60E6A2936F982A",
    "code": "-- 0xAF60E6A2936F982A\nN_0xaf60e6a2936f982a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xb2e0c0d6922d31f2",
    "hash": "0xB2E0C0D6922D31F2",
    "code": "-- 0xB2E0C0D6922D31F2\nN_0xb2e0c0d6922d31f2(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_C*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xb68cfaf83a02768d",
    "hash": "0xB68CFAF83A02768D",
    "code": "-- 0xB68CFAF83A02768D\nN_0xb68cfaf83a02768d(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1290"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xb9562064627ff9db",
    "hash": "0xB9562064627FF9DB",
    "code": "-- 0xB9562064627FF9DB\nN_0xb9562064627ff9db(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xbb2333bb87ddd87f",
    "hash": "0xBB2333BB87DDD87F",
    "code": "-- 0xBB2333BB87DDD87F\nN_0xbb2333bb87ddd87f(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xbe5c1255a1830ff5",
    "hash": "0xBE5C1255A1830FF5",
    "code": "-- 0xBE5C1255A1830FF5\nN_0xbe5c1255a1830ff5(\n\tvehicle --[[ Vehicle ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xc0ed6438e6d39ba8",
    "hash": "0xC0ED6438E6D39BA8",
    "code": "-- 0xC0ED6438E6D39BA8\nN_0xc0ed6438e6d39ba8(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]], \n\tp2 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xc361aa040d6637a8",
    "hash": "0xC361AA040D6637A8",
    "code": "-- 0xC361AA040D6637A8\nN_0xc361aa040d6637a8(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Vehicle must be a plane. Native name is between SET_VEHICLE_BRAKE_LIGHTS and SET_VEHICLE_BULLDOZER_ARM_POSITION alphabetically."
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xc4b3347bd68bd609",
    "hash": "0xC4B3347BD68BD609",
    "code": "-- 0xC4B3347BD68BD609\nN_0xc4b3347bd68bd609(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xc50ce861b55eab8b",
    "hash": "0xC50CE861B55EAB8B",
    "code": "-- 0xC50CE861B55EAB8B\nN_0xc50ce861b55eab8b(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_VEHICLE_LI*"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xcf9159024555488c",
    "hash": "0xCF9159024555488C",
    "code": "-- 0xCF9159024555488C\nN_0xcf9159024555488c(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xcfd778e7904c255e",
    "hash": "0xCFD778E7904C255E",
    "code": "-- 0xCFD778E7904C255E\nN_0xcfd778e7904c255e(\n\tvehicle --[[ Vehicle ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "what does this do?"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xd3301660a57c9272",
    "hash": "0xD3301660A57C9272",
    "code": "-- 0xD3301660A57C9272\nN_0xd3301660a57c9272(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xd3e51c0ab8c26eee",
    "hash": "0xD3E51C0AB8C26EEE",
    "code": "-- 0xD3E51C0AB8C26EEE\nlocal retval --[[ Any ]] =\n\tN_0xd3e51c0ab8c26eee(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xd4196117af7bb974",
    "hash": "0xD4196117AF7BB974",
    "code": "-- 0xD4196117AF7BB974\nlocal retval --[[ Any ]] =\n\tN_0xd4196117af7bb974(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xd565f438137f0e10",
    "hash": "0xD565F438137F0E10",
    "code": "-- 0xD565F438137F0E10\nN_0xd565f438137f0e10(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xdbc631f109350b8c",
    "hash": "0xDBC631F109350B8C",
    "code": "-- 0xDBC631F109350B8C\nN_0xdbc631f109350b8c(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Related to locking the vehicle or something similar.  \nIn the decompiled scripts, its always called after  \nVEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);  \nVEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);  \nVEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xdce97bdf8a0eabc8",
    "hash": "0xDCE97BDF8A0EABC8",
    "code": "-- 0xDCE97BDF8A0EABC8\nN_0xdce97bdf8a0eabc8()",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 1: Vehicle vehicle\nNativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xe05dd0e9707003a3",
    "hash": "0xE05DD0E9707003A3",
    "code": "-- 0xE05DD0E9707003A3\nN_0xe05dd0e9707003a3(\n\tp0 --[[ Any ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xe2f53f172b45ede1",
    "hash": "0xE2F53F172B45EDE1",
    "code": "-- 0xE2F53F172B45EDE1\nN_0xe2f53f172b45ede1()",
    "parameters": [],
    "returns": [],
    "description": "RESET_*\n\nResets the effect of 0x428AD3E26C8D9EB0"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xe5810ac70602f2f5",
    "hash": "0xE5810AC70602F2F5",
    "code": "-- 0xE5810AC70602F2F5\nN_0xe5810ac70602f2f5(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xe851e480b814d4ba",
    "hash": "0xE851E480B814D4BA",
    "code": "-- 0xE851E480B814D4BA\nN_0xe851e480b814d4ba(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xe8718faf591fd224",
    "hash": "0xE8718FAF591FD224",
    "code": "-- 0xE8718FAF591FD224\nlocal retval --[[ boolean ]] =\n\tN_0xe8718faf591fd224(\n\t\tvehicle --[[ Vehicle ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "GET_H*\n\nNativeDB Introduced: v1604"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xed5ede9e676643c9",
    "hash": "0xED5EDE9E676643C9",
    "code": "-- 0xED5EDE9E676643C9\nN_0xed5ede9e676643c9(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xef9d388f8d377f44",
    "hash": "0xEF9D388F8D377F44",
    "code": "-- 0xEF9D388F8D377F44\nN_0xef9d388f8d377f44(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only used in R* Script fm_content_cargo\nNativeDB Introduced: v2699"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xf051d9bfb6ba39c0",
    "hash": "0xF051D9BFB6BA39C0",
    "code": "-- 0xF051D9BFB6BA39C0\nN_0xf051d9bfb6ba39c0(\n\tp0 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xf25e02cb9c5818f8",
    "hash": "0xF25E02CB9C5818F8",
    "code": "-- 0xF25E02CB9C5818F8\nN_0xf25e02cb9c5818f8()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xf3b0e0aed097a3f5",
    "hash": "0xF3B0E0AED097A3F5",
    "code": "-- 0xF3B0E0AED097A3F5\nlocal retval --[[ Any ]] =\n\tN_0xf3b0e0aed097a3f5(\n\t\tp0 --[[ Any ]], \n\t\tp1 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xf8b49f5ba7f850e7",
    "hash": "0xF8B49F5BA7F850E7",
    "code": "-- 0xF8B49F5BA7F850E7\nN_0xf8b49f5ba7f850e7(\n\tvehicle --[[ Vehicle ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: VEHICLE",
    "apiset": "API set: client",
    "name": "N_0xfaf2a78061fd9ef4",
    "hash": "0xFAF2A78061FD9EF4",
    "code": "-- 0xFAF2A78061FD9EF4\nN_0xfaf2a78061fd9ef4(\n\tp0 --[[ Any ]], \n\tp1 --[[ number ]], \n\tp2 --[[ number ]], \n\tp3 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "AddExtraCalmingQuad",
    "hash": "0xFDBF4CDBC07E1706",
    "code": "-- ADD_EXTRA_CALMING_QUAD\nlocal retval --[[ integer ]] =\n\tAddExtraCalmingQuad(\n\t\txLow --[[ number ]], \n\t\tyLow --[[ number ]], \n\t\txHigh --[[ number ]], \n\t\tyHigh --[[ number ]], \n\t\theight --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [
      "If succeeded to add, returns a rise index that can be used on REMOVE_EXTRA_CALMING_QUAD. If failed to add, returns -1 (make sure you don't pass -1 to REMOVE_EXTRA_CALMING_QUAD)."
    ],
    "description": "Returns:\n\nIf succeeded to add, returns a rise index that can be used on REMOVE_EXTRA_CALMING_QUAD. If failed to add, returns -1 (make sure you don't pass -1 to REMOVE_EXTRA_CALMING_QUAD).\n\nOnly 8 current rises can exist. If rises need to be changed, use REMOVE_EXTRA_CALMING_QUAD and then ADD_EXTRA_CALMING_QUAD again. After removing a rise, you will be able to add a rise again."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "GetDeepOceanScaler",
    "hash": "0x2B2A2CC86778B619",
    "code": "-- GET_DEEP_OCEAN_SCALER\nlocal retval --[[ number ]] =\n\tGetDeepOceanScaler()",
    "parameters": [],
    "returns": [],
    "description": "Gets the aggressiveness factor of the ocean waves."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "GetWaterHeight",
    "hash": "0xF6829842C06AE524",
    "code": "-- GET_WATER_HEIGHT\nlocal retval --[[ boolean ]], height --[[ number ]] =\n\tGetWaterHeight(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [
      "x: \n\nThe coordinate at which to test at for water.",
      "y: \n\nThe coordinate at which to test at for water.",
      "z: \n\nThe coordinate at which to test at for water.",
      "height: \n\nThe height at which to test at for water."
    ],
    "returns": [
      "Returns false when land at the tested coordinates is higher than water, true otherwise."
    ],
    "description": "Parameters:\n\nx: \n\nThe coordinate at which to test at for water.\n\ny: \n\nThe coordinate at which to test at for water.\n\nz: \n\nThe coordinate at which to test at for water.\n\nheight: \n\nThe height at which to test at for water.\n\nReturns:\n\nReturns false when land at the tested coordinates is higher than water, true otherwise.\n\nRetrieves the depth of the water beneath the specified position, accounting for the waves.\n\nNote: The result might vary depending on the specific frame when this command is executed due to wave fluctuations."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "GetWaterHeightNoWaves",
    "hash": "0x8EE6B53CE13A9794",
    "code": "-- GET_WATER_HEIGHT_NO_WAVES\nlocal retval --[[ boolean ]], height --[[ number ]] =\n\tGetWaterHeightNoWaves(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Retrieves the depth of the water beneath the specified position, disregarding wave effects.\n\nNote: The result remains consistent across different frames as it doesn't consider wave fluctuations."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "ModifyWater",
    "hash": "0xC443FD757C3BA637",
    "code": "-- MODIFY_WATER\nModifyWater(\n\tx --[[ number ]], \n\ty --[[ number ]], \n\theight --[[ number ]], \n\tradius --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets the water height for a given position and radius."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "RemoveCurrentRise",
    "hash": "0xB1252E3E59A82AAF",
    "code": "-- _REMOVE_CURRENT_RISE\nRemoveCurrentRise(\n\tp0 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p0 is the handle returned from _0xFDBF4CDBC07E1706"
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "ResetDeepOceanScaler",
    "hash": "0x5E5E99285AE812DB",
    "code": "-- RESET_DEEP_OCEAN_SCALER\nResetDeepOceanScaler()",
    "parameters": [],
    "returns": [],
    "description": "Sets the waves intensity back to original (1.0 in most cases)."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "SetDeepOceanScaler",
    "hash": "0xB96B00E976BE977F",
    "code": "-- SET_DEEP_OCEAN_SCALER\nSetDeepOceanScaler(\n\tintensity --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.  \nWorks only ~200 meters around the player."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "TestProbeAgainstAllWater",
    "hash": "0x8974647ED222EA5F",
    "code": "-- TEST_PROBE_AGAINST_ALL_WATER\nlocal retval --[[ boolean ]], result --[[ vector3 ]] =\n\tTestProbeAgainstAllWater(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]], \n\t\tflag --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Flags are identical to START_SHAPE_TEST*, however, 128 is automatically set."
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "TestProbeAgainstWater",
    "hash": "0xFFA5D878809819DB",
    "code": "-- TEST_PROBE_AGAINST_WATER\nlocal retval --[[ boolean ]], result --[[ vector3 ]] =\n\tTestProbeAgainstWater(\n\t\tx1 --[[ number ]], \n\t\ty1 --[[ number ]], \n\t\tz1 --[[ number ]], \n\t\tx2 --[[ number ]], \n\t\ty2 --[[ number ]], \n\t\tz2 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "TestVerticalProbeAgainstAllWater",
    "hash": "0x2B3451FA1E3142E2",
    "code": "-- TEST_VERTICAL_PROBE_AGAINST_ALL_WATER\nlocal retval --[[ boolean ]], height --[[ number ]] =\n\tTestVerticalProbeAgainstAllWater(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tflag --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WATER",
    "apiset": "API set: client",
    "name": "N_0x547237aa71ab44de",
    "hash": "0x547237AA71AB44DE",
    "code": "-- 0x547237AA71AB44DE\nN_0x547237aa71ab44de(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "AddAmmoToPed",
    "hash": "0x78F0424C34306220",
    "code": "-- ADD_AMMO_TO_PED\nAddAmmoToPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tammo --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "AddAmmoToPedByType",
    "hash": "0x2472622CE1F2D45F",
    "code": "-- _ADD_AMMO_TO_PED_BY_TYPE\nAddAmmoToPedByType(\n\tped --[[ Ped ]], \n\tammoType --[[ Hash ]], \n\tammo --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "CanUseWeaponOnParachute",
    "hash": "0xBC7BE5ABC0879F74",
    "code": "-- CAN_USE_WEAPON_ON_PARACHUTE\nlocal retval --[[ boolean ]] =\n\tCanUseWeaponOnParachute(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "this returns if you can use the weapon while using a parachute"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "ClearEntityLastWeaponDamage",
    "hash": "0xAC678E40BE7C74D2",
    "code": "-- CLEAR_ENTITY_LAST_WEAPON_DAMAGE\nClearEntityLastWeaponDamage(\n\tentity --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "ClearPedLastWeaponDamage",
    "hash": "0x0E98F88A24C5F4B8",
    "code": "-- CLEAR_PED_LAST_WEAPON_DAMAGE\nClearPedLastWeaponDamage(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "CreateAirDefenceAngledArea",
    "hash": "0x9DA58CDBF6BDBC08",
    "code": "-- CREATE_AIR_DEFENCE_ANGLED_AREA\nlocal retval --[[ integer ]] =\n\tCreateAirDefenceAngledArea(\n\t\tsrcCoord1X --[[ number ]], \n\t\tsrcCoord1Y --[[ number ]], \n\t\tsrcCoord1Z --[[ number ]], \n\t\tsrcCoord2X --[[ number ]], \n\t\tsrcCoord2Y --[[ number ]], \n\t\tsrcCoord2Z --[[ number ]], \n\t\tfWidth --[[ number ]], \n\t\tweaponPositionX --[[ number ]], \n\t\tweaponPositionY --[[ number ]], \n\t\tweaponPositionZ --[[ number ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "CreateAirDefenceSphere",
    "hash": "0x91EF34584710BE99",
    "code": "-- CREATE_AIR_DEFENCE_SPHERE\nlocal retval --[[ integer ]] =\n\tCreateAirDefenceSphere(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]], \n\t\tweaponPositionX --[[ number ]], \n\t\tweaponPositionY --[[ number ]], \n\t\tweaponPositionZ --[[ number ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [
      "Seems to be some sort of handle, result is += 1 any time this native is called."
    ],
    "description": "Returns:\n\nSeems to be some sort of handle, result is += 1 any time this native is called.\n\nBoth coordinates are from objects in the decompiled scripts.\n\nNative related to _0xECDC202B25E5CF48 p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "CreateWeaponObject",
    "hash": "0x9541D3CF0D398F36",
    "code": "-- CREATE_WEAPON_OBJECT\nlocal retval --[[ Object ]] =\n\tCreateWeaponObject(\n\t\tweaponHash --[[ Hash ]], \n\t\tammoCount --[[ integer ]], \n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tbCreateDefaultComponents --[[ boolean ]], \n\t\tscale --[[ number ]], \n\t\tcustomModelHash --[[ integer ]]\n\t)",
    "parameters": [
      "weaponHash: \n\nThe hash of the weapon to create.",
      "ammoCount: \n\nThe amount of ammo for the weapon.",
      "x: \n\nX coordinate for the weapon's position.",
      "y: \n\nY coordinate for the weapon's position.",
      "z: \n\nZ coordinate for the weapon's position.",
      "bCreateDefaultComponents: \n\nBoolean that indicates whether the default components should be created for that weapon (true/false).",
      "scale: \n\nThe size of the object, to increase it, set the scale to a value greater than 1.0.",
      "customModelHash: \n\nThe hash of the custom model to use for the weapon object. Set to 0 if you do not intend to use a custom model hash."
    ],
    "returns": [],
    "description": "Parameters:\n\nweaponHash: \n\nThe hash of the weapon to create.\n\nammoCount: \n\nThe amount of ammo for the weapon.\n\nx: \n\nX coordinate for the weapon's position.\n\ny: \n\nY coordinate for the weapon's position.\n\nz: \n\nZ coordinate for the weapon's position.\n\nbCreateDefaultComponents: \n\nBoolean that indicates whether the default components should be created for that weapon (true/false).\n\nscale: \n\nThe size of the object, to increase it, set the scale to a value greater than 1.0.\n\ncustomModelHash: \n\nThe hash of the custom model to use for the weapon object. Set to 0 if you do not intend to use a custom model hash.\n\nCreate a weapon object that cannot be attached to a ped. If you want to create a weapon object that can be attached to a ped, use CREATE_OBJECT instead.\n\nNativeDB Added Parameter 9: BOOL bRegisterAsNetworkObject\nNativeDB Added Parameter 10: BOOL bScriptHostObject"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "DoesAirDefenseZoneExist",
    "hash": "0xCD79A550999D7D4F",
    "code": "-- _DOES_AIR_DEFENSE_ZONE_EXIST\nlocal retval --[[ boolean ]] =\n\tDoesAirDefenseZoneExist(\n\t\tzoneId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "DoesWeaponTakeWeaponComponent",
    "hash": "0x5CEE3DF569CECAB0",
    "code": "-- DOES_WEAPON_TAKE_WEAPON_COMPONENT\nlocal retval --[[ boolean ]] =\n\tDoesWeaponTakeWeaponComponent(\n\t\tweaponHash --[[ Hash ]], \n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "EnableLaserSightRendering",
    "hash": "0xC8B46D7727D864AA",
    "code": "-- ENABLE_LASER_SIGHT_RENDERING\nEnableLaserSightRendering(\n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enables laser sight on any weapon.  \nIt doesn't work. Neither on tick nor OnKeyDown"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "ExplodeProjectiles",
    "hash": "0xFC4BD125DE7611E4",
    "code": "-- EXPLODE_PROJECTILES\nExplodeProjectiles(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "FireAirDefenseWeapon",
    "hash": "0x44F1012B69313374",
    "code": "-- _FIRE_AIR_DEFENSE_WEAPON\nFireAirDefenseWeapon(\n\tzoneId --[[ integer ]], \n\tx --[[ number ]], \n\ty --[[ number ]], \n\tz --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetAmmoInClip",
    "hash": "0x2E1202248937775C",
    "code": "-- GET_AMMO_IN_CLIP\nlocal retval --[[ boolean ]], ammo --[[ integer ]] =\n\tGetAmmoInClip(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetAmmoInPedWeapon",
    "hash": "0x015A522136D7F951",
    "code": "-- GET_AMMO_IN_PED_WEAPON\nlocal retval --[[ integer ]] =\n\tGetAmmoInPedWeapon(\n\t\tped --[[ Ped ]], \n\t\tweaponhash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)  \nFrom decompiled scripts  \nReturns total ammo in weapon  \nGTALua Example :  \nnatives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetAmmoInVehicleWeaponClip",
    "hash": "0x2857938C5D407AFA",
    "code": "-- _GET_AMMO_IN_VEHICLE_WEAPON_CLIP\nlocal retval --[[ boolean ]] =\n\tGetAmmoInVehicleWeaponClip(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseat --[[ integer ]], \n\t\tammo --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetBestPedWeapon",
    "hash": "0x8483E98E8B888AE2",
    "code": "-- GET_BEST_PED_WEAPON\nlocal retval --[[ Hash ]] =\n\tGetBestPedWeapon(\n\t\tped --[[ Ped ]], \n\t\tignoreAmmoCount --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [
      "The hash of the best weapon the specified ped has"
    ],
    "description": "Returns:\n\nThe hash of the best weapon the specified ped has"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetCurrentPedVehicleWeapon",
    "hash": "0x1017582BCD3832DC",
    "code": "-- GET_CURRENT_PED_VEHICLE_WEAPON\nlocal retval --[[ boolean ]], weaponHash --[[ Hash ]] =\n\tGetCurrentPedVehicleWeapon(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetCurrentPedWeapon",
    "hash": "0x3A87E44BB9A01D54",
    "code": "-- GET_CURRENT_PED_WEAPON\nlocal retval --[[ boolean ]], weaponHash --[[ Hash ]] =\n\tGetCurrentPedWeapon(\n\t\tped --[[ Ped ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.  \np2 seems to be 1 most of the time; and is not implemented."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetCurrentPedWeaponEntityIndex",
    "hash": "0x3B390A939AF0B5FC",
    "code": "-- GET_CURRENT_PED_WEAPON_ENTITY_INDEX\nlocal retval --[[ Entity ]] =\n\tGetCurrentPedWeaponEntityIndex(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 2: Any p1"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetIsPedGadgetEquipped",
    "hash": "0xF731332072F5156C",
    "code": "-- GET_IS_PED_GADGET_EQUIPPED\nlocal retval --[[ boolean ]] =\n\tGetIsPedGadgetEquipped(\n\t\tped --[[ Ped ]], \n\t\tgadgetHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "gadgetHash - was always 0xFBAB5776 (\"GADGET_PARACHUTE\")."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetLockonDistanceOfCurrentPedWeapon",
    "hash": "0x840F03E9041E2C9C",
    "code": "-- GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON\nlocal retval --[[ number ]] =\n\tGetLockonDistanceOfCurrentPedWeapon(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetMaxAmmo",
    "hash": "0xDC16122C7A20C933",
    "code": "-- GET_MAX_AMMO\nlocal retval --[[ boolean ]], ammo --[[ integer ]] =\n\tGetMaxAmmo(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetMaxAmmoByType",
    "hash": "0x585847C5E4E11709",
    "code": "-- _GET_MAX_AMMO_BY_TYPE\nlocal retval --[[ boolean ]], ammo --[[ integer ]] =\n\tGetMaxAmmoByType(\n\t\tped --[[ Ped ]], \n\t\tammoType --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetMaxAmmoInClip",
    "hash": "0xA38DCFFCEA8962FA",
    "code": "-- GET_MAX_AMMO_IN_CLIP\nlocal retval --[[ integer ]] =\n\tGetMaxAmmoInClip(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p2 is mostly 1 in the scripts."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetMaxRangeOfCurrentPedWeapon",
    "hash": "0x814C9D19DFD69679",
    "code": "-- GET_MAX_RANGE_OF_CURRENT_PED_WEAPON\nlocal retval --[[ number ]] =\n\tGetMaxRangeOfCurrentPedWeapon(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetPedAmmoByType",
    "hash": "0x39D22031557946C1",
    "code": "-- GET_PED_AMMO_BY_TYPE\nlocal retval --[[ integer ]] =\n\tGetPedAmmoByType(\n\t\tped --[[ Ped ]], \n\t\tammoType --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetPedAmmoTypeFromWeapon",
    "hash": "0x7FEAD38B326B9F74",
    "code": "-- GET_PED_AMMO_TYPE_FROM_WEAPON\nlocal retval --[[ Hash ]] =\n\tGetPedAmmoTypeFromWeapon(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the current ammo type of the specified ped's specified weapon.\n\nMkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.\n\nUse 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetPedAmmoTypeFromWeapon_2",
    "hash": "0xF489B44DD5AF4BD9",
    "code": "-- _GET_PED_AMMO_TYPE_FROM_WEAPON_2\nlocal retval --[[ Hash ]] =\n\tGetPedAmmoTypeFromWeapon_2(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the base/default ammo type of the specified ped's specified weapon.\n\nUse GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetPedLastWeaponImpactCoord",
    "hash": "0x6C4D0409BA1A2BC2",
    "code": "-- GET_PED_LAST_WEAPON_IMPACT_COORD\nlocal retval --[[ boolean ]], coords --[[ vector3 ]] =\n\tGetPedLastWeaponImpactCoord(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Pass ped. Pass address of Vector3.  \nThe coord will be put into the Vector3.  \nThe return will determine whether there was a coord found or not."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetPedWeaponLiveryColor",
    "hash": "0xF0A60040BE558F2D",
    "code": "-- _GET_PED_WEAPON_LIVERY_COLOR\nlocal retval --[[ integer ]] =\n\tGetPedWeaponLiveryColor(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tcamoComponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetPedWeaponTintIndex",
    "hash": "0x2B9EEDC07BD06B9F",
    "code": "-- GET_PED_WEAPON_TINT_INDEX\nlocal retval --[[ integer ]] =\n\tGetPedWeaponTintIndex(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetPedWeapontypeInSlot",
    "hash": "0xEFFED78E9011134D",
    "code": "-- GET_PED_WEAPONTYPE_IN_SLOT\nlocal retval --[[ Hash ]] =\n\tGetPedWeapontypeInSlot(\n\t\tped --[[ Ped ]], \n\t\tweaponSlot --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetSelectedPedWeapon",
    "hash": "0x0A6DB4965674D243",
    "code": "-- GET_SELECTED_PED_WEAPON\nlocal retval --[[ Hash ]] =\n\tGetSelectedPedWeapon(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetTimeBeforeVehicleWeaponReloadFinishes",
    "hash": "0xC8C6F4B1CDEB40EF",
    "code": "-- _GET_TIME_BEFORE_VEHICLE_WEAPON_RELOAD_FINISHES\nlocal retval --[[ integer ]] =\n\tGetTimeBeforeVehicleWeaponReloadFinishes(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseat --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetVehicleWeaponReloadTime",
    "hash": "0xD0AD348FFD7A6868",
    "code": "-- _GET_VEHICLE_WEAPON_RELOAD_TIME\nlocal retval --[[ number ]] =\n\tGetVehicleWeaponReloadTime(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseat --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponClipSize",
    "hash": "0x583BE370B1EC6EB4",
    "code": "-- GET_WEAPON_CLIP_SIZE\nlocal retval --[[ integer ]] =\n\tGetWeaponClipSize(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "// Returns the size of the default weapon component clip.  \nUse it like this:  \nchar cClipSize[32];  \nHash cur;  \nif (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))  \n{  \n    if (WEAPON::IS_WEAPON_VALID(cur))  \n    {  \n        int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);  \n        sprintf_s(cClipSize, \"ClipSize: %.d\", iClipSize);  \n        vDrawString(cClipSize, 0.5f, 0.5f);  \n    }  \n}"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponComponentHudStats",
    "hash": "0xB3CAF387AE12E9F8",
    "code": "-- GET_WEAPON_COMPONENT_HUD_STATS\nlocal retval --[[ boolean ]], outData --[[ integer ]] =\n\tGetWeaponComponentHudStats(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponComponentTypeModel",
    "hash": "0x0DB57B41EC1DB083",
    "code": "-- GET_WEAPON_COMPONENT_TYPE_MODEL\nlocal retval --[[ Hash ]] =\n\tGetWeaponComponentTypeModel(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponComponentVariantExtraComponentCount",
    "hash": "0x6558AC7C17BFEF58",
    "code": "-- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_COUNT\nlocal retval --[[ integer ]] =\n\tGetWeaponComponentVariantExtraComponentCount(\n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponComponentVariantExtraComponentModel",
    "hash": "0x4D1CB8DC40208A17",
    "code": "-- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_MODEL\nlocal retval --[[ Hash ]] =\n\tGetWeaponComponentVariantExtraComponentModel(\n\t\tcomponentHash --[[ Hash ]], \n\t\textraComponentIndex --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponDamage",
    "hash": "0x3133B907D8B32053",
    "code": "-- GET_WEAPON_DAMAGE\nlocal retval --[[ number ]] =\n\tGetWeaponDamage(\n\t\tweaponHash --[[ Hash ]], \n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [
      "Damages of the weapon."
    ],
    "description": "Returns:\n\nDamages of the weapon.\n\nThis native does not return damages of weapons from the melee and explosive group."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponDamageType",
    "hash": "0x3BE0BB12D25FB305",
    "code": "-- GET_WEAPON_DAMAGE_TYPE\nlocal retval --[[ integer ]] =\n\tGetWeaponDamageType(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "0=unknown (or incorrect weaponHash)  \n1= no damage (flare,snowball, petrolcan)  \n2=melee  \n3=bullet  \n4=force ragdoll fall  \n5=explosive (RPG, Railgun, grenade)  \n6=fire(molotov)  \n8=fall(WEAPON_HELI_CRASH)  \n10=electric  \n11=barbed wire  \n12=extinguisher  \n13=gas  \n14=water cannon(WEAPON_HIT_BY_WATER_CANNON)"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponHudStats",
    "hash": "0xD92C739EE34C9EBA",
    "code": "-- GET_WEAPON_HUD_STATS\nlocal retval --[[ boolean ]], outData --[[ Any ]] =\n\tGetWeaponHudStats(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "// members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure  \nstruct WeaponHudStatsData  \n{  \n\talignas(8) uint8_t hudDamage; // 0x0000  \n\talignas(8) uint8_t hudSpeed; // 0x0008  \n\talignas(8) uint8_t hudCapacity; // 0x0010  \n\talignas(8) uint8_t hudAccuracy; // 0x0018  \n\talignas(8) uint8_t hudRange; // 0x0020  \n};  \nUsage:  \nWeaponHudStatsData data;  \nif (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))  \n{  \n    // uint8_t damagePercentage = data.hudDamage etc...  \n}"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponObjectFromPed",
    "hash": "0xCAE1DC9A0E22A16D",
    "code": "-- GET_WEAPON_OBJECT_FROM_PED\nlocal retval --[[ Object ]] =\n\tGetWeaponObjectFromPed(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Drops the current weapon and returns the object  \nUnknown behavior when unarmed."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponObjectLiveryColor",
    "hash": "0xB3EA4FEABF41464B",
    "code": "-- _GET_WEAPON_OBJECT_LIVERY_COLOR\nlocal retval --[[ integer ]] =\n\tGetWeaponObjectLiveryColor(\n\t\tweaponObject --[[ Object ]], \n\t\tcamoComponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponObjectTintIndex",
    "hash": "0xCD183314F7CD2E57",
    "code": "-- GET_WEAPON_OBJECT_TINT_INDEX\nlocal retval --[[ integer ]] =\n\tGetWeaponObjectTintIndex(\n\t\tweapon --[[ Object ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponTimeBetweenShots",
    "hash": "0x065D2AACAD8CF7A4",
    "code": "-- _GET_WEAPON_TIME_BETWEEN_SHOTS\nlocal retval --[[ number ]] =\n\tGetWeaponTimeBetweenShots(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeaponTintCount",
    "hash": "0x5DCF6C5CAB2E9BF7",
    "code": "-- GET_WEAPON_TINT_COUNT\nlocal retval --[[ integer ]] =\n\tGetWeaponTintCount(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeapontypeGroup",
    "hash": "0xC3287EE3050FB74C",
    "code": "-- GET_WEAPONTYPE_GROUP\nlocal retval --[[ Hash ]] =\n\tGetWeapontypeGroup(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [
      "weaponHash: \n\nThe hash of the weapon."
    ],
    "returns": [],
    "description": "Parameters:\n\nweaponHash: \n\nThe hash of the weapon.\n\nReturns:\nReturns the hash of the group of the weapon. Hashes:\tGroup\tUnsigned\tSigned\tExample\nGROUP_DIGISCANNER\t3539449195\t-755518101\tWEAPON_DIGISCANNER\nGROUP_FIREEXTINGUISHER\t4257178988\t-37788308\tWEAPON_FIREEXTINGUISHER\nGROUP_HACKINGDEVICE\t1175761940\t1175761940\tWEAPON_HACKINGDEVICE\nGROUP_HEAVY\t2725924767\t-1569042529\tWEAPON_RPG\nGROUP_MELEE\t3566412244\t-728555052\tWEAPON_BAT\nGROUP_METALDETECTOR\t3759491383\t-535475913\tWEAPON_METALDETECTOR\nGROUP_MG\t1159398588\t1159398588\tWEAPON_COMBATMG\nGROUP_NIGHTVISION\t3493187224\t-801780072\tGADGET_NIGHTVISION\nGROUP_PARACHUTE\t431593103\t431593103\tGADGET_PARACHUTE\nGROUP_PETROLCAN\t1595662460\t1595662460\tWEAPON_PETROLCAN\nGROUP_PISTOL\t416676503\t416676503\tWEAPON_PISTOL\nGROUP_RIFLE\t970310034\t970310034\tWEAPON_ASSAULTRIFLE\nGROUP_SHOTGUN\t860033945\t860033945\tWEAPON_PUMPSHOTGUN\nGROUP_SMG\t3337201093\t-957766203\tWEAPON_MICROSMG\nGROUP_SNIPER\t3082541095\t-1212426201\tWEAPON_SNIPERRIFLE\nGROUP_STUNGUN\t690389602\t690389602\tWEAPON_STUNGUN\nGROUP_THROWN\t1548507267\t1548507267\tWEAPON_SNOWBALL\nGROUP_TRANQILIZER\t75159441\t75159441\tWEAPON_TRANQUILIZER\nGROUP_UNARMED\t2685387236\t-1609580060\tWEAPON_UNARMED\n\nGets and returns the hash of the group of the specified weapon (group names can be found/changed under \"Group\" in the weapons' meta file). Note that the group is not the same as the location on the weapon wheel."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeapontypeModel",
    "hash": "0xF46CDC33180FDA94",
    "code": "-- GET_WEAPONTYPE_MODEL\nlocal retval --[[ Hash ]] =\n\tGetWeapontypeModel(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns the model of any weapon.  \nCan also take an ammo hash?  \nsub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GetWeapontypeSlot",
    "hash": "0x4215460B9B8B7FA0",
    "code": "-- GET_WEAPONTYPE_SLOT\nlocal retval --[[ Hash ]] =\n\tGetWeapontypeSlot(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GiveDelayedWeaponToPed",
    "hash": "0xB282DC6EBD803C75",
    "code": "-- GIVE_DELAYED_WEAPON_TO_PED\nGiveDelayedWeaponToPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tammoCount --[[ integer ]], \n\tbForceInHand --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Gives a weapon to PED with a delay, example:\nWEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY(\"WEAPON_PISTOL\"), 1000, false)"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GiveLoadoutToPed",
    "hash": "0x68F8BE6AF5CDF8A6",
    "code": "-- _GIVE_LOADOUT_TO_PED\nGiveLoadoutToPed(\n\tped --[[ Ped ]], \n\tloadoutHash --[[ Hash ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle to apply this to.",
      "loadoutHash: \n\nThe loadout to use (needs to be a hash)."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle to apply this to.\n\nloadoutHash: \n\nThe loadout to use (needs to be a hash).\n\nList of all available loadouts:\n\nLOADOUT_DEFAULT\nLOADOUT_ANIMAL\nLOADOUT_COUGAR\nLOADOUT_HILLBILLY\nLOADOUT_CULT\nLOADOUT_CHEAT_0\nLOADOUT_CHEAT_1\nLOADOUT_GUARD\nLOADOUT_NETWORK_BOT\nLOADOUT_LOST\nLOADOUT_LOST_L1\nLOADOUT_LOST_L2\nLOADOUT_LOST_L3\nLOADOUT_MEXICAN\nLOADOUT_MEXICAN_L1\nLOADOUT_MEXICAN_L2\nLOADOUT_MEXICAN_L3\nLOADOUT_FAMILY\nLOADOUT_ASIAN\nLOADOUT_SECUR\nLOADOUT_POLICE_GUARD\nLOADOUT_COP\nLOADOUT_COP_L1\nLOADOUT_COP_L2\nLOADOUT_COP_L3\nLOADOUT_SWAT\nLOADOUT_SWAT_NO_LASER\nLOADOUT_COP_SHOTGUN\nLOADOUT_FIREMAN\nLOADOUT_COP_HELI\nLOADOUT_COP_BOAT\nLOADOUT_ARMY\nLOADOUT_ANIMAL_RETRIEVER\nLOADOUT_SMALL_DOG\nLOADOUT_TIGER_SHARK\nLOADOUT_HAMMERHEAD_SHARK\nLOADOUT_KILLER_WHALE\nLOADOUT_BOAR\nLOADOUT_PIG\nLOADOUT_COYOTE\nLOADOUT_DEER\nLOADOUT_HEN\nLOADOUT_RABBIT\nLOADOUT_CAT\nLOADOUT_COW"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GiveWeaponComponentToPed",
    "hash": "0xD966D51AA5B28BB9",
    "code": "-- GIVE_WEAPON_COMPONENT_TO_PED\nGiveWeaponComponentToPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tcomponentHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GiveWeaponComponentToWeaponObject",
    "hash": "0x33E179436C0B31DB",
    "code": "-- GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT\nGiveWeaponComponentToWeaponObject(\n\tweaponObject --[[ Object ]], \n\taddonHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "addonHash:\n(use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)\n${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GiveWeaponObjectToPed",
    "hash": "0xB1FA61371AF7C4B7",
    "code": "-- GIVE_WEAPON_OBJECT_TO_PED\nGiveWeaponObjectToPed(\n\tweaponObject --[[ Object ]], \n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "GiveWeaponToPed",
    "hash": "0xBF0FD6E56C964FCB",
    "code": "-- GIVE_WEAPON_TO_PED\nGiveWeaponToPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tammoCount --[[ integer ]], \n\tisHidden --[[ boolean ]], \n\tbForceInHand --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasEntityBeenDamagedByWeapon",
    "hash": "0x131D401334815E94",
    "code": "-- HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON\nlocal retval --[[ boolean ]] =\n\tHasEntityBeenDamagedByWeapon(\n\t\tentity --[[ Entity ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tweaponType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "It determines what weapons caused damage:\nIf you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0\nIf you want to define any melee weapon, second parameter=0, third parameter=1.\nIf you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasPedBeenDamagedByWeapon",
    "hash": "0x2D343D2219CD027A",
    "code": "-- HAS_PED_BEEN_DAMAGED_BY_WEAPON\nlocal retval --[[ boolean ]] =\n\tHasPedBeenDamagedByWeapon(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tweaponType --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "It determines what weapons caused damage:  \nIf you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0  \nIf you want to define any melee weapon, second parameter=0, third parameter=1.  \nIf you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasPedGotWeapon",
    "hash": "0x8DECB02F88F428BC",
    "code": "-- HAS_PED_GOT_WEAPON\nlocal retval --[[ boolean ]] =\n\tHasPedGotWeapon(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tp2 --[[ boolean ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "p2 should be FALSE, otherwise it seems to always return FALSE  \nBool does not check if the weapon is current equipped, unfortunately."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasPedGotWeaponComponent",
    "hash": "0xC593212475FAE340",
    "code": "-- HAS_PED_GOT_WEAPON_COMPONENT\nlocal retval --[[ boolean ]] =\n\tHasPedGotWeaponComponent(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasVehicleGotProjectileAttached",
    "hash": "0x717C8481234E3B88",
    "code": "-- HAS_VEHICLE_GOT_PROJECTILE_ATTACHED\nlocal retval --[[ boolean ]] =\n\tHasVehicleGotProjectileAttached(\n\t\tdriver --[[ Ped ]], \n\t\tvehicle --[[ Vehicle ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tp3 --[[ Any ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Third Parameter = unsure, but pretty sure it is weapon hash  \n--> get_hash_key(\"weapon_stickybomb\")  \nFourth Parameter = unsure, almost always -1"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasWeaponAssetLoaded",
    "hash": "0x36E353271F0E90EE",
    "code": "-- HAS_WEAPON_ASSET_LOADED\nlocal retval --[[ boolean ]] =\n\tHasWeaponAssetLoaded(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasWeaponGotWeaponComponent",
    "hash": "0x76A18844E743BF91",
    "code": "-- HAS_WEAPON_GOT_WEAPON_COMPONENT\nlocal retval --[[ boolean ]] =\n\tHasWeaponGotWeaponComponent(\n\t\tweapon --[[ Object ]], \n\t\taddonHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HasWeaponReloadingInVehicle",
    "hash": "0x8062F07153F4446F",
    "code": "-- _HAS_WEAPON_RELOADING_IN_VEHICLE\nlocal retval --[[ boolean ]] =\n\tHasWeaponReloadingInVehicle(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseat --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "HidePedWeaponForScriptedCutscene",
    "hash": "0x6F6981D2253C208F",
    "code": "-- HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE\nHidePedWeaponForScriptedCutscene(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Hides the players weapon during a cutscene."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "IsAnyAirDefenseZoneInsideSphere",
    "hash": "0xDAB963831DBFD3F4",
    "code": "-- _IS_ANY_AIR_DEFENSE_ZONE_INSIDE_SPHERE\nlocal retval --[[ boolean ]], SphereIndex --[[ integer ]] =\n\tIsAnyAirDefenseZoneInsideSphere(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]], \n\t\tradius --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "IsFlashLightOn",
    "hash": "0x4B7620C47217126C",
    "code": "-- IS_FLASH_LIGHT_ON\nlocal retval --[[ boolean ]] =\n\tIsFlashLightOn(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "IsPedArmed",
    "hash": "0x475768A975D5AD17",
    "code": "-- IS_PED_ARMED\nlocal retval --[[ boolean ]] =\n\tIsPedArmed(\n\t\tped --[[ Ped ]], \n\t\ttypeFlags --[[ integer ]]\n\t)",
    "parameters": [
      "ped: \n\nThe ped to check armed state on.",
      "typeFlags: \n\nType flags to check."
    ],
    "returns": [
      "Whether or not the ped is currently equipped with any weapon matching typeFlags."
    ],
    "description": "Parameters:\n\nped: \n\nThe ped to check armed state on.\n\ntypeFlags: \n\nType flags to check.\n\nReturns:\n\nWhether or not the ped is currently equipped with any weapon matching typeFlags.\n\nChecks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.\n\nBit value\tEffect\n1\tMelee weapons\n2\tExplosive weapons\n4\tAny other weapons\n\nNot specifying any bit will lead to the native always returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "IsPedCurrentWeaponSilenced",
    "hash": "0x65F0C5AE05943EC7",
    "code": "-- IS_PED_CURRENT_WEAPON_SILENCED\nlocal retval --[[ boolean ]] =\n\tIsPedCurrentWeaponSilenced(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "This native returns a true or false value.  \nPed ped = The ped whose weapon you want to check."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "IsPedWeaponComponentActive",
    "hash": "0x0D78DE0572D3969E",
    "code": "-- IS_PED_WEAPON_COMPONENT_ACTIVE\nlocal retval --[[ boolean ]] =\n\tIsPedWeaponComponentActive(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tcomponentHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "IsPedWeaponReadyToShoot",
    "hash": "0xB80CA294F2F26749",
    "code": "-- IS_PED_WEAPON_READY_TO_SHOOT\nlocal retval --[[ boolean ]] =\n\tIsPedWeaponReadyToShoot(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "IsWeaponValid",
    "hash": "0x937C71165CF334B3",
    "code": "-- IS_WEAPON_VALID\nlocal retval --[[ boolean ]] =\n\tIsWeaponValid(\n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "MakePedReload",
    "hash": "0x20AE33F3AC9C0033",
    "code": "-- MAKE_PED_RELOAD\nlocal retval --[[ boolean ]] =\n\tMakePedReload(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RefillAmmoInstantly",
    "hash": "0x8C0D57EA686FAD87",
    "code": "-- REFILL_AMMO_INSTANTLY\nlocal retval --[[ boolean ]] =\n\tRefillAmmoInstantly(\n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveAirDefenseZone",
    "hash": "0x0ABF535877897560",
    "code": "-- _REMOVE_AIR_DEFENSE_ZONE\nlocal retval --[[ boolean ]] =\n\tRemoveAirDefenseZone(\n\t\tzoneId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveAllAirDefenseZones",
    "hash": "0x1E45B34ADEBEE48E",
    "code": "-- _REMOVE_ALL_AIR_DEFENSE_ZONES\nRemoveAllAirDefenseZones()",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveAllPedWeapons",
    "hash": "0xF25DF915FA38C5F3",
    "code": "-- REMOVE_ALL_PED_WEAPONS\nRemoveAllPedWeapons(\n\tped --[[ Ped ]], \n\tp1 --[[ boolean ]]\n)",
    "parameters": [
      "ped: \n\nThe ped entity",
      "p1:"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped entity\n\np1:\n\nParameter p1 does not seem to be used or referenced in game binaries.\\ Note: When called for networked entities, a CRemoveAllWeaponsEvent will be created per request."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveAllProjectilesOfType",
    "hash": "0xFC52E0F37E446528",
    "code": "-- REMOVE_ALL_PROJECTILES_OF_TYPE\nRemoveAllProjectilesOfType(\n\tweaponHash --[[ Hash ]], \n\texplode --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "If explode true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveWeaponAsset",
    "hash": "0xAA08EF13F341C8FC",
    "code": "-- REMOVE_WEAPON_ASSET\nRemoveWeaponAsset(\n\tweaponHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveWeaponComponentFromPed",
    "hash": "0x1E8BE90C74FB4C09",
    "code": "-- REMOVE_WEAPON_COMPONENT_FROM_PED\nRemoveWeaponComponentFromPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tcomponentHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveWeaponComponentFromWeaponObject",
    "hash": "0xF7D82B0D66777611",
    "code": "-- REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT\nRemoveWeaponComponentFromWeaponObject(\n\tweaponObject --[[ Object ]], \n\taddonHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RemoveWeaponFromPed",
    "hash": "0x4899CB088EDF59B8",
    "code": "-- REMOVE_WEAPON_FROM_PED\nRemoveWeaponFromPed(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "This native removes a specified weapon from your selected ped.  \nWeapon Hashes: pastebin.com/0wwDZgkF  \nExample:  \nC#:  \nFunction.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);  \nC++:  \nWEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);  \nThe code above removes the knife from the player."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RequestWeaponAsset",
    "hash": "0x5443438F033E29C3",
    "code": "-- REQUEST_WEAPON_ASSET\nRequestWeaponAsset(\n\tweaponHash --[[ Hash ]], \n\tp1 --[[ integer ]], \n\tp2 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.  \nREQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "RequestWeaponHighDetailModel",
    "hash": "0x48164DBB970AC3F0",
    "code": "-- REQUEST_WEAPON_HIGH_DETAIL_MODEL\nRequestWeaponHighDetailModel(\n\tweaponObject --[[ Entity ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetAmmoInClip",
    "hash": "0xDCD2A934D65CB497",
    "code": "-- SET_AMMO_IN_CLIP\nlocal retval --[[ boolean ]] =\n\tSetAmmoInClip(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]], \n\t\tammo --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetAmmoInVehicleWeaponClip",
    "hash": "0x873906720EE842C3",
    "code": "-- _SET_AMMO_IN_VEHICLE_WEAPON_CLIP\nlocal retval --[[ boolean ]] =\n\tSetAmmoInVehicleWeaponClip(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseat --[[ integer ]], \n\t\tammo --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetCanPedEquipAllWeapons",
    "hash": "0xEFF296097FF1E509",
    "code": "-- _SET_CAN_PED_EQUIP_ALL_WEAPONS\nSetCanPedEquipAllWeapons(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Does the same as _SET_CAN_PED_SELECT_WEAPON except for all weapons."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetCanPedEquipWeapon",
    "hash": "0xB4771B9AAF4E68E4",
    "code": "-- _SET_CAN_PED_EQUIP_WEAPON\nSetCanPedEquipWeapon(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetCurrentPedVehicleWeapon",
    "hash": "0x75C55983C2C39DAA",
    "code": "-- SET_CURRENT_PED_VEHICLE_WEAPON\nlocal retval --[[ boolean ]] =\n\tSetCurrentPedVehicleWeapon(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetCurrentPedWeapon",
    "hash": "0xADF692B254977C0C",
    "code": "-- SET_CURRENT_PED_WEAPON\nSetCurrentPedWeapon(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tbForceInHand --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetFlashLightEnabled",
    "hash": "0x988DB6FE9B3AC000",
    "code": "-- _SET_FLASH_LIGHT_ENABLED\nSetFlashLightEnabled(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Enables/disables flashlight on ped's weapon.\n\nNativeDB Introduced: v2060"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetFlashLightFadeDistance",
    "hash": "0xCEA66DAD478CD39B",
    "code": "-- SET_FLASH_LIGHT_FADE_DISTANCE\nlocal retval --[[ Any ]] =\n\tSetFlashLightFadeDistance(\n\t\tdistance --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedAmmo",
    "hash": "0x14E56BC5B5DB6A19",
    "code": "-- SET_PED_AMMO\nSetPedAmmo(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tammo --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Added Parameter 4: BOOL p3"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedAmmoByType",
    "hash": "0x5FD1E1F011E76D7E",
    "code": "-- SET_PED_AMMO_BY_TYPE\nSetPedAmmoByType(\n\tped --[[ Ped ]], \n\tammoType --[[ Hash ]], \n\tammo --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedAmmoToDrop",
    "hash": "0xA4EFEF9440A5B0EF",
    "code": "-- SET_PED_AMMO_TO_DROP\nSetPedAmmoToDrop(\n\tped --[[ Ped ]], \n\tammo --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedChanceOfFiringBlanks",
    "hash": "0x8378627201D5497D",
    "code": "-- SET_PED_CHANCE_OF_FIRING_BLANKS\nSetPedChanceOfFiringBlanks(\n\tped --[[ Ped ]], \n\txBias --[[ number ]], \n\tyBias --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedCurrentWeaponVisible",
    "hash": "0x0725A4CCFDED9A70",
    "code": "-- SET_PED_CURRENT_WEAPON_VISIBLE\nSetPedCurrentWeaponVisible(\n\tped --[[ Ped ]], \n\tvisible --[[ boolean ]], \n\tdeselectWeapon --[[ boolean ]], \n\tp3 --[[ boolean ]], \n\tp4 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Has 5 parameters since latest patches."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedCycleVehicleWeaponsOnly",
    "hash": "0x50276EF8172F5F12",
    "code": "-- SET_PED_CYCLE_VEHICLE_WEAPONS_ONLY\nSetPedCycleVehicleWeaponsOnly(\n\tped --[[ Ped ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle\n\nRestricts weapon selection when cycling through weapons, to select only vehicle weapons."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedDropsInventoryWeapon",
    "hash": "0x208A1888007FC0E6",
    "code": "-- SET_PED_DROPS_INVENTORY_WEAPON\nSetPedDropsInventoryWeapon(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\txOffset --[[ number ]], \n\tyOffset --[[ number ]], \n\tzOffset --[[ number ]], \n\tammoCount --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedDropsWeapon",
    "hash": "0x6B7513D9966FBEC0",
    "code": "-- SET_PED_DROPS_WEAPON\nSetPedDropsWeapon(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedDropsWeaponsWhenDead",
    "hash": "0x476AE72C1D19D1A8",
    "code": "-- SET_PED_DROPS_WEAPONS_WHEN_DEAD\nSetPedDropsWeaponsWhenDead(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedGadget",
    "hash": "0xD0D7B1E680ED4A1A",
    "code": "-- SET_PED_GADGET\nSetPedGadget(\n\tped --[[ Ped ]], \n\tgadgetHash --[[ Hash ]], \n\tp2 --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "p1/gadgetHash was always 0xFBAB5776 (\"GADGET_PARACHUTE\").  \np2 is always true."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedInfiniteAmmo",
    "hash": "0x3EDCB0505123623B",
    "code": "-- SET_PED_INFINITE_AMMO\nSetPedInfiniteAmmo(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]], \n\tweaponHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedInfiniteAmmoClip",
    "hash": "0x183DADC6AA953186",
    "code": "-- SET_PED_INFINITE_AMMO_CLIP\nSetPedInfiniteAmmoClip(\n\tped --[[ Ped ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedShootOrdnanceWeapon",
    "hash": "0xB4C8D77C80C0421E",
    "code": "-- SET_PED_SHOOT_ORDNANCE_WEAPON\nlocal retval --[[ Object ]] =\n\tSetPedShootOrdnanceWeapon(\n\t\tped --[[ Ped ]], \n\t\tp1 --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns handle of the projectile."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedWeaponLiveryColor",
    "hash": "0x9FE5633880ECD8ED",
    "code": "-- _SET_PED_WEAPON_LIVERY_COLOR\nSetPedWeaponLiveryColor(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\tcamoComponentHash --[[ Hash ]], \n\tcolorIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPedWeaponTintIndex",
    "hash": "0x50969B9B89ED5738",
    "code": "-- SET_PED_WEAPON_TINT_INDEX\nSetPedWeaponTintIndex(\n\tped --[[ Ped ]], \n\tweaponHash --[[ Hash ]], \n\ttintIndex --[[ integer ]]\n)",
    "parameters": [
      "ped: \n\nThe target ped",
      "weaponHash: \n\nThe target weapon hash",
      "tintIndex: \n\nTint for weapon hash"
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe target ped\n\nweaponHash: \n\nThe target weapon hash\n\ntintIndex: \n\nTint for weapon hash\n\ntintIndex can be the following:  \n0 : Default/Black\n1 : Green\n2 : Gold\n3 : Pink\n4 : Army\n5 : LSPD\n6 : Orange\n7 : Platinum\n\ntintIndex for MK2 weapons :\n0 : Classic Black\n1 : Classic Gray\n2 : Classic Two-Tone\n3 : Classic White\n4 : Classic Beige\n5 : Classic Green\n6 : Classic Blue\n7 : Classic Earth\n8 : Classic Brown & Black\n9 : Red Contrast\n10 : Blue Contrast\n11 : Yellow Contrast\n12 : Orange Contrast\n13 : Bold Pink\n14 : Bold Purple & Yellow\n15 : Bold Orange\n16 : Bold Green & Purple\n17 : Bold Red Features\n18 : Bold Green Features\n19 : Bold Cyan Features\n20 : Bold Yellow Features\n21 : Bold Red & White\n22 : Bold Blue & White\n23 : Metallic Gold\n24 : Metallic Platinum\n25 : Metallic Gray & Lilac\n26 : Metallic Purple & Lime\n27 : Metallic Red\n28 : Metallic Green\n29 : Metallic Blue\n30 : Metallic White & Aqua\n31 : Metallic Orange & Yellow\n32 : Mettalic Red and Yellow"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPickupAmmoAmountScaler",
    "hash": "0xE620FD3512A04F18",
    "code": "-- SET_PICKUP_AMMO_AMOUNT_SCALER\nSetPickupAmmoAmountScaler(\n\tp0 --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetPlayerAirDefenseZoneFlag",
    "hash": "0xECDC202B25E5CF48",
    "code": "-- _SET_PLAYER_AIR_DEFENSE_ZONE_FLAG\nSetPlayerAirDefenseZoneFlag(\n\tplayer --[[ Player ]], \n\tzoneId --[[ integer ]], \n\tenable --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetWeaponAnimationOverride",
    "hash": "0x1055AC3A667F09D9",
    "code": "-- SET_WEAPON_ANIMATION_OVERRIDE\nSetWeaponAnimationOverride(\n\tped --[[ Ped ]], \n\tanimStyle --[[ Hash ]]\n)",
    "parameters": [
      "ped: \n\nThe ped handle.",
      "animStyle: \n\nThe animation style to apply, passed as a hash."
    ],
    "returns": [],
    "description": "Parameters:\n\nped: \n\nThe ped handle.\n\nanimStyle: \n\nThe animation style to apply, passed as a hash.\n\nChanges the selected ped aiming animation style, you can find the list of animations below.\n\nThese are stored in the weaponanimations.meta file located in Grand Theft Auto V\\update\\update.rpf\\common\\data\\ai\\weaponanimations.meta.\n\nFor Lua, it's best if you send the animation using compile-time jenkins hashes to avoid overhead. An example is shown down below.\n\nAnimations\nenum eWeaponAnimationOverrides {\n\tBallistic = 0x5534A626,\n\tDefault = 0xE4DF46D5,\n\tFranklin = 0x44C24694,\n\tGang = 0xBC066B98,\n\tMichael = 0x55932F38,\n\tMP_F_Freemode = 0xACB10C83,\n\tTrevor = 0x2737D5AC,\n\tHillbilly = 0x8503D409,\n\tGang1H = 0x724A7AB7,\n\tFirstPerson = 0xEE38E8E0,\n\tFirstPersonAiming = 0xC76297A3,\n\tFirstPersonRNG = 0xA4FDD608,\n\tFirstPersonScope = 0x28117C22,\n\tFirstPersonMichael = 0xEAA2550B,\n\tFirstPersonMichaelAiming = 0x3E6FF30F,\n\tFirstPersonMichaelRNG = 0xB7A826C1,\n\tFirstPersonMichaelScope = 0xC554CF97,\n\tFirstPersonFranklin = 0xC407163A,\n\tFirstPersonFranklinAiming = 0x3D4B7B03,\n\tFirstPersonFranklinRNG = 0xBE79B0B4,\n\tFirstPersonFranklinScope = 0xAFEA6593,\n\tFirstPersonTrevor = 0xA65D5351,\n\tFirstPersonTrevorAiming = 0xF9BE8ED9,\n\tFirstPersonTrevorRNG = 0xD181ED09,\n\tFirstPersonTrevorScope = 0x34A67D6D,\n\tFirstPersonMPFemale = 0x8431583F,\n\tFat = 0xC531A409,\n\tSuperFat = 0x529E5780,\n\tFemale = 0x6D155A1B,\n\tGangFemale = 0x678ADF82,\n}"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetWeaponDamageModifier",
    "hash": "0x4757F00BC6323CFE",
    "code": "-- _SET_WEAPON_DAMAGE_MODIFIER\nSetWeaponDamageModifier(\n\tweaponHash --[[ Hash ]], \n\tdamageMultiplier --[[ number ]]\n)",
    "parameters": [
      "weaponHash: \n\nHash of the weapon",
      "damageMultiplier: \n\nDamage Multiplier"
    ],
    "returns": [],
    "description": "Parameters:\n\nweaponHash: \n\nHash of the weapon\n\ndamageMultiplier: \n\nDamage Multiplier\n\nChanges the weapon damage output by the given multiplier value. Does NOT need to be called every frame."
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetWeaponExplosionRadiusMultiplier",
    "hash": "0x4AE5AC8B852D642C",
    "code": "-- _SET_WEAPON_EXPLOSION_RADIUS_MULTIPLIER\nSetWeaponExplosionRadiusMultiplier(\n\tweaponHash --[[ Hash ]], \n\tmultiplier --[[ number ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetWeaponObjectLiveryColor",
    "hash": "0x5DA825A85D0EA6E6",
    "code": "-- _SET_WEAPON_OBJECT_LIVERY_COLOR\nSetWeaponObjectLiveryColor(\n\tweaponObject --[[ Object ]], \n\tcamoComponentHash --[[ Hash ]], \n\tcolorIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "SetWeaponObjectTintIndex",
    "hash": "0xF827589017D4E4A9",
    "code": "-- SET_WEAPON_OBJECT_TINT_INDEX\nSetWeaponObjectTintIndex(\n\tweapon --[[ Object ]], \n\ttintIndex --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "TriggerVehicleWeaponReload",
    "hash": "0x5B1513F27F279A44",
    "code": "-- _TRIGGER_VEHICLE_WEAPON_RELOAD\nlocal retval --[[ boolean ]] =\n\tTriggerVehicleWeaponReload(\n\t\tvehicle --[[ Vehicle ]], \n\t\tseat --[[ integer ]], \n\t\tped --[[ Ped ]]\n\t)",
    "parameters": [
      "vehicle: \n\nThe vehicle containing the weapon to reload.",
      "seat: \n\nThe seat/weapon index.",
      "ped: \n\nThe ped initiating the reload (the one using the weapon)."
    ],
    "returns": [
      "Return true if reload was triggered successfully, false otherwise."
    ],
    "description": "Parameters:\n\nvehicle: \n\nThe vehicle containing the weapon to reload.\n\nseat: \n\nThe seat/weapon index.\n\nped: \n\nThe ped initiating the reload (the one using the weapon).\n\nReturns:\n\nReturn true if reload was triggered successfully, false otherwise.\n\nStart a reload for a vehicle's weapon.\n\nNativeDB Introduced: v3407"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "N_0x24c024ba8379a70a",
    "hash": "0x24C024BA8379A70A",
    "code": "-- 0x24C024BA8379A70A\nN_0x24c024ba8379a70a(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v1868"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "N_0x977ca98939e82e4b",
    "hash": "0x977CA98939E82E4B",
    "code": "-- 0x977CA98939E82E4B\nN_0x977ca98939e82e4b(\n\tweaponObject --[[ Object ]], \n\tp1 --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "SET_WEAPON_OBJECT_*"
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "N_0xa2c9ac24b4061285",
    "hash": "0xA2C9AC24B4061285",
    "code": "-- 0xA2C9AC24B4061285\nlocal retval --[[ integer ]] =\n\tN_0xa2c9ac24b4061285(\n\t\tped --[[ Ped ]], \n\t\tweaponHash --[[ Hash ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "N_0xe4dcec7fd5b739a5",
    "hash": "0xE4DCEC7FD5B739A5",
    "code": "-- 0xE4DCEC7FD5B739A5\nN_0xe4dcec7fd5b739a5(\n\tped --[[ Ped ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: WEAPON",
    "apiset": "API set: client",
    "name": "N_0xe6d2cedd370ff98e",
    "hash": "0xE6D2CEDD370FF98E",
    "code": "-- 0xE6D2CEDD370FF98E\nN_0xe6d2cedd370ff98e(\n\tp0 --[[ Any ]], \n\tp1 --[[ Any ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "NativeDB Introduced: v2372"
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "ClearPopscheduleOverrideVehicleModel",
    "hash": "0x5C0DE367AA0D911C",
    "code": "-- CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL\nClearPopscheduleOverrideVehicleModel(\n\tscheduleId --[[ integer ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  \nModified example from \"am_imp_exp.c4\", line 6418:  \n/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  \netc.  \n*/  \nSTREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);  \nZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);"
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "GetHashOfMapAreaAtCoords",
    "hash": "0x7EE64D51E8498728",
    "code": "-- GET_HASH_OF_MAP_AREA_AT_COORDS\nlocal retval --[[ Hash ]] =\n\tGetHashOfMapAreaAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "Returns a hash representing which part of the map the given coords are located.  \nPossible return values:  \n(Hash of) city -> -289320599  \n(Hash of) countryside -> 2072609373  \nC# Example :  \nPed player = Game.Player.Character;  \nHash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);"
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "GetNameOfZone",
    "hash": "0xCD90657D4C30E1CA",
    "code": "-- GET_NAME_OF_ZONE\nlocal retval --[[ string ]] =\n\tGetNameOfZone(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "AIRP = Los Santos International Airport  \nALAMO = Alamo Sea  \nALTA = Alta  \nARMYB = Fort Zancudo  \nBANHAMC = Banham Canyon Dr  \nBANNING = Banning  \nBEACH = Vespucci Beach  \nBHAMCA = Banham Canyon  \nBRADP = Braddock Pass  \nBRADT = Braddock Tunnel  \nBURTON = Burton  \nCALAFB = Calafia Bridge  \nCANNY = Raton Canyon  \nCCREAK = Cassidy Creek  \nCHAMH = Chamberlain Hills  \nCHIL = Vinewood Hills  \nCHU = Chumash  \nCMSW = Chiliad Mountain State Wilderness  \nCYPRE = Cypress Flats  \nDAVIS = Davis  \nDELBE = Del Perro Beach  \nDELPE = Del Perro  \nDELSOL = La Puerta  \nDESRT = Grand Senora Desert  \nDOWNT = Downtown  \nDTVINE = Downtown Vinewood  \nEAST_V = East Vinewood  \nEBURO = El Burro Heights  \nELGORL = El Gordo Lighthouse  \nELYSIAN = Elysian Island  \nGALFISH = Galilee  \nGOLF = GWC and Golfing Society  \nGRAPES = Grapeseed  \nGREATC = Great Chaparral  \nHARMO = Harmony  \nHAWICK = Hawick  \nHORS = Vinewood Racetrack  \nHUMLAB = Humane Labs and Research  \nJAIL = Bolingbroke Penitentiary  \nKOREAT = Little Seoul  \nLACT = Land Act Reservoir  \nLAGO = Lago Zancudo  \nLDAM = Land Act Dam  \nLEGSQU = Legion Square  \nLMESA = La Mesa  \nLOSPUER = La Puerta  \nMIRR = Mirror Park  \nMORN = Morningwood  \nMOVIE = Richards Majestic  \nMTCHIL = Mount Chiliad  \nMTGORDO = Mount Gordo  \nMTJOSE = Mount Josiah  \nMURRI = Murrieta Heights  \nNCHU = North Chumash  \nNOOSE = N.O.O.S.E  \nOCEANA = Pacific Ocean  \nPALCOV = Paleto Cove  \nPALETO = Paleto Bay  \nPALFOR = Paleto Forest  \nPALHIGH = Palomino Highlands  \nPALMPOW = Palmer-Taylor Power Station  \nPBLUFF = Pacific Bluffs  \nPBOX = Pillbox Hill  \nPROCOB = Procopio Beach  \nRANCHO = Rancho  \nRGLEN = Richman Glen  \nRICHM = Richman  \nROCKF = Rockford Hills  \nRTRAK = Redwood Lights Track  \nSANAND = San Andreas  \nSANCHIA = San Chianski Mountain Range  \nSANDY = Sandy Shores  \nSKID = Mission Row  \nSLAB = Stab City  \nSTAD = Maze Bank Arena  \nSTRAW = Strawberry  \nTATAMO = Tataviam Mountains  \nTERMINA = Terminal  \nTEXTI = Textile City  \nTONGVAH = Tongva Hills  \nTONGVAV = Tongva Valley  \nVCANA = Vespucci Canals  \nVESP = Vespucci  \nVINE = Vinewood  \nWINDF = Ron Alternates Wind Farm  \nWVINE = West Vinewood  \nZANCUDO = Zancudo River  \nZP_ORT = Port of South Los Santos  \nZQ_UAR = Davis Quartz  \nPROL = Prologue / North Yankton\nISHeist = Cayo Perico Island"
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "GetZoneAtCoords",
    "hash": "0x27040C25DE6CB2F4",
    "code": "-- GET_ZONE_AT_COORDS\nlocal retval --[[ integer ]] =\n\tGetZoneAtCoords(\n\t\tx --[[ number ]], \n\t\ty --[[ number ]], \n\t\tz --[[ number ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "GetZoneFromNameId",
    "hash": "0x98CD1D2934B76CC1",
    "code": "-- GET_ZONE_FROM_NAME_ID\nlocal retval --[[ integer ]] =\n\tGetZoneFromNameId(\n\t\tzoneName --[[ string ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": "'zoneName' corresponds to an entry in 'popzone.ipl'.  \nAIRP = Los Santos International Airport  \nALAMO = Alamo Sea  \nALTA = Alta  \nARMYB = Fort Zancudo  \nBANHAMC = Banham Canyon Dr  \nBANNING = Banning  \nBEACH = Vespucci Beach  \nBHAMCA = Banham Canyon  \nBRADP = Braddock Pass  \nBRADT = Braddock Tunnel  \nBURTON = Burton  \nCALAFB = Calafia Bridge  \nCANNY = Raton Canyon  \nCCREAK = Cassidy Creek  \nCHAMH = Chamberlain Hills  \nCHIL = Vinewood Hills  \nCHU = Chumash  \nCMSW = Chiliad Mountain State Wilderness  \nCYPRE = Cypress Flats  \nDAVIS = Davis  \nDELBE = Del Perro Beach  \nDELPE = Del Perro  \nDELSOL = La Puerta  \nDESRT = Grand Senora Desert  \nDOWNT = Downtown  \nDTVINE = Downtown Vinewood  \nEAST_V = East Vinewood  \nEBURO = El Burro Heights  \nELGORL = El Gordo Lighthouse  \nELYSIAN = Elysian Island  \nGALFISH = Galilee  \nGOLF = GWC and Golfing Society  \nGRAPES = Grapeseed  \nGREATC = Great Chaparral  \nHARMO = Harmony  \nHAWICK = Hawick  \nHORS = Vinewood Racetrack  \nHUMLAB = Humane Labs and Research  \nJAIL = Bolingbroke Penitentiary  \nKOREAT = Little Seoul  \nLACT = Land Act Reservoir  \nLAGO = Lago Zancudo  \nLDAM = Land Act Dam  \nLEGSQU = Legion Square  \nLMESA = La Mesa  \nLOSPUER = La Puerta  \nMIRR = Mirror Park  \nMORN = Morningwood  \nMOVIE = Richards Majestic  \nMTCHIL = Mount Chiliad  \nMTGORDO = Mount Gordo  \nMTJOSE = Mount Josiah  \nMURRI = Murrieta Heights  \nNCHU = North Chumash  \nNOOSE = N.O.O.S.E  \nOCEANA = Pacific Ocean  \nPALCOV = Paleto Cove  \nPALETO = Paleto Bay  \nPALFOR = Paleto Forest  \nPALHIGH = Palomino Highlands  \nPALMPOW = Palmer-Taylor Power Station  \nPBLUFF = Pacific Bluffs  \nPBOX = Pillbox Hill  \nPROCOB = Procopio Beach  \nRANCHO = Rancho  \nRGLEN = Richman Glen  \nRICHM = Richman  \nROCKF = Rockford Hills  \nRTRAK = Redwood Lights Track  \nSANAND = San Andreas  \nSANCHIA = San Chianski Mountain Range  \nSANDY = Sandy Shores  \nSKID = Mission Row  \nSLAB = Stab City  \nSTAD = Maze Bank Arena  \nSTRAW = Strawberry  \nTATAMO = Tataviam Mountains  \nTERMINA = Terminal  \nTEXTI = Textile City  \nTONGVAH = Tongva Hills  \nTONGVAV = Tongva Valley  \nVCANA = Vespucci Canals  \nVESP = Vespucci  \nVINE = Vinewood  \nWINDF = Ron Alternates Wind Farm  \nWVINE = West Vinewood  \nZANCUDO = Zancudo River  \nZP_ORT = Port of South Los Santos  \nZQ_UAR = Davis Quartz"
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "GetZonePopschedule",
    "hash": "0x4334BC40AA0CB4BB",
    "code": "-- GET_ZONE_POPSCHEDULE\nlocal retval --[[ integer ]] =\n\tGetZonePopschedule(\n\t\tzoneId --[[ integer ]]\n\t)",
    "parameters": [],
    "returns": [],
    "description": ""
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "GetZoneScumminess",
    "hash": "0x5F7B268D15BA0739",
    "code": "-- GET_ZONE_SCUMMINESS\nlocal retval --[[ integer ]] =\n\tGetZoneScumminess(\n\t\tzoneId --[[ integer ]]\n\t)",
    "parameters": [
      "zoneId: \n\nThe zone id"
    ],
    "returns": [
      "The zone scumminess level"
    ],
    "description": "Parameters:\n\nzoneId: \n\nThe zone id\n\nReturns:\n\nThe zone scumminess level\n\nGets the zone scumminess level, used to calculate the cellphone signal strength.\n\nenum eZoneScumminess\n{\n    SCUMMINESS_POSH = 0,\n    SCUMMINESS_NICE = 1,\n    SCUMMINESS_ABOVE_AVERAGE = 2,\n    SCUMMINESS_BELOW_AVERAGE = 3,\n    SCUMMINESS_CRAP = 4,\n    SCUMMINESS_SCUM = 5\n}"
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "OverridePopscheduleVehicleModel",
    "hash": "0x5F7D596BAC2E7777",
    "code": "-- OVERRIDE_POPSCHEDULE_VEHICLE_MODEL\nOverridePopscheduleVehicleModel(\n\tscheduleId --[[ integer ]], \n\tvehicleHash --[[ Hash ]]\n)",
    "parameters": [],
    "returns": [],
    "description": "Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  \nModified example from \"am_imp_exp.c4\", line 6406:  \n/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  \netc.  \n*/  \nZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);  \nSTREAMING::REQUEST_MODEL(vehicleHash);"
  },
  {
    "namespace": "Namespace: ZONE",
    "apiset": "API set: client",
    "name": "SetZoneEnabled",
    "hash": "0xBA5ECEEA120E5611",
    "code": "-- SET_ZONE_ENABLED\nSetZoneEnabled(\n\tzoneId --[[ integer ]], \n\ttoggle --[[ boolean ]]\n)",
    "parameters": [],
    "returns": [],
    "description": ""
  }
]
